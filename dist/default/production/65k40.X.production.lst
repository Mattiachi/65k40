

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Fri May 19 12:48:55 2023

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18LF65K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    19                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	text213,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   246                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   247  0000                     
   248 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   249  0000                     
   250 ;; Function _DIO0_ISR_Lora is unused but had its address taken
   251  0000                     
   252 ;; Function _DIO1_ISR_Lora is unused but had its address taken
   253  0000                     
   254 ;; Function _DIO2_ISR_Lora is unused but had its address taken
   255  0000                     
   256 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   257  0000                     
   258 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   259 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   260 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   261 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   262 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   263 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   264 ;;_LORAWAN_LinkCheckCallback$3299	offset	0
   265 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   266 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   267 ;;_DutyCycleCallback$2124	offset	0
   268 ;;DutyCycleCallback@minim	offset	4
   269 ;;DutyCycleCallback@i	offset	8
   270 ;;DutyCycleCallback@found	offset	9
   271 ;;DutyCycleCallback@param	offset=-1 (param)
   272 ;;AutomaticReplyCallback@param	offset=-1 (param)
   273 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   274 ;;AckRetransmissionCallback@param	offset=-1 (param)
   275 ;;_param	offset=-1 (param)
   276 ;;_UpdateJoinSuccessState$3316	offset	0
   277 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   278                           
   279                           	psect	idataCOMRAM
   280  0078DA                     __pidataCOMRAM:
   281                           	opt stack 0
   282                           
   283                           ;initializer for _randx
   284  0078DA  0001               	dw	1
   285  0078DC  0000               	dw	0
   286                           
   287                           ;initializer for _ticksToScheduledInterrupt
   288  0078DE  FFFF               	dw	65535
   289  0078E0  FFFF               	dw	65535
   290                           
   291                           	psect	idataBANK1
   292  0071D4                     __pidataBANK1:
   293                           	opt stack 0
   294                           
   295                           ;initializer for GenerateSubkey@F17044
   296  0071D4  00                 	db	0
   297  0071D5  00                 	db	0
   298  0071D6  00                 	db	0
   299  0071D7  00                 	db	0
   300  0071D8  00                 	db	0
   301  0071D9  00                 	db	0
   302  0071DA  00                 	db	0
   303  0071DB  00                 	db	0
   304  0071DC  00                 	db	0
   305  0071DD  00                 	db	0
   306  0071DE  00                 	db	0
   307  0071DF  00                 	db	0
   308  0071E0  00                 	db	0
   309  0071E1  00                 	db	0
   310  0071E2  00                 	db	0
   311  0071E3  87                 	db	135
   312                           
   313                           ;initializer for _appSKey
   314  0071E4  45                 	db	69
   315  0071E5  37                 	db	55
   316  0071E6  1A                 	db	26
   317  0071E7  44                 	db	68
   318  0071E8  B2                 	db	178
   319  0071E9  99                 	db	153
   320  0071EA  80                 	db	128
   321  0071EB  1D                 	db	29
   322  0071EC  2E                 	db	46
   323  0071ED  5C                 	db	92
   324  0071EE  A1                 	db	161
   325  0071EF  9E                 	db	158
   326  0071F0  38                 	db	56
   327  0071F1  A5                 	db	165
   328  0071F2  03                 	db	3
   329  0071F3  2A                 	db	42
   330                           
   331                           ;initializer for _nwkSKey
   332  0071F4  DC                 	db	220
   333  0071F5  98                 	db	152
   334  0071F6  06                 	db	6
   335  0071F7  0B                 	db	11
   336  0071F8  22                 	db	34
   337  0071F9  B5                 	db	181
   338  0071FA  BA                 	db	186
   339  0071FB  21                 	db	33
   340  0071FC  61                 	db	97
   341  0071FD  B3                 	db	179
   342  0071FE  A9                 	db	169
   343  0071FF  95                 	db	149
   344  007200  7C                 	db	124
   345  007201  88                 	db	136
   346  007202  03                 	db	3
   347  007203  1F                 	db	31
   348                           
   349                           	psect	mediumconst
   350  007E6C                     __pmediumconst:
   351                           	opt stack 0
   352  007E6C  00                 	db	0
   353  007E6D                     _STable:
   354                           	opt stack 0
   355  007E6D  63                 	db	99
   356  007E6E  7C                 	db	124
   357  007E6F  77                 	db	119
   358  007E70  7B                 	db	123
   359  007E71  F2                 	db	242
   360  007E72  6B                 	db	107
   361  007E73  6F                 	db	111
   362  007E74  C5                 	db	197
   363  007E75  30                 	db	48
   364  007E76  01                 	db	1
   365  007E77  67                 	db	103
   366  007E78  2B                 	db	43
   367  007E79  FE                 	db	254
   368  007E7A  D7                 	db	215
   369  007E7B  AB                 	db	171
   370  007E7C  76                 	db	118
   371  007E7D  CA                 	db	202
   372  007E7E  82                 	db	130
   373  007E7F  C9                 	db	201
   374  007E80  7D                 	db	125
   375  007E81  FA                 	db	250
   376  007E82  59                 	db	89
   377  007E83  47                 	db	71
   378  007E84  F0                 	db	240
   379  007E85  AD                 	db	173
   380  007E86  D4                 	db	212
   381  007E87  A2                 	db	162
   382  007E88  AF                 	db	175
   383  007E89  9C                 	db	156
   384  007E8A  A4                 	db	164
   385  007E8B  72                 	db	114
   386  007E8C  C0                 	db	192
   387  007E8D  B7                 	db	183
   388  007E8E  FD                 	db	253
   389  007E8F  93                 	db	147
   390  007E90  26                 	db	38
   391  007E91  36                 	db	54
   392  007E92  3F                 	db	63
   393  007E93  F7                 	db	247
   394  007E94  CC                 	db	204
   395  007E95  34                 	db	52
   396  007E96  A5                 	db	165
   397  007E97  E5                 	db	229
   398  007E98  F1                 	db	241
   399  007E99  71                 	db	113
   400  007E9A  D8                 	db	216
   401  007E9B  31                 	db	49
   402  007E9C  15                 	db	21
   403  007E9D  04                 	db	4
   404  007E9E  C7                 	db	199
   405  007E9F  23                 	db	35
   406  007EA0  C3                 	db	195
   407  007EA1  18                 	db	24
   408  007EA2  96                 	db	150
   409  007EA3  05                 	db	5
   410  007EA4  9A                 	db	154
   411  007EA5  07                 	db	7
   412  007EA6  12                 	db	18
   413  007EA7  80                 	db	128
   414  007EA8  E2                 	db	226
   415  007EA9  EB                 	db	235
   416  007EAA  27                 	db	39
   417  007EAB  B2                 	db	178
   418  007EAC  75                 	db	117
   419  007EAD  09                 	db	9
   420  007EAE  83                 	db	131
   421  007EAF  2C                 	db	44
   422  007EB0  1A                 	db	26
   423  007EB1  1B                 	db	27
   424  007EB2  6E                 	db	110
   425  007EB3  5A                 	db	90
   426  007EB4  A0                 	db	160
   427  007EB5  52                 	db	82
   428  007EB6  3B                 	db	59
   429  007EB7  D6                 	db	214
   430  007EB8  B3                 	db	179
   431  007EB9  29                 	db	41
   432  007EBA  E3                 	db	227
   433  007EBB  2F                 	db	47
   434  007EBC  84                 	db	132
   435  007EBD  53                 	db	83
   436  007EBE  D1                 	db	209
   437  007EBF  00                 	db	0
   438  007EC0  ED                 	db	237
   439  007EC1  20                 	db	32
   440  007EC2  FC                 	db	252
   441  007EC3  B1                 	db	177
   442  007EC4  5B                 	db	91
   443  007EC5  6A                 	db	106
   444  007EC6  CB                 	db	203
   445  007EC7  BE                 	db	190
   446  007EC8  39                 	db	57
   447  007EC9  4A                 	db	74
   448  007ECA  4C                 	db	76
   449  007ECB  58                 	db	88
   450  007ECC  CF                 	db	207
   451  007ECD  D0                 	db	208
   452  007ECE  EF                 	db	239
   453  007ECF  AA                 	db	170
   454  007ED0  FB                 	db	251
   455  007ED1  43                 	db	67
   456  007ED2  4D                 	db	77
   457  007ED3  33                 	db	51
   458  007ED4  85                 	db	133
   459  007ED5  45                 	db	69
   460  007ED6  F9                 	db	249
   461  007ED7  02                 	db	2
   462  007ED8  7F                 	db	127
   463  007ED9  50                 	db	80
   464  007EDA  3C                 	db	60
   465  007EDB  9F                 	db	159
   466  007EDC  A8                 	db	168
   467  007EDD  51                 	db	81
   468  007EDE  A3                 	db	163
   469  007EDF  40                 	db	64
   470  007EE0  8F                 	db	143
   471  007EE1  92                 	db	146
   472  007EE2  9D                 	db	157
   473  007EE3  38                 	db	56
   474  007EE4  F5                 	db	245
   475  007EE5  BC                 	db	188
   476  007EE6  B6                 	db	182
   477  007EE7  DA                 	db	218
   478  007EE8  21                 	db	33
   479  007EE9  10                 	db	16
   480  007EEA  FF                 	db	255
   481  007EEB  F3                 	db	243
   482  007EEC  D2                 	db	210
   483  007EED  CD                 	db	205
   484  007EEE  0C                 	db	12
   485  007EEF  13                 	db	19
   486  007EF0  EC                 	db	236
   487  007EF1  5F                 	db	95
   488  007EF2  97                 	db	151
   489  007EF3  44                 	db	68
   490  007EF4  17                 	db	23
   491  007EF5  C4                 	db	196
   492  007EF6  A7                 	db	167
   493  007EF7  7E                 	db	126
   494  007EF8  3D                 	db	61
   495  007EF9  64                 	db	100
   496  007EFA  5D                 	db	93
   497  007EFB  19                 	db	25
   498  007EFC  73                 	db	115
   499  007EFD  60                 	db	96
   500  007EFE  81                 	db	129
   501  007EFF  4F                 	db	79
   502  007F00  DC                 	db	220
   503  007F01  22                 	db	34
   504  007F02  2A                 	db	42
   505  007F03  90                 	db	144
   506  007F04  88                 	db	136
   507  007F05  46                 	db	70
   508  007F06  EE                 	db	238
   509  007F07  B8                 	db	184
   510  007F08  14                 	db	20
   511  007F09  DE                 	db	222
   512  007F0A  5E                 	db	94
   513  007F0B  0B                 	db	11
   514  007F0C  DB                 	db	219
   515  007F0D  E0                 	db	224
   516  007F0E  32                 	db	50
   517  007F0F  3A                 	db	58
   518  007F10  0A                 	db	10
   519  007F11  49                 	db	73
   520  007F12  06                 	db	6
   521  007F13  24                 	db	36
   522  007F14  5C                 	db	92
   523  007F15  C2                 	db	194
   524  007F16  D3                 	db	211
   525  007F17  AC                 	db	172
   526  007F18  62                 	db	98
   527  007F19  91                 	db	145
   528  007F1A  95                 	db	149
   529  007F1B  E4                 	db	228
   530  007F1C  79                 	db	121
   531  007F1D  E7                 	db	231
   532  007F1E  C8                 	db	200
   533  007F1F  37                 	db	55
   534  007F20  6D                 	db	109
   535  007F21  8D                 	db	141
   536  007F22  D5                 	db	213
   537  007F23  4E                 	db	78
   538  007F24  A9                 	db	169
   539  007F25  6C                 	db	108
   540  007F26  56                 	db	86
   541  007F27  F4                 	db	244
   542  007F28  EA                 	db	234
   543  007F29  65                 	db	101
   544  007F2A  7A                 	db	122
   545  007F2B  AE                 	db	174
   546  007F2C  08                 	db	8
   547  007F2D  BA                 	db	186
   548  007F2E  78                 	db	120
   549  007F2F  25                 	db	37
   550  007F30  2E                 	db	46
   551  007F31  1C                 	db	28
   552  007F32  A6                 	db	166
   553  007F33  B4                 	db	180
   554  007F34  C6                 	db	198
   555  007F35  E8                 	db	232
   556  007F36  DD                 	db	221
   557  007F37  74                 	db	116
   558  007F38  1F                 	db	31
   559  007F39  4B                 	db	75
   560  007F3A  BD                 	db	189
   561  007F3B  8B                 	db	139
   562  007F3C  8A                 	db	138
   563  007F3D  70                 	db	112
   564  007F3E  3E                 	db	62
   565  007F3F  B5                 	db	181
   566  007F40  66                 	db	102
   567  007F41  48                 	db	72
   568  007F42  03                 	db	3
   569  007F43  F6                 	db	246
   570  007F44  0E                 	db	14
   571  007F45  61                 	db	97
   572  007F46  35                 	db	53
   573  007F47  57                 	db	87
   574  007F48  B9                 	db	185
   575  007F49  86                 	db	134
   576  007F4A  C1                 	db	193
   577  007F4B  1D                 	db	29
   578  007F4C  9E                 	db	158
   579  007F4D  E1                 	db	225
   580  007F4E  F8                 	db	248
   581  007F4F  98                 	db	152
   582  007F50  11                 	db	17
   583  007F51  69                 	db	105
   584  007F52  D9                 	db	217
   585  007F53  8E                 	db	142
   586  007F54  94                 	db	148
   587  007F55  9B                 	db	155
   588  007F56  1E                 	db	30
   589  007F57  87                 	db	135
   590  007F58  E9                 	db	233
   591  007F59  CE                 	db	206
   592  007F5A  55                 	db	85
   593  007F5B  28                 	db	40
   594  007F5C  DF                 	db	223
   595  007F5D  8C                 	db	140
   596  007F5E  A1                 	db	161
   597  007F5F  89                 	db	137
   598  007F60  0D                 	db	13
   599  007F61  BF                 	db	191
   600  007F62  E6                 	db	230
   601  007F63  42                 	db	66
   602  007F64  68                 	db	104
   603  007F65  41                 	db	65
   604  007F66  99                 	db	153
   605  007F67  2D                 	db	45
   606  007F68  0F                 	db	15
   607  007F69  B0                 	db	176
   608  007F6A  54                 	db	84
   609  007F6B  BB                 	db	187
   610  007F6C  16                 	db	22
   611  007F6D                     __end_of_STable:
   612                           	opt stack 0
   613  007F6D                     _maxPayloadSize:
   614                           	opt stack 0
   615  007F6D  33                 	db	51
   616  007F6E  33                 	db	51
   617  007F6F  33                 	db	51
   618  007F70  73                 	db	115
   619  007F71  F2                 	db	242
   620  007F72  F2                 	db	242
   621  007F73  F2                 	db	242
   622  007F74  38                 	db	56
   623  007F75                     __end_of_maxPayloadSize:
   624                           	opt stack 0
   625  007F75                     _modulation:
   626                           	opt stack 0
   627  007F75  01                 	db	1
   628  007F76  01                 	db	1
   629  007F77  01                 	db	1
   630  007F78  01                 	db	1
   631  007F79  01                 	db	1
   632  007F7A  01                 	db	1
   633  007F7B  01                 	db	1
   634  007F7C  00                 	db	0
   635  007F7D                     __end_of_modulation:
   636                           	opt stack 0
   637  007F7D                     _rxWindowOffset:
   638                           	opt stack 0
   639  007F7D  DF                 	db	223
   640  007F7E  CE                 	db	206
   641  007F7F  C6                 	db	198
   642  007F80  C2                 	db	194
   643  007F81  BE                 	db	190
   644  007F82  BC                 	db	188
   645  007F83  F1                 	db	241
   646  007F84  FE                 	db	254
   647  007F85                     __end_of_rxWindowOffset:
   648                           	opt stack 0
   649  007F85                     _rxWindowSize:
   650                           	opt stack 0
   651  007F85  08                 	db	8
   652  007F86  0A                 	db	10
   653  007F87  0E                 	db	14
   654  007F88  1A                 	db	26
   655  007F89  31                 	db	49
   656  007F8A  58                 	db	88
   657  007F8B  3C                 	db	60
   658  007F8C  08                 	db	8
   659  007F8D                     __end_of_rxWindowSize:
   660                           	opt stack 0
   661  007F8D                     _bandwidth:
   662                           	opt stack 0
   663  007F8D  07                 	db	7
   664  007F8E  07                 	db	7
   665  007F8F  07                 	db	7
   666  007F90  07                 	db	7
   667  007F91  07                 	db	7
   668  007F92  07                 	db	7
   669  007F93  08                 	db	8
   670  007F94                     __end_of_bandwidth:
   671                           	opt stack 0
   672  007F94                     _macEndDevCmdReplyLen:
   673                           	opt stack 0
   674  007F94  01                 	db	1
   675  007F95  02                 	db	2
   676  007F96  01                 	db	1
   677  007F97  02                 	db	2
   678  007F98  03                 	db	3
   679  007F99  02                 	db	2
   680  007F9A  01                 	db	1
   681  007F9B                     __end_of_macEndDevCmdReplyLen:
   682                           	opt stack 0
   683  007F9B                     _spreadingFactor:
   684                           	opt stack 0
   685  007F9B  0C                 	db	12
   686  007F9C  0B                 	db	11
   687  007F9D  0A                 	db	10
   688  007F9E  09                 	db	9
   689  007F9F  08                 	db	8
   690  007FA0  07                 	db	7
   691  007FA1  07                 	db	7
   692  007FA2                     __end_of_spreadingFactor:
   693                           	opt stack 0
   694  007FA2                     _txPower868:
   695                           	opt stack 0
   696  007FA2  14                 	db	20
   697  007FA3  0E                 	db	14
   698  007FA4  0B                 	db	11
   699  007FA5  08                 	db	8
   700  007FA6  05                 	db	5
   701  007FA7  02                 	db	2
   702  007FA8                     __end_of_txPower868:
   703                           	opt stack 0
   704  007FA8                     _DefaultChannels433:
   705                           	opt stack 0
   706  007FA8  B9D8               	dw	47576
   707  007FAA  19D1               	dw	6609
   708  007FAC  01                 	db	1
   709  007FAD  50                 	db	80
   710  007FAE  012E               	dw	302
   711  007FB0  0000               	dw	0
   712  007FB2  0000               	dw	0
   713  007FB4  01                 	db	1
   714  007FB5  FF                 	db	255
   715  007FB6  C718               	dw	50968
   716  007FB8  19D4               	dw	6612
   717  007FBA  01                 	db	1
   718  007FBB  50                 	db	80
   719  007FBC  012E               	dw	302
   720  007FBE  0000               	dw	0
   721  007FC0  0000               	dw	0
   722  007FC2  01                 	db	1
   723  007FC3  FF                 	db	255
   724  007FC4  D458               	dw	54360
   725  007FC6  19D7               	dw	6615
   726  007FC8  01                 	db	1
   727  007FC9  50                 	db	80
   728  007FCA  012E               	dw	302
   729  007FCC  0000               	dw	0
   730  007FCE  0000               	dw	0
   731  007FD0  01                 	db	1
   732  007FD1  FF                 	db	255
   733  007FD2                     __end_of_DefaultChannels433:
   734                           	opt stack 0
   735  007FD2                     _DefaultChannels868:
   736                           	opt stack 0
   737  007FD2  27A0               	dw	10144
   738  007FD4  33BE               	dw	13246
   739  007FD6  01                 	db	1
   740  007FD7  50                 	db	80
   741  007FD8  0063               	dw	99
   742  007FDA  0000               	dw	0
   743  007FDC  0000               	dw	0
   744  007FDE  01                 	db	1
   745  007FDF  FF                 	db	255
   746  007FE0  34E0               	dw	13536
   747  007FE2  33C1               	dw	13249
   748  007FE4  01                 	db	1
   749  007FE5  50                 	db	80
   750  007FE6  FFFF               	dw	65535
   751  007FE8  0000               	dw	0
   752  007FEA  0000               	dw	0
   753  007FEC  01                 	db	1
   754  007FED  FF                 	db	255
   755  007FEE  4220               	dw	16928
   756  007FF0  33C4               	dw	13252
   757  007FF2  01                 	db	1
   758  007FF3  50                 	db	80
   759  007FF4  FFFF               	dw	65535
   760  007FF6  0000               	dw	0
   761  007FF8  0000               	dw	0
   762  007FFA  01                 	db	1
   763  007FFB  FF                 	db	255
   764  007FFC                     __end_of_DefaultChannels868:
   765                           	opt stack 0
   766  007FFC                     _FskSyncWordBuff:
   767                           	opt stack 0
   768  007FFC  C1                 	db	193
   769  007FFD  94                 	db	148
   770  007FFE  C1                 	db	193
   771  007FFF                     __end_of_FskSyncWordBuff:
   772                           	opt stack 0
   773  007FFF  00                 	db	0	; dummy byte at the end
   774  0000                     
   775                           	psect	nvCOMRAM
   776  00005E                     __pnvCOMRAM:
   777                           	opt stack 0
   778  00005E                     _timer1ReloadVal:
   779                           	opt stack 0
   780  00005E                     	ds	2
   781                           
   782                           	psect	nvBANK1
   783  0001F1                     __pnvBANK1:
   784                           	opt stack 0
   785  0001F1                     _INT1_InterruptHandler:
   786                           	opt stack 0
   787  0001F1                     	ds	2
   788  0001F3                     _INT2_InterruptHandler:
   789                           	opt stack 0
   790  0001F3                     	ds	2
   791  0001F5                     _INT3_InterruptHandler:
   792                           	opt stack 0
   793  0001F5                     	ds	2
   794  0001F7                     _IOCBF4_InterruptHandler:
   795                           	opt stack 0
   796  0001F7                     	ds	2
   797  0001F9                     _TMR1_InterruptHandler:
   798                           	opt stack 0
   799  0001F9                     	ds	2
   800  0000                     _INT0PPSbits	set	3568
   801  0000                     _INT1PPSbits	set	3569
   802  0000                     _INT2PPSbits	set	3570
   803  0000                     _INT3PPSbits	set	3571
   804  0000                     _PPSLOCK	set	3567
   805  0000                     _PPSLOCKbits	set	3567
   806  0000                     _ANSELA	set	3730
   807  0000                     _ANSELB	set	3738
   808  0000                     _ANSELD	set	3751
   809  0000                     _ANSELE	set	3759
   810  0000                     _ANSELF	set	3764
   811  0000                     _ANSELG	set	3772
   812  0000                     _IOCBFbits	set	3731
   813  0000                     _IOCBNbits	set	3732
   814  0000                     _IOCBPbits	set	3733
   815  0000                     _ODCONA	set	3728
   816  0000                     _ODCONB	set	3736
   817  0000                     _ODCONC	set	3744
   818  0000                     _ODCOND	set	3749
   819  0000                     _ODCONE	set	3757
   820  0000                     _ODCONF	set	3762
   821  0000                     _ODCONG	set	3770
   822  0000                     _ODCONH	set	3775
   823  0000                     _OSCCON1	set	3651
   824  0000                     _OSCCON3	set	3653
   825  0000                     _OSCEN	set	3655
   826  0000                     _OSCFRQ	set	3657
   827  0000                     _OSCTUNE	set	3656
   828  0000                     _PIE0bits	set	3625
   829  0000                     _PIE5bits	set	3630
   830  0000                     _PIR0bits	set	3635
   831  0000                     _PIR5bits	set	3640
   832  0000                     _RD5PPS	set	3695
   833  0000                     _RD6PPS	set	3696
   834  0000                     _SSP2ADD	set	3798
   835  0000                     _SSP2BUF	set	3797
   836  0000                     _SSP2CON1	set	3801
   837  0000                     _SSP2CON1bits	set	3801
   838  0000                     _SSP2DATPPSbits	set	3613
   839  0000                     _SSP2STAT	set	3800
   840  0000                     _SSP2STATbits	set	3800
   841  0000                     _WPUA	set	3729
   842  0000                     _WPUB	set	3737
   843  0000                     _WPUC	set	3745
   844  0000                     _WPUD	set	3750
   845  0000                     _WPUE	set	3758
   846  0000                     _WPUF	set	3763
   847  0000                     _WPUG	set	3771
   848  0000                     _WPUH	set	3776
   849  0000                     _INTCONbits	set	4082
   850  0000                     _LATA	set	3961
   851  0000                     _LATB	set	3962
   852  0000                     _LATC	set	3963
   853  0000                     _LATCbits	set	3963
   854  0000                     _LATD	set	3964
   855  0000                     _LATE	set	3965
   856  0000                     _LATF	set	3966
   857  0000                     _LATG	set	3967
   858  0000                     _LATH	set	3968
   859  0000                     _PORTBbits	set	3978
   860  0000                     _T1CLK	set	4050
   861  0000                     _T1CON	set	4047
   862  0000                     _T1CONbits	set	4047
   863  0000                     _T1GATE	set	4049
   864  0000                     _T1GCON	set	4048
   865  0000                     _TMR1H	set	4046
   866  0000                     _TMR1L	set	4045
   867  0000                     _TRISA	set	3969
   868  0000                     _TRISB	set	3970
   869  0000                     _TRISC	set	3971
   870  0000                     _TRISD	set	3972
   871  0000                     _TRISE	set	3973
   872  0000                     _TRISF	set	3974
   873  0000                     _TRISG	set	3975
   874  0000                     _TRISH	set	3976
   875  0000                     _GIE	set	32663
   876  0000                     _LATC0	set	31704
   877  0000                     _LATC1	set	31705
   878  0000                     _TRISC0	set	31768
   879                           
   880                           ; #config settings
   881  0000                     
   882                           	psect	cinit
   883  005C2E                     __pcinit:
   884                           	opt stack 0
   885  005C2E                     start_initialization:
   886                           	opt stack 0
   887  005C2E                     __initialization:
   888                           	opt stack 0
   889                           
   890                           ; Initialize objects allocated to BANK1 (48 bytes)
   891                           ; load TBLPTR registers with __pidataBANK1
   892  005C2E  0ED4               	movlw	low __pidataBANK1
   893  005C30  6EF6               	movwf	tblptrl,c
   894  005C32  0E71               	movlw	high __pidataBANK1
   895  005C34  6EF7               	movwf	tblptrh,c
   896  005C36  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   897  005C38  6EF8               	movwf	tblptru,c
   898  005C3A  EE01  F0C1         	lfsr	0,__pdataBANK1
   899  005C3E  EE20 F030          	lfsr	2,48
   900  005C42                     copy_data0:
   901  005C42  0009               	tblrd		*+
   902  005C44  CFF5 FFEE          	movff	tablat,postinc0
   903  005C48  50DD               	movf	postdec2,w,c
   904  005C4A  50D9               	movf	fsr2l,w,c
   905  005C4C  E1FA               	bnz	copy_data0
   906                           
   907                           ; Initialize objects allocated to COMRAM (8 bytes)
   908                           ; load TBLPTR registers with __pidataCOMRAM
   909  005C4E  0EDA               	movlw	low __pidataCOMRAM
   910  005C50  6EF6               	movwf	tblptrl,c
   911  005C52  0E78               	movlw	high __pidataCOMRAM
   912  005C54  6EF7               	movwf	tblptrh,c
   913  005C56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   914  005C58  6EF8               	movwf	tblptru,c
   915  005C5A  EE00  F056         	lfsr	0,__pdataCOMRAM
   916  005C5E  EE20 F008          	lfsr	2,8
   917  005C62                     copy_data1:
   918  005C62  0009               	tblrd		*+
   919  005C64  CFF5 FFEE          	movff	tablat,postinc0
   920  005C68  50DD               	movf	postdec2,w,c
   921  005C6A  50D9               	movf	fsr2l,w,c
   922  005C6C  E1FA               	bnz	copy_data1
   923                           
   924                           ; Clear objects allocated to BIGRAM (542 bytes)
   925  005C6E  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   926  005C72  EE22 F01E          	lfsr	2,542
   927  005C76                     clear_0:
   928  005C76  6AEE               	clrf	postinc0,c
   929  005C78  50DD               	movf	postdec2,w,c
   930  005C7A  50D9               	movf	fsr2l,w,c
   931  005C7C  E1FC               	bnz	clear_0
   932  005C7E  50DA               	movf	fsr2h,w,c
   933  005C80  E1FA               	bnz	clear_0
   934                           
   935                           ; Clear objects allocated to BANK4 (224 bytes)
   936  005C82  EE04  F000         	lfsr	0,__pbssBANK4
   937  005C86  0EE0               	movlw	224
   938  005C88                     clear_1:
   939  005C88  6AEE               	clrf	postinc0,c
   940  005C8A  06E8               	decf	wreg,f,c
   941  005C8C  E1FD               	bnz	clear_1
   942                           
   943                           ; Clear objects allocated to BANK3 (160 bytes)
   944  005C8E  EE03  F000         	lfsr	0,__pbssBANK3
   945  005C92  0EA0               	movlw	160
   946  005C94                     clear_2:
   947  005C94  6AEE               	clrf	postinc0,c
   948  005C96  06E8               	decf	wreg,f,c
   949  005C98  E1FD               	bnz	clear_2
   950                           
   951                           ; Clear objects allocated to BANK2 (245 bytes)
   952  005C9A  EE02  F000         	lfsr	0,__pbssBANK2
   953  005C9E  0EF5               	movlw	245
   954  005CA0                     clear_3:
   955  005CA0  6AEE               	clrf	postinc0,c
   956  005CA2  06E8               	decf	wreg,f,c
   957  005CA4  E1FD               	bnz	clear_3
   958                           
   959                           ; Clear objects allocated to BANK1 (83 bytes)
   960  005CA6  EE01  F06E         	lfsr	0,__pbssBANK1
   961  005CAA  0E53               	movlw	83
   962  005CAC                     clear_4:
   963  005CAC  6AEE               	clrf	postinc0,c
   964  005CAE  06E8               	decf	wreg,f,c
   965  005CB0  E1FD               	bnz	clear_4
   966                           
   967                           ; Clear objects allocated to COMRAM (26 bytes)
   968  005CB2  EE00  F030         	lfsr	0,__pbssCOMRAM
   969  005CB6  0E1A               	movlw	26
   970  005CB8                     clear_5:
   971  005CB8  6AEE               	clrf	postinc0,c
   972  005CBA  06E8               	decf	wreg,f,c
   973  005CBC  E1FD               	bnz	clear_5
   974  005CBE                     end_of_initialization:
   975                           	opt stack 0
   976  005CBE                     __end_of__initialization:
   977                           	opt stack 0
   978  005CBE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   979  005CC0  6EF8               	movwf	tblptru,c
   980  005CC2  0100               	movlb	0
   981  005CC4  EF39  F02A         	goto	_main	;jump to C main() function
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           postdec2	equ	0xFDD
   989                           fsr2h	equ	0xFDA
   990                           fsr2l	equ	0xFD9
   991                           
   992                           	psect	bssCOMRAM
   993  000030                     __pbssCOMRAM:
   994                           	opt stack 0
   995  000030                     TMR_GetDeltaTime@retVal:
   996                           	opt stack 0
   997  000030                     	ds	4
   998  000034                     _ticksAccounted:
   999                           	opt stack 0
  1000  000034                     	ds	4
  1001  000038                     _ticksAdded:
  1002                           	opt stack 0
  1003  000038                     	ds	4
  1004  00003C                     TMR1_ISR@CountCallBack:
  1005                           	opt stack 0
  1006  00003C                     	ds	2
  1007  00003E                     TMR_GetDeltaTime@tmrVal:
  1008                           	opt stack 0
  1009  00003E                     	ds	2
  1010  000040                     TMR_SwapTimer@oldVal:
  1011                           	opt stack 0
  1012  000040                     	ds	2
  1013  000042                     TMR_SwapTimer@retVal:
  1014                           	opt stack 0
  1015  000042                     	ds	2
  1016  000044                     _reloadVal:
  1017                           	opt stack 0
  1018  000044                     	ds	2
  1019  000046                     __rcon:
  1020                           	opt stack 0
  1021  000046                     	ds	1
  1022  000047                     __roundCounter:
  1023                           	opt stack 0
  1024  000047                     	ds	1
  1025  000048                     _dioStatus:
  1026                           	opt stack 0
  1027  000048                     	ds	1
  1028  000049                     _timerOverflow:
  1029                           	opt stack 0
  1030  000049                     	ds	1
  1031                           tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           postdec2	equ	0xFDD
  1038                           fsr2h	equ	0xFDA
  1039                           fsr2l	equ	0xFD9
  1040                           
  1041                           	psect	dataCOMRAM
  1042  000056                     __pdataCOMRAM:
  1043                           	opt stack 0
  1044  000056                     _randx:
  1045                           	opt stack 0
  1046  000056                     	ds	4
  1047  00005A                     _ticksToScheduledInterrupt:
  1048                           	opt stack 0
  1049  00005A                     	ds	4
  1050                           tblptru	equ	0xFF8
  1051                           tblptrh	equ	0xFF7
  1052                           tblptrl	equ	0xFF6
  1053                           tablat	equ	0xFF5
  1054                           postinc0	equ	0xFEE
  1055                           wreg	equ	0xFE8
  1056                           postdec2	equ	0xFDD
  1057                           fsr2h	equ	0xFDA
  1058                           fsr2l	equ	0xFD9
  1059                           
  1060                           	psect	bssBANK1
  1061  00016E                     __pbssBANK1:
  1062                           	opt stack 0
  1063  00016E                     _fCount:
  1064                           	opt stack 0
  1065  00016E                     	ds	4
  1066  000172                     _rxPayload:
  1067                           	opt stack 0
  1068  000172                     	ds	4
  1069  000176                     _JoinedServer:
  1070                           	opt stack 0
  1071  000176                     	ds	1
  1072  000177                     _allocatedTimers:
  1073                           	opt stack 0
  1074  000177                     	ds	1
  1075  000178                     _localDioStatus:
  1076                           	opt stack 0
  1077  000178                     	ds	1
  1078  000179                     _RadioConfiguration:
  1079                           	opt stack 0
  1080  000179                     	ds	54
  1081  0001AF                     _aesBuffer:
  1082                           	opt stack 0
  1083  0001AF                     	ds	16
  1084  0001BF                     _payload:
  1085                           	opt stack 0
  1086  0001BF                     	ds	2
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           postdec2	equ	0xFDD
  1094                           fsr2h	equ	0xFDA
  1095                           fsr2l	equ	0xFD9
  1096                           
  1097                           	psect	dataBANK1
  1098  0001C1                     __pdataBANK1:
  1099                           	opt stack 0
  1100  0001C1                     GenerateSubkey@F17044:
  1101                           	opt stack 0
  1102  0001C1                     	ds	16
  1103  0001D1                     _appSKey:
  1104                           	opt stack 0
  1105  0001D1                     	ds	16
  1106  0001E1                     _nwkSKey:
  1107                           	opt stack 0
  1108  0001E1                     	ds	16
  1109                           tblptru	equ	0xFF8
  1110                           tblptrh	equ	0xFF7
  1111                           tblptrl	equ	0xFF6
  1112                           tablat	equ	0xFF5
  1113                           postinc0	equ	0xFEE
  1114                           wreg	equ	0xFE8
  1115                           postdec2	equ	0xFDD
  1116                           fsr2h	equ	0xFDA
  1117                           fsr2l	equ	0xFD9
  1118                           
  1119                           	psect	bssBANK2
  1120  000200                     __pbssBANK2:
  1121                           	opt stack 0
  1122  000200                     _loRa:
  1123                           	opt stack 0
  1124  000200                     	ds	245
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           postdec2	equ	0xFDD
  1132                           fsr2h	equ	0xFDA
  1133                           fsr2l	equ	0xFD9
  1134                           
  1135                           	psect	bssBANK3
  1136  000300                     __pbssBANK3:
  1137                           	opt stack 0
  1138  000300                     _swTimers:
  1139                           	opt stack 0
  1140  000300                     	ds	160
  1141                           tblptru	equ	0xFF8
  1142                           tblptrh	equ	0xFF7
  1143                           tblptrl	equ	0xFF6
  1144                           tablat	equ	0xFF5
  1145                           postinc0	equ	0xFEE
  1146                           wreg	equ	0xFE8
  1147                           postdec2	equ	0xFDD
  1148                           fsr2h	equ	0xFDA
  1149                           fsr2l	equ	0xFD9
  1150                           
  1151                           	psect	bssBANK4
  1152  000400                     __pbssBANK4:
  1153                           	opt stack 0
  1154  000400                     _Channels:
  1155                           	opt stack 0
  1156  000400                     	ds	224
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           postdec2	equ	0xFDD
  1164                           fsr2h	equ	0xFDA
  1165                           fsr2l	equ	0xFD9
  1166                           
  1167                           	psect	bssBIGRAM
  1168  0004E0                     __pbssBIGRAM:
  1169                           	opt stack 0
  1170  0004E0                     _macBuffer:
  1171                           	opt stack 0
  1172  0004E0                     	ds	271
  1173  0005EF                     _radioBuffer:
  1174                           	opt stack 0
  1175  0005EF                     	ds	271
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postdec2	equ	0xFDD
  1183                           fsr2h	equ	0xFDA
  1184                           fsr2l	equ	0xFD9
  1185                           
  1186                           	psect	cstackBANK3
  1187  0003A0                     __pcstackBANK3:
  1188                           	opt stack 0
  1189  0003A0                     LORAWAN_RxDone@fPort:
  1190                           	opt stack 0
  1191                           
  1192                           ; 1 bytes @ 0x0
  1193  0003A0                     	ds	1
  1194  0003A1                     LORAWAN_RxDone@channelIndex:
  1195                           	opt stack 0
  1196                           
  1197                           ; 1 bytes @ 0x1
  1198  0003A1                     	ds	1
  1199  0003A2                     LORAWAN_RxDone@mhdr:
  1200                           	opt stack 0
  1201                           
  1202                           ; 1 bytes @ 0x2
  1203  0003A2                     	ds	1
  1204  0003A3                     LORAWAN_RxDone@extractedMic:
  1205                           	opt stack 0
  1206                           
  1207                           ; 4 bytes @ 0x3
  1208  0003A3                     	ds	4
  1209  0003A7                     LORAWAN_RxDone@bufferIndex:
  1210                           	opt stack 0
  1211                           
  1212                           ; 1 bytes @ 0x7
  1213  0003A7                     	ds	1
  1214  0003A8                     LORAWAN_RxDone@temp:
  1215                           	opt stack 0
  1216                           
  1217                           ; 1 bytes @ 0x8
  1218  0003A8                     	ds	1
  1219  0003A9                     LORAWAN_RxDone@packet:
  1220                           	opt stack 0
  1221                           
  1222                           ; 2 bytes @ 0x9
  1223  0003A9                     	ds	2
  1224  0003AB                     LORAWAN_RxDone@computedMic:
  1225                           	opt stack 0
  1226                           
  1227                           ; 4 bytes @ 0xB
  1228  0003AB                     	ds	4
  1229  0003AF                     LORAWAN_RxDone@joinAccept:
  1230                           	opt stack 0
  1231                           
  1232                           ; 2 bytes @ 0xF
  1233  0003AF                     	ds	2
  1234  0003B1                     LORAWAN_RxDone@frmPayloadLength:
  1235                           	opt stack 0
  1236                           
  1237                           ; 1 bytes @ 0x11
  1238  0003B1                     	ds	1
  1239  0003B2                     LORAWAN_RxDone@hdr:
  1240                           	opt stack 0
  1241                           
  1242                           ; 2 bytes @ 0x12
  1243  0003B2                     	ds	2
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           postinc0	equ	0xFEE
  1249                           wreg	equ	0xFE8
  1250                           postdec2	equ	0xFDD
  1251                           fsr2h	equ	0xFDA
  1252                           fsr2l	equ	0xFD9
  1253                           
  1254                           	psect	cstackBANK1
  1255  000100                     __pcstackBANK1:
  1256                           	opt stack 0
  1257  000100                     AESCmac@k2:
  1258                           	opt stack 0
  1259                           
  1260                           ; 16 bytes @ 0x0
  1261  000100                     	ds	16
  1262  000110                     AESCmac@k1:
  1263                           	opt stack 0
  1264                           
  1265                           ; 16 bytes @ 0x10
  1266  000110                     	ds	16
  1267  000120                     AESCmac@mLast:
  1268                           	opt stack 0
  1269                           
  1270                           ; 16 bytes @ 0x20
  1271  000120                     	ds	16
  1272  000130                     AESCmac@padded:
  1273                           	opt stack 0
  1274                           
  1275                           ; 16 bytes @ 0x30
  1276  000130                     	ds	16
  1277  000140                     AESCmac@y:
  1278                           	opt stack 0
  1279                           
  1280                           ; 16 bytes @ 0x40
  1281  000140                     	ds	16
  1282  000150                     AESCmac@x:
  1283                           	opt stack 0
  1284                           
  1285                           ; 16 bytes @ 0x50
  1286  000150                     	ds	16
  1287  000160                     AESCmac@ptr:
  1288                           	opt stack 0
  1289                           
  1290                           ; 2 bytes @ 0x60
  1291  000160                     	ds	2
  1292  000162                     AESCmac@flag:
  1293                           	opt stack 0
  1294                           
  1295                           ; 1 bytes @ 0x62
  1296  000162                     	ds	1
  1297  000163                     AESCmac@n:
  1298                           	opt stack 0
  1299                           
  1300                           ; 1 bytes @ 0x63
  1301  000163                     	ds	1
  1302  000164                     AESCmac@j:
  1303                           	opt stack 0
  1304                           
  1305                           ; 1 bytes @ 0x64
  1306  000164                     	ds	1
  1307  000165                     AESCmac@i:
  1308                           	opt stack 0
  1309                           
  1310                           ; 1 bytes @ 0x65
  1311  000165                     	ds	1
  1312  000166                     AssemblePacket@port:
  1313                           	opt stack 0
  1314                           
  1315                           ; 1 bytes @ 0x66
  1316  000166                     	ds	1
  1317  000167                     AssemblePacket@buffer:
  1318                           	opt stack 0
  1319                           
  1320                           ; 2 bytes @ 0x67
  1321  000167                     	ds	2
  1322  000169                     AssemblePacket@bufferLength:
  1323                           	opt stack 0
  1324                           
  1325                           ; 2 bytes @ 0x69
  1326  000169                     	ds	2
  1327  00016B                     LORAWAN_RxDone@buffer:
  1328                           	opt stack 0
  1329                           
  1330                           ; 2 bytes @ 0x6B
  1331  00016B                     	ds	2
  1332  00016D                     LORAWAN_RxDone@bufferLength:
  1333                           	opt stack 0
  1334                           
  1335                           ; 1 bytes @ 0x6D
  1336  00016D                     	ds	1
  1337                           tblptru	equ	0xFF8
  1338                           tblptrh	equ	0xFF7
  1339                           tblptrl	equ	0xFF6
  1340                           tablat	equ	0xFF5
  1341                           postinc0	equ	0xFEE
  1342                           wreg	equ	0xFE8
  1343                           postdec2	equ	0xFDD
  1344                           fsr2h	equ	0xFDA
  1345                           fsr2l	equ	0xFD9
  1346                           
  1347                           	psect	cstackBANK0
  1348  000060                     __pcstackBANK0:
  1349                           	opt stack 0
  1350  000060                     	ds	4
  1351  000064                     ??_UpdateMinMaxChDataRate:
  1352  000064                     ??_FindSmallestDataRate:
  1353  000064                     ??_UpdateReceiveDelays:
  1354  000064                     ??_CountfOptsLength:
  1355  000064                     ??_flash:
  1356  000064                     ?_TMR1_ReadTimer:
  1357                           	opt stack 0
  1358  000064                     ?_ExecuteLinkCheck:
  1359                           	opt stack 0
  1360  000064                     ?_ExecuteDutyCycle:
  1361                           	opt stack 0
  1362  000064                     ?_ExecuteDevStatus:
  1363                           	opt stack 0
  1364  000064                     ?_GetRx1Freq:
  1365                           	opt stack 0
  1366  000064                     ?___lmul:
  1367                           	opt stack 0
  1368  000064                     ?___lldiv:
  1369                           	opt stack 0
  1370  000064                     ?___llmod:
  1371                           	opt stack 0
  1372  000064                     SwTimerCreate@retVal:
  1373                           	opt stack 0
  1374  000064                     SwTimerIsRunning@timerId:
  1375                           	opt stack 0
  1376  000064                     SwTimerStop@timerId:
  1377                           	opt stack 0
  1378  000064                     SPI2_Exchange8bit@data:
  1379                           	opt stack 0
  1380  000064                     HALResetPinOutputValue@value:
  1381                           	opt stack 0
  1382  000064                     RADIO_SetLoRaSyncWord@syncWord:
  1383                           	opt stack 0
  1384  000064                     RADIO_SetSpreadingFactor@spreadingFactor:
  1385                           	opt stack 0
  1386  000064                     RADIO_SetOutputPower@power:
  1387                           	opt stack 0
  1388  000064                     RADIO_SetCRC@crc:
  1389                           	opt stack 0
  1390  000064                     RADIO_SetIQInverted@iqInverted:
  1391                           	opt stack 0
  1392  000064                     RADIO_SetBandwidth@bandwidth:
  1393                           	opt stack 0
  1394  000064                     RADIO_SetModulation@modulation:
  1395                           	opt stack 0
  1396  000064                     ValidateDataRate@dataRate:
  1397                           	opt stack 0
  1398  000064                     ValidateTxPower@result:
  1399                           	opt stack 0
  1400  000064                     UpdateDLSettings@dlRx1DrOffset:
  1401                           	opt stack 0
  1402  000064                     UpdateDataRange@dataRangeNew:
  1403                           	opt stack 0
  1404  000064                     UpdateChannelIdStatus@statusNew:
  1405                           	opt stack 0
  1406  000064                     ValidateRxOffset@rxOffset:
  1407                           	opt stack 0
  1408  000064                     ValidateChannelId@allowedForDefaultChannels:
  1409                           	opt stack 0
  1410  000064                     ValidateChannelMaskCntl@result:
  1411                           	opt stack 0
  1412  000064                     UpdateCurrentDataRate@valueNew:
  1413                           	opt stack 0
  1414  000064                     UpdateTxPower@txPowerNew:
  1415                           	opt stack 0
  1416  000064                     UpdateJoinInProgress@state:
  1417                           	opt stack 0
  1418  000064                     INTERRUPT_GetDioStatus@a:
  1419                           	opt stack 0
  1420  000064                     EncKeySchedule@key:
  1421                           	opt stack 0
  1422  000064                     ___abdiv@divisor:
  1423                           	opt stack 0
  1424  000064                     INT1_SetInterruptHandler@InterruptHandler:
  1425                           	opt stack 0
  1426  000064                     INT2_SetInterruptHandler@InterruptHandler:
  1427                           	opt stack 0
  1428  000064                     INT0_SetInterruptHandler@InterruptHandler:
  1429                           	opt stack 0
  1430  000064                     INT3_SetInterruptHandler@InterruptHandler:
  1431                           	opt stack 0
  1432  000064                     SwTimerSetCallback@callback:
  1433                           	opt stack 0
  1434  000064                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1435                           	opt stack 0
  1436  000064                     ExecuteDutyCycle@ptr:
  1437                           	opt stack 0
  1438  000064                     ExecuteDevStatus@ptr:
  1439                           	opt stack 0
  1440  000064                     UpdateDutyCycle@dutyCycleNew:
  1441                           	opt stack 0
  1442  000064                     ValidateChannelMask@channelMask:
  1443                           	opt stack 0
  1444  000064                     TMR1_WriteTimer@timerVal:
  1445                           	opt stack 0
  1446  000064                     TMR1_SetInterruptHandler@InterruptHandler:
  1447                           	opt stack 0
  1448  000064                     FillSubKey@source:
  1449                           	opt stack 0
  1450  000064                     IOCBF4_SetInterruptHandler@InterruptHandler:
  1451                           	opt stack 0
  1452  000064                     ExecuteLinkCheck@ptr:
  1453                           	opt stack 0
  1454  000064                     IncludeMacCommandsResponse@macBuffer:
  1455                           	opt stack 0
  1456  000064                     CheckFlags@hdr:
  1457                           	opt stack 0
  1458  000064                     CheckMcastFlags@hdr:
  1459                           	opt stack 0
  1460  000064                     EncodeShiftRow@stateTable:
  1461                           	opt stack 0
  1462  000064                     RxDataDone@pData:
  1463                           	opt stack 0
  1464  000064                     memcpy@d1:
  1465                           	opt stack 0
  1466  000064                     memset@p1:
  1467                           	opt stack 0
  1468  000064                     SystemBlockingWaitMs@ms:
  1469                           	opt stack 0
  1470  000064                     RADIO_SetChannelFrequency@frequency:
  1471                           	opt stack 0
  1472  000064                     RADIO_SetWatchdogTimeout@timeout:
  1473                           	opt stack 0
  1474  000064                     ValidateFrequency@frequencyNew:
  1475                           	opt stack 0
  1476  000064                     UpdateFrequency@frequencyNew:
  1477                           	opt stack 0
  1478  000064                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1479                           	opt stack 0
  1480  000064                     LORAWAN_SetUplinkCounter@ctr:
  1481                           	opt stack 0
  1482  000064                     UpdateReceiveWindow2Parameters@frequency:
  1483                           	opt stack 0
  1484  000064                     ___lmul@multiplier:
  1485                           	opt stack 0
  1486  000064                     ___lldiv@dividend:
  1487                           	opt stack 0
  1488  000064                     ___llmod@dividend:
  1489                           	opt stack 0
  1490                           
  1491                           ; 4 bytes @ 0x4
  1492  000064                     	ds	1
  1493  000065                     ??_UpdateDataRange:
  1494  000065                     ??_UpdateChannelIdStatus:
  1495  000065                     ??_EncKeySchedule:
  1496  000065                     SwTimerIsRunning@isRunning:
  1497                           	opt stack 0
  1498  000065                     HALSPISend@data:
  1499                           	opt stack 0
  1500  000065                     ValidateDataRate@result:
  1501                           	opt stack 0
  1502  000065                     ValidateTxPower@txPowerNew:
  1503                           	opt stack 0
  1504  000065                     UpdateDLSettings@dlRx2Dr:
  1505                           	opt stack 0
  1506  000065                     ValidateRxOffset@result:
  1507                           	opt stack 0
  1508  000065                     ValidateChannelId@result:
  1509                           	opt stack 0
  1510  000065                     ValidateChannelMaskCntl@channelMaskCntl:
  1511                           	opt stack 0
  1512  000065                     UpdateMinMaxChDataRate@i:
  1513                           	opt stack 0
  1514  000065                     FindSmallestDataRate@found:
  1515                           	opt stack 0
  1516  000065                     flash@x:
  1517                           	opt stack 0
  1518  000065                     ___abdiv@counter:
  1519                           	opt stack 0
  1520                           
  1521                           ; 1 bytes @ 0x5
  1522  000065                     	ds	1
  1523  000066                     ??_TMR1_ReadTimer:
  1524  000066                     ??_TMR1_Initialize:
  1525  000066                     ??_ExecuteDutyCycle:
  1526  000066                     SwTimerSetCallback@callbackParameter:
  1527                           	opt stack 0
  1528  000066                     RADIO_RegisterWrite@value:
  1529                           	opt stack 0
  1530  000066                     RADIO_RegisterRead@reg:
  1531                           	opt stack 0
  1532  000066                     UpdateDataRange@channelId:
  1533                           	opt stack 0
  1534  000066                     UpdateChannelIdStatus@channelId:
  1535                           	opt stack 0
  1536  000066                     ValidateDataRange@result:
  1537                           	opt stack 0
  1538  000066                     ValidateChannelId@channelId:
  1539                           	opt stack 0
  1540  000066                     UpdateDutyCycle@channelId:
  1541                           	opt stack 0
  1542  000066                     ValidateChannelMask@i:
  1543                           	opt stack 0
  1544  000066                     PIN_MANAGER_Initialize@state:
  1545                           	opt stack 0
  1546  000066                     LORAWAN_SetCurrentDataRate@valueNew:
  1547                           	opt stack 0
  1548  000066                     IncludeMacCommandsResponse@pBufferIndex:
  1549                           	opt stack 0
  1550  000066                     FindSmallestDataRate@i:
  1551                           	opt stack 0
  1552  000066                     EncodeShiftRow@temp:
  1553                           	opt stack 0
  1554  000066                     RxDataDone@dataLength:
  1555                           	opt stack 0
  1556  000066                     ___abdiv@sign:
  1557                           	opt stack 0
  1558  000066                     FillSubKey@key:
  1559                           	opt stack 0
  1560  000066                     memcpy@s1:
  1561                           	opt stack 0
  1562  000066                     memset@c:
  1563                           	opt stack 0
  1564                           
  1565                           ; 2 bytes @ 0x6
  1566  000066                     	ds	1
  1567  000067                     SwTimerSetCallback@timerId:
  1568                           	opt stack 0
  1569  000067                     RADIO_RegisterWrite@reg:
  1570                           	opt stack 0
  1571  000067                     RADIO_RegisterRead@readValue:
  1572                           	opt stack 0
  1573  000067                     UpdateDataRange@i:
  1574                           	opt stack 0
  1575  000067                     UpdateChannelIdStatus@i:
  1576                           	opt stack 0
  1577  000067                     ValidateDataRange@dataRangeNew:
  1578                           	opt stack 0
  1579  000067                     IncludeMacCommandsResponse@bIncludeInFopts:
  1580                           	opt stack 0
  1581  000067                     FindSmallestDataRate@dataRate:
  1582                           	opt stack 0
  1583  000067                     RxDataDone@status:
  1584                           	opt stack 0
  1585  000067                     ___abdiv@quotient:
  1586                           	opt stack 0
  1587                           
  1588                           ; 1 bytes @ 0x7
  1589  000067                     	ds	1
  1590  000068                     ??_IncludeMacCommandsResponse:
  1591  000068                     ??_SystemBlockingWaitMs:
  1592  000068                     RADIO_WritePower@ocp:
  1593                           	opt stack 0
  1594  000068                     RADIO_UnhandledInterrupt@modulation:
  1595                           	opt stack 0
  1596  000068                     LORAWAN_SetChannelIdStatus@statusNew:
  1597                           	opt stack 0
  1598  000068                     ValidateFrequency@result:
  1599                           	opt stack 0
  1600  000068                     ValidateDataRange@dataRateMax:
  1601                           	opt stack 0
  1602  000068                     UpdateFrequency@channelId:
  1603                           	opt stack 0
  1604  000068                     FillSubKey@size:
  1605                           	opt stack 0
  1606  000068                     UpdateReceiveWindow2Parameters@dataRate:
  1607                           	opt stack 0
  1608  000068                     UpdateReceiveDelays@delay:
  1609                           	opt stack 0
  1610  000068                     ___abdiv@dividend:
  1611                           	opt stack 0
  1612  000068                     EnableChannels1@channelMask:
  1613                           	opt stack 0
  1614  000068                     TMR1_ReadTimer@readVal:
  1615                           	opt stack 0
  1616  000068                     _EncKeySchedule$3767:
  1617                           	opt stack 0
  1618  000068                     memcpy@n:
  1619                           	opt stack 0
  1620  000068                     memset@n:
  1621                           	opt stack 0
  1622  000068                     ___lmul@multiplicand:
  1623                           	opt stack 0
  1624  000068                     ___lldiv@divisor:
  1625                           	opt stack 0
  1626  000068                     ___llmod@divisor:
  1627                           	opt stack 0
  1628                           
  1629                           ; 4 bytes @ 0x8
  1630  000068                     	ds	1
  1631  000069                     ??_FillSubKey:
  1632  000069                     ??_RADIO_DIO3:
  1633  000069                     ??_RADIO_DIO4:
  1634  000069                     ??_RADIO_DIO5:
  1635  000069                     ?_ExecuteRxTimingSetup:
  1636                           	opt stack 0
  1637  000069                     RADIO_WriteMode@newModulation:
  1638                           	opt stack 0
  1639  000069                     RADIO_WritePower@paDac:
  1640                           	opt stack 0
  1641  000069                     ExecuteDutyCycle@maxDCycle:
  1642                           	opt stack 0
  1643  000069                     ValidateDataRange@dataRateMin:
  1644                           	opt stack 0
  1645  000069                     ExecuteRxTimingSetup@ptr:
  1646                           	opt stack 0
  1647                           
  1648                           ; 2 bytes @ 0x9
  1649  000069                     	ds	1
  1650  00006A                     ?_TMR_SwapTimer:
  1651                           	opt stack 0
  1652  00006A                     ?_TMR_GetDeltaTime:
  1653                           	opt stack 0
  1654  00006A                     RADIO_WriteMode@blocking:
  1655                           	opt stack 0
  1656  00006A                     RADIO_WritePower@power:
  1657                           	opt stack 0
  1658  00006A                     LORAWAN_SetChannelIdStatus@channelId:
  1659                           	opt stack 0
  1660  00006A                     EnableChannels1@channelMaskCntl:
  1661                           	opt stack 0
  1662  00006A                     FillSubKey@carry:
  1663                           	opt stack 0
  1664  00006A                     CountfOptsLength@macCommandLength:
  1665                           	opt stack 0
  1666  00006A                     TMR_SwapTimer@timerVal:
  1667                           	opt stack 0
  1668  00006A                     AESEncode@block:
  1669                           	opt stack 0
  1670  00006A                     memcpy@d:
  1671                           	opt stack 0
  1672  00006A                     memset@p:
  1673                           	opt stack 0
  1674                           
  1675                           ; 2 bytes @ 0xA
  1676  00006A                     	ds	1
  1677  00006B                     RADIO_WriteMode@currentModulation:
  1678                           	opt stack 0
  1679  00006B                     EnableChannels1@channelIndexMin:
  1680                           	opt stack 0
  1681  00006B                     FillSubKey@i:
  1682                           	opt stack 0
  1683  00006B                     ExecuteRxTimingSetup@delay:
  1684                           	opt stack 0
  1685  00006B                     CountfOptsLength@i:
  1686                           	opt stack 0
  1687                           
  1688                           ; 1 bytes @ 0xB
  1689  00006B                     	ds	1
  1690  00006C                     ??_LORAWAN_GetMaxPayloadSize:
  1691  00006C                     RADIO_WriteMode@dioMapping:
  1692                           	opt stack 0
  1693  00006C                     EnableChannels1@channelIndexMax:
  1694                           	opt stack 0
  1695  00006C                     AESEncode@masterKey:
  1696                           	opt stack 0
  1697  00006C                     ___llmod@counter:
  1698                           	opt stack 0
  1699  00006C                     memcpy@s:
  1700                           	opt stack 0
  1701  00006C                     TMR_OverrideRemaining@ticksRemaining:
  1702                           	opt stack 0
  1703  00006C                     ___lmul@product:
  1704                           	opt stack 0
  1705  00006C                     ___lldiv@quotient:
  1706                           	opt stack 0
  1707                           
  1708                           ; 4 bytes @ 0xC
  1709  00006C                     	ds	1
  1710  00006D                     ??_AESEncode:
  1711  00006D                     RADIO_WriteMode@currentMode:
  1712                           	opt stack 0
  1713  00006D                     EnableChannels1@i:
  1714                           	opt stack 0
  1715  00006D                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0xD
  1719  00006D                     	ds	1
  1720  00006E                     ??_TMR_GetDeltaTime:
  1721  00006E                     ?_ExtractMic:
  1722                           	opt stack 0
  1723  00006E                     RADIO_WriteMode@newMode:
  1724                           	opt stack 0
  1725  00006E                     InitDefault868Channels@i:
  1726                           	opt stack 0
  1727  00006E                     InitDefault433Channels@i:
  1728                           	opt stack 0
  1729  00006E                     LORAWAN_GetMaxPayloadSize@result:
  1730                           	opt stack 0
  1731  00006E                     IncludeMacCommandsResponse@i:
  1732                           	opt stack 0
  1733  00006E                     RADIO_SetFSKSyncWord@syncWord:
  1734                           	opt stack 0
  1735  00006E                     EnableChannels@channelMask:
  1736                           	opt stack 0
  1737  00006E                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1738                           	opt stack 0
  1739  00006E                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1740                           	opt stack 0
  1741  00006E                     PrepareSessionKeys@sessionKey:
  1742                           	opt stack 0
  1743  00006E                     ExtractMic@buffer:
  1744                           	opt stack 0
  1745  00006E                     AssembleEncryptionBlock@frameCounter:
  1746                           	opt stack 0
  1747                           
  1748                           ; 4 bytes @ 0xE
  1749  00006E                     	ds	1
  1750  00006F                     RADIO_WriteMode@opMode:
  1751                           	opt stack 0
  1752  00006F                     IncludeMacCommandsResponse@bufferIndex:
  1753                           	opt stack 0
  1754                           
  1755                           ; 1 bytes @ 0xF
  1756  00006F                     	ds	1
  1757  000070                     ??_TMR_OverrideRemaining:
  1758  000070                     ?_rand:
  1759                           	opt stack 0
  1760  000070                     ?_RADIO_ReadRandom:
  1761                           	opt stack 0
  1762  000070                     ?_ExecuteNewChannel:
  1763                           	opt stack 0
  1764  000070                     ?_ExecuteRxParamSetupReq:
  1765                           	opt stack 0
  1766  000070                     RADIO_SetFSKSyncWord@syncWordLen:
  1767                           	opt stack 0
  1768  000070                     EnableChannels@channelMaskCntl:
  1769                           	opt stack 0
  1770  000070                     LORAWAN_SetClass@deviceClass:
  1771                           	opt stack 0
  1772  000070                     ExtractMic@bufferLength:
  1773                           	opt stack 0
  1774  000070                     ___lldiv@counter:
  1775                           	opt stack 0
  1776  000070                     ExecuteNewChannel@ptr:
  1777                           	opt stack 0
  1778  000070                     ExecuteRxParamSetupReq@ptr:
  1779                           	opt stack 0
  1780  000070                     UpdateCfList@joinAccept:
  1781                           	opt stack 0
  1782  000070                     PrepareSessionKeys@appNonce:
  1783                           	opt stack 0
  1784                           
  1785                           ; 2 bytes @ 0x10
  1786  000070                     	ds	1
  1787  000071                     ?_ExecuteLinkAdr:
  1788                           	opt stack 0
  1789  000071                     ExecuteLinkAdr@ptr:
  1790                           	opt stack 0
  1791  000071                     SwTimerSetTimeout@timeout:
  1792                           	opt stack 0
  1793  000071                     RADIO_WriteFrequency@frequency:
  1794                           	opt stack 0
  1795  000071                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1796                           	opt stack 0
  1797  000071                     RADIO_WriteFSKBitRate@bitRate:
  1798                           	opt stack 0
  1799  000071                     ConfigureRadio@freq:
  1800                           	opt stack 0
  1801                           
  1802                           ; 4 bytes @ 0x11
  1803  000071                     	ds	1
  1804  000072                     ??_ExtractMic:
  1805  000072                     ??_UpdateCfList:
  1806  000072                     ?___lwmod:
  1807                           	opt stack 0
  1808  000072                     ExecuteNewChannel@drRange:
  1809                           	opt stack 0
  1810  000072                     AssembleEncryptionBlock@blockId:
  1811                           	opt stack 0
  1812  000072                     TMR_OverrideRemaining@tmrVal:
  1813                           	opt stack 0
  1814  000072                     RADIO_ReadRandom@retVal:
  1815                           	opt stack 0
  1816  000072                     PrepareSessionKeys@networkId:
  1817                           	opt stack 0
  1818  000072                     ___lwmod@dividend:
  1819                           	opt stack 0
  1820  000072                     ExecuteRxParamSetupReq@frequency:
  1821                           	opt stack 0
  1822                           
  1823                           ; 4 bytes @ 0x12
  1824  000072                     	ds	1
  1825  000073                     ??_ExecuteLinkAdr:
  1826  000073                     AssembleEncryptionBlock@firstByte:
  1827                           	opt stack 0
  1828  000073                     ExecuteNewChannel@frequency:
  1829                           	opt stack 0
  1830                           
  1831                           ; 4 bytes @ 0x13
  1832  000073                     	ds	1
  1833  000074                     RADIO_ReadRandom@i:
  1834                           	opt stack 0
  1835  000074                     UpdateCfList@bufferLength:
  1836                           	opt stack 0
  1837  000074                     PrepareSessionKeys@index:
  1838                           	opt stack 0
  1839  000074                     AssembleEncryptionBlock@multicastStatus:
  1840                           	opt stack 0
  1841  000074                     TMR_OverrideRemaining@oldReloadVal:
  1842                           	opt stack 0
  1843  000074                     ExecuteLinkAdr@channelMask:
  1844                           	opt stack 0
  1845  000074                     ___lwmod@divisor:
  1846                           	opt stack 0
  1847  000074                     ExtractMic@mic:
  1848                           	opt stack 0
  1849                           
  1850                           ; 4 bytes @ 0x14
  1851  000074                     	ds	1
  1852  000075                     ??_SwTimerSetTimeout:
  1853  000075                     ConfigureRadio@dataRate:
  1854                           	opt stack 0
  1855  000075                     AssembleEncryptionBlock@dir:
  1856                           	opt stack 0
  1857  000075                     srand@x:
  1858                           	opt stack 0
  1859  000075                     RADIO_WriteFrequency@num_mod:
  1860                           	opt stack 0
  1861  000075                     RADIO_WriteFSKFrequencyDeviation@num:
  1862                           	opt stack 0
  1863  000075                     RADIO_WriteFSKBitRate@num:
  1864                           	opt stack 0
  1865  000075                     UpdateCfList@frequency:
  1866                           	opt stack 0
  1867  000075                     AESEncode@key:
  1868                           	opt stack 0
  1869                           
  1870                           ; 16 bytes @ 0x15
  1871  000075                     	ds	1
  1872  000076                     ExecuteLinkAdr@txPower:
  1873                           	opt stack 0
  1874  000076                     ExecuteRxParamSetupReq@dlSettings:
  1875                           	opt stack 0
  1876  000076                     AssembleEncryptionBlock@bufferIndex:
  1877                           	opt stack 0
  1878  000076                     ___lwmod@counter:
  1879                           	opt stack 0
  1880  000076                     ConfigureRadioTx@freq:
  1881                           	opt stack 0
  1882  000076                     ConfigureRadioRx@freq:
  1883                           	opt stack 0
  1884                           
  1885                           ; 4 bytes @ 0x16
  1886  000076                     	ds	1
  1887  000077                     ?_Random:
  1888                           	opt stack 0
  1889  000077                     ExecuteNewChannel@channelIndex:
  1890                           	opt stack 0
  1891  000077                     ExecuteLinkAdr@redundancy:
  1892                           	opt stack 0
  1893  000077                     Random@max:
  1894                           	opt stack 0
  1895                           
  1896                           ; 2 bytes @ 0x17
  1897  000077                     	ds	2
  1898  000079                     SwTimerSetTimeout@timerId:
  1899                           	opt stack 0
  1900  000079                     ExecuteLinkAdr@dataRate:
  1901                           	opt stack 0
  1902  000079                     SearchAvailableChannel@transmissionType:
  1903                           	opt stack 0
  1904  000079                     UpdateCfList@channelIndex:
  1905                           	opt stack 0
  1906  000079                     RADIO_WriteFrequency@num:
  1907                           	opt stack 0
  1908                           
  1909                           ; 4 bytes @ 0x19
  1910  000079                     	ds	1
  1911  00007A                     ?_MacExecuteCommands:
  1912                           	opt stack 0
  1913  00007A                     ?_SwTimersInterrupt:
  1914                           	opt stack 0
  1915  00007A                     UpdateCfList@i:
  1916                           	opt stack 0
  1917  00007A                     ConfigureRadioTx@dataRate:
  1918                           	opt stack 0
  1919  00007A                     ConfigureRadioRx@dataRate:
  1920                           	opt stack 0
  1921  00007A                     SearchAvailableChannel@channelIndex:
  1922                           	opt stack 0
  1923  00007A                     MacExecuteCommands@buffer:
  1924                           	opt stack 0
  1925                           
  1926                           ; 2 bytes @ 0x1A
  1927  00007A                     	ds	1
  1928  00007B                     ConfigureRadioTx@txPower:
  1929                           	opt stack 0
  1930                           
  1931                           ; 1 bytes @ 0x1B
  1932  00007B                     	ds	1
  1933  00007C                     ??_SearchAvailableChannel:
  1934  00007C                     MacExecuteCommands@fOptsLen:
  1935                           	opt stack 0
  1936                           
  1937                           ; 1 bytes @ 0x1C
  1938  00007C                     	ds	1
  1939  00007D                     ??_MacExecuteCommands:
  1940  00007D                     ??_RADIO_DIO2:
  1941  00007D                     RADIO_Init@radioBuffer:
  1942                           	opt stack 0
  1943  00007D                     RADIO_WriteConfiguration@symbolTimeout:
  1944                           	opt stack 0
  1945                           
  1946                           ; 2 bytes @ 0x1D
  1947  00007D                     	ds	1
  1948  00007E                     RADIO_DIO2@dioMapping:
  1949                           	opt stack 0
  1950                           
  1951                           ; 1 bytes @ 0x1E
  1952  00007E                     	ds	1
  1953  00007F                     ??_RADIO_WriteConfiguration:
  1954  00007F                     MacExecuteCommands@done:
  1955                           	opt stack 0
  1956  00007F                     RADIO_Init@frequency:
  1957                           	opt stack 0
  1958                           
  1959                           ; 4 bytes @ 0x1F
  1960  00007F                     	ds	1
  1961  000080                     SearchAvailableChannel@randomNumberCopy:
  1962                           	opt stack 0
  1963  000080                     MacExecuteCommands@ptr:
  1964                           	opt stack 0
  1965                           
  1966                           ; 2 bytes @ 0x20
  1967  000080                     	ds	1
  1968  000081                     RADIO_WriteConfiguration@i:
  1969                           	opt stack 0
  1970  000081                     SearchAvailableChannel@result:
  1971                           	opt stack 0
  1972                           
  1973                           ; 1 bytes @ 0x21
  1974  000081                     	ds	1
  1975  000082                     SearchAvailableChannel@maxChannels:
  1976                           	opt stack 0
  1977  000082                     SwTimersInterrupt@timeElapsed:
  1978                           	opt stack 0
  1979  000082                     RADIO_WriteConfiguration@tempValue:
  1980                           	opt stack 0
  1981                           
  1982                           ; 4 bytes @ 0x22
  1983  000082                     	ds	1
  1984  000083                     ??_RADIO_Init:
  1985  000083                     SearchAvailableChannel@randomNumber:
  1986                           	opt stack 0
  1987                           
  1988                           ; 1 bytes @ 0x23
  1989  000083                     	ds	1
  1990  000084                     SearchAvailableChannel@i:
  1991                           	opt stack 0
  1992                           
  1993                           ; 1 bytes @ 0x24
  1994  000084                     	ds	1
  1995  000085                     SelectChannelForTransmission@transmissionType:
  1996                           	opt stack 0
  1997  000085                     _AESEncode$3781:
  1998                           	opt stack 0
  1999                           
  2000                           ; 2 bytes @ 0x25
  2001  000085                     	ds	1
  2002  000086                     RADIO_WriteConfiguration@regValue:
  2003                           	opt stack 0
  2004  000086                     SelectChannelForTransmission@result:
  2005                           	opt stack 0
  2006  000086                     SwTimersInterrupt@ticksToNextTimerEvent:
  2007                           	opt stack 0
  2008                           
  2009                           ; 4 bytes @ 0x26
  2010  000086                     	ds	1
  2011  000087                     SelectChannelForTransmission@channelIndex:
  2012                           	opt stack 0
  2013  000087                     _AESEncode$3782:
  2014                           	opt stack 0
  2015                           
  2016                           ; 2 bytes @ 0x27
  2017  000087                     	ds	2
  2018  000089                     _AESEncode$3783:
  2019                           	opt stack 0
  2020                           
  2021                           ; 2 bytes @ 0x29
  2022  000089                     	ds	1
  2023  00008A                     SwTimersInterrupt@i:
  2024                           	opt stack 0
  2025                           
  2026                           ; 1 bytes @ 0x2A
  2027  00008A                     	ds	1
  2028  00008B                     ?_SwTimerReadValue:
  2029                           	opt stack 0
  2030  00008B                     AESEncode@aux:
  2031                           	opt stack 0
  2032                           
  2033                           ; 1 bytes @ 0x2B
  2034  00008B                     	ds	1
  2035  00008C                     AESEncode@aux2:
  2036                           	opt stack 0
  2037                           
  2038                           ; 1 bytes @ 0x2C
  2039  00008C                     	ds	1
  2040  00008D                     AESEncode@aux1:
  2041                           	opt stack 0
  2042                           
  2043                           ; 1 bytes @ 0x2D
  2044  00008D                     	ds	1
  2045  00008E                     AESEncode@aux3:
  2046                           	opt stack 0
  2047                           
  2048                           ; 1 bytes @ 0x2E
  2049  00008E                     	ds	1
  2050  00008F                     AESEncode@i:
  2051                           	opt stack 0
  2052  00008F                     SwTimerReadValue@ticksCount:
  2053                           	opt stack 0
  2054  00008F                     SwTimerStart@ticksRemaining:
  2055                           	opt stack 0
  2056                           
  2057                           ; 4 bytes @ 0x2F
  2058  00008F                     	ds	1
  2059  000090                     AESEncodeLoRa@block:
  2060                           	opt stack 0
  2061                           
  2062                           ; 2 bytes @ 0x30
  2063  000090                     	ds	2
  2064  000092                     AESEncodeLoRa@key:
  2065                           	opt stack 0
  2066                           
  2067                           ; 2 bytes @ 0x32
  2068  000092                     	ds	1
  2069  000093                     SwTimerReadValue@timerId:
  2070                           	opt stack 0
  2071  000093                     SwTimerStart@timerId:
  2072                           	opt stack 0
  2073                           
  2074                           ; 1 bytes @ 0x33
  2075  000093                     	ds	1
  2076  000094                     ??_UpdateRetransmissionAckTimeoutState:
  2077  000094                     ??_StartReTxTimer:
  2078  000094                     ?_RADIO_Transmit:
  2079                           	opt stack 0
  2080  000094                     ?_RADIO_ReceiveStart:
  2081                           	opt stack 0
  2082  000094                     RADIO_Transmit@buffer:
  2083                           	opt stack 0
  2084  000094                     RADIO_ReceiveStart@rxWindowSize:
  2085                           	opt stack 0
  2086  000094                     LORAWAN_LinkCheckConfigure@period:
  2087                           	opt stack 0
  2088  000094                     AESEncodeLoRa@useKey:
  2089                           	opt stack 0
  2090                           
  2091                           ; 16 bytes @ 0x34
  2092  000094                     	ds	2
  2093  000096                     ??_LORAWAN_LinkCheckConfigure:
  2094  000096                     ??_RADIO_ReceiveStart:
  2095  000096                     RADIO_Transmit@bufferLen:
  2096                           	opt stack 0
  2097                           
  2098                           ; 1 bytes @ 0x36
  2099  000096                     	ds	1
  2100  000097                     ??_RADIO_Transmit:
  2101                           
  2102                           ; 1 bytes @ 0x37
  2103  000097                     	ds	1
  2104  000098                     StartReTxTimer@minim:
  2105                           	opt stack 0
  2106                           
  2107                           ; 4 bytes @ 0x38
  2108  000098                     	ds	2
  2109  00009A                     _RADIO_ReceiveStart$1055:
  2110                           	opt stack 0
  2111                           
  2112                           ; 4 bytes @ 0x3A
  2113  00009A                     	ds	2
  2114  00009C                     StartReTxTimer@i:
  2115                           	opt stack 0
  2116                           
  2117                           ; 1 bytes @ 0x3C
  2118  00009C                     	ds	2
  2119  00009E                     LORAWAN_TxDone@timeOnAir:
  2120                           	opt stack 0
  2121  00009E                     _LORAWAN_LinkCheckConfigure$3285:
  2122                           	opt stack 0
  2123                           
  2124                           ; 4 bytes @ 0x3E
  2125  00009E                     	ds	1
  2126  00009F                     _RADIO_Transmit$1052:
  2127                           	opt stack 0
  2128                           
  2129                           ; 4 bytes @ 0x3F
  2130  00009F                     	ds	1
  2131  0000A0                     ??_LORAWAN_TxDone:
  2132                           
  2133                           ; 1 bytes @ 0x40
  2134  0000A0                     	ds	2
  2135  0000A2                     LORAWAN_LinkCheckConfigure@iCtr:
  2136                           	opt stack 0
  2137                           
  2138                           ; 1 bytes @ 0x42
  2139  0000A2                     	ds	1
  2140  0000A3                     RADIO_Transmit@regValue:
  2141                           	opt stack 0
  2142  0000A3                     LORAWAN_Reset@ismBandNew:
  2143                           	opt stack 0
  2144                           
  2145                           ; 1 bytes @ 0x43
  2146  0000A3                     	ds	1
  2147  0000A4                     RADIO_Transmit@i:
  2148                           	opt stack 0
  2149  0000A4                     LORAWAN_Init@RxPayload:
  2150                           	opt stack 0
  2151  0000A4                     GenerateSubkey@key:
  2152                           	opt stack 0
  2153  0000A4                     ComputeSessionKeys@joinAcceptBuffer:
  2154                           	opt stack 0
  2155  0000A4                     EncryptFRMPayload@buffer:
  2156                           	opt stack 0
  2157                           
  2158                           ; 2 bytes @ 0x44
  2159  0000A4                     	ds	1
  2160  0000A5                     ??_LORAWAN_RxTimeout:
  2161                           
  2162                           ; 1 bytes @ 0x45
  2163  0000A5                     	ds	1
  2164  0000A6                     EncryptFRMPayload@bufferLength:
  2165                           	opt stack 0
  2166  0000A6                     LORAWAN_Init@RxJoinResponse:
  2167                           	opt stack 0
  2168  0000A6                     GenerateSubkey@k1:
  2169                           	opt stack 0
  2170                           
  2171                           ; 2 bytes @ 0x46
  2172  0000A6                     	ds	1
  2173  0000A7                     EncryptFRMPayload@dir:
  2174                           	opt stack 0
  2175                           
  2176                           ; 1 bytes @ 0x47
  2177  0000A7                     	ds	1
  2178  0000A8                     GenerateSubkey@k2:
  2179                           	opt stack 0
  2180  0000A8                     EncryptFRMPayload@frameCounter:
  2181                           	opt stack 0
  2182                           
  2183                           ; 4 bytes @ 0x48
  2184  0000A8                     	ds	1
  2185  0000A9                     LORAWAN_RxTimeout@minim:
  2186                           	opt stack 0
  2187                           
  2188                           ; 4 bytes @ 0x49
  2189  0000A9                     	ds	1
  2190  0000AA                     ??_GenerateSubkey:
  2191                           
  2192                           ; 1 bytes @ 0x4A
  2193  0000AA                     	ds	1
  2194  0000AB                     GenerateSubkey@const_Rb:
  2195                           	opt stack 0
  2196                           
  2197                           ; 16 bytes @ 0x4B
  2198  0000AB                     	ds	1
  2199  0000AC                     EncryptFRMPayload@key:
  2200                           	opt stack 0
  2201                           
  2202                           ; 2 bytes @ 0x4C
  2203  0000AC                     	ds	1
  2204  0000AD                     LORAWAN_RxTimeout@i:
  2205                           	opt stack 0
  2206                           
  2207                           ; 1 bytes @ 0x4D
  2208  0000AD                     	ds	1
  2209  0000AE                     ??_RADIO_DIO1:
  2210  0000AE                     EncryptFRMPayload@macBufferIndex:
  2211                           	opt stack 0
  2212                           
  2213                           ; 1 bytes @ 0x4E
  2214  0000AE                     	ds	1
  2215  0000AF                     RADIO_DIO1@dioMapping:
  2216                           	opt stack 0
  2217  0000AF                     EncryptFRMPayload@bufferToBeEncrypted:
  2218                           	opt stack 0
  2219                           
  2220                           ; 2 bytes @ 0x4F
  2221  0000AF                     	ds	2
  2222  0000B1                     EncryptFRMPayload@multicastStatus:
  2223                           	opt stack 0
  2224                           
  2225                           ; 1 bytes @ 0x51
  2226  0000B1                     	ds	1
  2227  0000B2                     ??_EncryptFRMPayload:
  2228                           
  2229                           ; 1 bytes @ 0x52
  2230  0000B2                     	ds	5
  2231  0000B7                     EncryptFRMPayload@k:
  2232                           	opt stack 0
  2233                           
  2234                           ; 1 bytes @ 0x57
  2235  0000B7                     	ds	1
  2236  0000B8                     EncryptFRMPayload@i:
  2237                           	opt stack 0
  2238                           
  2239                           ; 1 bytes @ 0x58
  2240  0000B8                     	ds	1
  2241  0000B9                     EncryptFRMPayload@j:
  2242                           	opt stack 0
  2243                           
  2244                           ; 1 bytes @ 0x59
  2245  0000B9                     	ds	1
  2246  0000BA                     _LORAWAN_TxDone$1948:
  2247                           	opt stack 0
  2248                           
  2249                           ; 4 bytes @ 0x5A
  2250  0000BA                     	ds	1
  2251  0000BB                     GenerateSubkey@l:
  2252                           	opt stack 0
  2253                           
  2254                           ; 16 bytes @ 0x5B
  2255  0000BB                     	ds	3
  2256  0000BE                     _LORAWAN_TxDone$1949:
  2257                           	opt stack 0
  2258                           
  2259                           ; 4 bytes @ 0x5E
  2260  0000BE                     	ds	4
  2261  0000C2                     LORAWAN_TxDone@found:
  2262                           	opt stack 0
  2263                           
  2264                           ; 1 bytes @ 0x62
  2265  0000C2                     	ds	1
  2266  0000C3                     LORAWAN_TxDone@delta:
  2267                           	opt stack 0
  2268                           
  2269                           ; 4 bytes @ 0x63
  2270  0000C3                     	ds	4
  2271  0000C7                     LORAWAN_TxDone@ticks:
  2272                           	opt stack 0
  2273                           
  2274                           ; 4 bytes @ 0x67
  2275  0000C7                     	ds	4
  2276  0000CB                     GenerateSubkey@i:
  2277                           	opt stack 0
  2278  0000CB                     LORAWAN_TxDone@minim:
  2279                           	opt stack 0
  2280                           
  2281                           ; 4 bytes @ 0x6B
  2282  0000CB                     	ds	1
  2283  0000CC                     AESCmac@key:
  2284                           	opt stack 0
  2285                           
  2286                           ; 2 bytes @ 0x6C
  2287  0000CC                     	ds	2
  2288  0000CE                     AESCmac@output:
  2289                           	opt stack 0
  2290                           
  2291                           ; 2 bytes @ 0x6E
  2292  0000CE                     	ds	1
  2293  0000CF                     LORAWAN_TxDone@i:
  2294                           	opt stack 0
  2295                           
  2296                           ; 1 bytes @ 0x6F
  2297  0000CF                     	ds	1
  2298  0000D0                     ??_RADIO_TxDone:
  2299  0000D0                     ??_RADIO_FSKPacketSent:
  2300  0000D0                     AESCmac@input:
  2301                           	opt stack 0
  2302                           
  2303                           ; 2 bytes @ 0x70
  2304  0000D0                     	ds	2
  2305  0000D2                     AESCmac@size:
  2306                           	opt stack 0
  2307                           
  2308                           ; 1 bytes @ 0x72
  2309  0000D2                     	ds	1
  2310  0000D3                     ??_AESCmac:
  2311                           
  2312                           ; 1 bytes @ 0x73
  2313  0000D3                     	ds	1
  2314  0000D4                     RADIO_TxDone@timeOnAir:
  2315                           	opt stack 0
  2316  0000D4                     RADIO_FSKPacketSent@timeOnAir:
  2317                           	opt stack 0
  2318                           
  2319                           ; 4 bytes @ 0x74
  2320  0000D4                     	ds	4
  2321  0000D8                     _RADIO_TxDone$1067:
  2322                           	opt stack 0
  2323  0000D8                     _RADIO_FSKPacketSent$1071:
  2324                           	opt stack 0
  2325                           
  2326                           ; 4 bytes @ 0x78
  2327  0000D8                     	ds	2
  2328  0000DA                     ??_AssemblePacket:
  2329  0000DA                     ?_ComputeMic:
  2330                           	opt stack 0
  2331  0000DA                     ComputeMic@key:
  2332                           	opt stack 0
  2333                           
  2334                           ; 2 bytes @ 0x7A
  2335  0000DA                     	ds	2
  2336  0000DC                     RADIO_FSKPacketSent@irqFlags:
  2337                           	opt stack 0
  2338  0000DC                     AssemblePacket@confirmed:
  2339                           	opt stack 0
  2340  0000DC                     ComputeMic@buffer:
  2341                           	opt stack 0
  2342                           
  2343                           ; 2 bytes @ 0x7C
  2344  0000DC                     	ds	1
  2345  0000DD                     AssemblePacket@mhdr:
  2346                           	opt stack 0
  2347                           
  2348                           ; 1 bytes @ 0x7D
  2349  0000DD                     	ds	1
  2350  0000DE                     AssemblePacket@fCtrl:
  2351                           	opt stack 0
  2352  0000DE                     ComputeMic@bufferLength:
  2353                           	opt stack 0
  2354                           
  2355                           ; 1 bytes @ 0x7E
  2356  0000DE                     	ds	1
  2357  0000DF                     AssemblePacket@macCmdIdx:
  2358                           	opt stack 0
  2359  0000DF                     ComputeMic@mic:
  2360                           	opt stack 0
  2361                           
  2362                           ; 4 bytes @ 0x7F
  2363  0000DF                     	ds	1
  2364  0000E0                     AssemblePacket@bufferIndex:
  2365                           	opt stack 0
  2366                           
  2367                           ; 1 bytes @ 0x80
  2368  0000E0                     	ds	1
  2369  0000E1                     LORAWAN_Send@port:
  2370                           	opt stack 0
  2371                           
  2372                           ; 1 bytes @ 0x81
  2373  0000E1                     	ds	1
  2374  0000E2                     LORAWAN_Send@buffer:
  2375                           	opt stack 0
  2376                           
  2377                           ; 2 bytes @ 0x82
  2378  0000E2                     	ds	1
  2379  0000E3                     ??_PrepareJoinRequestFrame:
  2380                           
  2381                           ; 1 bytes @ 0x83
  2382  0000E3                     	ds	1
  2383  0000E4                     LORAWAN_Send@bufferLength:
  2384                           	opt stack 0
  2385                           
  2386                           ; 1 bytes @ 0x84
  2387  0000E4                     	ds	1
  2388  0000E5                     ??_LORAWAN_Send:
  2389  0000E5                     PrepareJoinRequestFrame@mic:
  2390                           	opt stack 0
  2391                           
  2392                           ; 4 bytes @ 0x85
  2393  0000E5                     	ds	1
  2394  0000E6                     LORAWAN_Send@result:
  2395                           	opt stack 0
  2396                           
  2397                           ; 1 bytes @ 0x86
  2398  0000E6                     	ds	1
  2399  0000E7                     LORAWAN_Send@confirmed:
  2400                           	opt stack 0
  2401                           
  2402                           ; 1 bytes @ 0x87
  2403  0000E7                     	ds	1
  2404  0000E8                     ??_LORAWAN_RxDone:
  2405  0000E8                     
  2406                           ; 1 bytes @ 0x88
  2407  0000E8                     	ds	1
  2408  0000E9                     PrepareJoinRequestFrame@mhdr:
  2409                           	opt stack 0
  2410                           
  2411                           ; 1 bytes @ 0x89
  2412  0000E9                     	ds	1
  2413  0000EA                     PrepareJoinRequestFrame@bufferIndex:
  2414                           	opt stack 0
  2415                           
  2416                           ; 1 bytes @ 0x8A
  2417  0000EA                     	ds	1
  2418  0000EB                     PrepareJoinRequestFrame@iCtr:
  2419                           	opt stack 0
  2420                           
  2421                           ; 1 bytes @ 0x8B
  2422  0000EB                     	ds	1
  2423  0000EC                     SwTimersExecute@i:
  2424                           	opt stack 0
  2425  0000EC                     LORAWAN_Join@bufferIndex:
  2426                           	opt stack 0
  2427                           
  2428                           ; 1 bytes @ 0x8C
  2429  0000EC                     	ds	1
  2430  0000ED                     RADIO_RxDone@irqFlags:
  2431                           	opt stack 0
  2432  0000ED                     RADIO_FSKPayloadReady@irqFlags:
  2433                           	opt stack 0
  2434  0000ED                     LORAWAN_Join@result:
  2435                           	opt stack 0
  2436                           
  2437                           ; 1 bytes @ 0x8D
  2438  0000ED                     	ds	1
  2439  0000EE                     RADIO_RxDone@i:
  2440                           	opt stack 0
  2441  0000EE                     RADIO_FSKPayloadReady@i:
  2442                           	opt stack 0
  2443  0000EE                     LORAWAN_Join@activationTypeNew:
  2444                           	opt stack 0
  2445                           
  2446                           ; 1 bytes @ 0x8E
  2447  0000EE                     	ds	1
  2448  0000EF                     ??_RADIO_DIO0:
  2449                           
  2450                           ; 1 bytes @ 0x8F
  2451  0000EF                     	ds	2
  2452  0000F1                     RADIO_DIO0@dioMapping:
  2453                           	opt stack 0
  2454                           
  2455                           ; 1 bytes @ 0x91
  2456  0000F1                     	ds	1
  2457  0000F2                     RADIO_DIO0@opMode:
  2458                           	opt stack 0
  2459                           
  2460                           ; 1 bytes @ 0x92
  2461  0000F2                     	ds	1
  2462  0000F3                     ??_main:
  2463                           
  2464                           ; 1 bytes @ 0x93
  2465  0000F3                     	ds	1
  2466  0000F4                     main@timeToSend:
  2467                           	opt stack 0
  2468                           
  2469                           ; 1 bytes @ 0x94
  2470  0000F4                     	ds	1
  2471  0000F5                     main@count:
  2472                           	opt stack 0
  2473                           
  2474                           ; 1 bytes @ 0x95
  2475  0000F5                     	ds	1
  2476  0000F6                     main@x:
  2477                           	opt stack 0
  2478                           
  2479                           ; 2 bytes @ 0x96
  2480  0000F6                     	ds	2
  2481                           tblptru	equ	0xFF8
  2482                           tblptrh	equ	0xFF7
  2483                           tblptrl	equ	0xFF6
  2484                           tablat	equ	0xFF5
  2485                           postinc0	equ	0xFEE
  2486                           wreg	equ	0xFE8
  2487                           postdec2	equ	0xFDD
  2488                           fsr2h	equ	0xFDA
  2489                           fsr2l	equ	0xFD9
  2490                           
  2491                           	psect	cstackCOMRAM
  2492  000001                     __pcstackCOMRAM:
  2493                           	opt stack 0
  2494  000001                     ?i2_TMR1_ReadTimer:
  2495                           	opt stack 0
  2496  000001                     i2TMR1_WriteTimer@timerVal:
  2497                           	opt stack 0
  2498                           
  2499                           ; 2 bytes @ 0x0
  2500  000001                     	ds	2
  2501  000003                     ??i2_TMR1_ReadTimer:
  2502  000003                     
  2503                           ; 1 bytes @ 0x2
  2504  000003                     	ds	2
  2505  000005                     i2TMR1_ReadTimer@readVal:
  2506                           	opt stack 0
  2507                           
  2508                           ; 2 bytes @ 0x4
  2509  000005                     	ds	2
  2510  000007                     ?i2_TMR_SwapTimer:
  2511                           	opt stack 0
  2512  000007                     ?i2_TMR_GetDeltaTime:
  2513                           	opt stack 0
  2514  000007                     i2TMR_SwapTimer@timerVal:
  2515                           	opt stack 0
  2516                           
  2517                           ; 2 bytes @ 0x6
  2518  000007                     	ds	2
  2519  000009                     
  2520                           ; 1 bytes @ 0x8
  2521  000009                     	ds	2
  2522  00000B                     ??i2_TMR_GetDeltaTime:
  2523                           
  2524                           ; 1 bytes @ 0xA
  2525  00000B                     	ds	12
  2526  000017                     ?i2_SwTimersInterrupt:
  2527                           	opt stack 0
  2528                           
  2529                           ; 4 bytes @ 0x16
  2530  000017                     	ds	4
  2531  00001B                     
  2532                           ; 1 bytes @ 0x1A
  2533  00001B                     	ds	4
  2534  00001F                     i2SwTimersInterrupt@timeElapsed:
  2535                           	opt stack 0
  2536                           
  2537                           ; 4 bytes @ 0x1E
  2538  00001F                     	ds	4
  2539  000023                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2540                           	opt stack 0
  2541                           
  2542                           ; 4 bytes @ 0x22
  2543  000023                     	ds	4
  2544  000027                     i2SwTimersInterrupt@i:
  2545                           	opt stack 0
  2546                           
  2547                           ; 1 bytes @ 0x26
  2548  000027                     	ds	1
  2549  000028                     ??_INTERRUPT_InterruptManager:
  2550                           
  2551                           ; 1 bytes @ 0x27
  2552  000028                     	ds	8
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           postinc0	equ	0xFEE
  2558                           wreg	equ	0xFE8
  2559                           postdec2	equ	0xFDD
  2560                           fsr2h	equ	0xFDA
  2561                           fsr2l	equ	0xFD9
  2562                           
  2563 ;;
  2564 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2565 ;;
  2566 ;; *************** function _main *****************
  2567 ;; Defined at:
  2568 ;;		line 61 in file "main.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  x               2  150[BANK0 ] int 
  2573 ;;  count           1  149[BANK0 ] unsigned char 
  2574 ;;  timeToSend      1  148[BANK0 ] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : F/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0
  2585 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2586 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2587 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2588 ;;Total ram usage:        5 bytes
  2589 ;; Hardware stack levels required when called:   19
  2590 ;; This function calls:
  2591 ;;		_LORAWAN_Init
  2592 ;;		_LORAWAN_Join
  2593 ;;		_LORAWAN_Mainloop
  2594 ;;		_LORAWAN_SetApplicationSessionKey
  2595 ;;		_LORAWAN_SetClass
  2596 ;;		_LORAWAN_SetCurrentDataRate
  2597 ;;		_LORAWAN_SetDeviceAddress
  2598 ;;		_LORAWAN_SetNetworkSessionKey
  2599 ;;		_SYSTEM_Initialize
  2600 ;;		_flash
  2601 ;;		_sendPacket
  2602 ;; This function is called by:
  2603 ;;		Startup code after reset
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text0
  2608  005472                     __ptext0:
  2609                           	opt stack 0
  2610  005472                     _main:
  2611                           	opt stack 12
  2612                           
  2613                           ;main.c: 64: SYSTEM_Initialize();
  2614                           
  2615                           ; BSR set to: 1
  2616                           ;incstack = 0
  2617  005472  EC1F  F03B         	call	_SYSTEM_Initialize	;wreg free
  2618                           
  2619                           ; BSR set to: 1
  2620                           ;main.c: 67: (INTCONbits.GIE = 1);
  2621  005476  8EF2               	bsf	intcon,7,c	;volatile
  2622                           
  2623                           ; BSR set to: 1
  2624                           ;main.c: 68: (INTCONbits.PEIE = 1);
  2625  005478  8CF2               	bsf	intcon,6,c	;volatile
  2626                           
  2627                           ; BSR set to: 1
  2628  00547A  847B               	bsf	3963,2,c	;volatile
  2629                           
  2630                           ; BSR set to: 1
  2631                           ;main.c: 71: LORAWAN_Init(RxDataDone, RxJoinResponse);
  2632  00547C  0E86               	movlw	low _RxDataDone
  2633  00547E  0100               	movlb	0	; () banked
  2634  005480  6FA4               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2635  005482  0E79               	movlw	high _RxDataDone
  2636  005484  6FA5               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2637  005486  0E38               	movlw	low _RxJoinResponse
  2638  005488  6FA6               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2639  00548A  0E79               	movlw	high _RxJoinResponse
  2640  00548C  6FA7               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2641  00548E  ECB6  F033         	call	_LORAWAN_Init	;wreg free
  2642                           
  2643                           ;main.c: 72: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2644  005492  0EE1               	movlw	low _nwkSKey
  2645  005494  0100               	movlb	0	; () banked
  2646  005496  6F6E               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2647  005498  0E01               	movlw	high _nwkSKey
  2648  00549A  6F6F               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2649  00549C  EC46  F039         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2650                           
  2651                           ;main.c: 73: LORAWAN_SetApplicationSessionKey(appSKey);
  2652  0054A0  0ED1               	movlw	low _appSKey
  2653  0054A2  0100               	movlb	0	; () banked
  2654  0054A4  6F6E               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2655  0054A6  0E01               	movlw	high _appSKey
  2656  0054A8  6F6F               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2657  0054AA  EC5B  F039         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2658                           
  2659                           ;main.c: 74: LORAWAN_SetDeviceAddress(devAddr);
  2660  0054AE  0E40               	movlw	64
  2661  0054B0  0100               	movlb	0	; () banked
  2662  0054B2  6F64               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew& (0+255),b
  2663  0054B4  0E65               	movlw	101
  2664  0054B6  6F65               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+1)& (0+255),b
  2665  0054B8  0E00               	movlw	0
  2666  0054BA  6B66               	clrf	(LORAWAN_SetDeviceAddress@deviceAddressNew+2)& (0+255),b
  2667  0054BC  6B67               	clrf	(LORAWAN_SetDeviceAddress@deviceAddressNew+3)& (0+255),b
  2668  0054BE  EC71  F03B         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2669                           
  2670                           ; BSR set to: 2
  2671                           ;main.c: 75: LORAWAN_Join(ABP);
  2672  0054C2  0E01               	movlw	1
  2673  0054C4  EC64  F02E         	call	_LORAWAN_Join
  2674                           
  2675                           ;main.c: 82: LORAWAN_SetCurrentDataRate(5);
  2676  0054C8  0E05               	movlw	5
  2677  0054CA  EC02  F039         	call	_LORAWAN_SetCurrentDataRate
  2678                           
  2679                           ;main.c: 86: while(JoinedServer == 0){
  2680  0054CE  D003               	goto	l16563
  2681  0054D0                     l16559:
  2682                           
  2683                           ; BSR set to: 1
  2684                           ;main.c: 87: LORAWAN_Mainloop();
  2685  0054D0  ECC0  F037         	call	_LORAWAN_Mainloop	;wreg free
  2686  0054D4  947B               	bcf	3963,2,c	;volatile
  2687  0054D6                     l16563:
  2688  0054D6  0101               	movlb	1	; () banked
  2689  0054D8  5176               	movf	_JoinedServer& (0+255),w,b
  2690  0054DA  E0FA               	bz	l16559
  2691                           
  2692                           ; BSR set to: 1
  2693                           ;main.c: 89: }
  2694                           ;main.c: 92: bool timeToSend = 1;
  2695  0054DC  0E01               	movlw	1
  2696  0054DE  0100               	movlb	0	; () banked
  2697  0054E0  6FF4               	movwf	main@timeToSend& (0+255),b
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;main.c: 93: uint8_t count = 0;
  2701  0054E2  6BF5               	clrf	main@count& (0+255),b
  2702  0054E4                     l16569:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;main.c: 100: LORAWAN_Mainloop();
  2706  0054E4  ECC0  F037         	call	_LORAWAN_Mainloop	;wreg free
  2707                           
  2708                           ;main.c: 104: if(timeToSend == 1){
  2709  0054E8  0100               	movlb	0	; () banked
  2710  0054EA  05F4               	decf	main@timeToSend& (0+255),w,b
  2711  0054EC  E105               	bnz	l16579
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;main.c: 105: timeToSend = 0;
  2715  0054EE  6BF4               	clrf	main@timeToSend& (0+255),b
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;main.c: 106: flash();
  2719  0054F0  ECAB  F035         	call	_flash	;wreg free
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;main.c: 107: sendPacket();
  2723  0054F4  ECA2  F037         	call	_sendPacket	;wreg free
  2724  0054F8                     l16579:
  2725                           
  2726                           ;main.c: 108: }
  2727                           ;main.c: 112: if(count == 120){
  2728  0054F8  0E78               	movlw	120
  2729  0054FA  0100               	movlb	0	; () banked
  2730  0054FC  19F5               	xorwf	main@count& (0+255),w,b
  2731  0054FE  E106               	bnz	l16587
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;main.c: 113: count = 0;
  2735  005500  6BF5               	clrf	main@count& (0+255),b
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;main.c: 114: timeToSend = 1;
  2739  005502  0E01               	movlw	1
  2740  005504  6FF4               	movwf	main@timeToSend& (0+255),b
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;main.c: 124: LORAWAN_SetClass(CLASS_A);
  2744  005506  0E00               	movlw	0
  2745  005508  EC60  F036         	call	_LORAWAN_SetClass
  2746  00550C                     l16587:
  2747                           
  2748                           ;main.c: 126: }
  2749                           ;main.c: 129: for(int x = 0; x < 1000; x++) _delay((unsigned long)((1)*(16000000/4000.0)
      +                          ));
  2750  00550C  0100               	movlb	0	; () banked
  2751  00550E  6BF6               	clrf	main@x& (0+255),b
  2752  005510  6BF7               	clrf	(main@x+1)& (0+255),b
  2753  005512                     l16593:
  2754                           
  2755                           ; BSR set to: 0
  2756  005512  0E06               	movlw	6
  2757  005514  6FF3               	movwf	??_main& (0+255),b
  2758  005516  0E30               	movlw	48
  2759  005518                     u20067:
  2760  005518  2EE8               	decfsz	wreg,f,c
  2761  00551A  D7FE               	goto	u20067
  2762  00551C  2FF3               	decfsz	??_main& (0+255),f,b
  2763  00551E  D7FC               	goto	u20067
  2764  005520  D000               	nop2	
  2765  005522  0100               	movlb	0	; () banked
  2766  005524  4BF6               	infsnz	main@x& (0+255),f,b
  2767  005526  2BF7               	incf	(main@x+1)& (0+255),f,b
  2768  005528  BFF7               	btfsc	(main@x+1)& (0+255),7,b
  2769  00552A  D7F3               	goto	l16593
  2770  00552C  0EE8               	movlw	232
  2771  00552E  5DF6               	subwf	main@x& (0+255),w,b
  2772  005530  0E03               	movlw	3
  2773  005532  59F7               	subwfb	(main@x+1)& (0+255),w,b
  2774  005534  E3EE               	bnc	l16593
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;main.c: 130: count++;
  2778  005536  2BF5               	incf	main@count& (0+255),f,b
  2779  005538  D7D5               	goto	l16569
  2780  00553A                     __end_of_main:
  2781                           	opt stack 0
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           intcon	equ	0xFF2
  2787                           postinc0	equ	0xFEE
  2788                           wreg	equ	0xFE8
  2789                           postdec2	equ	0xFDD
  2790                           fsr2h	equ	0xFDA
  2791                           fsr2l	equ	0xFD9
  2792                           
  2793 ;; *************** function _sendPacket *****************
  2794 ;; Defined at:
  2795 ;;		line 135 in file "main.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : F/0
  2806 ;;		On exit  : D/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2809 ;;      Params:         0       0       0       0       0       0       0       0       0
  2810 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2812 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2813 ;;Total ram usage:        0 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:   14
  2816 ;; This function calls:
  2817 ;;		_LORAWAN_Send
  2818 ;;		_LORAWAN_SetUplinkCounter
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text1
  2825  006F44                     __ptext1:
  2826                           	opt stack 0
  2827  006F44                     _sendPacket:
  2828                           	opt stack 16
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;main.c: 138: LORAWAN_SetUplinkCounter(++fCount);
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;incstack = 0
  2835  006F44  0101               	movlb	1	; () banked
  2836  006F46  2B6E               	incf	_fCount& (0+255),f,b
  2837  006F48  0E00               	movlw	0
  2838  006F4A  236F               	addwfc	(_fCount+1)& (0+255),f,b
  2839  006F4C  2370               	addwfc	(_fCount+2)& (0+255),f,b
  2840  006F4E  2371               	addwfc	(_fCount+3)& (0+255),f,b
  2841  006F50  C16E  F064         	movff	_fCount,LORAWAN_SetUplinkCounter@ctr
  2842  006F54  C16F  F065         	movff	_fCount+1,LORAWAN_SetUplinkCounter@ctr+1
  2843  006F58  C170  F066         	movff	_fCount+2,LORAWAN_SetUplinkCounter@ctr+2
  2844  006F5C  C171  F067         	movff	_fCount+3,LORAWAN_SetUplinkCounter@ctr+3
  2845  006F60  ECE1  F03B         	call	_LORAWAN_SetUplinkCounter	;wreg free
  2846                           
  2847                           ; BSR set to: 1
  2848                           ;main.c: 141: payload[0] = 0xFFFF;
  2849  006F64  69BF               	setf	_payload& (0+255),b
  2850  006F66  69C0               	setf	(_payload+1)& (0+255),b
  2851                           
  2852                           ; BSR set to: 1
  2853                           ;main.c: 142: LORAWAN_Send(UNCNF, portNumber, &payload, sizeof(payload));
  2854  006F68  0E02               	movlw	2
  2855  006F6A  0100               	movlb	0	; () banked
  2856  006F6C  6FE1               	movwf	LORAWAN_Send@port& (0+255),b
  2857  006F6E  0EBF               	movlw	low _payload
  2858  006F70  6FE2               	movwf	LORAWAN_Send@buffer& (0+255),b
  2859  006F72  0E01               	movlw	high _payload
  2860  006F74  6FE3               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2861  006F76  0E02               	movlw	2
  2862  006F78  6FE4               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2863  006F7A  0E00               	movlw	0
  2864  006F7C  EF01  F02B         	goto	_LORAWAN_Send
  2865  006F80                     __end_of_sendPacket:
  2866                           	opt stack 0
  2867                           tblptru	equ	0xFF8
  2868                           tblptrh	equ	0xFF7
  2869                           tblptrl	equ	0xFF6
  2870                           tablat	equ	0xFF5
  2871                           intcon	equ	0xFF2
  2872                           postinc0	equ	0xFEE
  2873                           wreg	equ	0xFE8
  2874                           postdec2	equ	0xFDD
  2875                           fsr2h	equ	0xFDA
  2876                           fsr2l	equ	0xFD9
  2877                           
  2878 ;; *************** function _LORAWAN_SetUplinkCounter *****************
  2879 ;; Defined at:
  2880 ;;		line 486 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  ctr             4    4[BANK0 ] unsigned long 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		None
  2889 ;; Tracked objects:
  2890 ;;		On entry : F/1
  2891 ;;		On exit  : F/1
  2892 ;;		Unchanged: F/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2894 ;;      Params:         0       4       0       0       0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2897 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2898 ;;Total ram usage:        4 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    7
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_sendPacket
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text2
  2909  0077C2                     __ptext2:
  2910                           	opt stack 0
  2911  0077C2                     _LORAWAN_SetUplinkCounter:
  2912                           	opt stack 22
  2913                           
  2914                           ; BSR set to: 1
  2915                           ;lorawan.c: 488: loRa.fCntUp.value = ctr;
  2916                           
  2917                           ;incstack = 0
  2918  0077C2  C064  F206         	movff	LORAWAN_SetUplinkCounter@ctr,_loRa+6
  2919  0077C6  C065  F207         	movff	LORAWAN_SetUplinkCounter@ctr+1,_loRa+7
  2920  0077CA  C066  F208         	movff	LORAWAN_SetUplinkCounter@ctr+2,_loRa+8
  2921  0077CE  C067  F209         	movff	LORAWAN_SetUplinkCounter@ctr+3,_loRa+9
  2922                           
  2923                           ; BSR set to: 1
  2924  0077D2  0012               	return		;funcret
  2925  0077D4                     __end_of_LORAWAN_SetUplinkCounter:
  2926                           	opt stack 0
  2927                           tblptru	equ	0xFF8
  2928                           tblptrh	equ	0xFF7
  2929                           tblptrl	equ	0xFF6
  2930                           tablat	equ	0xFF5
  2931                           intcon	equ	0xFF2
  2932                           postinc0	equ	0xFEE
  2933                           wreg	equ	0xFE8
  2934                           postdec2	equ	0xFDD
  2935                           fsr2h	equ	0xFDA
  2936                           fsr2l	equ	0xFD9
  2937                           
  2938 ;; *************** function _flash *****************
  2939 ;; Defined at:
  2940 ;;		line 154 in file "main.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  x               1    5[BANK0 ] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      void 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : F/0
  2951 ;;		On exit  : F/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0
  2955 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2956 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2957 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2958 ;;Total ram usage:        2 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    7
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_main
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text3
  2969  006B56                     __ptext3:
  2970                           	opt stack 0
  2971  006B56                     _flash:
  2972                           	opt stack 23
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;main.c: 155: for(uint8_t x = 0; x < 5; x++){
  2976                           
  2977                           ; BSR set to: 1
  2978                           ;incstack = 0
  2979  006B56  6B65               	clrf	flash@x& (0+255),b
  2980  006B58                     l15971:
  2981  006B58  0E01               	movlw	1
  2982                           
  2983                           ; BSR set to: 0
  2984  006B5A  A47B               	btfss	3963,2,c	;volatile
  2985  006B5C  0E00               	movlw	0
  2986  006B5E  0AFF               	xorlw	255
  2987  006B60  6F64               	movwf	??_flash& (0+255),b
  2988  006B62  4764               	rlncf	??_flash& (0+255),f,b
  2989  006B64  4764               	rlncf	??_flash& (0+255),f,b
  2990  006B66  507B               	movf	3963,w,c	;volatile
  2991  006B68  1964               	xorwf	??_flash& (0+255),w,b
  2992  006B6A  0BFB               	andlw	-5
  2993  006B6C  1964               	xorwf	??_flash& (0+255),w,b
  2994  006B6E  6E7B               	movwf	3963,c	;volatile
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;main.c: 157: _delay((unsigned long)((15)*(16000000/4000.0)));
  2998  006B70  0E4E               	movlw	78
  2999  006B72  6F64               	movwf	??_flash& (0+255),b
  3000  006B74  0EEB               	movlw	235
  3001  006B76                     u20077:
  3002  006B76  2EE8               	decfsz	wreg,f,c
  3003  006B78  D7FE               	goto	u20077
  3004  006B7A  2F64               	decfsz	??_flash& (0+255),f,b
  3005  006B7C  D7FC               	goto	u20077
  3006  006B7E  F000               	nop	
  3007                           
  3008                           ;main.c: 158: _delay((unsigned long)((15)*(16000000/4000.0)));
  3009  006B80  0E4E               	movlw	78
  3010  006B82  0100               	movlb	0	; () banked
  3011  006B84  6F64               	movwf	??_flash& (0+255),b
  3012  006B86  0EEB               	movlw	235
  3013  006B88                     u20087:
  3014  006B88  2EE8               	decfsz	wreg,f,c
  3015  006B8A  D7FE               	goto	u20087
  3016  006B8C  2F64               	decfsz	??_flash& (0+255),f,b
  3017  006B8E  D7FC               	goto	u20087
  3018  006B90  F000               	nop	
  3019  006B92  0100               	movlb	0	; () banked
  3020  006B94  2B65               	incf	flash@x& (0+255),f,b
  3021                           
  3022                           ; BSR set to: 0
  3023  006B96  0E04               	movlw	4
  3024  006B98  6565               	cpfsgt	flash@x& (0+255),b
  3025  006B9A  D7DE               	goto	l15971
  3026                           
  3027                           ; BSR set to: 0
  3028                           
  3029                           ;main.c: 159: }
  3030                           ;main.c: 160: do { LATCbits.LATC2 = 0; } while(0);
  3031  006B9C  947B               	bcf	3963,2,c	;volatile
  3032                           
  3033                           ; BSR set to: 0
  3034  006B9E  0C04               	retlw	4	;funcret
  3035  006BA0                     __end_of_flash:
  3036                           	opt stack 0
  3037                           tblptru	equ	0xFF8
  3038                           tblptrh	equ	0xFF7
  3039                           tblptrl	equ	0xFF6
  3040                           tablat	equ	0xFF5
  3041                           intcon	equ	0xFF2
  3042                           postinc0	equ	0xFEE
  3043                           wreg	equ	0xFE8
  3044                           postdec2	equ	0xFDD
  3045                           fsr2h	equ	0xFDA
  3046                           fsr2l	equ	0xFD9
  3047                           
  3048 ;; *************** function _SYSTEM_Initialize *****************
  3049 ;; Defined at:
  3050 ;;		line 107 in file "mcc_generated_files/mcc.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : F/1
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3064 ;;      Params:         0       0       0       0       0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3067 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:   10
  3071 ;; This function calls:
  3072 ;;		_EXT_INT_Initialize
  3073 ;;		_INTERRUPT_Initialize
  3074 ;;		_LORAWAN_PlatformInit
  3075 ;;		_OSCILLATOR_Initialize
  3076 ;;		_PIN_MANAGER_Initialize
  3077 ;;		_SPI2_Initialize
  3078 ;;		_TMR1_Initialize
  3079 ;; This function is called by:
  3080 ;;		_main
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text4
  3085  00763E                     __ptext4:
  3086                           	opt stack 0
  3087  00763E                     _SYSTEM_Initialize:
  3088                           	opt stack 20
  3089                           
  3090                           ;mcc.c: 110: INTERRUPT_Initialize();
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;incstack = 0
  3094  00763E  ECB6  F03C         	call	_INTERRUPT_Initialize	;wreg free
  3095                           
  3096                           ;mcc.c: 111: PIN_MANAGER_Initialize();
  3097  007642  EC22  F028         	call	_PIN_MANAGER_Initialize	;wreg free
  3098                           
  3099                           ;mcc.c: 112: OSCILLATOR_Initialize();
  3100  007646  ECEA  F03B         	call	_OSCILLATOR_Initialize	;wreg free
  3101                           
  3102                           ; BSR set to: 14
  3103                           ;mcc.c: 113: SPI2_Initialize();
  3104  00764A  EC2A  F03C         	call	_SPI2_Initialize	;wreg free
  3105                           
  3106                           ; BSR set to: 14
  3107                           ;mcc.c: 114: EXT_INT_Initialize();
  3108  00764E  EC3F  F034         	call	_EXT_INT_Initialize	;wreg free
  3109                           
  3110                           ; BSR set to: 14
  3111                           ;mcc.c: 115: TMR1_Initialize();
  3112  007652  EC3E  F036         	call	_TMR1_Initialize	;wreg free
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;mcc.c: 116: LORAWAN_PlatformInit();
  3116  007656  EF67  F03A         	goto	_LORAWAN_PlatformInit	;wreg free
  3117  00765A                     __end_of_SYSTEM_Initialize:
  3118                           	opt stack 0
  3119                           tblptru	equ	0xFF8
  3120                           tblptrh	equ	0xFF7
  3121                           tblptrl	equ	0xFF6
  3122                           tablat	equ	0xFF5
  3123                           intcon	equ	0xFF2
  3124                           postinc0	equ	0xFEE
  3125                           wreg	equ	0xFE8
  3126                           postdec2	equ	0xFDD
  3127                           fsr2h	equ	0xFDA
  3128                           fsr2l	equ	0xFD9
  3129                           
  3130 ;; *************** function _TMR1_Initialize *****************
  3131 ;; Defined at:
  3132 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : F/E
  3143 ;;		On exit  : F/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3146 ;;      Params:         0       0       0       0       0       0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3148 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3149 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3150 ;;Total ram usage:        2 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    8
  3153 ;; This function calls:
  3154 ;;		_TMR1_SetInterruptHandler
  3155 ;;		_TMR1_StartTimer
  3156 ;; This function is called by:
  3157 ;;		_SYSTEM_Initialize
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text5
  3162  006C7C                     __ptext5:
  3163                           	opt stack 0
  3164  006C7C                     _TMR1_Initialize:
  3165                           	opt stack 21
  3166                           
  3167                           ; BSR set to: 14
  3168                           ;tmr1.c: 68: T1CON = 0x34;
  3169                           
  3170                           ; BSR set to: 1
  3171                           ;incstack = 0
  3172  006C7C  0E34               	movlw	52
  3173  006C7E  6ECF               	movwf	4047,c	;volatile
  3174                           
  3175                           ; BSR set to: 14
  3176                           ;tmr1.c: 71: T1GCON = 0x00;
  3177  006C80  6AD0               	clrf	4048,c	;volatile
  3178                           
  3179                           ; BSR set to: 14
  3180                           ;tmr1.c: 74: T1GATE = 0x00;
  3181  006C82  6AD1               	clrf	4049,c	;volatile
  3182                           
  3183                           ;tmr1.c: 77: T1CLK = 0x01;
  3184  006C84  0E01               	movlw	1
  3185  006C86  6ED2               	movwf	4050,c	;volatile
  3186                           
  3187                           ;tmr1.c: 80: TMR1H = 0x0B;
  3188  006C88  0E0B               	movlw	11
  3189  006C8A  6ECE               	movwf	4046,c	;volatile
  3190                           
  3191                           ;tmr1.c: 83: TMR1L = 0xDC;
  3192  006C8C  0EDC               	movlw	220
  3193  006C8E  6ECD               	movwf	4045,c	;volatile
  3194                           
  3195                           ; BSR set to: 14
  3196                           ;tmr1.c: 86: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  3197  006C90  50CD               	movf	4045,w,c	;volatile
  3198  006C92  CFCE F066          	movff	4046,??_TMR1_Initialize	;volatile
  3199  006C96  0100               	movlb	0	; () banked
  3200  006C98  6B67               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  3201  006C9A  C066  F067         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  3202  006C9E  6B66               	clrf	??_TMR1_Initialize& (0+255),b
  3203  006CA0  1166               	iorwf	??_TMR1_Initialize& (0+255),w,b
  3204  006CA2  6E5E               	movwf	_timer1ReloadVal,c	;volatile
  3205  006CA4  5167               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  3206  006CA6  6E5F               	movwf	_timer1ReloadVal+1,c	;volatile
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;tmr1.c: 89: PIR5bits.TMR1IF = 0;
  3210  006CA8  010E               	movlb	14	; () banked
  3211  006CAA  9138               	bcf	56,0,b	;volatile
  3212                           
  3213                           ; BSR set to: 14
  3214                           ;tmr1.c: 92: PIE5bits.TMR1IE = 1;
  3215  006CAC  812E               	bsf	46,0,b	;volatile
  3216                           
  3217                           ; BSR set to: 14
  3218                           ;tmr1.c: 95: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3219  006CAE  0E88               	movlw	low _TMR1_DefaultInterruptHandler
  3220  006CB0  0100               	movlb	0	; () banked
  3221  006CB2  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3222  006CB4  0E79               	movlw	high _TMR1_DefaultInterruptHandler
  3223  006CB6  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3224  006CB8  EC3B  F03C         	call	_TMR1_SetInterruptHandler	;wreg free
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;tmr1.c: 98: TMR1_StartTimer();
  3228  006CBC  EFB4  F03C         	goto	_TMR1_StartTimer	;wreg free
  3229  006CC0                     __end_of_TMR1_Initialize:
  3230                           	opt stack 0
  3231                           tblptru	equ	0xFF8
  3232                           tblptrh	equ	0xFF7
  3233                           tblptrl	equ	0xFF6
  3234                           tablat	equ	0xFF5
  3235                           intcon	equ	0xFF2
  3236                           postinc0	equ	0xFEE
  3237                           wreg	equ	0xFE8
  3238                           postdec2	equ	0xFDD
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           
  3242 ;; *************** function _TMR1_StartTimer *****************
  3243 ;; Defined at:
  3244 ;;		line 101 in file "mcc_generated_files/tmr1.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		None
  3253 ;; Tracked objects:
  3254 ;;		On entry : F/0
  3255 ;;		On exit  : F/0
  3256 ;;		Unchanged: F/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3258 ;;      Params:         0       0       0       0       0       0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3261 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3262 ;;Total ram usage:        0 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    7
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_TMR1_Initialize
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text6
  3273  007968                     __ptext6:
  3274                           	opt stack 0
  3275  007968                     _TMR1_StartTimer:
  3276                           	opt stack 21
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;tmr1.c: 104: T1CONbits.TMR1ON = 1;
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;incstack = 0
  3283  007968  80CF               	bsf	4047,0,c	;volatile
  3284                           
  3285                           ; BSR set to: 0
  3286  00796A  0012               	return		;funcret
  3287  00796C                     __end_of_TMR1_StartTimer:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           intcon	equ	0xFF2
  3294                           postinc0	equ	0xFEE
  3295                           wreg	equ	0xFE8
  3296                           postdec2	equ	0xFDD
  3297                           fsr2h	equ	0xFDA
  3298                           fsr2l	equ	0xFD9
  3299                           
  3300 ;; *************** function _SPI2_Initialize *****************
  3301 ;; Defined at:
  3302 ;;		line 63 in file "mcc_generated_files/spi2.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2
  3311 ;; Tracked objects:
  3312 ;;		On entry : F/E
  3313 ;;		On exit  : F/E
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3316 ;;      Params:         0       0       0       0       0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3319 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3320 ;;Total ram usage:        0 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    7
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_SYSTEM_Initialize
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text7
  3331  007854                     __ptext7:
  3332                           	opt stack 0
  3333  007854                     _SPI2_Initialize:
  3334                           	opt stack 22
  3335                           
  3336                           ; BSR set to: 14
  3337                           ;spi2.c: 68: SSP2STAT = 0x40;
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;incstack = 0
  3341  007854  0E40               	movlw	64
  3342  007856  6FD8               	movwf	216,b	;volatile
  3343                           
  3344                           ;spi2.c: 71: SSP2CON1 = 0x20;
  3345  007858  0E20               	movlw	32
  3346  00785A  6FD9               	movwf	217,b	;volatile
  3347                           
  3348                           ; BSR set to: 14
  3349                           ;spi2.c: 74: SSP2ADD = 0x00;
  3350  00785C  6BD6               	clrf	214,b	;volatile
  3351                           
  3352                           ; BSR set to: 14
  3353  00785E  0012               	return		;funcret
  3354  007860                     __end_of_SPI2_Initialize:
  3355                           	opt stack 0
  3356                           tblptru	equ	0xFF8
  3357                           tblptrh	equ	0xFF7
  3358                           tblptrl	equ	0xFF6
  3359                           tablat	equ	0xFF5
  3360                           intcon	equ	0xFF2
  3361                           postinc0	equ	0xFEE
  3362                           wreg	equ	0xFE8
  3363                           postdec2	equ	0xFDD
  3364                           fsr2h	equ	0xFDA
  3365                           fsr2l	equ	0xFD9
  3366                           
  3367 ;; *************** function _PIN_MANAGER_Initialize *****************
  3368 ;; Defined at:
  3369 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  state           1    6[BANK0 ] unsigned char 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3383 ;;      Params:         0       0       0       0       0       0       0       0       0
  3384 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3386 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3387 ;;Total ram usage:        1 bytes
  3388 ;; Hardware stack levels used:    1
  3389 ;; Hardware stack levels required when called:    8
  3390 ;; This function calls:
  3391 ;;		_IOCBF4_SetInterruptHandler
  3392 ;; This function is called by:
  3393 ;;		_SYSTEM_Initialize
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text8
  3398  005044                     __ptext8:
  3399                           	opt stack 0
  3400  005044                     _PIN_MANAGER_Initialize:
  3401                           	opt stack 21
  3402                           
  3403                           ;pin_manager.c: 57: LATE = 0x00;
  3404                           
  3405                           ; BSR set to: 14
  3406                           ;incstack = 0
  3407  005044  6A7D               	clrf	3965,c	;volatile
  3408                           
  3409                           ;pin_manager.c: 58: LATD = 0x00;
  3410  005046  6A7C               	clrf	3964,c	;volatile
  3411                           
  3412                           ;pin_manager.c: 59: LATA = 0x00;
  3413  005048  6A79               	clrf	3961,c	;volatile
  3414                           
  3415                           ;pin_manager.c: 60: LATF = 0x00;
  3416  00504A  6A7E               	clrf	3966,c	;volatile
  3417                           
  3418                           ;pin_manager.c: 61: LATB = 0x00;
  3419  00504C  6A7A               	clrf	3962,c	;volatile
  3420                           
  3421                           ;pin_manager.c: 62: LATG = 0x00;
  3422  00504E  6A7F               	clrf	3967,c	;volatile
  3423                           
  3424                           ;pin_manager.c: 63: LATC = 0x00;
  3425  005050  6A7B               	clrf	3963,c	;volatile
  3426                           
  3427                           ;pin_manager.c: 64: LATH = 0x00;
  3428  005052  6A80               	clrf	3968,c	;volatile
  3429                           
  3430                           ;pin_manager.c: 69: TRISE = 0xFF;
  3431  005054  6885               	setf	3973,c	;volatile
  3432                           
  3433                           ;pin_manager.c: 70: TRISF = 0xFF;
  3434  005056  6886               	setf	3974,c	;volatile
  3435                           
  3436                           ;pin_manager.c: 71: TRISA = 0xFF;
  3437  005058  6881               	setf	3969,c	;volatile
  3438                           
  3439                           ;pin_manager.c: 72: TRISG = 0xDF;
  3440  00505A  0EDF               	movlw	223
  3441  00505C  6E87               	movwf	3975,c	;volatile
  3442                           
  3443                           ;pin_manager.c: 73: TRISB = 0xFF;
  3444  00505E  6882               	setf	3970,c	;volatile
  3445                           
  3446                           ;pin_manager.c: 74: TRISH = 0x0F;
  3447  005060  0E0F               	movlw	15
  3448  005062  6E88               	movwf	3976,c	;volatile
  3449                           
  3450                           ;pin_manager.c: 75: TRISC = 0xF9;
  3451  005064  0EF9               	movlw	249
  3452  005066  6E83               	movwf	3971,c	;volatile
  3453                           
  3454                           ;pin_manager.c: 76: TRISD = 0x9F;
  3455  005068  0E9F               	movlw	159
  3456  00506A  6E84               	movwf	3972,c	;volatile
  3457                           
  3458                           ;pin_manager.c: 81: ANSELB = 0xE0;
  3459  00506C  0EE0               	movlw	224
  3460  00506E  010E               	movlb	14	; () banked
  3461  005070  6F9A               	movwf	154,b	;volatile
  3462                           
  3463                           ;pin_manager.c: 82: ANSELD = 0x7F;
  3464  005072  0E7F               	movlw	127
  3465  005074  6FA7               	movwf	167,b	;volatile
  3466                           
  3467                           ; BSR set to: 14
  3468                           ;pin_manager.c: 83: ANSELE = 0xFF;
  3469  005076  69AF               	setf	175,b	;volatile
  3470                           
  3471                           ; BSR set to: 14
  3472                           ;pin_manager.c: 84: ANSELG = 0xFF;
  3473  005078  69BC               	setf	188,b	;volatile
  3474                           
  3475                           ; BSR set to: 14
  3476                           ;pin_manager.c: 85: ANSELF = 0xFF;
  3477  00507A  69B4               	setf	180,b	;volatile
  3478                           
  3479                           ; BSR set to: 14
  3480                           ;pin_manager.c: 86: ANSELA = 0xFF;
  3481  00507C  6992               	setf	146,b	;volatile
  3482                           
  3483                           ; BSR set to: 14
  3484                           ;pin_manager.c: 91: WPUD = 0xFF;
  3485  00507E  69A6               	setf	166,b	;volatile
  3486                           
  3487                           ; BSR set to: 14
  3488                           ;pin_manager.c: 92: WPUF = 0xFF;
  3489  005080  69B3               	setf	179,b	;volatile
  3490                           
  3491                           ; BSR set to: 14
  3492                           ;pin_manager.c: 93: WPUE = 0xFF;
  3493  005082  69AE               	setf	174,b	;volatile
  3494                           
  3495                           ; BSR set to: 14
  3496                           ;pin_manager.c: 94: WPUB = 0xFF;
  3497  005084  6999               	setf	153,b	;volatile
  3498                           
  3499                           ; BSR set to: 14
  3500                           ;pin_manager.c: 95: WPUG = 0xFF;
  3501  005086  69BB               	setf	187,b	;volatile
  3502                           
  3503                           ; BSR set to: 14
  3504                           ;pin_manager.c: 96: WPUA = 0xFF;
  3505  005088  6991               	setf	145,b	;volatile
  3506                           
  3507                           ; BSR set to: 14
  3508                           ;pin_manager.c: 97: WPUC = 0xFF;
  3509  00508A  69A1               	setf	161,b	;volatile
  3510                           
  3511                           ;pin_manager.c: 98: WPUH = 0x0F;
  3512  00508C  0E0F               	movlw	15
  3513  00508E  6FC0               	movwf	192,b	;volatile
  3514                           
  3515                           ; BSR set to: 14
  3516                           ;pin_manager.c: 103: ODCONE = 0x00;
  3517  005090  6BAD               	clrf	173,b	;volatile
  3518                           
  3519                           ; BSR set to: 14
  3520                           ;pin_manager.c: 104: ODCONF = 0x00;
  3521  005092  6BB2               	clrf	178,b	;volatile
  3522                           
  3523                           ; BSR set to: 14
  3524                           ;pin_manager.c: 105: ODCONA = 0x00;
  3525  005094  6B90               	clrf	144,b	;volatile
  3526                           
  3527                           ; BSR set to: 14
  3528                           ;pin_manager.c: 106: ODCONG = 0x00;
  3529  005096  6BBA               	clrf	186,b	;volatile
  3530                           
  3531                           ; BSR set to: 14
  3532                           ;pin_manager.c: 107: ODCONB = 0x00;
  3533  005098  6B98               	clrf	152,b	;volatile
  3534                           
  3535                           ; BSR set to: 14
  3536                           ;pin_manager.c: 108: ODCONH = 0x00;
  3537  00509A  6BBF               	clrf	191,b	;volatile
  3538                           
  3539                           ; BSR set to: 14
  3540                           ;pin_manager.c: 109: ODCONC = 0x00;
  3541  00509C  6BA0               	clrf	160,b	;volatile
  3542                           
  3543                           ; BSR set to: 14
  3544                           ;pin_manager.c: 110: ODCOND = 0x00;
  3545  00509E  6BA5               	clrf	165,b	;volatile
  3546                           
  3547                           ; BSR set to: 14
  3548                           ;pin_manager.c: 117: IOCBFbits.IOCBF4 = 0;
  3549  0050A0  9993               	bcf	147,4,b	;volatile
  3550                           
  3551                           ; BSR set to: 14
  3552                           ;pin_manager.c: 119: IOCBNbits.IOCBN4 = 1;
  3553  0050A2  8994               	bsf	148,4,b	;volatile
  3554                           
  3555                           ; BSR set to: 14
  3556                           ;pin_manager.c: 121: IOCBPbits.IOCBP4 = 1;
  3557  0050A4  8995               	bsf	149,4,b	;volatile
  3558                           
  3559                           ; BSR set to: 14
  3560                           ;pin_manager.c: 124: IOCBF4_SetInterruptHandler(IOCBF4_DefaultInterruptHandler);
  3561  0050A6  0E8A               	movlw	low _IOCBF4_DefaultInterruptHandler
  3562  0050A8  0100               	movlb	0	; () banked
  3563  0050AA  6F64               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler& (0+255),b
  3564  0050AC  0E79               	movlw	high _IOCBF4_DefaultInterruptHandler
  3565  0050AE  6F65               	movwf	(IOCBF4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3566  0050B0  EC36  F03C         	call	_IOCBF4_SetInterruptHandler	;wreg free
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;pin_manager.c: 127: PIE0bits.IOCIE = 1;
  3570  0050B4  010E               	movlb	14	; () banked
  3571  0050B6  8929               	bsf	41,4,b	;volatile
  3572                           
  3573                           ; BSR set to: 14
  3574                           ;pin_manager.c: 130: bool state = GIE;
  3575  0050B8  0E00               	movlw	0
  3576  0050BA  BEF2               	btfsc	intcon,7,c	;volatile
  3577  0050BC  0E01               	movlw	1
  3578  0050BE  0100               	movlb	0	; () banked
  3579  0050C0  6F66               	movwf	PIN_MANAGER_Initialize@state& (0+255),b
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;pin_manager.c: 131: GIE = 0;
  3583  0050C2  9EF2               	bcf	intcon,7,c	;volatile
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;pin_manager.c: 132: PPSLOCK = 0x55;
  3587  0050C4  0E55               	movlw	85
  3588  0050C6  010D               	movlb	13	; () banked
  3589  0050C8  6FEF               	movwf	239,b	;volatile
  3590                           
  3591                           ; BSR set to: 13
  3592                           ;pin_manager.c: 133: PPSLOCK = 0xAA;
  3593  0050CA  0EAA               	movlw	170
  3594  0050CC  6FEF               	movwf	239,b	;volatile
  3595                           
  3596                           ; BSR set to: 13
  3597                           ;pin_manager.c: 134: PPSLOCKbits.PPSLOCKED = 0x00;
  3598  0050CE  91EF               	bcf	239,0,b	;volatile
  3599                           
  3600                           ; BSR set to: 13
  3601                           ;pin_manager.c: 136: INT1PPSbits.INT1PPS = 0x09;
  3602  0050D0  51F1               	movf	241,w,b	;volatile
  3603  0050D2  0BC0               	andlw	-64
  3604  0050D4  0909               	iorlw	9
  3605  0050D6  6FF1               	movwf	241,b	;volatile
  3606                           
  3607                           ; BSR set to: 13
  3608                           ;pin_manager.c: 137: INT3PPSbits.INT3PPS = 0x0B;
  3609  0050D8  51F3               	movf	243,w,b	;volatile
  3610  0050DA  0BC0               	andlw	-64
  3611  0050DC  090B               	iorlw	11
  3612  0050DE  6FF3               	movwf	243,b	;volatile
  3613                           
  3614                           ; BSR set to: 13
  3615                           ;pin_manager.c: 138: RD5PPS = 0x1C;
  3616  0050E0  0E1C               	movlw	28
  3617  0050E2  010E               	movlb	14	; () banked
  3618  0050E4  6F6F               	movwf	111,b	;volatile
  3619                           
  3620                           ; BSR set to: 14
  3621                           ;pin_manager.c: 139: INT0PPSbits.INT0PPS = 0x08;
  3622  0050E6  010D               	movlb	13	; () banked
  3623  0050E8  51F0               	movf	240,w,b	;volatile
  3624  0050EA  0BC0               	andlw	-64
  3625  0050EC  0908               	iorlw	8
  3626  0050EE  6FF0               	movwf	240,b	;volatile
  3627                           
  3628                           ; BSR set to: 13
  3629                           ;pin_manager.c: 140: INT2PPSbits.INT2PPS = 0x0A;
  3630  0050F0  51F2               	movf	242,w,b	;volatile
  3631  0050F2  0BC0               	andlw	-64
  3632  0050F4  090A               	iorlw	10
  3633  0050F6  6FF2               	movwf	242,b	;volatile
  3634                           
  3635                           ; BSR set to: 13
  3636                           ;pin_manager.c: 141: RD6PPS = 0x1B;
  3637  0050F8  0E1B               	movlw	27
  3638  0050FA  010E               	movlb	14	; () banked
  3639  0050FC  6F70               	movwf	112,b	;volatile
  3640                           
  3641                           ; BSR set to: 14
  3642                           ;pin_manager.c: 142: SSP2DATPPSbits.SSP2DATPPS = 0x1F;
  3643  0050FE  511D               	movf	29,w,b	;volatile
  3644  005100  0BC0               	andlw	-64
  3645  005102  091F               	iorlw	31
  3646  005104  6F1D               	movwf	29,b	;volatile
  3647                           
  3648                           ; BSR set to: 14
  3649                           ;pin_manager.c: 144: PPSLOCK = 0x55;
  3650  005106  0E55               	movlw	85
  3651  005108  010D               	movlb	13	; () banked
  3652  00510A  6FEF               	movwf	239,b	;volatile
  3653                           
  3654                           ; BSR set to: 13
  3655                           ;pin_manager.c: 145: PPSLOCK = 0xAA;
  3656  00510C  0EAA               	movlw	170
  3657  00510E  6FEF               	movwf	239,b	;volatile
  3658                           
  3659                           ; BSR set to: 13
  3660                           ;pin_manager.c: 146: PPSLOCKbits.PPSLOCKED = 0x01;
  3661  005110  81EF               	bsf	239,0,b	;volatile
  3662                           
  3663                           ; BSR set to: 13
  3664                           ;pin_manager.c: 148: GIE = state;
  3665  005112  0100               	movlb	0	; () banked
  3666  005114  A166               	btfss	PIN_MANAGER_Initialize@state& (0+255),0,b
  3667  005116  D002               	goto	u18270
  3668  005118  8EF2               	bsf	intcon,7,c	;volatile
  3669  00511A  0CAA               	retlw	170
  3670  00511C                     u18270:
  3671  00511C  9EF2               	bcf	intcon,7,c	;volatile
  3672  00511E  0012               	return		;funcret
  3673  005120                     __end_of_PIN_MANAGER_Initialize:
  3674                           	opt stack 0
  3675                           tblptru	equ	0xFF8
  3676                           tblptrh	equ	0xFF7
  3677                           tblptrl	equ	0xFF6
  3678                           tablat	equ	0xFF5
  3679                           intcon	equ	0xFF2
  3680                           postinc0	equ	0xFEE
  3681                           wreg	equ	0xFE8
  3682                           postdec2	equ	0xFDD
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           
  3686 ;; *************** function _IOCBF4_SetInterruptHandler *****************
  3687 ;; Defined at:
  3688 ;;		line 180 in file "mcc_generated_files/pin_manager.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3691 ;;		 -> IOCBF4_DefaultInterruptHandler(1), 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  1    wreg      void 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0
  3698 ;; Tracked objects:
  3699 ;;		On entry : F/0
  3700 ;;		On exit  : F/0
  3701 ;;		Unchanged: F/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3703 ;;      Params:         0       2       0       0       0       0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3706 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3707 ;;Total ram usage:        2 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    7
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_PIN_MANAGER_Initialize
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text9
  3718  00786C                     __ptext9:
  3719                           	opt stack 0
  3720  00786C                     _IOCBF4_SetInterruptHandler:
  3721                           	opt stack 21
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;pin_manager.c: 181: IOCBF4_InterruptHandler = InterruptHandler;
  3725                           
  3726                           ;incstack = 0
  3727  00786C  C064  F1F7         	movff	IOCBF4_SetInterruptHandler@InterruptHandler,_IOCBF4_InterruptHandler
  3728  007870  C065  F1F8         	movff	IOCBF4_SetInterruptHandler@InterruptHandler+1,_IOCBF4_InterruptHandler+1
  3729                           
  3730                           ; BSR set to: 0
  3731  007874  0012               	return		;funcret
  3732  007876                     __end_of_IOCBF4_SetInterruptHandler:
  3733                           	opt stack 0
  3734                           tblptru	equ	0xFF8
  3735                           tblptrh	equ	0xFF7
  3736                           tblptrl	equ	0xFF6
  3737                           tablat	equ	0xFF5
  3738                           intcon	equ	0xFF2
  3739                           postinc0	equ	0xFEE
  3740                           wreg	equ	0xFE8
  3741                           postdec2	equ	0xFDD
  3742                           fsr2h	equ	0xFDA
  3743                           fsr2l	equ	0xFD9
  3744                           
  3745 ;; *************** function _OSCILLATOR_Initialize *****************
  3746 ;; Defined at:
  3747 ;;		line 119 in file "mcc_generated_files/mcc.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : F/E
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3761 ;;      Params:         0       0       0       0       0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3764 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    7
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_SYSTEM_Initialize
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text10
  3776  0077D4                     __ptext10:
  3777                           	opt stack 0
  3778  0077D4                     _OSCILLATOR_Initialize:
  3779                           	opt stack 22
  3780                           
  3781                           ;mcc.c: 122: OSCCON1 = 0x60;
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;incstack = 0
  3785  0077D4  0E60               	movlw	96
  3786  0077D6  010E               	movlb	14	; () banked
  3787  0077D8  6F43               	movwf	67,b	;volatile
  3788                           
  3789                           ; BSR set to: 14
  3790                           ;mcc.c: 124: OSCCON3 = 0x00;
  3791  0077DA  6B45               	clrf	69,b	;volatile
  3792                           
  3793                           ; BSR set to: 14
  3794                           ;mcc.c: 126: OSCEN = 0x00;
  3795  0077DC  6B47               	clrf	71,b	;volatile
  3796                           
  3797                           ;mcc.c: 128: OSCFRQ = 0x05;
  3798  0077DE  0E05               	movlw	5
  3799  0077E0  6F49               	movwf	73,b	;volatile
  3800                           
  3801                           ; BSR set to: 14
  3802                           ;mcc.c: 130: OSCTUNE = 0x00;
  3803  0077E2  6B48               	clrf	72,b	;volatile
  3804                           
  3805                           ; BSR set to: 14
  3806  0077E4  0012               	return		;funcret
  3807  0077E6                     __end_of_OSCILLATOR_Initialize:
  3808                           	opt stack 0
  3809                           tblptru	equ	0xFF8
  3810                           tblptrh	equ	0xFF7
  3811                           tblptrl	equ	0xFF6
  3812                           tablat	equ	0xFF5
  3813                           intcon	equ	0xFF2
  3814                           postinc0	equ	0xFEE
  3815                           wreg	equ	0xFE8
  3816                           postdec2	equ	0xFDD
  3817                           fsr2h	equ	0xFDA
  3818                           fsr2l	equ	0xFD9
  3819                           
  3820 ;; *************** function _LORAWAN_PlatformInit *****************
  3821 ;; Defined at:
  3822 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : F/0
  3833 ;;		On exit  : F/1
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3836 ;;      Params:         0       0       0       0       0       0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3839 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3840 ;;Total ram usage:        0 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    9
  3843 ;; This function calls:
  3844 ;;		_DIO0_ISR_Lora_Init
  3845 ;;		_DIO1_ISR_Lora_Init
  3846 ;;		_DIO2_ISR_Lora_Init
  3847 ;;		_DIO3_ISR_Lora_Init
  3848 ;;		_DIO4_ISR_Lora_Init
  3849 ;;		_DIO5_ISR_Lora_Init
  3850 ;;		_SystemTimerInit
  3851 ;;		_TMR_ISR_Lora_Init
  3852 ;; This function is called by:
  3853 ;;		_SYSTEM_Initialize
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text11
  3858  0074CE                     __ptext11:
  3859                           	opt stack 0
  3860  0074CE                     _LORAWAN_PlatformInit:
  3861                           	opt stack 20
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  3865                           
  3866                           ; BSR set to: 14
  3867                           ;incstack = 0
  3868  0074CE  EC30  F03C         	call	_TMR_ISR_Lora_Init	;wreg free
  3869                           
  3870                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  3871  0074D2  EC99  F03C         	call	_DIO0_ISR_Lora_Init	;wreg free
  3872                           
  3873                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  3874  0074D6  EC96  F03C         	call	_DIO1_ISR_Lora_Init	;wreg free
  3875                           
  3876                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  3877  0074DA  EC93  F03C         	call	_DIO2_ISR_Lora_Init	;wreg free
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  3881  0074DE  ECC1  F03C         	call	_DIO3_ISR_Lora_Init	;wreg free
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  3885  0074E2  ECC0  F03C         	call	_DIO4_ISR_Lora_Init	;wreg free
  3886                           
  3887                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  3888  0074E6  EC90  F03C         	call	_DIO5_ISR_Lora_Init	;wreg free
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;lorawan_init.c: 81: SystemTimerInit();
  3892  0074EA  EF8D  F03C         	goto	_SystemTimerInit	;wreg free
  3893  0074EE                     __end_of_LORAWAN_PlatformInit:
  3894                           	opt stack 0
  3895                           tblptru	equ	0xFF8
  3896                           tblptrh	equ	0xFF7
  3897                           tblptrl	equ	0xFF6
  3898                           tablat	equ	0xFF5
  3899                           intcon	equ	0xFF2
  3900                           postinc0	equ	0xFEE
  3901                           wreg	equ	0xFE8
  3902                           postdec2	equ	0xFDD
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           
  3906 ;; *************** function _TMR_ISR_Lora_Init *****************
  3907 ;; Defined at:
  3908 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      void 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : F/0
  3919 ;;		On exit  : F/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3922 ;;      Params:         0       0       0       0       0       0       0       0       0
  3923 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3925 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3926 ;;Total ram usage:        0 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    8
  3929 ;; This function calls:
  3930 ;;		_TMR1_SetInterruptHandler
  3931 ;; This function is called by:
  3932 ;;		_LORAWAN_PlatformInit
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text12
  3937  007860                     __ptext12:
  3938                           	opt stack 0
  3939  007860                     _TMR_ISR_Lora_Init:
  3940                           	opt stack 20
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  3944                           
  3945                           ; BSR set to: 1
  3946                           ;incstack = 0
  3947  007860  0E0A               	movlw	low _TMR_ISR_lora
  3948  007862  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3949  007864  0E6B               	movlw	high _TMR_ISR_lora
  3950  007866  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3951  007868  EF3B  F03C         	goto	_TMR1_SetInterruptHandler	;wreg free
  3952  00786C                     __end_of_TMR_ISR_Lora_Init:
  3953                           	opt stack 0
  3954                           tblptru	equ	0xFF8
  3955                           tblptrh	equ	0xFF7
  3956                           tblptrl	equ	0xFF6
  3957                           tablat	equ	0xFF5
  3958                           intcon	equ	0xFF2
  3959                           postinc0	equ	0xFEE
  3960                           wreg	equ	0xFE8
  3961                           postdec2	equ	0xFDD
  3962                           fsr2h	equ	0xFDA
  3963                           fsr2l	equ	0xFD9
  3964                           
  3965 ;; *************** function _TMR1_SetInterruptHandler *****************
  3966 ;; Defined at:
  3967 ;;		line 191 in file "mcc_generated_files/tmr1.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3970 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0
  3977 ;; Tracked objects:
  3978 ;;		On entry : F/0
  3979 ;;		On exit  : F/0
  3980 ;;		Unchanged: F/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3982 ;;      Params:         0       2       0       0       0       0       0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3985 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3986 ;;Total ram usage:        2 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    7
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_TMR_ISR_Lora_Init
  3993 ;;		_TMR1_Initialize
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text13
  3998  007876                     __ptext13:
  3999                           	opt stack 0
  4000  007876                     _TMR1_SetInterruptHandler:
  4001                           	opt stack 21
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;tmr1.c: 192: TMR1_InterruptHandler = InterruptHandler;
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;incstack = 0
  4008  007876  C064  F1F9         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4009  00787A  C065  F1FA         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4010                           
  4011                           ; BSR set to: 0
  4012  00787E  0012               	return		;funcret
  4013  007880                     __end_of_TMR1_SetInterruptHandler:
  4014                           	opt stack 0
  4015                           tblptru	equ	0xFF8
  4016                           tblptrh	equ	0xFF7
  4017                           tblptrl	equ	0xFF6
  4018                           tablat	equ	0xFF5
  4019                           intcon	equ	0xFF2
  4020                           postinc0	equ	0xFEE
  4021                           wreg	equ	0xFE8
  4022                           postdec2	equ	0xFDD
  4023                           fsr2h	equ	0xFDA
  4024                           fsr2l	equ	0xFD9
  4025                           
  4026 ;; *************** function _SystemTimerInit *****************
  4027 ;; Defined at:
  4028 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		None
  4037 ;; Tracked objects:
  4038 ;;		On entry : F/0
  4039 ;;		On exit  : F/1
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4045 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    7
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_LORAWAN_PlatformInit
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text14
  4057  00791A                     __ptext14:
  4058                           	opt stack 0
  4059  00791A                     _SystemTimerInit:
  4060                           	opt stack 21
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;sw_timer.c: 137: allocatedTimers = 0;
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;incstack = 0
  4067  00791A  0101               	movlb	1	; () banked
  4068  00791C  6B77               	clrf	_allocatedTimers& (0+255),b	;volatile
  4069                           
  4070                           ; BSR set to: 1
  4071  00791E  0012               	return		;funcret
  4072  007920                     __end_of_SystemTimerInit:
  4073                           	opt stack 0
  4074                           tblptru	equ	0xFF8
  4075                           tblptrh	equ	0xFF7
  4076                           tblptrl	equ	0xFF6
  4077                           tablat	equ	0xFF5
  4078                           intcon	equ	0xFF2
  4079                           postinc0	equ	0xFEE
  4080                           wreg	equ	0xFE8
  4081                           postdec2	equ	0xFDD
  4082                           fsr2h	equ	0xFDA
  4083                           fsr2l	equ	0xFD9
  4084                           
  4085 ;; *************** function _DIO5_ISR_Lora_Init *****************
  4086 ;; Defined at:
  4087 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;		None
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;		None
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0, cstack
  4096 ;; Tracked objects:
  4097 ;;		On entry : F/0
  4098 ;;		On exit  : F/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4101 ;;      Params:         0       0       0       0       0       0       0       0       0
  4102 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4104 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4105 ;;Total ram usage:        0 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    8
  4108 ;; This function calls:
  4109 ;;		_INT0_SetInterruptHandler
  4110 ;; This function is called by:
  4111 ;;		_LORAWAN_PlatformInit
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text15
  4116  007920                     __ptext15:
  4117                           	opt stack 0
  4118  007920                     _DIO5_ISR_Lora_Init:
  4119                           	opt stack 20
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  4123                           
  4124                           ; BSR set to: 1
  4125                           ;incstack = 0
  4126  007920  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4127  007922  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4128  007924  0C00               	retlw	0	;wreg free
  4129  007926                     __end_of_DIO5_ISR_Lora_Init:
  4130                           	opt stack 0
  4131                           tblptru	equ	0xFF8
  4132                           tblptrh	equ	0xFF7
  4133                           tblptrl	equ	0xFF6
  4134                           tablat	equ	0xFF5
  4135                           intcon	equ	0xFF2
  4136                           postinc0	equ	0xFEE
  4137                           wreg	equ	0xFE8
  4138                           postdec2	equ	0xFDD
  4139                           fsr2h	equ	0xFDA
  4140                           fsr2l	equ	0xFD9
  4141                           
  4142 ;; *************** function _DIO4_ISR_Lora_Init *****************
  4143 ;; Defined at:
  4144 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		None
  4153 ;; Tracked objects:
  4154 ;;		On entry : F/0
  4155 ;;		On exit  : F/0
  4156 ;;		Unchanged: F/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4161 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4162 ;;Total ram usage:        0 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    7
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		_LORAWAN_PlatformInit
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text16
  4173  007980                     __ptext16:
  4174                           	opt stack 0
  4175  007980                     _DIO4_ISR_Lora_Init:
  4176                           	opt stack 21
  4177                           
  4178                           ; BSR set to: 0
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;incstack = 0
  4182  007980  0012               	return		;funcret
  4183  007982                     __end_of_DIO4_ISR_Lora_Init:
  4184                           	opt stack 0
  4185                           tblptru	equ	0xFF8
  4186                           tblptrh	equ	0xFF7
  4187                           tblptrl	equ	0xFF6
  4188                           tablat	equ	0xFF5
  4189                           intcon	equ	0xFF2
  4190                           postinc0	equ	0xFEE
  4191                           wreg	equ	0xFE8
  4192                           postdec2	equ	0xFDD
  4193                           fsr2h	equ	0xFDA
  4194                           fsr2l	equ	0xFD9
  4195                           
  4196 ;; *************** function _DIO3_ISR_Lora_Init *****************
  4197 ;; Defined at:
  4198 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		None
  4207 ;; Tracked objects:
  4208 ;;		On entry : F/0
  4209 ;;		On exit  : F/0
  4210 ;;		Unchanged: F/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4212 ;;      Params:         0       0       0       0       0       0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4215 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4216 ;;Total ram usage:        0 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    7
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_LORAWAN_PlatformInit
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text17
  4227  007982                     __ptext17:
  4228                           	opt stack 0
  4229  007982                     _DIO3_ISR_Lora_Init:
  4230                           	opt stack 21
  4231                           
  4232                           ; BSR set to: 0
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;incstack = 0
  4236  007982  0012               	return		;funcret
  4237  007984                     __end_of_DIO3_ISR_Lora_Init:
  4238                           	opt stack 0
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           intcon	equ	0xFF2
  4244                           postinc0	equ	0xFEE
  4245                           wreg	equ	0xFE8
  4246                           postdec2	equ	0xFDD
  4247                           fsr2h	equ	0xFDA
  4248                           fsr2l	equ	0xFD9
  4249                           
  4250 ;; *************** function _DIO2_ISR_Lora_Init *****************
  4251 ;; Defined at:
  4252 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : F/0
  4263 ;;		On exit  : F/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4266 ;;      Params:         0       0       0       0       0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    8
  4273 ;; This function calls:
  4274 ;;		_INT0_SetInterruptHandler
  4275 ;; This function is called by:
  4276 ;;		_LORAWAN_PlatformInit
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text18
  4281  007926                     __ptext18:
  4282                           	opt stack 0
  4283  007926                     _DIO2_ISR_Lora_Init:
  4284                           	opt stack 20
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;lorawan_init.c: 56: INT0_SetInterruptHandler(DIO2_ISR_Lora);
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;incstack = 0
  4291  007926  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4292  007928  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4293  00792A  0C00               	retlw	0	;wreg free
  4294  00792C                     __end_of_DIO2_ISR_Lora_Init:
  4295                           	opt stack 0
  4296                           tblptru	equ	0xFF8
  4297                           tblptrh	equ	0xFF7
  4298                           tblptrl	equ	0xFF6
  4299                           tablat	equ	0xFF5
  4300                           intcon	equ	0xFF2
  4301                           postinc0	equ	0xFEE
  4302                           wreg	equ	0xFE8
  4303                           postdec2	equ	0xFDD
  4304                           fsr2h	equ	0xFDA
  4305                           fsr2l	equ	0xFD9
  4306                           
  4307 ;; *************** function _DIO1_ISR_Lora_Init *****************
  4308 ;; Defined at:
  4309 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : F/0
  4320 ;;		On exit  : F/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4323 ;;      Params:         0       0       0       0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    8
  4330 ;; This function calls:
  4331 ;;		_INT0_SetInterruptHandler
  4332 ;; This function is called by:
  4333 ;;		_LORAWAN_PlatformInit
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text19
  4338  00792C                     __ptext19:
  4339                           	opt stack 0
  4340  00792C                     _DIO1_ISR_Lora_Init:
  4341                           	opt stack 20
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;lorawan_init.c: 51: INT0_SetInterruptHandler(DIO1_ISR_Lora);
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;incstack = 0
  4348  00792C  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4349  00792E  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4350  007930  0C00               	retlw	0	;wreg free
  4351  007932                     __end_of_DIO1_ISR_Lora_Init:
  4352                           	opt stack 0
  4353                           tblptru	equ	0xFF8
  4354                           tblptrh	equ	0xFF7
  4355                           tblptrl	equ	0xFF6
  4356                           tablat	equ	0xFF5
  4357                           intcon	equ	0xFF2
  4358                           postinc0	equ	0xFEE
  4359                           wreg	equ	0xFE8
  4360                           postdec2	equ	0xFDD
  4361                           fsr2h	equ	0xFDA
  4362                           fsr2l	equ	0xFD9
  4363                           
  4364 ;; *************** function _DIO0_ISR_Lora_Init *****************
  4365 ;; Defined at:
  4366 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      void 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : F/0
  4377 ;;		On exit  : F/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4380 ;;      Params:         0       0       0       0       0       0       0       0       0
  4381 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4383 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4384 ;;Total ram usage:        0 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:    8
  4387 ;; This function calls:
  4388 ;;		_INT0_SetInterruptHandler
  4389 ;; This function is called by:
  4390 ;;		_LORAWAN_PlatformInit
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text20
  4395  007932                     __ptext20:
  4396                           	opt stack 0
  4397  007932                     _DIO0_ISR_Lora_Init:
  4398                           	opt stack 20
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;lorawan_init.c: 46: INT0_SetInterruptHandler(DIO0_ISR_Lora);
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;incstack = 0
  4405  007932  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4406  007934  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4407  007936  0C00               	retlw	0	;wreg free
  4408  007938                     __end_of_DIO0_ISR_Lora_Init:
  4409                           	opt stack 0
  4410                           tblptru	equ	0xFF8
  4411                           tblptrh	equ	0xFF7
  4412                           tblptrl	equ	0xFF6
  4413                           tablat	equ	0xFF5
  4414                           intcon	equ	0xFF2
  4415                           postinc0	equ	0xFEE
  4416                           wreg	equ	0xFE8
  4417                           postdec2	equ	0xFDD
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           
  4421 ;; *************** function _INTERRUPT_Initialize *****************
  4422 ;; Defined at:
  4423 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		None
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4440 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4441 ;;Total ram usage:        0 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    7
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_SYSTEM_Initialize
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text21
  4452  00796C                     __ptext21:
  4453                           	opt stack 0
  4454  00796C                     _INTERRUPT_Initialize:
  4455                           	opt stack 22
  4456                           
  4457                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;incstack = 0
  4461  00796C  9AF2               	bcf	intcon,5,c	;volatile
  4462  00796E  0012               	return		;funcret
  4463  007970                     __end_of_INTERRUPT_Initialize:
  4464                           	opt stack 0
  4465                           tblptru	equ	0xFF8
  4466                           tblptrh	equ	0xFF7
  4467                           tblptrl	equ	0xFF6
  4468                           tablat	equ	0xFF5
  4469                           intcon	equ	0xFF2
  4470                           postinc0	equ	0xFEE
  4471                           wreg	equ	0xFE8
  4472                           postdec2	equ	0xFDD
  4473                           fsr2h	equ	0xFDA
  4474                           fsr2l	equ	0xFD9
  4475                           
  4476 ;; *************** function _EXT_INT_Initialize *****************
  4477 ;; Defined at:
  4478 ;;		line 219 in file "mcc_generated_files/ext_int.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : F/E
  4489 ;;		On exit  : F/E
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    8
  4499 ;; This function calls:
  4500 ;;		_INT0_SetInterruptHandler
  4501 ;;		_INT1_SetInterruptHandler
  4502 ;;		_INT2_SetInterruptHandler
  4503 ;;		_INT3_SetInterruptHandler
  4504 ;; This function is called by:
  4505 ;;		_SYSTEM_Initialize
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text22
  4510  00687E                     __ptext22:
  4511                           	opt stack 0
  4512  00687E                     _EXT_INT_Initialize:
  4513                           	opt stack 21
  4514                           
  4515                           ; BSR set to: 14
  4516                           ;ext_int.c: 228: (PIR0bits.INT1IF = 0);
  4517                           
  4518                           ;incstack = 0
  4519  00687E  9333               	bcf	51,1,b	;volatile
  4520                           
  4521                           ;ext_int.c: 229: (INTCONbits.INT1EDG = 1);
  4522  006880  82F2               	bsf	intcon,1,c	;volatile
  4523                           
  4524                           ; BSR set to: 14
  4525                           ;ext_int.c: 231: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4526  006882  0E90               	movlw	low _INT1_DefaultInterruptHandler
  4527  006884  0100               	movlb	0	; () banked
  4528  006886  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4529  006888  0E79               	movlw	high _INT1_DefaultInterruptHandler
  4530  00688A  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4531  00688C  EC4A  F03C         	call	_INT1_SetInterruptHandler	;wreg free
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;ext_int.c: 232: (PIE0bits.INT1IE = 1);
  4535  006890  010E               	movlb	14	; () banked
  4536  006892  8329               	bsf	41,1,b	;volatile
  4537                           
  4538                           ; BSR set to: 14
  4539                           ;ext_int.c: 243: (PIR0bits.INT2IF = 0);
  4540  006894  9533               	bcf	51,2,b	;volatile
  4541                           
  4542                           ; BSR set to: 14
  4543                           ;ext_int.c: 244: (INTCONbits.INT2EDG = 1);
  4544  006896  84F2               	bsf	intcon,2,c	;volatile
  4545                           
  4546                           ;ext_int.c: 246: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4547  006898  0E8E               	movlw	low _INT2_DefaultInterruptHandler
  4548  00689A  0100               	movlb	0	; () banked
  4549  00689C  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4550  00689E  0E79               	movlw	high _INT2_DefaultInterruptHandler
  4551  0068A0  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4552  0068A2  EC45  F03C         	call	_INT2_SetInterruptHandler	;wreg free
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;ext_int.c: 247: (PIE0bits.INT2IE = 1);
  4556  0068A6  010E               	movlb	14	; () banked
  4557  0068A8  8529               	bsf	41,2,b	;volatile
  4558                           
  4559                           ; BSR set to: 14
  4560                           ;ext_int.c: 258: (PIR0bits.INT0IF = 0);
  4561  0068AA  9133               	bcf	51,0,b	;volatile
  4562                           
  4563                           ; BSR set to: 14
  4564                           ;ext_int.c: 259: (INTCONbits.INT0EDG = 1);
  4565  0068AC  80F2               	bsf	intcon,0,c	;volatile
  4566                           
  4567                           ;ext_int.c: 261: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  4568  0068AE  0E00               	movlw	0
  4569  0068B0  0100               	movlb	0	; () banked
  4570  0068B2  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4571  0068B4  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4572  0068B6  ECC2  F03C         	call	_INT0_SetInterruptHandler	;wreg free
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;ext_int.c: 272: (PIR0bits.INT3IF = 0);
  4576  0068BA  010E               	movlb	14	; () banked
  4577  0068BC  9733               	bcf	51,3,b	;volatile
  4578                           
  4579                           ; BSR set to: 14
  4580                           ;ext_int.c: 273: (INTCONbits.INT3EDG = 1);
  4581  0068BE  86F2               	bsf	intcon,3,c	;volatile
  4582                           
  4583                           ;ext_int.c: 275: INT3_SetInterruptHandler(INT3_DefaultInterruptHandler);
  4584  0068C0  0E8C               	movlw	low _INT3_DefaultInterruptHandler
  4585  0068C2  0100               	movlb	0	; () banked
  4586  0068C4  6F64               	movwf	INT3_SetInterruptHandler@InterruptHandler& (0+255),b
  4587  0068C6  0E79               	movlw	high _INT3_DefaultInterruptHandler
  4588  0068C8  6F65               	movwf	(INT3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4589  0068CA  EC40  F03C         	call	_INT3_SetInterruptHandler	;wreg free
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;ext_int.c: 276: (PIE0bits.INT3IE = 1);
  4593  0068CE  010E               	movlb	14	; () banked
  4594  0068D0  8729               	bsf	41,3,b	;volatile
  4595                           
  4596                           ; BSR set to: 14
  4597  0068D2  0012               	return		;funcret
  4598  0068D4                     __end_of_EXT_INT_Initialize:
  4599                           	opt stack 0
  4600                           tblptru	equ	0xFF8
  4601                           tblptrh	equ	0xFF7
  4602                           tblptrl	equ	0xFF6
  4603                           tablat	equ	0xFF5
  4604                           intcon	equ	0xFF2
  4605                           postinc0	equ	0xFEE
  4606                           wreg	equ	0xFE8
  4607                           postdec2	equ	0xFDD
  4608                           fsr2h	equ	0xFDA
  4609                           fsr2l	equ	0xFD9
  4610                           
  4611 ;; *************** function _INT3_SetInterruptHandler *****************
  4612 ;; Defined at:
  4613 ;;		line 196 in file "mcc_generated_files/ext_int.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4616 ;;		 -> INT3_DefaultInterruptHandler(1), 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0
  4623 ;; Tracked objects:
  4624 ;;		On entry : F/0
  4625 ;;		On exit  : F/0
  4626 ;;		Unchanged: F/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4628 ;;      Params:         0       2       0       0       0       0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4631 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4632 ;;Total ram usage:        2 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    7
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_EXT_INT_Initialize
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text23
  4643  007880                     __ptext23:
  4644                           	opt stack 0
  4645  007880                     _INT3_SetInterruptHandler:
  4646                           	opt stack 21
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;ext_int.c: 197: INT3_InterruptHandler = InterruptHandler;
  4650                           
  4651                           ; BSR set to: 14
  4652                           ;incstack = 0
  4653  007880  C064  F1F5         	movff	INT3_SetInterruptHandler@InterruptHandler,_INT3_InterruptHandler
  4654  007884  C065  F1F6         	movff	INT3_SetInterruptHandler@InterruptHandler+1,_INT3_InterruptHandler+1
  4655                           
  4656                           ; BSR set to: 0
  4657  007888  0012               	return		;funcret
  4658  00788A                     __end_of_INT3_SetInterruptHandler:
  4659                           	opt stack 0
  4660                           tblptru	equ	0xFF8
  4661                           tblptrh	equ	0xFF7
  4662                           tblptrl	equ	0xFF6
  4663                           tablat	equ	0xFF5
  4664                           intcon	equ	0xFF2
  4665                           postinc0	equ	0xFEE
  4666                           wreg	equ	0xFE8
  4667                           postdec2	equ	0xFDD
  4668                           fsr2h	equ	0xFDA
  4669                           fsr2l	equ	0xFD9
  4670                           
  4671 ;; *************** function _INT2_SetInterruptHandler *****************
  4672 ;; Defined at:
  4673 ;;		line 114 in file "mcc_generated_files/ext_int.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4676 ;;		 -> INT2_DefaultInterruptHandler(1), 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      void 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2, status,0
  4683 ;; Tracked objects:
  4684 ;;		On entry : F/0
  4685 ;;		On exit  : F/0
  4686 ;;		Unchanged: F/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4688 ;;      Params:         0       2       0       0       0       0       0       0       0
  4689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4691 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4692 ;;Total ram usage:        2 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    7
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_EXT_INT_Initialize
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text24
  4703  00788A                     __ptext24:
  4704                           	opt stack 0
  4705  00788A                     _INT2_SetInterruptHandler:
  4706                           	opt stack 21
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;ext_int.c: 115: INT2_InterruptHandler = InterruptHandler;
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;incstack = 0
  4713  00788A  C064  F1F3         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4714  00788E  C065  F1F4         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4715                           
  4716                           ; BSR set to: 0
  4717  007892  0012               	return		;funcret
  4718  007894                     __end_of_INT2_SetInterruptHandler:
  4719                           	opt stack 0
  4720                           tblptru	equ	0xFF8
  4721                           tblptrh	equ	0xFF7
  4722                           tblptrl	equ	0xFF6
  4723                           tablat	equ	0xFF5
  4724                           intcon	equ	0xFF2
  4725                           postinc0	equ	0xFEE
  4726                           wreg	equ	0xFE8
  4727                           postdec2	equ	0xFDD
  4728                           fsr2h	equ	0xFDA
  4729                           fsr2l	equ	0xFD9
  4730                           
  4731 ;; *************** function _INT1_SetInterruptHandler *****************
  4732 ;; Defined at:
  4733 ;;		line 73 in file "mcc_generated_files/ext_int.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4736 ;;		 -> INT1_DefaultInterruptHandler(1), 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;		None
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : F/0
  4745 ;;		On exit  : F/0
  4746 ;;		Unchanged: F/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4748 ;;      Params:         0       2       0       0       0       0       0       0       0
  4749 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4751 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4752 ;;Total ram usage:        2 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    7
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_EXT_INT_Initialize
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text25
  4763  007894                     __ptext25:
  4764                           	opt stack 0
  4765  007894                     _INT1_SetInterruptHandler:
  4766                           	opt stack 21
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;ext_int.c: 74: INT1_InterruptHandler = InterruptHandler;
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;incstack = 0
  4773  007894  C064  F1F1         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4774  007898  C065  F1F2         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4775                           
  4776                           ; BSR set to: 0
  4777  00789C  0012               	return		;funcret
  4778  00789E                     __end_of_INT1_SetInterruptHandler:
  4779                           	opt stack 0
  4780                           tblptru	equ	0xFF8
  4781                           tblptrh	equ	0xFF7
  4782                           tblptrl	equ	0xFF6
  4783                           tablat	equ	0xFF5
  4784                           intcon	equ	0xFF2
  4785                           postinc0	equ	0xFEE
  4786                           wreg	equ	0xFE8
  4787                           postdec2	equ	0xFDD
  4788                           fsr2h	equ	0xFDA
  4789                           fsr2l	equ	0xFD9
  4790                           
  4791 ;; *************** function _INT0_SetInterruptHandler *****************
  4792 ;; Defined at:
  4793 ;;		line 155 in file "mcc_generated_files/ext_int.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4796 ;;		 -> DIO5_ISR_Lora(1), DIO2_ISR_Lora(1), DIO1_ISR_Lora(1), DIO0_ISR_Lora(1), 
  4797 ;;		 -> INT0_DefaultInterruptHandler(1), 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;		None
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		None
  4804 ;; Tracked objects:
  4805 ;;		On entry : F/0
  4806 ;;		On exit  : F/0
  4807 ;;		Unchanged: F/0
  4808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4809 ;;      Params:         0       2       0       0       0       0       0       0       0
  4810 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4812 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4813 ;;Total ram usage:        2 bytes
  4814 ;; Hardware stack levels used:    1
  4815 ;; Hardware stack levels required when called:    7
  4816 ;; This function calls:
  4817 ;;		Nothing
  4818 ;; This function is called by:
  4819 ;;		_EXT_INT_Initialize
  4820 ;;		_DIO0_ISR_Lora_Init
  4821 ;;		_DIO1_ISR_Lora_Init
  4822 ;;		_DIO2_ISR_Lora_Init
  4823 ;;		_DIO5_ISR_Lora_Init
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text26
  4828  007984                     __ptext26:
  4829                           	opt stack 0
  4830  007984                     _INT0_SetInterruptHandler:
  4831                           	opt stack 20
  4832                           
  4833                           ; BSR set to: 0
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;incstack = 0
  4837  007984  0012               	return		;funcret
  4838  007986                     __end_of_INT0_SetInterruptHandler:
  4839                           	opt stack 0
  4840                           tblptru	equ	0xFF8
  4841                           tblptrh	equ	0xFF7
  4842                           tblptrl	equ	0xFF6
  4843                           tablat	equ	0xFF5
  4844                           intcon	equ	0xFF2
  4845                           postinc0	equ	0xFEE
  4846                           wreg	equ	0xFE8
  4847                           postdec2	equ	0xFDD
  4848                           fsr2h	equ	0xFDA
  4849                           fsr2l	equ	0xFD9
  4850                           
  4851 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  4852 ;; Defined at:
  4853 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  networkSessi    2   14[BANK0 ] PTR unsigned char 
  4856 ;;		 -> nwkSKey(16), 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : F/0
  4865 ;;		On exit  : D/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4868 ;;      Params:         0       2       0       0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4871 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4872 ;;Total ram usage:        2 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    8
  4875 ;; This function calls:
  4876 ;;		_memcpy
  4877 ;; This function is called by:
  4878 ;;		_main
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text27
  4883  00728C                     __ptext27:
  4884                           	opt stack 0
  4885  00728C                     _LORAWAN_SetNetworkSessionKey:
  4886                           	opt stack 22
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;incstack = 0
  4893  00728C  516E               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  4894  00728E  116F               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  4895  007290  B4D8               	btfsc	status,2,c
  4896  007292  0012               	return	
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;lorawan.c: 382: {
  4900                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  4901  007294  0E22               	movlw	low (_loRa+34)
  4902  007296  6F64               	movwf	memcpy@d1& (0+255),b
  4903  007298  0E02               	movlw	high (_loRa+34)
  4904  00729A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  4905  00729C  C06E  F066         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  4906  0072A0  C06F  F067         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  4907  0072A4  6B69               	clrf	(memcpy@n+1)& (0+255),b
  4908  0072A6  0E10               	movlw	16
  4909  0072A8  6F68               	movwf	memcpy@n& (0+255),b
  4910  0072AA  EC6A  F034         	call	_memcpy	;wreg free
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  4914  0072AE  0102               	movlb	2	; () banked
  4915  0072B0  89A5               	bsf	(_loRa+165)& (0+255),4,b
  4916                           
  4917                           ; BSR set to: 2
  4918                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  4919  0072B2  9902               	bcf	(_loRa+2)& (0+255),4,b
  4920  0072B4  0012               	return		;funcret
  4921  0072B6                     __end_of_LORAWAN_SetNetworkSessionKey:
  4922                           	opt stack 0
  4923                           tblptru	equ	0xFF8
  4924                           tblptrh	equ	0xFF7
  4925                           tblptrl	equ	0xFF6
  4926                           tablat	equ	0xFF5
  4927                           intcon	equ	0xFF2
  4928                           postinc0	equ	0xFEE
  4929                           wreg	equ	0xFE8
  4930                           postdec2	equ	0xFDD
  4931                           fsr2h	equ	0xFDA
  4932                           fsr2l	equ	0xFD9
  4933                           status	equ	0xFD8
  4934                           
  4935 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  4936 ;; Defined at:
  4937 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  deviceAddres    4    4[BANK0 ] unsigned long 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		None
  4946 ;; Tracked objects:
  4947 ;;		On entry : F/0
  4948 ;;		On exit  : F/2
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4951 ;;      Params:         0       4       0       0       0       0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4954 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4955 ;;Total ram usage:        4 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:    7
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_main
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text28
  4966  0076E2                     __ptext28:
  4967                           	opt stack 0
  4968  0076E2                     _LORAWAN_SetDeviceAddress:
  4969                           	opt stack 23
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  4973                           
  4974                           ;incstack = 0
  4975  0076E2  C064  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  4976  0076E6  C065  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  4977  0076EA  C066  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  4978  0076EE  C067  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  4979                           
  4980                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  4981  0076F2  0102               	movlb	2	; () banked
  4982  0076F4  85A5               	bsf	(_loRa+165)& (0+255),2,b
  4983                           
  4984                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  4985  0076F6  9902               	bcf	(_loRa+2)& (0+255),4,b
  4986                           
  4987                           ; BSR set to: 2
  4988  0076F8  0012               	return		;funcret
  4989  0076FA                     __end_of_LORAWAN_SetDeviceAddress:
  4990                           	opt stack 0
  4991                           tblptru	equ	0xFF8
  4992                           tblptrh	equ	0xFF7
  4993                           tblptrl	equ	0xFF6
  4994                           tablat	equ	0xFF5
  4995                           intcon	equ	0xFF2
  4996                           postinc0	equ	0xFEE
  4997                           wreg	equ	0xFE8
  4998                           postdec2	equ	0xFDD
  4999                           fsr2h	equ	0xFDA
  5000                           fsr2l	equ	0xFD9
  5001                           status	equ	0xFD8
  5002                           
  5003 ;; *************** function _LORAWAN_SetCurrentDataRate *****************
  5004 ;; Defined at:
  5005 ;;		line 436 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  valueNew        1    wreg     unsigned char 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  valueNew        1    6[BANK0 ] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      enum E17131
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : D/2
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0
  5020 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5022 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5023 ;;Total ram usage:        1 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    8
  5026 ;; This function calls:
  5027 ;;		_UpdateCurrentDataRate
  5028 ;;		_ValidateDataRate
  5029 ;; This function is called by:
  5030 ;;		_main
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text29
  5035  007204                     __ptext29:
  5036                           	opt stack 0
  5037  007204                     _LORAWAN_SetCurrentDataRate:
  5038                           	opt stack 22
  5039                           
  5040                           ; BSR set to: 2
  5041                           ;incstack = 0
  5042                           ;LORAWAN_SetCurrentDataRate@valueNew stored from wreg
  5043  007204  0100               	movlb	0	; () banked
  5044  007206  6F66               	movwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),b
  5045                           
  5046                           ;lorawan.c: 440: if ( (valueNew < loRa.minDataRate) || (valueNew > loRa.maxDataRate) || 
      +                          (ValidateDataRate(valueNew) != OK) )
  5047  007208  0102               	movlb	2	; () banked
  5048  00720A  51EB               	movf	(_loRa+235)& (0+255),w,b
  5049  00720C  0100               	movlb	0	; () banked
  5050  00720E  5D66               	subwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
  5051  007210  A0D8               	btfss	status,0,c
  5052  007212  0012               	return	
  5053                           
  5054                           ; BSR set to: 0
  5055  007214  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
  5056  007216  0102               	movlb	2	; () banked
  5057  007218  5DEC               	subwf	(_loRa+236)& (0+255),w,b
  5058  00721A  A0D8               	btfss	status,0,c
  5059  00721C  0012               	return	
  5060                           
  5061                           ; BSR set to: 2
  5062  00721E  0100               	movlb	0	; () banked
  5063  007220  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
  5064  007222  ECCD  F03B         	call	_ValidateDataRate
  5065  007226  0900               	iorlw	0
  5066  007228  E001               	bz	l15917
  5067  00722A  0012               	return	
  5068  00722C                     l15917:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;lorawan.c: 444: else
  5072                           ;lorawan.c: 445: {
  5073                           ;lorawan.c: 446: UpdateCurrentDataRate (valueNew);
  5074  00722C  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
  5075  00722E  EF75  F03C         	goto	_UpdateCurrentDataRate
  5076  007232                     __end_of_LORAWAN_SetCurrentDataRate:
  5077                           	opt stack 0
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           intcon	equ	0xFF2
  5083                           postinc0	equ	0xFEE
  5084                           wreg	equ	0xFE8
  5085                           postdec2	equ	0xFDD
  5086                           fsr2h	equ	0xFDA
  5087                           fsr2l	equ	0xFD9
  5088                           status	equ	0xFD8
  5089                           
  5090 ;; *************** function _LORAWAN_SetClass *****************
  5091 ;; Defined at:
  5092 ;;		line 583 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  deviceClass     1    wreg     enum E17166
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  deviceClass     1   16[BANK0 ] enum E17166
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      void 
  5099 ;; Registers used:
  5100 ;;		wreg, status,2, status,0, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : F/0
  5103 ;;		On exit  : E/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5106 ;;      Params:         0       0       0       0       0       0       0       0       0
  5107 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5109 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5110 ;;Total ram usage:        1 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:   12
  5113 ;; This function calls:
  5114 ;;		_RADIO_ReceiveStop
  5115 ;;		_RADIO_SetWatchdogTimeout
  5116 ;; This function is called by:
  5117 ;;		_main
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text30
  5122  006CC0                     __ptext30:
  5123                           	opt stack 0
  5124  006CC0                     _LORAWAN_SetClass:
  5125                           	opt stack 18
  5126                           
  5127                           ;incstack = 0
  5128                           ;LORAWAN_SetClass@deviceClass stored from wreg
  5129  006CC0  6F70               	movwf	LORAWAN_SetClass@deviceClass& (0+255),b
  5130                           
  5131                           ;lorawan.c: 585: loRa.deviceClass = deviceClass;
  5132  006CC2  C070  F212         	movff	LORAWAN_SetClass@deviceClass,_loRa+18
  5133                           
  5134                           ;lorawan.c: 586: loRa.macStatus.mcastEnable = 0;
  5135  006CC6  0102               	movlb	2	; () banked
  5136  006CC8  9504               	bcf	(_loRa+4)& (0+255),2,b
  5137                           
  5138                           ; BSR set to: 2
  5139                           ;lorawan.c: 588: if (CLASS_C == deviceClass)
  5140  006CCA  0E02               	movlw	2
  5141  006CCC  0100               	movlb	0	; () banked
  5142  006CCE  1970               	xorwf	LORAWAN_SetClass@deviceClass& (0+255),w,b
  5143  006CD0  E107               	bnz	l15929
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;lorawan.c: 589: {
  5147                           ;lorawan.c: 590: RADIO_SetWatchdogTimeout(0);
  5148  006CD2  0E00               	movlw	0
  5149  006CD4  6B64               	clrf	RADIO_SetWatchdogTimeout@timeout& (0+255),b
  5150  006CD6  6B65               	clrf	(RADIO_SetWatchdogTimeout@timeout+1)& (0+255),b
  5151  006CD8  6B66               	clrf	(RADIO_SetWatchdogTimeout@timeout+2)& (0+255),b
  5152  006CDA  6B67               	clrf	(RADIO_SetWatchdogTimeout@timeout+3)& (0+255),b
  5153  006CDC  EFF3  F03B         	goto	_RADIO_SetWatchdogTimeout	;wreg free
  5154  006CE0                     l15929:
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;lorawan.c: 592: else if (deviceClass == CLASS_A)
  5158  006CE0  5170               	movf	LORAWAN_SetClass@deviceClass& (0+255),w,b
  5159  006CE2  A4D8               	btfss	status,2,c
  5160  006CE4  0012               	return	
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;lorawan.c: 593: {
  5164                           ;lorawan.c: 594: loRa.macStatus.macState = IDLE;
  5165  006CE6  0EF0               	movlw	-16
  5166  006CE8  0102               	movlb	2	; () banked
  5167  006CEA  1702               	andwf	(_loRa+2)& (0+255),f,b
  5168                           
  5169                           ; BSR set to: 2
  5170                           ;lorawan.c: 595: RADIO_SetWatchdogTimeout(((uint32_t)15000));
  5171  006CEC  0E98               	movlw	152
  5172  006CEE  0100               	movlb	0	; () banked
  5173  006CF0  6F64               	movwf	RADIO_SetWatchdogTimeout@timeout& (0+255),b
  5174  006CF2  0E3A               	movlw	58
  5175  006CF4  6F65               	movwf	(RADIO_SetWatchdogTimeout@timeout+1)& (0+255),b
  5176  006CF6  0E00               	movlw	0
  5177  006CF8  6B66               	clrf	(RADIO_SetWatchdogTimeout@timeout+2)& (0+255),b
  5178  006CFA  6B67               	clrf	(RADIO_SetWatchdogTimeout@timeout+3)& (0+255),b
  5179  006CFC  ECF3  F03B         	call	_RADIO_SetWatchdogTimeout	;wreg free
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;lorawan.c: 596: RADIO_ReceiveStop();
  5183  006D00  EFC5  F03A         	goto	_RADIO_ReceiveStop	;wreg free
  5184  006D04                     __end_of_LORAWAN_SetClass:
  5185                           	opt stack 0
  5186                           tblptru	equ	0xFF8
  5187                           tblptrh	equ	0xFF7
  5188                           tblptrl	equ	0xFF6
  5189                           tablat	equ	0xFF5
  5190                           intcon	equ	0xFF2
  5191                           postinc0	equ	0xFEE
  5192                           wreg	equ	0xFE8
  5193                           postdec2	equ	0xFDD
  5194                           fsr2h	equ	0xFDA
  5195                           fsr2l	equ	0xFD9
  5196                           status	equ	0xFD8
  5197                           
  5198 ;; *************** function _RADIO_SetWatchdogTimeout *****************
  5199 ;; Defined at:
  5200 ;;		line 1572 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  timeout         4    4[BANK0 ] unsigned long 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		None
  5209 ;; Tracked objects:
  5210 ;;		On entry : F/0
  5211 ;;		On exit  : F/0
  5212 ;;		Unchanged: F/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5214 ;;      Params:         0       4       0       0       0       0       0       0       0
  5215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5217 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5218 ;;Total ram usage:        4 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    7
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_LORAWAN_SetClass
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text31
  5229  0077E6                     __ptext31:
  5230                           	opt stack 0
  5231  0077E6                     _RADIO_SetWatchdogTimeout:
  5232                           	opt stack 22
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;radio_driver_SX1276.c: 1574: RadioConfiguration.watchdogTimerTimeout = timeout;
  5236                           
  5237                           ;incstack = 0
  5238  0077E6  C064  F1A3         	movff	RADIO_SetWatchdogTimeout@timeout,_RadioConfiguration+42
  5239  0077EA  C065  F1A4         	movff	RADIO_SetWatchdogTimeout@timeout+1,_RadioConfiguration+43
  5240  0077EE  C066  F1A5         	movff	RADIO_SetWatchdogTimeout@timeout+2,_RadioConfiguration+44
  5241  0077F2  C067  F1A6         	movff	RADIO_SetWatchdogTimeout@timeout+3,_RadioConfiguration+45
  5242                           
  5243                           ; BSR set to: 0
  5244  0077F6  0012               	return		;funcret
  5245  0077F8                     __end_of_RADIO_SetWatchdogTimeout:
  5246                           	opt stack 0
  5247                           tblptru	equ	0xFF8
  5248                           tblptrh	equ	0xFF7
  5249                           tblptrl	equ	0xFF6
  5250                           tablat	equ	0xFF5
  5251                           intcon	equ	0xFF2
  5252                           postinc0	equ	0xFEE
  5253                           wreg	equ	0xFE8
  5254                           postdec2	equ	0xFDD
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  5260 ;; Defined at:
  5261 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  applicationS    2   14[BANK0 ] PTR unsigned char 
  5264 ;;		 -> appSKey(16), 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : F/0
  5273 ;;		On exit  : D/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5276 ;;      Params:         0       2       0       0       0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5279 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5280 ;;Total ram usage:        2 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    8
  5283 ;; This function calls:
  5284 ;;		_memcpy
  5285 ;; This function is called by:
  5286 ;;		_main
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text32
  5291  0072B6                     __ptext32:
  5292                           	opt stack 0
  5293  0072B6                     _LORAWAN_SetApplicationSessionKey:
  5294                           	opt stack 22
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;incstack = 0
  5301  0072B6  516E               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  5302  0072B8  116F               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  5303  0072BA  B4D8               	btfsc	status,2,c
  5304  0072BC  0012               	return	
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;lorawan.c: 397: {
  5308                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  5309  0072BE  0E32               	movlw	low (_loRa+50)
  5310  0072C0  6F64               	movwf	memcpy@d1& (0+255),b
  5311  0072C2  0E02               	movlw	high (_loRa+50)
  5312  0072C4  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5313  0072C6  C06E  F066         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  5314  0072CA  C06F  F067         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  5315  0072CE  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5316  0072D0  0E10               	movlw	16
  5317  0072D2  6F68               	movwf	memcpy@n& (0+255),b
  5318  0072D4  EC6A  F034         	call	_memcpy	;wreg free
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  5322  0072D8  0102               	movlb	2	; () banked
  5323  0072DA  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  5324                           
  5325                           ; BSR set to: 2
  5326                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  5327  0072DC  9902               	bcf	(_loRa+2)& (0+255),4,b
  5328  0072DE  0012               	return		;funcret
  5329  0072E0                     __end_of_LORAWAN_SetApplicationSessionKey:
  5330                           	opt stack 0
  5331                           tblptru	equ	0xFF8
  5332                           tblptrh	equ	0xFF7
  5333                           tblptrl	equ	0xFF6
  5334                           tablat	equ	0xFF5
  5335                           intcon	equ	0xFF2
  5336                           postinc0	equ	0xFEE
  5337                           wreg	equ	0xFE8
  5338                           postdec2	equ	0xFDD
  5339                           fsr2h	equ	0xFDA
  5340                           fsr2l	equ	0xFD9
  5341                           status	equ	0xFD8
  5342                           
  5343 ;; *************** function _LORAWAN_Mainloop *****************
  5344 ;; Defined at:
  5345 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      void 
  5352 ;; Registers used:
  5353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/1
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5359 ;;      Params:         0       0       0       0       0       0       0       0       0
  5360 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5362 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5363 ;;Total ram usage:        0 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:   18
  5366 ;; This function calls:
  5367 ;;		_INTERRUPT_GetDioStatus
  5368 ;;		_RADIO_DIO0
  5369 ;;		_RADIO_DIO1
  5370 ;;		_RADIO_DIO2
  5371 ;;		_RADIO_DIO3
  5372 ;;		_RADIO_DIO4
  5373 ;;		_RADIO_DIO5
  5374 ;;		_SwTimersExecute
  5375 ;; This function is called by:
  5376 ;;		_main
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text33
  5381  006F80                     __ptext33:
  5382                           	opt stack 0
  5383  006F80                     _LORAWAN_Mainloop:
  5384                           	opt stack 12
  5385                           
  5386                           ;lorawan.c: 2240: SwTimersExecute();
  5387                           
  5388                           ;incstack = 0
  5389  006F80  EC6E  F02C         	call	_SwTimersExecute	;wreg free
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  5393  006F84  EC1C  F03C         	call	_INTERRUPT_GetDioStatus	;wreg free
  5394  006F88  0101               	movlb	1	; () banked
  5395  006F8A  6F78               	movwf	_localDioStatus& (0+255),b
  5396                           
  5397                           ; BSR set to: 1
  5398                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  5399  006F8C  B178               	btfsc	_localDioStatus& (0+255),0,b
  5400                           
  5401                           ; BSR set to: 1
  5402                           ;lorawan.c: 2246: {
  5403                           ;lorawan.c: 2247: RADIO_DIO0();
  5404  006F8E  EC91  F032         	call	_RADIO_DIO0	;wreg free
  5405                           
  5406                           ;lorawan.c: 2248: }
  5407                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  5408  006F92  0101               	movlb	1	; () banked
  5409  006F94  B378               	btfsc	_localDioStatus& (0+255),1,b
  5410                           
  5411                           ; BSR set to: 1
  5412                           ;lorawan.c: 2250: {
  5413                           ;lorawan.c: 2251: RADIO_DIO1();
  5414  006F96  ECDE  F037         	call	_RADIO_DIO1	;wreg free
  5415                           
  5416                           ;lorawan.c: 2252: }
  5417                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  5418  006F9A  0101               	movlb	1	; () banked
  5419  006F9C  B578               	btfsc	_localDioStatus& (0+255),2,b
  5420                           
  5421                           ; BSR set to: 1
  5422                           ;lorawan.c: 2254: {
  5423                           ;lorawan.c: 2255: RADIO_DIO2();
  5424  006F9E  EC1A  F036         	call	_RADIO_DIO2	;wreg free
  5425                           
  5426                           ;lorawan.c: 2256: }
  5427                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  5428  006FA2  0101               	movlb	1	; () banked
  5429  006FA4  B778               	btfsc	_localDioStatus& (0+255),3,b
  5430                           
  5431                           ; BSR set to: 1
  5432                           ;lorawan.c: 2258: {
  5433                           ;lorawan.c: 2259: RADIO_DIO3();
  5434  006FA6  EC95  F03B         	call	_RADIO_DIO3	;wreg free
  5435                           
  5436                           ;lorawan.c: 2260: }
  5437                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  5438  006FAA  0101               	movlb	1	; () banked
  5439  006FAC  B978               	btfsc	_localDioStatus& (0+255),4,b
  5440                           
  5441                           ; BSR set to: 1
  5442                           ;lorawan.c: 2262: {
  5443                           ;lorawan.c: 2263: RADIO_DIO4();
  5444  006FAE  EC89  F03B         	call	_RADIO_DIO4	;wreg free
  5445                           
  5446                           ;lorawan.c: 2264: }
  5447                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  5448  006FB2  0101               	movlb	1	; () banked
  5449  006FB4  BB78               	btfsc	_localDioStatus& (0+255),5,b
  5450                           
  5451                           ; BSR set to: 1
  5452                           ;lorawan.c: 2266: {
  5453                           ;lorawan.c: 2267: RADIO_DIO5();
  5454  006FB6  EC7D  F03B         	call	_RADIO_DIO5	;wreg free
  5455  006FBA  0012               	return		;funcret
  5456  006FBC                     __end_of_LORAWAN_Mainloop:
  5457                           	opt stack 0
  5458                           tblptru	equ	0xFF8
  5459                           tblptrh	equ	0xFF7
  5460                           tblptrl	equ	0xFF6
  5461                           tablat	equ	0xFF5
  5462                           intcon	equ	0xFF2
  5463                           postinc0	equ	0xFEE
  5464                           wreg	equ	0xFE8
  5465                           postdec2	equ	0xFDD
  5466                           fsr2h	equ	0xFDA
  5467                           fsr2l	equ	0xFD9
  5468                           status	equ	0xFD8
  5469                           
  5470 ;; *************** function _SwTimersExecute *****************
  5471 ;; Defined at:
  5472 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;  i               1  140[BANK0 ] unsigned char 
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/1
  5483 ;;		On exit  : F/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5486 ;;      Params:         0       0       0       0       0       0       0       0       0
  5487 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5488 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5489 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5490 ;;Total ram usage:        5 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:   17
  5493 ;; This function calls:
  5494 ;;		Absolute function
  5495 ;;		_AckRetransmissionCallback
  5496 ;;		_AutomaticReplyCallback
  5497 ;;		_DutyCycleCallback
  5498 ;;		_LORAWAN_LinkCheckCallback
  5499 ;;		_LORAWAN_ReceiveWindow1Callback
  5500 ;;		_LORAWAN_ReceiveWindow2Callback
  5501 ;;		_RADIO_RxFSKTimeout
  5502 ;;		_RADIO_WatchdogTimeout
  5503 ;;		_UnconfirmedTransmissionCallback
  5504 ;;		_UpdateJoinSuccessState
  5505 ;; This function is called by:
  5506 ;;		_LORAWAN_Mainloop
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text34
  5511  0058DC                     __ptext34:
  5512                           	opt stack 0
  5513  0058DC                     _SwTimersExecute:
  5514                           	opt stack 12
  5515                           
  5516                           ;sw_timer.c: 262: uint8_t i;
  5517                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  5518                           
  5519                           ;incstack = 0
  5520  0058DC  9EF2               	bcf	intcon,7,c	;volatile
  5521                           
  5522                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  5523  0058DE  0100               	movlb	0	; () banked
  5524  0058E0  6BEC               	clrf	SwTimersExecute@i& (0+255),b
  5525  0058E2  D04D               	goto	l16451
  5526  0058E4                     l16437:
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;sw_timer.c: 266: {
  5530                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  5531  0058E4  51EC               	movf	SwTimersExecute@i& (0+255),w,b
  5532  0058E6  0D08               	mullw	8
  5533  0058E8  0E04               	movlw	low (_swTimers+4)
  5534  0058EA  24F3               	addwf	prodl,w,c
  5535  0058EC  6ED9               	movwf	fsr2l,c
  5536  0058EE  0E03               	movlw	high (_swTimers+4)
  5537  0058F0  20F4               	addwfc	prodh,w,c
  5538  0058F2  6EDA               	movwf	fsr2h,c
  5539  0058F4  04DE               	decf	postinc2,w,c
  5540  0058F6  E141               	bnz	l16449
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;sw_timer.c: 270: {
  5544                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  5545  0058F8  51EC               	movf	SwTimersExecute@i& (0+255),w,b
  5546  0058FA  0D08               	mullw	8
  5547  0058FC  0E00               	movlw	low _swTimers
  5548  0058FE  24F3               	addwf	prodl,w,c
  5549  005900  6ED9               	movwf	fsr2l,c
  5550  005902  0E03               	movlw	high _swTimers
  5551  005904  20F4               	addwfc	prodh,w,c
  5552  005906  6EDA               	movwf	fsr2h,c
  5553  005908  50DE               	movf	postinc2,w,c
  5554  00590A  10DE               	iorwf	postinc2,w,c
  5555  00590C  10DE               	iorwf	postinc2,w,c
  5556  00590E  10DE               	iorwf	postinc2,w,c
  5557  005910  E134               	bnz	l16449
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;sw_timer.c: 272: {
  5561                           ;sw_timer.c: 273: swTimers[i].running = 0;
  5562  005912  51EC               	movf	SwTimersExecute@i& (0+255),w,b
  5563  005914  0D08               	mullw	8
  5564  005916  0E04               	movlw	low (_swTimers+4)
  5565  005918  24F3               	addwf	prodl,w,c
  5566  00591A  6ED9               	movwf	fsr2l,c
  5567  00591C  0E03               	movlw	high (_swTimers+4)
  5568  00591E  20F4               	addwfc	prodh,w,c
  5569  005920  6EDA               	movwf	fsr2h,c
  5570  005922  6ADF               	clrf	indf2,c
  5571                           
  5572                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  5573  005924  51EC               	movf	SwTimersExecute@i& (0+255),w,b
  5574  005926  0D08               	mullw	8
  5575  005928  0E06               	movlw	low (_swTimers+6)
  5576  00592A  24F3               	addwf	prodl,w,c
  5577  00592C  6ED9               	movwf	fsr2l,c
  5578  00592E  0E03               	movlw	high (_swTimers+6)
  5579  005930  20F4               	addwfc	prodh,w,c
  5580  005932  6EDA               	movwf	fsr2h,c
  5581  005934  50DE               	movf	postinc2,w,c
  5582  005936  10DE               	iorwf	postinc2,w,c
  5583  005938  E020               	bz	l16449
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;sw_timer.c: 275: {
  5587                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  5588  00593A  8EF2               	bsf	intcon,7,c	;volatile
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  5592  00593C  51EC               	movf	SwTimersExecute@i& (0+255),w,b
  5593  00593E  0D08               	mullw	8
  5594  005940  0E05               	movlw	low (_swTimers+5)
  5595  005942  24F3               	addwf	prodl,w,c
  5596  005944  6ED9               	movwf	fsr2l,c
  5597  005946  0E03               	movlw	high (_swTimers+5)
  5598  005948  20F4               	addwfc	prodh,w,c
  5599  00594A  6EDA               	movwf	fsr2h,c
  5600  00594C  50DF               	movf	indf2,w,c
  5601  00594E  6EE6               	movwf	postinc1,c
  5602  005950  51EC               	movf	SwTimersExecute@i& (0+255),w,b
  5603  005952  0D08               	mullw	8
  5604  005954  0E06               	movlw	low (_swTimers+6)
  5605  005956  24F3               	addwf	prodl,w,c
  5606  005958  6ED9               	movwf	fsr2l,c
  5607  00595A  0E03               	movlw	high (_swTimers+6)
  5608  00595C  20F4               	addwfc	prodh,w,c
  5609  00595E  6EDA               	movwf	fsr2h,c
  5610  005960  D801               	call	u19778
  5611  005962  D00A               	goto	l16447
  5612  005964                     u19778:
  5613  005964  0005               	push	
  5614  005966  6EFA               	movwf	pclath,c
  5615  005968  50DE               	movf	postinc2,w,c
  5616  00596A  6EFD               	movwf	tosl,c
  5617  00596C  50DE               	movf	postinc2,w,c
  5618  00596E  6EFE               	movwf	tosh,c
  5619  005970  50F8               	movf	tblptru,w,c
  5620  005972  6EFF               	movwf	tosu,c
  5621  005974  50FA               	movf	pclath,w,c
  5622  005976  0012               	return		;indir
  5623  005978                     l16447:
  5624                           
  5625                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  5626  005978  9EF2               	bcf	intcon,7,c	;volatile
  5627  00597A                     l16449:
  5628  00597A  0100               	movlb	0	; () banked
  5629  00597C  2BEC               	incf	SwTimersExecute@i& (0+255),f,b
  5630  00597E                     l16451:
  5631                           
  5632                           ; BSR set to: 0
  5633  00597E  0101               	movlb	1	; () banked
  5634  005980  5177               	movf	_allocatedTimers& (0+255),w,b	;volatile
  5635  005982  0100               	movlb	0	; () banked
  5636  005984  5DEC               	subwf	SwTimersExecute@i& (0+255),w,b
  5637  005986  E3AE               	bnc	l16437
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;sw_timer.c: 279: }
  5641                           ;sw_timer.c: 280: }
  5642                           ;sw_timer.c: 281: }
  5643                           ;sw_timer.c: 282: }
  5644                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  5645  005988  8EF2               	bsf	intcon,7,c	;volatile
  5646                           
  5647                           ; BSR set to: 0
  5648  00598A  0012               	return		;funcret
  5649  00598C                     __end_of_SwTimersExecute:
  5650                           	opt stack 0
  5651                           tosu	equ	0xFFF
  5652                           tosh	equ	0xFFE
  5653                           tosl	equ	0xFFD
  5654                           pclath	equ	0xFFA
  5655                           tblptru	equ	0xFF8
  5656                           tblptrh	equ	0xFF7
  5657                           tblptrl	equ	0xFF6
  5658                           tablat	equ	0xFF5
  5659                           prodh	equ	0xFF4
  5660                           prodl	equ	0xFF3
  5661                           intcon	equ	0xFF2
  5662                           postinc0	equ	0xFEE
  5663                           wreg	equ	0xFE8
  5664                           postinc1	equ	0xFE6
  5665                           indf2	equ	0xFDF
  5666                           postinc2	equ	0xFDE
  5667                           postdec2	equ	0xFDD
  5668                           fsr2h	equ	0xFDA
  5669                           fsr2l	equ	0xFD9
  5670                           status	equ	0xFD8
  5671                           
  5672 ;; *************** function _DutyCycleCallback *****************
  5673 ;; Defined at:
  5674 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;  param           1  [STACK] unsigned char 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  minim           4  [STACK] unsigned long 
  5679 ;;  i               1  [STACK] unsigned char 
  5680 ;;  found           1  [STACK] unsigned char 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1  [STACK] void 
  5683 ;; Registers used:
  5684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9,
      + btemp+10, btemp+11, prodl, prodh, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : F/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0
  5691 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5693 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5694 ;;Total ram usage:        0 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:   11
  5697 ;; This function calls:
  5698 ;;		_SwTimerSetTimeout
  5699 ;;		_SwTimerStart
  5700 ;;		___lldiv
  5701 ;; This function is called by:
  5702 ;;		_SetCallbackSoftwareTimers
  5703 ;;		_SwTimersExecute
  5704 ;; This function uses a reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text35
  5708  00242A                     __ptext35:
  5709                           	opt stack 0
  5710  00242A                     _DutyCycleCallback:
  5711                           	opt stack 0
  5712                           
  5713                           ; BSR set to: 0
  5714                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  5715  00242A  0E0A               	movlw	10
  5716  00242C  26E1               	addwf	fsr1l,f,c
  5717  00242E  0E00               	movlw	0
  5718  002430  22E2               	addwfc	fsr1h,f,c
  5719                           
  5720                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  5721                           
  5722                           ;incstack = 0
  5723  002432  6852               	setf	btemp+8,c
  5724  002434  6853               	setf	btemp+9,c
  5725  002436  6854               	setf	btemp+10,c
  5726  002438  6855               	setf	btemp+11,c
  5727                           
  5728                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5729  00243A  0EFA               	movlw	-6
  5730  00243C  C052  FFE3         	movff	btemp+8,plusw1
  5731  002440  0EFB               	movlw	-5
  5732  002442  C053  FFE3         	movff	btemp+9,plusw1
  5733  002446  0EFC               	movlw	-4
  5734  002448  C054  FFE3         	movff	btemp+10,plusw1
  5735  00244C  0EFD               	movlw	-3
  5736  00244E  C055  FFE3         	movff	btemp+11,plusw1
  5737                           
  5738                           ;lorawan_eu.c: 1224: bool found = 0;
  5739                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5740  002452  0EFF               	movlw	-1
  5741  002454  6AE3               	clrf	plusw1,c
  5742                           
  5743                           ;lorawan_eu.c: 1225: uint8_t i;
  5744                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  5745                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5746  002456  0EFE               	movlw	-2
  5747  002458  6AE3               	clrf	plusw1,c
  5748  00245A                     l15145:
  5749                           
  5750                           ;lorawan_eu.c: 1228: {
  5751                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  5752                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5753  00245A  0EFE               	movlw	-2
  5754  00245C  50E3               	movf	plusw1,w,c
  5755  00245E  0D0E               	mullw	14
  5756  002460  0E04               	movlw	low (_Channels+4)
  5757  002462  24F3               	addwf	prodl,w,c
  5758  002464  6ED9               	movwf	fsr2l,c
  5759  002466  0E04               	movlw	high (_Channels+4)
  5760  002468  20F4               	addwfc	prodh,w,c
  5761  00246A  6EDA               	movwf	fsr2h,c
  5762  00246C  04DE               	decf	postinc2,w,c
  5763  00246E  E001 D0AA          	bnz	l15163
  5764                           
  5765                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5766  002472  0EFE               	movlw	-2
  5767  002474  50E3               	movf	plusw1,w,c
  5768  002476  0D0E               	mullw	14
  5769  002478  0E08               	movlw	low (_Channels+8)
  5770  00247A  24F3               	addwf	prodl,w,c
  5771  00247C  6ED9               	movwf	fsr2l,c
  5772  00247E  0E04               	movlw	high (_Channels+8)
  5773  002480  20F4               	addwfc	prodh,w,c
  5774  002482  6EDA               	movwf	fsr2h,c
  5775  002484  50DE               	movf	postinc2,w,c
  5776  002486  10DE               	iorwf	postinc2,w,c
  5777  002488  10DE               	iorwf	postinc2,w,c
  5778  00248A  10DE               	iorwf	postinc2,w,c
  5779  00248C  E101 D09B          	bz	l15163
  5780                           
  5781                           ;lorawan_eu.c: 1231: {
  5782                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  5783                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5784  002490  0EFE               	movlw	-2
  5785  002492  50E3               	movf	plusw1,w,c
  5786  002494  0D0E               	mullw	14
  5787  002496  0E08               	movlw	low (_Channels+8)
  5788  002498  24F3               	addwf	prodl,w,c
  5789  00249A  6ED9               	movwf	fsr2l,c
  5790  00249C  0E04               	movlw	high (_Channels+8)
  5791  00249E  20F4               	addwfc	prodh,w,c
  5792  0024A0  6EDA               	movwf	fsr2h,c
  5793  0024A2  50DE               	movf	postinc2,w,c
  5794  0024A4  0102               	movlb	2	; () banked
  5795  0024A6  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5796  0024A8  50DE               	movf	postinc2,w,c
  5797  0024AA  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  5798  0024AC  50DE               	movf	postinc2,w,c
  5799  0024AE  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  5800  0024B0  50DE               	movf	postinc2,w,c
  5801  0024B2  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  5802  0024B4  E22F               	bc	l15153
  5803                           
  5804                           ; BSR set to: 2
  5805                           ;lorawan_eu.c: 1233: {
  5806                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  5807                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5808  0024B6  0EFE               	movlw	-2
  5809  0024B8  50E3               	movf	plusw1,w,c
  5810  0024BA  0D0E               	mullw	14
  5811  0024BC  0E08               	movlw	low (_Channels+8)
  5812  0024BE  24F3               	addwf	prodl,w,c
  5813  0024C0  6ED9               	movwf	fsr2l,c
  5814  0024C2  0E04               	movlw	high (_Channels+8)
  5815  0024C4  20F4               	addwfc	prodh,w,c
  5816  0024C6  6EDA               	movwf	fsr2h,c
  5817  0024C8  CFDE F052          	movff	postinc2,btemp+8
  5818  0024CC  CFDE F053          	movff	postinc2,btemp+9
  5819  0024D0  CFDE F054          	movff	postinc2,btemp+10
  5820  0024D4  CFDE F055          	movff	postinc2,btemp+11
  5821  0024D8  51C8               	movf	(_loRa+200)& (0+255),w,b
  5822  0024DA  5C52               	subwf	btemp+8,w,c
  5823  0024DC  6E4E               	movwf	btemp+4,c
  5824  0024DE  51C9               	movf	(_loRa+201)& (0+255),w,b
  5825  0024E0  5853               	subwfb	btemp+9,w,c
  5826  0024E2  6E4F               	movwf	btemp+5,c
  5827  0024E4  51CA               	movf	(_loRa+202)& (0+255),w,b
  5828  0024E6  5854               	subwfb	btemp+10,w,c
  5829  0024E8  6E50               	movwf	btemp+6,c
  5830  0024EA  51CB               	movf	(_loRa+203)& (0+255),w,b
  5831  0024EC  5855               	subwfb	btemp+11,w,c
  5832  0024EE  6E51               	movwf	btemp+7,c
  5833                           
  5834                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5835  0024F0  0EFE               	movlw	-2
  5836  0024F2  50E3               	movf	plusw1,w,c
  5837  0024F4  0D0E               	mullw	14
  5838  0024F6  0E08               	movlw	low (_Channels+8)
  5839  0024F8  24F3               	addwf	prodl,w,c
  5840  0024FA  6ED9               	movwf	fsr2l,c
  5841  0024FC  0E04               	movlw	high (_Channels+8)
  5842  0024FE  20F4               	addwfc	prodh,w,c
  5843  002500  6EDA               	movwf	fsr2h,c
  5844  002502  C04E  FFDE         	movff	btemp+4,postinc2
  5845  002506  C04F  FFDE         	movff	btemp+5,postinc2
  5846  00250A  C050  FFDE         	movff	btemp+6,postinc2
  5847  00250E  C051  FFDE         	movff	btemp+7,postinc2
  5848                           
  5849                           ;lorawan_eu.c: 1235: }
  5850  002512  D00D               	goto	l15155
  5851  002514                     l15153:
  5852                           
  5853                           ; BSR set to: 2
  5854                           ;lorawan_eu.c: 1236: else
  5855                           ;lorawan_eu.c: 1237: {
  5856                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  5857                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5858  002514  0EFE               	movlw	-2
  5859  002516  50E3               	movf	plusw1,w,c
  5860  002518  0D0E               	mullw	14
  5861  00251A  0E08               	movlw	low (_Channels+8)
  5862  00251C  24F3               	addwf	prodl,w,c
  5863  00251E  6ED9               	movwf	fsr2l,c
  5864  002520  0E04               	movlw	high (_Channels+8)
  5865  002522  20F4               	addwfc	prodh,w,c
  5866  002524  6EDA               	movwf	fsr2h,c
  5867  002526  6ADE               	clrf	postinc2,c
  5868  002528  6ADE               	clrf	postinc2,c
  5869  00252A  6ADE               	clrf	postinc2,c
  5870  00252C  6ADD               	clrf	postdec2,c
  5871  00252E                     l15155:
  5872                           
  5873                           ; BSR set to: 2
  5874                           ;lorawan_eu.c: 1239: }
  5875                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  5876                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5877  00252E  0EFE               	movlw	-2
  5878  002530  50E3               	movf	plusw1,w,c
  5879  002532  0D0E               	mullw	14
  5880  002534  0E08               	movlw	low (_Channels+8)
  5881  002536  24F3               	addwf	prodl,w,c
  5882  002538  6ED9               	movwf	fsr2l,c
  5883  00253A  0E04               	movlw	high (_Channels+8)
  5884  00253C  20F4               	addwfc	prodh,w,c
  5885  00253E  6EDA               	movwf	fsr2h,c
  5886                           
  5887                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5888  002540  0EFA               	movlw	-6
  5889  002542  CFE3 F04B          	movff	plusw1,btemp+1
  5890  002546  50DE               	movf	postinc2,w,c
  5891  002548  5C4B               	subwf	btemp+1,w,c
  5892  00254A  0EFB               	movlw	-5
  5893  00254C  CFE3 F04B          	movff	plusw1,btemp+1
  5894  002550  50DE               	movf	postinc2,w,c
  5895  002552  584B               	subwfb	btemp+1,w,c
  5896  002554  0EFC               	movlw	-4
  5897  002556  CFE3 F04B          	movff	plusw1,btemp+1
  5898  00255A  50DE               	movf	postinc2,w,c
  5899  00255C  584B               	subwfb	btemp+1,w,c
  5900  00255E  0EFD               	movlw	-3
  5901  002560  CFE3 F04B          	movff	plusw1,btemp+1
  5902  002564  50DE               	movf	postinc2,w,c
  5903  002566  584B               	subwfb	btemp+1,w,c
  5904  002568  E32E               	bnc	l15163
  5905                           
  5906                           ; BSR set to: 2
  5907                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5908  00256A  0EFE               	movlw	-2
  5909  00256C  50E3               	movf	plusw1,w,c
  5910  00256E  0D0E               	mullw	14
  5911  002570  0E08               	movlw	low (_Channels+8)
  5912  002572  24F3               	addwf	prodl,w,c
  5913  002574  6ED9               	movwf	fsr2l,c
  5914  002576  0E04               	movlw	high (_Channels+8)
  5915  002578  20F4               	addwfc	prodh,w,c
  5916  00257A  6EDA               	movwf	fsr2h,c
  5917  00257C  50DE               	movf	postinc2,w,c
  5918  00257E  10DE               	iorwf	postinc2,w,c
  5919  002580  10DE               	iorwf	postinc2,w,c
  5920  002582  10DE               	iorwf	postinc2,w,c
  5921  002584  E020               	bz	l15163
  5922                           
  5923                           ; BSR set to: 2
  5924                           ;lorawan_eu.c: 1241: {
  5925                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  5926                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5927  002586  0EFE               	movlw	-2
  5928  002588  50E3               	movf	plusw1,w,c
  5929  00258A  0D0E               	mullw	14
  5930  00258C  0E08               	movlw	low (_Channels+8)
  5931  00258E  24F3               	addwf	prodl,w,c
  5932  002590  6ED9               	movwf	fsr2l,c
  5933  002592  0E04               	movlw	high (_Channels+8)
  5934  002594  20F4               	addwfc	prodh,w,c
  5935  002596  6EDA               	movwf	fsr2h,c
  5936  002598  CFDE F052          	movff	postinc2,btemp+8
  5937  00259C  CFDE F053          	movff	postinc2,btemp+9
  5938  0025A0  CFDE F054          	movff	postinc2,btemp+10
  5939  0025A4  CFDE F055          	movff	postinc2,btemp+11
  5940                           
  5941                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5942  0025A8  0EFA               	movlw	-6
  5943  0025AA  C052  FFE3         	movff	btemp+8,plusw1
  5944  0025AE  0EFB               	movlw	-5
  5945  0025B0  C053  FFE3         	movff	btemp+9,plusw1
  5946  0025B4  0EFC               	movlw	-4
  5947  0025B6  C054  FFE3         	movff	btemp+10,plusw1
  5948  0025BA  0EFD               	movlw	-3
  5949  0025BC  C055  FFE3         	movff	btemp+11,plusw1
  5950                           
  5951                           ; BSR set to: 2
  5952                           ;lorawan_eu.c: 1243: found = 1;
  5953                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5954  0025C0  0EFF               	movlw	-1
  5955  0025C2  6AE3               	clrf	plusw1,c
  5956  0025C4  2AE3               	incf	plusw1,f,c
  5957  0025C6                     l15163:
  5958                           
  5959                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5960  0025C6  0EFE               	movlw	-2
  5961  0025C8  2AE3               	incf	plusw1,f,c
  5962                           
  5963                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5964  0025CA  CFE3 F04B          	movff	plusw1,btemp+1
  5965  0025CE  0E0F               	movlw	15
  5966  0025D0  644B               	cpfsgt	btemp+1,c
  5967  0025D2  D743               	goto	l15145
  5968                           
  5969                           ;lorawan_eu.c: 1244: }
  5970                           ;lorawan_eu.c: 1245: }
  5971                           ;lorawan_eu.c: 1246: }
  5972                           ;lorawan_eu.c: 1247: if ( found == 1 )
  5973                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5974  0025D4  0EFF               	movlw	-1
  5975  0025D6  04E3               	decf	plusw1,w,c
  5976  0025D8  E001 D096          	bnz	l1316
  5977                           
  5978                           ;lorawan_eu.c: 1248: {
  5979                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  5980                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5981  0025DC  50E1               	movf	fsr1l,w,c
  5982  0025DE  0FFA               	addlw	-6
  5983  0025E0  6ED9               	movwf	fsr2l,c
  5984  0025E2  50E2               	movf	fsr1h,w,c
  5985  0025E4  6EDA               	movwf	fsr2h,c
  5986  0025E6  0EFF               	movlw	255
  5987  0025E8  22DA               	addwfc	fsr2h,f,c
  5988  0025EA  CFDE F2C8          	movff	postinc2,_loRa+200
  5989  0025EE  CFDE F2C9          	movff	postinc2,_loRa+201
  5990  0025F2  CFDE F2CA          	movff	postinc2,_loRa+202
  5991  0025F6  CFDE F2CB          	movff	postinc2,_loRa+203
  5992                           
  5993                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  5994                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5995  0025FA  0EFD               	movlw	-3
  5996  0025FC  50E3               	movf	plusw1,w,c
  5997  0025FE  E10D               	bnz	u17820
  5998  002600  0EFA               	movlw	-6
  5999  002602  28E3               	incf	plusw1,w,c
  6000  002604  0EFB               	movlw	-5
  6001  002606  CFE3 F04B          	movff	plusw1,btemp+1
  6002  00260A  0EFF               	movlw	255
  6003  00260C  5A4B               	subwfb	btemp+1,f,c
  6004  00260E  0EFC               	movlw	-4
  6005  002610  CFE3 F04B          	movff	plusw1,btemp+1
  6006  002614  0E0F               	movlw	15
  6007  002616  5A4B               	subwfb	btemp+1,f,c
  6008  002618  E328               	bnc	l15175
  6009  00261A                     u17820:
  6010                           
  6011                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6012  00261A  50E1               	movf	fsr1l,w,c
  6013  00261C  0FFA               	addlw	-6
  6014  00261E  6ED9               	movwf	fsr2l,c
  6015  002620  50E2               	movf	fsr1h,w,c
  6016  002622  6EDA               	movwf	fsr2h,c
  6017  002624  0EFF               	movlw	255
  6018  002626  22DA               	addwfc	fsr2h,f,c
  6019  002628  CFDE F064          	movff	postinc2,___lldiv@dividend
  6020  00262C  CFDE F065          	movff	postinc2,___lldiv@dividend+1
  6021  002630  CFDE F066          	movff	postinc2,___lldiv@dividend+2
  6022  002634  CFDE F067          	movff	postinc2,___lldiv@dividend+3
  6023  002638  0E7D               	movlw	125
  6024  00263A  0100               	movlb	0	; () banked
  6025  00263C  6F68               	movwf	___lldiv@divisor& (0+255),b
  6026  00263E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6027  002640  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6028  002642  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6029  002644  ECAA  F030         	call	___lldiv	;wreg free
  6030  002648  C064  F052         	movff	?___lldiv,btemp+8
  6031  00264C  C065  F053         	movff	?___lldiv+1,btemp+9
  6032  002650  C066  F054         	movff	?___lldiv+2,btemp+10
  6033  002654  C067  F055         	movff	?___lldiv+3,btemp+11
  6034  002658  0E0C               	movlw	12
  6035  00265A                     u17835:
  6036  00265A  90D8               	bcf	status,0,c
  6037  00265C  3652               	rlcf	btemp+8,f,c
  6038  00265E  3653               	rlcf	btemp+9,f,c
  6039  002660  3654               	rlcf	btemp+10,f,c
  6040  002662  3655               	rlcf	btemp+11,f,c
  6041  002664  2EE8               	decfsz	wreg,f,c
  6042  002666  D7F9               	goto	u17835
  6043  002668  D02C               	goto	L1
  6044  00266A                     l15175:
  6045                           
  6046                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6047  00266A  0EFA               	movlw	-6
  6048  00266C  CFE3 F052          	movff	plusw1,btemp+8
  6049  002670  0EFB               	movlw	-5
  6050  002672  CFE3 F053          	movff	plusw1,btemp+9
  6051  002676  0EFC               	movlw	-4
  6052  002678  CFE3 F054          	movff	plusw1,btemp+10
  6053  00267C  0EFD               	movlw	-3
  6054  00267E  CFE3 F055          	movff	plusw1,btemp+11
  6055  002682  0E0C               	movlw	12
  6056  002684                     u17845:
  6057  002684  90D8               	bcf	status,0,c
  6058  002686  3652               	rlcf	btemp+8,f,c
  6059  002688  3653               	rlcf	btemp+9,f,c
  6060  00268A  3654               	rlcf	btemp+10,f,c
  6061  00268C  3655               	rlcf	btemp+11,f,c
  6062  00268E  2EE8               	decfsz	wreg,f,c
  6063  002690  D7F9               	goto	u17845
  6064  002692  C052  F064         	movff	btemp+8,___lldiv@dividend
  6065  002696  C053  F065         	movff	btemp+9,___lldiv@dividend+1
  6066  00269A  C054  F066         	movff	btemp+10,___lldiv@dividend+2
  6067  00269E  C055  F067         	movff	btemp+11,___lldiv@dividend+3
  6068  0026A2  0E7D               	movlw	125
  6069  0026A4  0100               	movlb	0	; () banked
  6070  0026A6  6F68               	movwf	___lldiv@divisor& (0+255),b
  6071  0026A8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6072  0026AA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6073  0026AC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6074  0026AE  ECAA  F030         	call	___lldiv	;wreg free
  6075  0026B2  C064  F052         	movff	?___lldiv,btemp+8
  6076  0026B6  C065  F053         	movff	?___lldiv+1,btemp+9
  6077  0026BA  C066  F054         	movff	?___lldiv+2,btemp+10
  6078  0026BE  C067  F055         	movff	?___lldiv+3,btemp+11
  6079  0026C2                     L1:
  6080                           
  6081                           ;stkvar	_DutyCycleCallback$2124 @ sp[(-10)+0]
  6082  0026C2  0EF6               	movlw	-10
  6083  0026C4  C052  FFE3         	movff	btemp+8,plusw1
  6084  0026C8  0EF7               	movlw	-9
  6085  0026CA  C053  FFE3         	movff	btemp+9,plusw1
  6086  0026CE  0EF8               	movlw	-8
  6087  0026D0  C054  FFE3         	movff	btemp+10,plusw1
  6088  0026D4  0EF9               	movlw	-7
  6089  0026D6  C055  FFE3         	movff	btemp+11,plusw1
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;stkvar	_DutyCycleCallback$2124 @ sp[(-10)+0]
  6093  0026DA  50E1               	movf	fsr1l,w,c
  6094  0026DC  0FF6               	addlw	-10
  6095  0026DE  6ED9               	movwf	fsr2l,c
  6096  0026E0  50E2               	movf	fsr1h,w,c
  6097  0026E2  6EDA               	movwf	fsr2h,c
  6098  0026E4  0EFF               	movlw	255
  6099  0026E6  22DA               	addwfc	fsr2h,f,c
  6100  0026E8  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6101  0026EC  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6102  0026F0  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6103  0026F4  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6104  0026F8  0102               	movlb	2	; () banked
  6105  0026FA  51E9               	movf	(_loRa+233)& (0+255),w,b
  6106  0026FC  ECE5  F036         	call	_SwTimerSetTimeout
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  6110  002700  0102               	movlb	2	; () banked
  6111  002702  51E9               	movf	(_loRa+233)& (0+255),w,b
  6112  002704  ECAA  F02E         	call	_SwTimerStart
  6113  002708                     l1316:
  6114                           
  6115                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6116  002708  0EF5               	movlw	245
  6117  00270A  26E1               	addwf	fsr1l,f,c
  6118  00270C  0EFF               	movlw	255
  6119  00270E  22E2               	addwfc	fsr1h,f,c
  6120  002710  0CFF               	retlw	255	;funcret
  6121  002712                     __end_of_DutyCycleCallback:
  6122                           	opt stack 0
  6123                           tosu	equ	0xFFF
  6124                           tosh	equ	0xFFE
  6125                           tosl	equ	0xFFD
  6126                           pclath	equ	0xFFA
  6127                           tblptru	equ	0xFF8
  6128                           tblptrh	equ	0xFF7
  6129                           tblptrl	equ	0xFF6
  6130                           tablat	equ	0xFF5
  6131                           prodh	equ	0xFF4
  6132                           prodl	equ	0xFF3
  6133                           intcon	equ	0xFF2
  6134                           postinc0	equ	0xFEE
  6135                           wreg	equ	0xFE8
  6136                           postinc1	equ	0xFE6
  6137                           plusw1	equ	0xFE3
  6138                           fsr1h	equ	0xFE2
  6139                           fsr1l	equ	0xFE1
  6140                           indf2	equ	0xFDF
  6141                           postinc2	equ	0xFDE
  6142                           postdec2	equ	0xFDD
  6143                           fsr2h	equ	0xFDA
  6144                           fsr2l	equ	0xFD9
  6145                           status	equ	0xFD8
  6146                           
  6147 ;; *************** function _UpdateJoinSuccessState *****************
  6148 ;; Defined at:
  6149 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  param           1  [STACK] unsigned char 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1  [STACK] void 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prod
      +h, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : F/0
  6160 ;;		On exit  : F/1
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6163 ;;      Params:         0       0       0       0       0       0       0       0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6166 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6167 ;;Total ram usage:        0 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:   11
  6170 ;; This function calls:
  6171 ;;		_RxJoinResponse
  6172 ;;		_SwTimerSetTimeout
  6173 ;;		_SwTimerStart
  6174 ;;		___lldiv
  6175 ;; This function is called by:
  6176 ;;		_SetCallbackSoftwareTimers
  6177 ;;		_LORAWAN_RxDone
  6178 ;;		_SwTimersExecute
  6179 ;; This function uses a reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text36
  6183  004554                     __ptext36:
  6184                           	opt stack 0
  6185  004554                     _UpdateJoinSuccessState:
  6186                           	opt stack 0
  6187                           
  6188                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6189  004554  52E6               	movf	postinc1,f,c
  6190  004556  52E6               	movf	postinc1,f,c
  6191  004558  52E6               	movf	postinc1,f,c
  6192  00455A  52E6               	movf	postinc1,f,c
  6193                           
  6194                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  6195                           
  6196                           ;incstack = 0
  6197  00455C  0102               	movlb	2	; () banked
  6198  00455E  9500               	bcf	_loRa& (0+255),2,b
  6199                           
  6200                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  6201  004560  8902               	bsf	(_loRa+2)& (0+255),4,b
  6202                           
  6203                           ; BSR set to: 2
  6204                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  6205  004562  0EF0               	movlw	-16
  6206  004564  1702               	andwf	(_loRa+2)& (0+255),f,b
  6207                           
  6208                           ; BSR set to: 2
  6209                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  6210  004566  6BD0               	clrf	(_loRa+208)& (0+255),b
  6211  004568  6BD1               	clrf	(_loRa+209)& (0+255),b
  6212                           
  6213                           ; BSR set to: 2
  6214                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  6215  00456A  6BEE               	clrf	(_loRa+238)& (0+255),b
  6216                           
  6217                           ; BSR set to: 2
  6218                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  6219  00456C  A503               	btfss	(_loRa+3)& (0+255),2,b
  6220  00456E  D074               	goto	l14013
  6221                           
  6222                           ; BSR set to: 2
  6223                           ;lorawan.c: 1052: {
  6224                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6225  004570  51CF               	movf	(_loRa+207)& (0+255),w,b
  6226  004572  E106               	bnz	u15770
  6227  004574  29CC               	incf	(_loRa+204)& (0+255),w,b
  6228  004576  0EFF               	movlw	255
  6229  004578  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6230  00457A  0E0F               	movlw	15
  6231  00457C  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6232  00457E  E321               	bnc	l14007
  6233  004580                     u15770:
  6234                           
  6235                           ; BSR set to: 2
  6236  004580  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6237  004584  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6238  004588  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6239  00458C  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6240  004590  0E7D               	movlw	125
  6241  004592  0100               	movlb	0	; () banked
  6242  004594  6F68               	movwf	___lldiv@divisor& (0+255),b
  6243  004596  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6244  004598  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6245  00459A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6246  00459C  ECAA  F030         	call	___lldiv	;wreg free
  6247  0045A0  C064  F052         	movff	?___lldiv,btemp+8
  6248  0045A4  C065  F053         	movff	?___lldiv+1,btemp+9
  6249  0045A8  C066  F054         	movff	?___lldiv+2,btemp+10
  6250  0045AC  C067  F055         	movff	?___lldiv+3,btemp+11
  6251  0045B0  0E0C               	movlw	12
  6252  0045B2                     u15785:
  6253  0045B2  90D8               	bcf	status,0,c
  6254  0045B4  3652               	rlcf	btemp+8,f,c
  6255  0045B6  3653               	rlcf	btemp+9,f,c
  6256  0045B8  3654               	rlcf	btemp+10,f,c
  6257  0045BA  3655               	rlcf	btemp+11,f,c
  6258  0045BC  2EE8               	decfsz	wreg,f,c
  6259  0045BE  D7F9               	goto	u15785
  6260  0045C0  D028               	goto	L2
  6261  0045C2                     l14007:
  6262                           
  6263                           ; BSR set to: 2
  6264  0045C2  C2CC  F052         	movff	_loRa+204,btemp+8
  6265  0045C6  C2CD  F053         	movff	_loRa+205,btemp+9
  6266  0045CA  C2CE  F054         	movff	_loRa+206,btemp+10
  6267  0045CE  C2CF  F055         	movff	_loRa+207,btemp+11
  6268  0045D2  0E0C               	movlw	12
  6269  0045D4                     u15795:
  6270  0045D4  90D8               	bcf	status,0,c
  6271  0045D6  3652               	rlcf	btemp+8,f,c
  6272  0045D8  3653               	rlcf	btemp+9,f,c
  6273  0045DA  3654               	rlcf	btemp+10,f,c
  6274  0045DC  3655               	rlcf	btemp+11,f,c
  6275  0045DE  2EE8               	decfsz	wreg,f,c
  6276  0045E0  D7F9               	goto	u15795
  6277  0045E2  C052  F064         	movff	btemp+8,___lldiv@dividend
  6278  0045E6  C053  F065         	movff	btemp+9,___lldiv@dividend+1
  6279  0045EA  C054  F066         	movff	btemp+10,___lldiv@dividend+2
  6280  0045EE  C055  F067         	movff	btemp+11,___lldiv@dividend+3
  6281  0045F2  0E7D               	movlw	125
  6282  0045F4  0100               	movlb	0	; () banked
  6283  0045F6  6F68               	movwf	___lldiv@divisor& (0+255),b
  6284  0045F8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6285  0045FA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6286  0045FC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6287  0045FE  ECAA  F030         	call	___lldiv	;wreg free
  6288  004602  C064  F052         	movff	?___lldiv,btemp+8
  6289  004606  C065  F053         	movff	?___lldiv+1,btemp+9
  6290  00460A  C066  F054         	movff	?___lldiv+2,btemp+10
  6291  00460E  C067  F055         	movff	?___lldiv+3,btemp+11
  6292  004612                     L2:
  6293                           
  6294                           ;stkvar	_UpdateJoinSuccessState$3316 @ sp[(-4)+0]
  6295  004612  0EFC               	movlw	-4
  6296  004614  C052  FFE3         	movff	btemp+8,plusw1
  6297  004618  0EFD               	movlw	-3
  6298  00461A  C053  FFE3         	movff	btemp+9,plusw1
  6299  00461E  0EFE               	movlw	-2
  6300  004620  C054  FFE3         	movff	btemp+10,plusw1
  6301  004624  0EFF               	movlw	-1
  6302  004626  C055  FFE3         	movff	btemp+11,plusw1
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;stkvar	_UpdateJoinSuccessState$3316 @ sp[(-4)+0]
  6306  00462A  50E1               	movf	fsr1l,w,c
  6307  00462C  0FFC               	addlw	-4
  6308  00462E  6ED9               	movwf	fsr2l,c
  6309  004630  50E2               	movf	fsr1h,w,c
  6310  004632  6EDA               	movwf	fsr2h,c
  6311  004634  0EFF               	movlw	255
  6312  004636  22DA               	addwfc	fsr2h,f,c
  6313  004638  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6314  00463C  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6315  004640  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6316  004644  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6317  004648  0102               	movlb	2	; () banked
  6318  00464A  51E7               	movf	(_loRa+231)& (0+255),w,b
  6319  00464C  ECE5  F036         	call	_SwTimerSetTimeout
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  6323  004650  0102               	movlb	2	; () banked
  6324  004652  51E7               	movf	(_loRa+231)& (0+255),w,b
  6325  004654  ECAA  F02E         	call	_SwTimerStart
  6326  004658                     l14013:
  6327                           
  6328                           ;lorawan.c: 1055: }
  6329                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  6330  004658  0101               	movlb	1	; () banked
  6331  00465A  5174               	movf	(_rxPayload+2)& (0+255),w,b
  6332  00465C  1175               	iorwf	(_rxPayload+3)& (0+255),w,b
  6333  00465E  E00E               	bz	l2111
  6334                           
  6335                           ; BSR set to: 1
  6336                           ;lorawan.c: 1058: {
  6337                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  6338  004660  EE21  F074         	lfsr	2,_rxPayload+2
  6339  004664  D801               	call	u15818
  6340  004666  D00A               	goto	l2111
  6341  004668                     u15818:
  6342  004668  0005               	push	
  6343  00466A  6EFA               	movwf	pclath,c
  6344  00466C  50DE               	movf	postinc2,w,c
  6345  00466E  6EFD               	movwf	tosl,c
  6346  004670  50DE               	movf	postinc2,w,c
  6347  004672  6EFE               	movwf	tosh,c
  6348  004674  50F8               	movf	tblptru,w,c
  6349  004676  6EFF               	movwf	tosu,c
  6350  004678  50FA               	movf	pclath,w,c
  6351  00467A  0C01               	retlw	1	;indir
  6352  00467C                     l2111:
  6353                           
  6354                           ; BSR set to: 1
  6355                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6356  00467C  0EFB               	movlw	251
  6357  00467E  26E1               	addwf	fsr1l,f,c
  6358  004680  0EFF               	movlw	255
  6359  004682  22E2               	addwfc	fsr1h,f,c
  6360  004684  0CFF               	retlw	255	;funcret
  6361  004686                     __end_of_UpdateJoinSuccessState:
  6362                           	opt stack 0
  6363                           tosu	equ	0xFFF
  6364                           tosh	equ	0xFFE
  6365                           tosl	equ	0xFFD
  6366                           pclath	equ	0xFFA
  6367                           tblptru	equ	0xFF8
  6368                           tblptrh	equ	0xFF7
  6369                           tblptrl	equ	0xFF6
  6370                           tablat	equ	0xFF5
  6371                           prodh	equ	0xFF4
  6372                           prodl	equ	0xFF3
  6373                           intcon	equ	0xFF2
  6374                           postinc0	equ	0xFEE
  6375                           wreg	equ	0xFE8
  6376                           postinc1	equ	0xFE6
  6377                           plusw1	equ	0xFE3
  6378                           fsr1h	equ	0xFE2
  6379                           fsr1l	equ	0xFE1
  6380                           indf2	equ	0xFDF
  6381                           postinc2	equ	0xFDE
  6382                           postdec2	equ	0xFDD
  6383                           fsr2h	equ	0xFDA
  6384                           fsr2l	equ	0xFD9
  6385                           status	equ	0xFD8
  6386                           
  6387 ;; *************** function _AutomaticReplyCallback *****************
  6388 ;; Defined at:
  6389 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  param           1  [STACK] unsigned char 
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1  [STACK] void 
  6396 ;; Registers used:
  6397 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6398 ;; Tracked objects:
  6399 ;;		On entry : F/0
  6400 ;;		On exit  : F/2
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6403 ;;      Params:         0       0       0       0       0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:   14
  6410 ;; This function calls:
  6411 ;;		_LORAWAN_Send
  6412 ;; This function is called by:
  6413 ;;		_SetCallbackSoftwareTimers
  6414 ;;		_SwTimersExecute
  6415 ;; This function uses a reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text37
  6419  00754E                     __ptext37:
  6420                           	opt stack 0
  6421  00754E                     _AutomaticReplyCallback:
  6422                           	opt stack 14
  6423                           
  6424                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  6425                           
  6426                           ; BSR set to: 1
  6427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6428                           ;incstack = 0
  6429  00754E  0EF0               	movlw	-16
  6430  007550  0102               	movlb	2	; () banked
  6431  007552  1702               	andwf	(_loRa+2)& (0+255),f,b
  6432                           
  6433                           ; BSR set to: 2
  6434                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  6435  007554  0E00               	movlw	0
  6436  007556  0100               	movlb	0	; () banked
  6437  007558  6FE1               	movwf	LORAWAN_Send@port& (0+255),b
  6438  00755A  6FE2               	movwf	LORAWAN_Send@buffer& (0+255),b
  6439  00755C  6FE3               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  6440  00755E  6FE4               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  6441  007560  EC01  F02B         	call	_LORAWAN_Send
  6442                           
  6443                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  6444  007564  0102               	movlb	2	; () banked
  6445  007566  9700               	bcf	_loRa& (0+255),3,b
  6446                           
  6447                           ; BSR set to: 2
  6448                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6449  007568  52E5               	movf	postdec1,f,c
  6450  00756A  0012               	return		;funcret
  6451  00756C                     __end_of_AutomaticReplyCallback:
  6452                           	opt stack 0
  6453                           tosu	equ	0xFFF
  6454                           tosh	equ	0xFFE
  6455                           tosl	equ	0xFFD
  6456                           pclath	equ	0xFFA
  6457                           tblptru	equ	0xFF8
  6458                           tblptrh	equ	0xFF7
  6459                           tblptrl	equ	0xFF6
  6460                           tablat	equ	0xFF5
  6461                           prodh	equ	0xFF4
  6462                           prodl	equ	0xFF3
  6463                           intcon	equ	0xFF2
  6464                           postinc0	equ	0xFEE
  6465                           wreg	equ	0xFE8
  6466                           postinc1	equ	0xFE6
  6467                           postdec1	equ	0xFE5
  6468                           plusw1	equ	0xFE3
  6469                           fsr1h	equ	0xFE2
  6470                           fsr1l	equ	0xFE1
  6471                           indf2	equ	0xFDF
  6472                           postinc2	equ	0xFDE
  6473                           postdec2	equ	0xFDD
  6474                           fsr2h	equ	0xFDA
  6475                           fsr2l	equ	0xFD9
  6476                           status	equ	0xFD8
  6477                           
  6478 ;; *************** function _AckRetransmissionCallback *****************
  6479 ;; Defined at:
  6480 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  param           1  [STACK] unsigned char 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  maximumPacke    1  [STACK] unsigned char 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  1  [STACK] void 
  6487 ;; Registers used:
  6488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6489 ;; Tracked objects:
  6490 ;;		On entry : F/0
  6491 ;;		On exit  : C/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6494 ;;      Params:         0       0       0       0       0       0       0       0       0
  6495 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6497 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6498 ;;Total ram usage:        0 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:   13
  6501 ;; This function calls:
  6502 ;;		_FindSmallestDataRate
  6503 ;;		_LORAWAN_GetMaxPayloadSize
  6504 ;;		_RADIO_Transmit
  6505 ;;		_ResetParametersForConfirmedTransmission
  6506 ;;		_RxDataDone
  6507 ;;		_SelectChannelForTransmission
  6508 ;;		_UpdateRetransmissionAckTimeoutState
  6509 ;; This function is called by:
  6510 ;;		_SetCallbackSoftwareTimers
  6511 ;;		_SwTimersExecute
  6512 ;; This function uses a reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text38
  6516  0049BA                     __ptext38:
  6517                           	opt stack 0
  6518  0049BA                     _AckRetransmissionCallback:
  6519                           	opt stack 0
  6520                           
  6521                           ; BSR set to: 2
  6522                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6523  0049BA  52E6               	movf	postinc1,f,c
  6524                           
  6525                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  6526                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  6527                           
  6528                           ;incstack = 0
  6529  0049BC  0102               	movlb	2	; () banked
  6530  0049BE  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6531  0049C0  D075               	goto	l15285
  6532                           
  6533                           ; BSR set to: 2
  6534                           ;lorawan.c: 939: {
  6535                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  6536  0049C2  51D9               	movf	(_loRa+217)& (0+255),w,b
  6537  0049C4  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6538  0049C6  E354               	bnc	l15275
  6539                           
  6540                           ; BSR set to: 2
  6541                           ;lorawan.c: 941: {
  6542                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  6543  0049C8  EC06  F037         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  6544  0049CC  6E55               	movwf	btemp+11,c
  6545  0049CE  0E0D               	movlw	13
  6546  0049D0  2655               	addwf	btemp+11,f,c
  6547                           
  6548                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6549  0049D2  0EFF               	movlw	-1
  6550  0049D4  C055  FFE3         	movff	btemp+11,plusw1
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  6554                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6555  0049D8  50E3               	movf	plusw1,w,c
  6556  0049DA  6E4B               	movwf	btemp+1,c
  6557  0049DC  6A4C               	clrf	btemp+2,c
  6558  0049DE  0102               	movlb	2	; () banked
  6559  0049E0  51D4               	movf	(_loRa+212)& (0+255),w,b
  6560  0049E2  5C4B               	subwf	btemp+1,w,c
  6561  0049E4  51D5               	movf	(_loRa+213)& (0+255),w,b
  6562  0049E6  584C               	subwfb	btemp+2,w,c
  6563  0049E8  E333               	bnc	l15269
  6564                           
  6565                           ; BSR set to: 2
  6566                           ;lorawan.c: 946: {
  6567                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  6568  0049EA  0E01               	movlw	1
  6569  0049EC  EC57  F033         	call	_SelectChannelForTransmission
  6570  0049F0  0900               	iorlw	0
  6571  0049F2  E12B               	bnz	l15265
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;lorawan.c: 948: {
  6575                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  6576  0049F4  0EF0               	movlw	low (_macBuffer+16)
  6577  0049F6  6F94               	movwf	RADIO_Transmit@buffer& (0+255),b
  6578  0049F8  0E04               	movlw	high (_macBuffer+16)
  6579  0049FA  6F95               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6580  0049FC  C2D4  F096         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6581  004A00  ECFA  F017         	call	_RADIO_Transmit	;wreg free
  6582  004A04  C094  F04B         	movff	?_RADIO_Transmit,btemp+1
  6583  004A08  C095  F04C         	movff	?_RADIO_Transmit+1,btemp+2
  6584  004A0C  504B               	movf	btemp+1,w,c
  6585  004A0E  104C               	iorwf	btemp+2,w,c
  6586  004A10  E11C               	bnz	l15265
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;lorawan.c: 951: {
  6590                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6591  004A12  0102               	movlb	2	; () banked
  6592  004A14  5102               	movf	(_loRa+2)& (0+255),w,b
  6593  004A16  0BF0               	andlw	-16
  6594  004A18  0901               	iorlw	1
  6595  004A1A  6F02               	movwf	(_loRa+2)& (0+255),b
  6596                           
  6597                           ; BSR set to: 2
  6598                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6599  004A1C  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6600                           
  6601                           ; BSR set to: 2
  6602                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6603  004A1E  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6604  004A20  D047               	goto	l2084
  6605                           
  6606                           ; BSR set to: 2
  6607  004A22  51DF               	movf	(_loRa+223)& (0+255),w,b
  6608  004A24  E045               	bz	l2084
  6609                           
  6610                           ; BSR set to: 2
  6611  004A26  51D9               	movf	(_loRa+217)& (0+255),w,b
  6612  004A28  6E4B               	movwf	btemp+1,c
  6613  004A2A  6A4C               	clrf	btemp+2,c
  6614  004A2C  51D7               	movf	(_loRa+215)& (0+255),w,b
  6615  004A2E  6E54               	movwf	btemp+10,c
  6616  004A30  6A55               	clrf	btemp+11,c
  6617  004A32  2A54               	incf	btemp+10,f,c
  6618  004A34  0E00               	movlw	0
  6619  004A36  2255               	addwfc	btemp+11,f,c
  6620  004A38  504B               	movf	btemp+1,w,c
  6621  004A3A  1854               	xorwf	btemp+10,w,c
  6622  004A3C  E103               	bnz	u18050
  6623  004A3E  504C               	movf	btemp+2,w,c
  6624  004A40  1855               	xorwf	btemp+11,w,c
  6625  004A42  E036               	bz	l2084
  6626  004A44                     u18050:
  6627                           
  6628                           ; BSR set to: 2
  6629                           ;lorawan.c: 957: {
  6630                           ;lorawan.c: 958: FindSmallestDataRate();
  6631  004A44  EC75  F02D         	call	_FindSmallestDataRate	;wreg free
  6632  004A48  D033               	goto	l2084
  6633  004A4A                     l15265:
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;lorawan.c: 961: else
  6637                           ;lorawan.c: 962: {
  6638                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  6639  004A4A  EC8C  F031         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  6640  004A4E  D030               	goto	l2084
  6641  004A50                     l15269:
  6642                           
  6643                           ; BSR set to: 2
  6644                           ;lorawan.c: 973: else
  6645                           ;lorawan.c: 974: {
  6646                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  6647  004A50  EC15  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6648                           
  6649                           ; BSR set to: 2
  6650                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  6651  004A54  0101               	movlb	1	; () banked
  6652  004A56  5172               	movf	_rxPayload& (0+255),w,b
  6653  004A58  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
  6654  004A5A  E02A               	bz	l2084
  6655                           
  6656                           ; BSR set to: 1
  6657                           ;lorawan.c: 977: {
  6658                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  6659  004A5C  0E00               	movlw	0
  6660  004A5E  0100               	movlb	0	; () banked
  6661  004A60  6F64               	movwf	RxDataDone@pData& (0+255),b
  6662  004A62  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
  6663  004A64  6F66               	movwf	RxDataDone@dataLength& (0+255),b
  6664  004A66  0E04               	movlw	4
  6665  004A68  6F67               	movwf	RxDataDone@status& (0+255),b
  6666  004A6A  D801               	call	u18078
  6667  004A6C  D021               	goto	l2084
  6668  004A6E                     u18078:
  6669  004A6E  D013               	goto	u18118
  6670  004A70                     l15275:
  6671                           
  6672                           ; BSR set to: 2
  6673                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  6674  004A70  51D9               	movf	(_loRa+217)& (0+255),w,b
  6675  004A72  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6676  004A74  E21D               	bc	l2084
  6677                           
  6678                           ; BSR set to: 2
  6679  004A76  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6680  004A78  D01B               	goto	l2084
  6681                           
  6682                           ; BSR set to: 2
  6683                           ;lorawan.c: 983: {
  6684                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  6685  004A7A  EC15  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6686                           
  6687                           ; BSR set to: 2
  6688                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  6689  004A7E  0101               	movlb	1	; () banked
  6690  004A80  5172               	movf	_rxPayload& (0+255),w,b
  6691  004A82  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
  6692  004A84  E015               	bz	l2084
  6693                           
  6694                           ; BSR set to: 1
  6695                           ;lorawan.c: 986: {
  6696                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6697  004A86  0E00               	movlw	0
  6698  004A88  0100               	movlb	0	; () banked
  6699  004A8A  6F64               	movwf	RxDataDone@pData& (0+255),b
  6700  004A8C  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
  6701  004A8E  6F66               	movwf	RxDataDone@dataLength& (0+255),b
  6702  004A90  6F67               	movwf	RxDataDone@status& (0+255),b
  6703  004A92  D801               	call	u18118
  6704  004A94  D00D               	goto	l2084
  6705  004A96                     u18118:
  6706  004A96  0005               	push	
  6707  004A98  0101               	movlb	1	; () banked
  6708  004A9A  6EFA               	movwf	pclath,c
  6709  004A9C  5172               	movf	_rxPayload& (0+255),w,b
  6710  004A9E  6EFD               	movwf	tosl,c
  6711  004AA0  5173               	movf	(_rxPayload+1)& (0+255),w,b
  6712  004AA2  6EFE               	movwf	tosh,c
  6713  004AA4  50F8               	movf	tblptru,w,c
  6714  004AA6  6EFF               	movwf	tosu,c
  6715  004AA8  50FA               	movf	pclath,w,c
  6716  004AAA  0012               	return		;indir
  6717  004AAC                     l15285:
  6718                           
  6719                           ; BSR set to: 2
  6720                           ;lorawan.c: 991: else
  6721                           ;lorawan.c: 992: {
  6722                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  6723  004AAC  EC15  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6724  004AB0                     l2084:
  6725                           
  6726                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6727  004AB0  52E5               	movf	postdec1,f,c
  6728  004AB2  52E5               	movf	postdec1,f,c
  6729  004AB4  0012               	return		;funcret
  6730  004AB6                     __end_of_AckRetransmissionCallback:
  6731                           	opt stack 0
  6732                           tosu	equ	0xFFF
  6733                           tosh	equ	0xFFE
  6734                           tosl	equ	0xFFD
  6735                           pclath	equ	0xFFA
  6736                           tblptru	equ	0xFF8
  6737                           tblptrh	equ	0xFF7
  6738                           tblptrl	equ	0xFF6
  6739                           tablat	equ	0xFF5
  6740                           prodh	equ	0xFF4
  6741                           prodl	equ	0xFF3
  6742                           intcon	equ	0xFF2
  6743                           postinc0	equ	0xFEE
  6744                           wreg	equ	0xFE8
  6745                           postinc1	equ	0xFE6
  6746                           postdec1	equ	0xFE5
  6747                           plusw1	equ	0xFE3
  6748                           fsr1h	equ	0xFE2
  6749                           fsr1l	equ	0xFE1
  6750                           indf2	equ	0xFDF
  6751                           postinc2	equ	0xFDE
  6752                           postdec2	equ	0xFDD
  6753                           fsr2h	equ	0xFDA
  6754                           fsr2l	equ	0xFD9
  6755                           status	equ	0xFD8
  6756                           
  6757 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  6758 ;; Defined at:
  6759 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  param           1  [STACK] unsigned char 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;  iCtr            1  [STACK] unsigned char 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  1  [STACK] void 
  6766 ;; Registers used:
  6767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, c
      +stack
  6768 ;; Tracked objects:
  6769 ;;		On entry : F/0
  6770 ;;		On exit  : D/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6773 ;;      Params:         0       0       0       0       0       0       0       0       0
  6774 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6776 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6777 ;;Total ram usage:        0 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:   11
  6780 ;; This function calls:
  6781 ;;		_SwTimerSetTimeout
  6782 ;;		_SwTimerStart
  6783 ;;		___lldiv
  6784 ;; This function is called by:
  6785 ;;		_SetCallbackSoftwareTimers
  6786 ;;		_SwTimersExecute
  6787 ;; This function uses a reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text39
  6791  00402C                     __ptext39:
  6792                           	opt stack 0
  6793  00402C                     _LORAWAN_LinkCheckCallback:
  6794                           	opt stack 0
  6795                           
  6796                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6797  00402C  0E05               	movlw	5
  6798  00402E  26E1               	addwf	fsr1l,f,c
  6799  004030  0E00               	movlw	0
  6800  004032  22E2               	addwfc	fsr1h,f,c
  6801                           
  6802                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  6803                           
  6804                           ;incstack = 0
  6805  004034  0102               	movlb	2	; () banked
  6806  004036  A103               	btfss	(_loRa+3)& (0+255),0,b
  6807                           
  6808                           ; BSR set to: 2
  6809  004038  A503               	btfss	(_loRa+3)& (0+255),2,b
  6810  00403A  D029               	goto	l15229
  6811                           
  6812                           ; BSR set to: 2
  6813                           ;lorawan.c: 886: {
  6814                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  6815                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6816  00403C  0EFF               	movlw	-1
  6817  00403E  6AE3               	clrf	plusw1,c
  6818  004040  D00E               	goto	l15219
  6819  004042                     l15213:
  6820                           
  6821                           ; BSR set to: 2
  6822                           ;lorawan.c: 889: {
  6823                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  6824                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6825  004042  0EFF               	movlw	-1
  6826  004044  50E3               	movf	plusw1,w,c
  6827  004046  0D02               	mullw	2
  6828  004048  0EA8               	movlw	low (_loRa+168)
  6829  00404A  24F3               	addwf	prodl,w,c
  6830  00404C  6ED9               	movwf	fsr2l,c
  6831  00404E  0E02               	movlw	high (_loRa+168)
  6832  004050  20F4               	addwfc	prodh,w,c
  6833  004052  6EDA               	movwf	fsr2h,c
  6834  004054  0E02               	movlw	2
  6835  004056  18DE               	xorwf	postinc2,w,c
  6836  004058  E008               	bz	l15221
  6837                           
  6838                           ; BSR set to: 2
  6839                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6840  00405A  0EFF               	movlw	-1
  6841  00405C  2AE3               	incf	plusw1,f,c
  6842  00405E                     l15219:
  6843                           
  6844                           ; BSR set to: 2
  6845                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6846  00405E  0EFF               	movlw	-1
  6847  004060  CFE3 F04B          	movff	plusw1,btemp+1
  6848  004064  51A7               	movf	(_loRa+167)& (0+255),w,b
  6849  004066  5C4B               	subwf	btemp+1,w,c
  6850  004068  E3EC               	bnc	l15213
  6851  00406A                     l15221:
  6852                           
  6853                           ; BSR set to: 2
  6854                           ;lorawan.c: 893: }
  6855                           ;lorawan.c: 894: }
  6856                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  6857                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6858  00406A  0EFF               	movlw	-1
  6859  00406C  50E3               	movf	plusw1,w,c
  6860  00406E  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  6861  004070  E10E               	bnz	l15229
  6862                           
  6863                           ; BSR set to: 2
  6864                           ;lorawan.c: 897: {
  6865                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  6866  004072  51A7               	movf	(_loRa+167)& (0+255),w,b
  6867  004074  0D02               	mullw	2
  6868  004076  0EA8               	movlw	low (_loRa+168)
  6869  004078  24F3               	addwf	prodl,w,c
  6870  00407A  6ED9               	movwf	fsr2l,c
  6871  00407C  0E02               	movlw	high (_loRa+168)
  6872  00407E  20F4               	addwfc	prodh,w,c
  6873  004080  6EDA               	movwf	fsr2h,c
  6874  004082  0E02               	movlw	2
  6875  004084  6EDF               	movwf	indf2,c
  6876                           
  6877                           ; BSR set to: 2
  6878                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  6879  004086  0E10               	movlw	16
  6880  004088  61A7               	cpfslt	(_loRa+167)& (0+255),b
  6881  00408A  D001               	goto	l15229
  6882                           
  6883                           ; BSR set to: 2
  6884                           ;lorawan.c: 901: {
  6885                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  6886  00408C  2BA7               	incf	(_loRa+167)& (0+255),f,b
  6887  00408E                     l15229:
  6888                           
  6889                           ; BSR set to: 2
  6890                           ;lorawan.c: 903: }
  6891                           ;lorawan.c: 904: }
  6892                           ;lorawan.c: 905: }
  6893                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  6894  00408E  A503               	btfss	(_loRa+3)& (0+255),2,b
  6895  004090  D074               	goto	l2062
  6896                           
  6897                           ; BSR set to: 2
  6898                           ;lorawan.c: 909: {
  6899                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6900  004092  51CF               	movf	(_loRa+207)& (0+255),w,b
  6901  004094  E106               	bnz	u17950
  6902  004096  29CC               	incf	(_loRa+204)& (0+255),w,b
  6903  004098  0EFF               	movlw	255
  6904  00409A  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6905  00409C  0E0F               	movlw	15
  6906  00409E  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6907  0040A0  E321               	bnc	l15235
  6908  0040A2                     u17950:
  6909                           
  6910                           ; BSR set to: 2
  6911  0040A2  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6912  0040A6  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6913  0040AA  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6914  0040AE  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6915  0040B2  0E7D               	movlw	125
  6916  0040B4  0100               	movlb	0	; () banked
  6917  0040B6  6F68               	movwf	___lldiv@divisor& (0+255),b
  6918  0040B8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6919  0040BA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6920  0040BC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6921  0040BE  ECAA  F030         	call	___lldiv	;wreg free
  6922  0040C2  C064  F052         	movff	?___lldiv,btemp+8
  6923  0040C6  C065  F053         	movff	?___lldiv+1,btemp+9
  6924  0040CA  C066  F054         	movff	?___lldiv+2,btemp+10
  6925  0040CE  C067  F055         	movff	?___lldiv+3,btemp+11
  6926  0040D2  0E0C               	movlw	12
  6927  0040D4                     u17965:
  6928  0040D4  90D8               	bcf	status,0,c
  6929  0040D6  3652               	rlcf	btemp+8,f,c
  6930  0040D8  3653               	rlcf	btemp+9,f,c
  6931  0040DA  3654               	rlcf	btemp+10,f,c
  6932  0040DC  3655               	rlcf	btemp+11,f,c
  6933  0040DE  2EE8               	decfsz	wreg,f,c
  6934  0040E0  D7F9               	goto	u17965
  6935  0040E2  D028               	goto	L3
  6936  0040E4                     l15235:
  6937                           
  6938                           ; BSR set to: 2
  6939  0040E4  C2CC  F052         	movff	_loRa+204,btemp+8
  6940  0040E8  C2CD  F053         	movff	_loRa+205,btemp+9
  6941  0040EC  C2CE  F054         	movff	_loRa+206,btemp+10
  6942  0040F0  C2CF  F055         	movff	_loRa+207,btemp+11
  6943  0040F4  0E0C               	movlw	12
  6944  0040F6                     u17975:
  6945  0040F6  90D8               	bcf	status,0,c
  6946  0040F8  3652               	rlcf	btemp+8,f,c
  6947  0040FA  3653               	rlcf	btemp+9,f,c
  6948  0040FC  3654               	rlcf	btemp+10,f,c
  6949  0040FE  3655               	rlcf	btemp+11,f,c
  6950  004100  2EE8               	decfsz	wreg,f,c
  6951  004102  D7F9               	goto	u17975
  6952  004104  C052  F064         	movff	btemp+8,___lldiv@dividend
  6953  004108  C053  F065         	movff	btemp+9,___lldiv@dividend+1
  6954  00410C  C054  F066         	movff	btemp+10,___lldiv@dividend+2
  6955  004110  C055  F067         	movff	btemp+11,___lldiv@dividend+3
  6956  004114  0E7D               	movlw	125
  6957  004116  0100               	movlb	0	; () banked
  6958  004118  6F68               	movwf	___lldiv@divisor& (0+255),b
  6959  00411A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6960  00411C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6961  00411E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6962  004120  ECAA  F030         	call	___lldiv	;wreg free
  6963  004124  C064  F052         	movff	?___lldiv,btemp+8
  6964  004128  C065  F053         	movff	?___lldiv+1,btemp+9
  6965  00412C  C066  F054         	movff	?___lldiv+2,btemp+10
  6966  004130  C067  F055         	movff	?___lldiv+3,btemp+11
  6967  004134                     L3:
  6968                           
  6969                           ;stkvar	_LORAWAN_LinkCheckCallback$3299 @ sp[(-5)+0]
  6970  004134  0EFB               	movlw	-5
  6971  004136  C052  FFE3         	movff	btemp+8,plusw1
  6972  00413A  0EFC               	movlw	-4
  6973  00413C  C053  FFE3         	movff	btemp+9,plusw1
  6974  004140  0EFD               	movlw	-3
  6975  004142  C054  FFE3         	movff	btemp+10,plusw1
  6976  004146  0EFE               	movlw	-2
  6977  004148  C055  FFE3         	movff	btemp+11,plusw1
  6978                           
  6979                           ; BSR set to: 0
  6980                           ;stkvar	_LORAWAN_LinkCheckCallback$3299 @ sp[(-5)+0]
  6981  00414C  50E1               	movf	fsr1l,w,c
  6982  00414E  0FFB               	addlw	-5
  6983  004150  6ED9               	movwf	fsr2l,c
  6984  004152  50E2               	movf	fsr1h,w,c
  6985  004154  6EDA               	movwf	fsr2h,c
  6986  004156  0EFF               	movlw	255
  6987  004158  22DA               	addwfc	fsr2h,f,c
  6988  00415A  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6989  00415E  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6990  004162  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6991  004166  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6992  00416A  0102               	movlb	2	; () banked
  6993  00416C  51E7               	movf	(_loRa+231)& (0+255),w,b
  6994  00416E  ECE5  F036         	call	_SwTimerSetTimeout
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  6998  004172  0102               	movlb	2	; () banked
  6999  004174  51E7               	movf	(_loRa+231)& (0+255),w,b
  7000  004176  ECAA  F02E         	call	_SwTimerStart
  7001  00417A                     l2062:
  7002                           
  7003                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7004  00417A  0EFA               	movlw	250
  7005  00417C  26E1               	addwf	fsr1l,f,c
  7006  00417E  0EFF               	movlw	255
  7007  004180  22E2               	addwfc	fsr1h,f,c
  7008  004182  0CFF               	retlw	255	;funcret
  7009  004184                     __end_of_LORAWAN_LinkCheckCallback:
  7010                           	opt stack 0
  7011                           tosu	equ	0xFFF
  7012                           tosh	equ	0xFFE
  7013                           tosl	equ	0xFFD
  7014                           pclath	equ	0xFFA
  7015                           tblptru	equ	0xFF8
  7016                           tblptrh	equ	0xFF7
  7017                           tblptrl	equ	0xFF6
  7018                           tablat	equ	0xFF5
  7019                           prodh	equ	0xFF4
  7020                           prodl	equ	0xFF3
  7021                           intcon	equ	0xFF2
  7022                           postinc0	equ	0xFEE
  7023                           wreg	equ	0xFE8
  7024                           postinc1	equ	0xFE6
  7025                           postdec1	equ	0xFE5
  7026                           plusw1	equ	0xFE3
  7027                           fsr1h	equ	0xFE2
  7028                           fsr1l	equ	0xFE1
  7029                           indf2	equ	0xFDF
  7030                           postinc2	equ	0xFDE
  7031                           postdec2	equ	0xFDD
  7032                           fsr2h	equ	0xFDA
  7033                           fsr2l	equ	0xFD9
  7034                           status	equ	0xFD8
  7035                           
  7036 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  7037 ;; Defined at:
  7038 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  param           1  [STACK] unsigned char 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  freq            4  [STACK] unsigned long 
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  1  [STACK] void 
  7045 ;; Registers used:
  7046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  7047 ;; Tracked objects:
  7048 ;;		On entry : F/0
  7049 ;;		On exit  : D/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7052 ;;      Params:         0       0       0       0       0       0       0       0       0
  7053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7056 ;;Total ram usage:        0 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; Hardware stack levels required when called:   13
  7059 ;; This function calls:
  7060 ;;		_ConfigureRadioRx
  7061 ;;		_GetRx1Freq
  7062 ;;		_RADIO_ReceiveStart
  7063 ;;		_RADIO_ReceiveStop
  7064 ;;		_RADIO_ReleaseData
  7065 ;; This function is called by:
  7066 ;;		_SetCallbackSoftwareTimers
  7067 ;;		_SwTimersExecute
  7068 ;; This function uses a reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text40
  7072  005A3C                     __ptext40:
  7073                           	opt stack 0
  7074  005A3C                     _LORAWAN_ReceiveWindow1Callback:
  7075                           	opt stack 0
  7076                           
  7077                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7078  005A3C  52E6               	movf	postinc1,f,c
  7079  005A3E  52E6               	movf	postinc1,f,c
  7080  005A40  52E6               	movf	postinc1,f,c
  7081  005A42  52E6               	movf	postinc1,f,c
  7082                           
  7083                           ;lorawan.c: 798: uint32_t freq;
  7084                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  7085                           
  7086                           ;incstack = 0
  7087  005A44  0102               	movlb	2	; () banked
  7088  005A46  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7089  005A48  D04B               	goto	l2035
  7090                           
  7091                           ; BSR set to: 2
  7092                           ;lorawan.c: 801: {
  7093                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  7094  005A4A  0E02               	movlw	2
  7095  005A4C  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7096  005A4E  E102               	bnz	l15191
  7097                           
  7098                           ; BSR set to: 2
  7099                           ;lorawan.c: 803: {
  7100                           ;lorawan.c: 804: RADIO_ReceiveStop();
  7101  005A50  ECC5  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7102  005A54                     l15191:
  7103                           
  7104                           ;lorawan.c: 805: }
  7105                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  7106  005A54  0102               	movlb	2	; () banked
  7107  005A56  51EF               	movf	(_loRa+239)& (0+255),w,b
  7108  005A58  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7109  005A5A  E304               	bnc	l2033
  7110                           
  7111                           ; BSR set to: 2
  7112                           ;lorawan.c: 807: {
  7113                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  7114  005A5C  51EF               	movf	(_loRa+239)& (0+255),w,b
  7115  005A5E  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7116  005A60  6F17               	movwf	(_loRa+23)& (0+255),b
  7117                           
  7118                           ;lorawan.c: 809: }
  7119  005A62  D001               	goto	l15195
  7120  005A64                     l2033:
  7121                           
  7122                           ; BSR set to: 2
  7123                           ;lorawan.c: 810: else
  7124                           ;lorawan.c: 811: {
  7125                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  7126  005A64  6B17               	clrf	(_loRa+23)& (0+255),b
  7127  005A66                     l15195:
  7128                           
  7129                           ; BSR set to: 2
  7130                           ;lorawan.c: 813: }
  7131                           ;lorawan.c: 815: freq = GetRx1Freq();
  7132  005A66  ECFC  F03B         	call	_GetRx1Freq	;wreg free
  7133  005A6A  C064  F052         	movff	?_GetRx1Freq,btemp+8
  7134  005A6E  C065  F053         	movff	?_GetRx1Freq+1,btemp+9
  7135  005A72  C066  F054         	movff	?_GetRx1Freq+2,btemp+10
  7136  005A76  C067  F055         	movff	?_GetRx1Freq+3,btemp+11
  7137                           
  7138                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7139  005A7A  0EFC               	movlw	-4
  7140  005A7C  C052  FFE3         	movff	btemp+8,plusw1
  7141  005A80  0EFD               	movlw	-3
  7142  005A82  C053  FFE3         	movff	btemp+9,plusw1
  7143  005A86  0EFE               	movlw	-2
  7144  005A88  C054  FFE3         	movff	btemp+10,plusw1
  7145  005A8C  0EFF               	movlw	-1
  7146  005A8E  C055  FFE3         	movff	btemp+11,plusw1
  7147                           
  7148                           ; BSR set to: 2
  7149                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  7150  005A92  5102               	movf	(_loRa+2)& (0+255),w,b
  7151  005A94  0BF0               	andlw	-16
  7152  005A96  0903               	iorlw	3
  7153  005A98  6F02               	movwf	(_loRa+2)& (0+255),b
  7154                           
  7155                           ; BSR set to: 2
  7156                           ;lorawan.c: 819: RADIO_ReleaseData();
  7157  005A9A  ECA5  F03C         	call	_RADIO_ReleaseData	;wreg free
  7158                           
  7159                           ; BSR set to: 1
  7160                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  7161                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7162  005A9E  50E1               	movf	fsr1l,w,c
  7163  005AA0  0FFC               	addlw	-4
  7164  005AA2  6ED9               	movwf	fsr2l,c
  7165  005AA4  50E2               	movf	fsr1h,w,c
  7166  005AA6  6EDA               	movwf	fsr2h,c
  7167  005AA8  0EFF               	movlw	255
  7168  005AAA  22DA               	addwfc	fsr2h,f,c
  7169  005AAC  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq
  7170  005AB0  CFDE F077          	movff	postinc2,ConfigureRadioRx@freq+1
  7171  005AB4  CFDE F078          	movff	postinc2,ConfigureRadioRx@freq+2
  7172  005AB8  CFDE F079          	movff	postinc2,ConfigureRadioRx@freq+3
  7173  005ABC  0102               	movlb	2	; () banked
  7174  005ABE  5117               	movf	(_loRa+23)& (0+255),w,b
  7175  005AC0  ECD7  F039         	call	_ConfigureRadioRx
  7176                           
  7177                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  7178  005AC4  0E85               	movlw	low _rxWindowSize
  7179  005AC6  0102               	movlb	2	; () banked
  7180  005AC8  2517               	addwf	(_loRa+23)& (0+255),w,b
  7181  005ACA  6EF6               	movwf	tblptrl,c
  7182  005ACC  6AF7               	clrf	tblptrh,c
  7183  005ACE  0E7F               	movlw	high _rxWindowSize
  7184  005AD0  22F7               	addwfc	tblptrh,f,c
  7185  005AD2                     	if	0	;There are less than 3 active tblptr bytes
  7186  005AD2                     	endif
  7187  005AD2  0008               	tblrd		*
  7188  005AD4  50F5               	movf	tablat,w,c
  7189  005AD6  0100               	movlb	0	; () banked
  7190  005AD8  6F94               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7191  005ADA  6B95               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7192  005ADC  EC02  F016         	call	_RADIO_ReceiveStart	;wreg free
  7193  005AE0                     l2035:
  7194                           
  7195                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7196  005AE0  0EFB               	movlw	251
  7197  005AE2  26E1               	addwf	fsr1l,f,c
  7198  005AE4  0EFF               	movlw	255
  7199  005AE6  22E2               	addwfc	fsr1h,f,c
  7200  005AE8  0CFF               	retlw	255	;funcret
  7201  005AEA                     __end_of_LORAWAN_ReceiveWindow1Callback:
  7202                           	opt stack 0
  7203                           tosu	equ	0xFFF
  7204                           tosh	equ	0xFFE
  7205                           tosl	equ	0xFFD
  7206                           pclath	equ	0xFFA
  7207                           tblptru	equ	0xFF8
  7208                           tblptrh	equ	0xFF7
  7209                           tblptrl	equ	0xFF6
  7210                           tablat	equ	0xFF5
  7211                           prodh	equ	0xFF4
  7212                           prodl	equ	0xFF3
  7213                           intcon	equ	0xFF2
  7214                           postinc0	equ	0xFEE
  7215                           wreg	equ	0xFE8
  7216                           postinc1	equ	0xFE6
  7217                           postdec1	equ	0xFE5
  7218                           plusw1	equ	0xFE3
  7219                           fsr1h	equ	0xFE2
  7220                           fsr1l	equ	0xFE1
  7221                           indf2	equ	0xFDF
  7222                           postinc2	equ	0xFDE
  7223                           postdec2	equ	0xFDD
  7224                           fsr2h	equ	0xFDA
  7225                           fsr2l	equ	0xFD9
  7226                           status	equ	0xFD8
  7227                           
  7228 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  7229 ;; Defined at:
  7230 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  param           1  [STACK] unsigned char 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;		None
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1  [STACK] void 
  7237 ;; Registers used:
  7238 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : D/0
  7241 ;;		On exit  : C/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7244 ;;      Params:         0       0       0       0       0       0       0       0       0
  7245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7247 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7248 ;;Total ram usage:        0 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:   14
  7251 ;; This function calls:
  7252 ;;		_ConfigureRadioRx
  7253 ;;		_LORAWAN_EnterContinuousReceive
  7254 ;;		_RADIO_GetStatus
  7255 ;;		_RADIO_ReceiveStart
  7256 ;;		_RADIO_ReceiveStop
  7257 ;;		_RADIO_ReleaseData
  7258 ;;		_ResetParametersForConfirmedTransmission
  7259 ;;		_ResetParametersForUnconfirmedTransmission
  7260 ;;		_RxDataDone
  7261 ;; This function is called by:
  7262 ;;		_LORAWAN_RxTimeout
  7263 ;;		_SetCallbackSoftwareTimers
  7264 ;;		_SwTimersExecute
  7265 ;; This function uses a reentrant model
  7266 ;;
  7267                           
  7268                           	psect	text41
  7269  00553A                     __ptext41:
  7270                           	opt stack 0
  7271  00553A                     _LORAWAN_ReceiveWindow2Callback:
  7272                           	opt stack 12
  7273                           
  7274                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  7275                           
  7276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7277                           ;incstack = 0
  7278  00553A  0102               	movlb	2	; () banked
  7279  00553C  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7280  00553E  D057               	goto	l2038
  7281                           
  7282                           ; BSR set to: 2
  7283                           ;lorawan.c: 831: {
  7284                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  7285  005540  ECA2  F03C         	call	_RADIO_GetStatus	;wreg free
  7286  005544  6E55               	movwf	btemp+11,c
  7287  005546  B255               	btfsc	btemp+11,1,c
  7288  005548  D04E               	goto	l13861
  7289                           
  7290                           ; BSR set to: 1
  7291                           ;lorawan.c: 833: {
  7292                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  7293  00554A  0102               	movlb	2	; () banked
  7294  00554C  5102               	movf	(_loRa+2)& (0+255),w,b
  7295  00554E  0BF0               	andlw	-16
  7296  005550  0905               	iorlw	5
  7297  005552  6F02               	movwf	(_loRa+2)& (0+255),b
  7298                           
  7299                           ; BSR set to: 2
  7300                           ;lorawan.c: 836: RADIO_ReceiveStop();
  7301  005554  ECC5  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7302                           
  7303                           ; BSR set to: 1
  7304                           ;lorawan.c: 837: RADIO_ReleaseData();
  7305  005558  ECA5  F03C         	call	_RADIO_ReleaseData	;wreg free
  7306                           
  7307                           ; BSR set to: 1
  7308                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  7309  00555C  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
  7310  005560  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
  7311  005564  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
  7312  005568  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
  7313  00556C  0102               	movlb	2	; () banked
  7314  00556E  511C               	movf	(_loRa+28)& (0+255),w,b
  7315  005570  ECD7  F039         	call	_ConfigureRadioRx
  7316                           
  7317                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  7318  005574  0102               	movlb	2	; () banked
  7319  005576  5112               	movf	(_loRa+18)& (0+255),w,b
  7320  005578  E12F               	bnz	l13857
  7321                           
  7322                           ; BSR set to: 2
  7323                           ;lorawan.c: 842: {
  7324                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  7325  00557A  0E85               	movlw	low _rxWindowSize
  7326  00557C  251C               	addwf	(_loRa+28)& (0+255),w,b
  7327  00557E  6EF6               	movwf	tblptrl,c
  7328  005580  6AF7               	clrf	tblptrh,c
  7329  005582  0E7F               	movlw	high _rxWindowSize
  7330  005584  22F7               	addwfc	tblptrh,f,c
  7331  005586                     	if	0	;There are less than 3 active tblptr bytes
  7332  005586                     	endif
  7333  005586  0008               	tblrd		*
  7334  005588  50F5               	movf	tablat,w,c
  7335  00558A  0100               	movlb	0	; () banked
  7336  00558C  6F94               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7337  00558E  6B95               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7338  005590  EC02  F016         	call	_RADIO_ReceiveStart	;wreg free
  7339  005594  C094  F04B         	movff	?_RADIO_ReceiveStart,btemp+1
  7340  005598  C095  F04C         	movff	?_RADIO_ReceiveStart+1,btemp+2
  7341  00559C  504B               	movf	btemp+1,w,c
  7342  00559E  104C               	iorwf	btemp+2,w,c
  7343  0055A0  E02E               	bz	l2047
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;lorawan.c: 844: {
  7347                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  7348  0055A2  EC15  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7349                           
  7350                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  7351  0055A6  EC0E  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7352                           
  7353                           ; BSR set to: 2
  7354                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  7355  0055AA  0101               	movlb	1	; () banked
  7356  0055AC  5172               	movf	_rxPayload& (0+255),w,b
  7357  0055AE  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
  7358  0055B0  E026               	bz	l2047
  7359                           
  7360                           ; BSR set to: 1
  7361                           ;lorawan.c: 848: {
  7362                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7363  0055B2  0E00               	movlw	0
  7364  0055B4  0100               	movlb	0	; () banked
  7365  0055B6  6F64               	movwf	RxDataDone@pData& (0+255),b
  7366  0055B8  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
  7367  0055BA  6F66               	movwf	RxDataDone@dataLength& (0+255),b
  7368  0055BC  6F67               	movwf	RxDataDone@status& (0+255),b
  7369  0055BE  D801               	call	u15458
  7370  0055C0  D01E               	goto	l2047
  7371  0055C2                     u15458:
  7372  0055C2  0005               	push	
  7373  0055C4  0101               	movlb	1	; () banked
  7374  0055C6  6EFA               	movwf	pclath,c
  7375  0055C8  5172               	movf	_rxPayload& (0+255),w,b
  7376  0055CA  6EFD               	movwf	tosl,c
  7377  0055CC  5173               	movf	(_rxPayload+1)& (0+255),w,b
  7378  0055CE  6EFE               	movwf	tosh,c
  7379  0055D0  50F8               	movf	tblptru,w,c
  7380  0055D2  6EFF               	movwf	tosu,c
  7381  0055D4  50FA               	movf	pclath,w,c
  7382  0055D6  0012               	return		;indir
  7383  0055D8                     l13857:
  7384                           
  7385                           ; BSR set to: 2
  7386                           ;lorawan.c: 853: else
  7387                           ;lorawan.c: 854: {
  7388                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  7389  0055D8  5102               	movf	(_loRa+2)& (0+255),w,b
  7390  0055DA  0BF0               	andlw	-16
  7391  0055DC  0909               	iorlw	9
  7392  0055DE  6F02               	movwf	(_loRa+2)& (0+255),b
  7393                           
  7394                           ; BSR set to: 2
  7395                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  7396  0055E0  ECF6  F031         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  7397  0055E4  D00C               	goto	l2047
  7398  0055E6                     l13861:
  7399                           
  7400                           ; BSR set to: 1
  7401                           ;lorawan.c: 859: else
  7402                           ;lorawan.c: 860: {
  7403                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  7404  0055E6  0E01               	movlw	1
  7405  0055E8  0102               	movlb	2	; () banked
  7406  0055EA  6FF1               	movwf	(_loRa+241)& (0+255),b
  7407                           
  7408                           ; BSR set to: 1
  7409                           ;lorawan.c: 864: }
  7410                           ;lorawan.c: 865: }
  7411  0055EC  D008               	goto	l2047
  7412  0055EE                     l2038:
  7413                           
  7414                           ; BSR set to: 2
  7415                           ;lorawan.c: 866: else
  7416                           ;lorawan.c: 867: {
  7417                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  7418  0055EE  A500               	btfss	_loRa& (0+255),2,b
  7419  0055F0  D002               	goto	l13865
  7420                           
  7421                           ; BSR set to: 2
  7422                           ;lorawan.c: 871: {
  7423                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  7424  0055F2  9500               	bcf	_loRa& (0+255),2,b
  7425                           
  7426                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  7427  0055F4  9902               	bcf	(_loRa+2)& (0+255),4,b
  7428  0055F6                     l13865:
  7429                           
  7430                           ; BSR set to: 2
  7431                           ;lorawan.c: 874: }
  7432                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  7433  0055F6  EC0E  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7434                           
  7435                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  7436  0055FA  EC15  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7437  0055FE                     l2047:
  7438                           
  7439                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7440  0055FE  52E5               	movf	postdec1,f,c
  7441  005600  0012               	return		;funcret
  7442  005602                     __end_of_LORAWAN_ReceiveWindow2Callback:
  7443                           	opt stack 0
  7444                           tosu	equ	0xFFF
  7445                           tosh	equ	0xFFE
  7446                           tosl	equ	0xFFD
  7447                           pclath	equ	0xFFA
  7448                           tblptru	equ	0xFF8
  7449                           tblptrh	equ	0xFF7
  7450                           tblptrl	equ	0xFF6
  7451                           tablat	equ	0xFF5
  7452                           prodh	equ	0xFF4
  7453                           prodl	equ	0xFF3
  7454                           intcon	equ	0xFF2
  7455                           postinc0	equ	0xFEE
  7456                           wreg	equ	0xFE8
  7457                           postinc1	equ	0xFE6
  7458                           postdec1	equ	0xFE5
  7459                           plusw1	equ	0xFE3
  7460                           fsr1h	equ	0xFE2
  7461                           fsr1l	equ	0xFE1
  7462                           indf2	equ	0xFDF
  7463                           postinc2	equ	0xFDE
  7464                           postdec2	equ	0xFDD
  7465                           fsr2h	equ	0xFDA
  7466                           fsr2l	equ	0xFD9
  7467                           status	equ	0xFD8
  7468                           
  7469 ;; *************** function _RADIO_WatchdogTimeout *****************
  7470 ;; Defined at:
  7471 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  param           1  [STACK] unsigned char 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;		None
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1  [STACK] void 
  7478 ;; Registers used:
  7479 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7480 ;; Tracked objects:
  7481 ;;		On entry : F/0
  7482 ;;		On exit  : C/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7485 ;;      Params:         0       0       0       0       0       0       0       0       0
  7486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7488 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7489 ;;Total ram usage:        0 bytes
  7490 ;; Hardware stack levels used:    1
  7491 ;; Hardware stack levels required when called:   16
  7492 ;; This function calls:
  7493 ;;		_LORAWAN_RxTimeout
  7494 ;;		_LORAWAN_TxDone
  7495 ;;		_RADIO_WriteMode
  7496 ;; This function is called by:
  7497 ;;		_RADIO_Init
  7498 ;;		_SwTimersExecute
  7499 ;; This function uses a reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text42
  7503  006D04                     __ptext42:
  7504                           	opt stack 0
  7505  006D04                     _RADIO_WatchdogTimeout:
  7506                           	opt stack 12
  7507                           
  7508                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  7509                           
  7510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7511                           ;incstack = 0
  7512  006D04  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7513  006D08  0E01               	movlw	1
  7514  006D0A  0100               	movlb	0	; () banked
  7515  006D0C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7516  006D0E  ECFE  F028         	call	_RADIO_WriteMode
  7517                           
  7518                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7519  006D12  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7520  006D16  0E00               	movlw	0
  7521  006D18  0100               	movlb	0	; () banked
  7522  006D1A  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7523  006D1C  ECFE  F028         	call	_RADIO_WriteMode
  7524                           
  7525                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  7526  006D20  0101               	movlb	1	; () banked
  7527  006D22  899C               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  7528                           
  7529                           ; BSR set to: 1
  7530                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  7531  006D24  A39C               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  7532  006D26  D004               	goto	l692
  7533                           
  7534                           ; BSR set to: 1
  7535                           ;radio_driver_SX1276.c: 1414: {
  7536                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  7537  006D28  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7538                           
  7539                           ; BSR set to: 1
  7540                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  7541  006D2A  EC89  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7542                           
  7543                           ;radio_driver_SX1276.c: 1417: }
  7544  006D2E  D009               	goto	l695
  7545  006D30                     l692:
  7546                           
  7547                           ; BSR set to: 1
  7548                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  7549  006D30  A19C               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  7550  006D32  D007               	goto	l695
  7551                           
  7552                           ; BSR set to: 1
  7553                           ;radio_driver_SX1276.c: 1419: {
  7554                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  7555  006D34  919C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  7556                           
  7557                           ; BSR set to: 1
  7558                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  7559  006D36  C1A3  F09E         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  7560  006D3A  C1A4  F09F         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  7561  006D3E  EC9A  F005         	call	_LORAWAN_TxDone	;wreg free
  7562  006D42                     l695:
  7563                           
  7564                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7565  006D42  52E5               	movf	postdec1,f,c
  7566  006D44  0012               	return		;funcret
  7567  006D46                     __end_of_RADIO_WatchdogTimeout:
  7568                           	opt stack 0
  7569                           tosu	equ	0xFFF
  7570                           tosh	equ	0xFFE
  7571                           tosl	equ	0xFFD
  7572                           pclath	equ	0xFFA
  7573                           tblptru	equ	0xFF8
  7574                           tblptrh	equ	0xFF7
  7575                           tblptrl	equ	0xFF6
  7576                           tablat	equ	0xFF5
  7577                           prodh	equ	0xFF4
  7578                           prodl	equ	0xFF3
  7579                           intcon	equ	0xFF2
  7580                           postinc0	equ	0xFEE
  7581                           wreg	equ	0xFE8
  7582                           postinc1	equ	0xFE6
  7583                           postdec1	equ	0xFE5
  7584                           plusw1	equ	0xFE3
  7585                           fsr1h	equ	0xFE2
  7586                           fsr1l	equ	0xFE1
  7587                           indf2	equ	0xFDF
  7588                           postinc2	equ	0xFDE
  7589                           postdec2	equ	0xFDD
  7590                           fsr2h	equ	0xFDA
  7591                           fsr2l	equ	0xFD9
  7592                           status	equ	0xFD8
  7593                           
  7594 ;; *************** function _RADIO_RxFSKTimeout *****************
  7595 ;; Defined at:
  7596 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  param           1  [STACK] unsigned char 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  irqFlags        1  [STACK] unsigned char 
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1  [STACK] void 
  7603 ;; Registers used:
  7604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl
      +, tblptrh, tblptru, prodl, prodh, cstack
  7605 ;; Tracked objects:
  7606 ;;		On entry : F/0
  7607 ;;		On exit  : C/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7610 ;;      Params:         0       0       0       0       0       0       0       0       0
  7611 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7613 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7614 ;;Total ram usage:        0 bytes
  7615 ;; Hardware stack levels used:    1
  7616 ;; Hardware stack levels required when called:   16
  7617 ;; This function calls:
  7618 ;;		_LORAWAN_RxTimeout
  7619 ;;		_RADIO_RegisterRead
  7620 ;;		_RADIO_WriteMode
  7621 ;;		_SwTimerStop
  7622 ;; This function is called by:
  7623 ;;		_RADIO_Init
  7624 ;;		_SwTimersExecute
  7625 ;; This function uses a reentrant model
  7626 ;;
  7627                           
  7628                           	psect	text43
  7629  0070A0                     __ptext43:
  7630                           	opt stack 0
  7631  0070A0                     _RADIO_RxFSKTimeout:
  7632                           	opt stack 0
  7633                           
  7634                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7635  0070A0  52E6               	movf	postinc1,f,c
  7636                           
  7637                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  7638                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  7639                           
  7640                           ;incstack = 0
  7641  0070A2  0E3E               	movlw	62
  7642  0070A4  ECEA  F039         	call	_RADIO_RegisterRead
  7643  0070A8  6E55               	movwf	btemp+11,c
  7644                           
  7645                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7646  0070AA  0EFF               	movlw	-1
  7647  0070AC  C055  FFE3         	movff	btemp+11,plusw1
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  7651                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7652  0070B0  B0E3               	btfsc	plusw1,0,c
  7653  0070B2  D00E               	goto	l689
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;radio_driver_SX1276.c: 1397: {
  7657                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7658  0070B4  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7659  0070B8  0E00               	movlw	0
  7660  0070BA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7661  0070BC  ECFE  F028         	call	_RADIO_WriteMode
  7662                           
  7663                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7664  0070C0  0101               	movlb	1	; () banked
  7665  0070C2  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7666  0070C4  EC2D  F03B         	call	_SwTimerStop
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  7670  0070C8  0101               	movlb	1	; () banked
  7671  0070CA  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7672                           
  7673                           ; BSR set to: 1
  7674                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  7675  0070CC  EC89  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7676  0070D0                     l689:
  7677                           
  7678                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7679  0070D0  52E5               	movf	postdec1,f,c
  7680  0070D2  52E5               	movf	postdec1,f,c
  7681  0070D4  0012               	return		;funcret
  7682  0070D6                     __end_of_RADIO_RxFSKTimeout:
  7683                           	opt stack 0
  7684                           tosu	equ	0xFFF
  7685                           tosh	equ	0xFFE
  7686                           tosl	equ	0xFFD
  7687                           pclath	equ	0xFFA
  7688                           tblptru	equ	0xFF8
  7689                           tblptrh	equ	0xFF7
  7690                           tblptrl	equ	0xFF6
  7691                           tablat	equ	0xFF5
  7692                           prodh	equ	0xFF4
  7693                           prodl	equ	0xFF3
  7694                           intcon	equ	0xFF2
  7695                           postinc0	equ	0xFEE
  7696                           wreg	equ	0xFE8
  7697                           postinc1	equ	0xFE6
  7698                           postdec1	equ	0xFE5
  7699                           plusw1	equ	0xFE3
  7700                           fsr1h	equ	0xFE2
  7701                           fsr1l	equ	0xFE1
  7702                           indf2	equ	0xFDF
  7703                           postinc2	equ	0xFDE
  7704                           postdec2	equ	0xFDD
  7705                           fsr2h	equ	0xFDA
  7706                           fsr2l	equ	0xFD9
  7707                           status	equ	0xFD8
  7708                           
  7709 ;; *************** function _UnconfirmedTransmissionCallback *****************
  7710 ;; Defined at:
  7711 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;  param           1  [STACK] unsigned char 
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;		None
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  1  [STACK] void 
  7718 ;; Registers used:
  7719 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, prod
      +l, prodh, cstack
  7720 ;; Tracked objects:
  7721 ;;		On entry : F/0
  7722 ;;		On exit  : C/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7725 ;;      Params:         0       0       0       0       0       0       0       0       0
  7726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7728 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7729 ;;Total ram usage:        0 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:   13
  7732 ;; This function calls:
  7733 ;;		_RADIO_Transmit
  7734 ;;		_ResetParametersForUnconfirmedTransmission
  7735 ;;		_RxDataDone
  7736 ;;		_SelectChannelForTransmission
  7737 ;; This function is called by:
  7738 ;;		_SetCallbackSoftwareTimers
  7739 ;;		_SwTimersExecute
  7740 ;; This function uses a reentrant model
  7741 ;;
  7742                           
  7743                           	psect	text44
  7744  0062AC                     __ptext44:
  7745                           	opt stack 0
  7746  0062AC                     _UnconfirmedTransmissionCallback:
  7747                           	opt stack 15
  7748                           
  7749                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  7750                           
  7751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7752                           ;incstack = 0
  7753  0062AC  0E01               	movlw	1
  7754  0062AE  EC57  F033         	call	_SelectChannelForTransmission
  7755  0062B2  0900               	iorlw	0
  7756  0062B4  E116               	bnz	l15295
  7757                           
  7758                           ; BSR set to: 0
  7759  0062B6  0EF0               	movlw	low (_macBuffer+16)
  7760  0062B8  6F94               	movwf	RADIO_Transmit@buffer& (0+255),b
  7761  0062BA  0E04               	movlw	high (_macBuffer+16)
  7762  0062BC  6F95               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  7763  0062BE  C2D4  F096         	movff	_loRa+212,RADIO_Transmit@bufferLen
  7764  0062C2  ECFA  F017         	call	_RADIO_Transmit	;wreg free
  7765  0062C6  C094  F04B         	movff	?_RADIO_Transmit,btemp+1
  7766  0062CA  C095  F04C         	movff	?_RADIO_Transmit+1,btemp+2
  7767  0062CE  504B               	movf	btemp+1,w,c
  7768  0062D0  104C               	iorwf	btemp+2,w,c
  7769  0062D2  E107               	bnz	l15295
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;lorawan.c: 1001: {
  7773                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  7774  0062D4  0102               	movlb	2	; () banked
  7775  0062D6  2BD8               	incf	(_loRa+216)& (0+255),f,b
  7776                           
  7777                           ; BSR set to: 2
  7778                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  7779  0062D8  5102               	movf	(_loRa+2)& (0+255),w,b
  7780  0062DA  0BF0               	andlw	-16
  7781  0062DC  0901               	iorlw	1
  7782  0062DE  6F02               	movwf	(_loRa+2)& (0+255),b
  7783                           
  7784                           ;lorawan.c: 1005: }
  7785  0062E0  D019               	goto	l2090
  7786  0062E2                     l15295:
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;lorawan.c: 1006: else
  7790                           ;lorawan.c: 1008: {
  7791                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  7792  0062E2  EC0E  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7793                           
  7794                           ; BSR set to: 2
  7795                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  7796  0062E6  0101               	movlb	1	; () banked
  7797  0062E8  5172               	movf	_rxPayload& (0+255),w,b
  7798  0062EA  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
  7799  0062EC  E013               	bz	l2090
  7800                           
  7801                           ; BSR set to: 1
  7802                           ;lorawan.c: 1011: {
  7803                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  7804  0062EE  0E00               	movlw	0
  7805  0062F0  0100               	movlb	0	; () banked
  7806  0062F2  6F64               	movwf	RxDataDone@pData& (0+255),b
  7807  0062F4  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
  7808  0062F6  6F66               	movwf	RxDataDone@dataLength& (0+255),b
  7809  0062F8  6F67               	movwf	RxDataDone@status& (0+255),b
  7810  0062FA  D801               	call	u18158
  7811  0062FC  D00B               	goto	l2090
  7812  0062FE                     u18158:
  7813  0062FE  0005               	push	
  7814  006300  0101               	movlb	1	; () banked
  7815  006302  6EFA               	movwf	pclath,c
  7816  006304  5172               	movf	_rxPayload& (0+255),w,b
  7817  006306  6EFD               	movwf	tosl,c
  7818  006308  5173               	movf	(_rxPayload+1)& (0+255),w,b
  7819  00630A  6EFE               	movwf	tosh,c
  7820  00630C  50F8               	movf	tblptru,w,c
  7821  00630E  6EFF               	movwf	tosu,c
  7822  006310  50FA               	movf	pclath,w,c
  7823  006312  0012               	return		;indir
  7824  006314                     l2090:
  7825                           
  7826                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  7827  006314  52E5               	movf	postdec1,f,c
  7828  006316  0012               	return		;funcret
  7829  006318                     __end_of_UnconfirmedTransmissionCallback:
  7830                           	opt stack 0
  7831                           tosu	equ	0xFFF
  7832                           tosh	equ	0xFFE
  7833                           tosl	equ	0xFFD
  7834                           pclath	equ	0xFFA
  7835                           tblptru	equ	0xFF8
  7836                           tblptrh	equ	0xFF7
  7837                           tblptrl	equ	0xFF6
  7838                           tablat	equ	0xFF5
  7839                           prodh	equ	0xFF4
  7840                           prodl	equ	0xFF3
  7841                           intcon	equ	0xFF2
  7842                           postinc0	equ	0xFEE
  7843                           wreg	equ	0xFE8
  7844                           postinc1	equ	0xFE6
  7845                           postdec1	equ	0xFE5
  7846                           plusw1	equ	0xFE3
  7847                           fsr1h	equ	0xFE2
  7848                           fsr1l	equ	0xFE1
  7849                           indf2	equ	0xFDF
  7850                           postinc2	equ	0xFDE
  7851                           postdec2	equ	0xFDD
  7852                           fsr2h	equ	0xFDA
  7853                           fsr2l	equ	0xFD9
  7854                           status	equ	0xFD8
  7855                           
  7856 ;; *************** function _GetRx1Freq *****************
  7857 ;; Defined at:
  7858 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;		None
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  4    4[BANK0 ] unsigned long 
  7865 ;; Registers used:
  7866 ;;		None
  7867 ;; Tracked objects:
  7868 ;;		On entry : F/2
  7869 ;;		On exit  : F/2
  7870 ;;		Unchanged: F/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7872 ;;      Params:         0       4       0       0       0       0       0       0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7875 ;;      Totals:         0       4       0       0       0       0       0       0       0
  7876 ;;Total ram usage:        4 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; Hardware stack levels required when called:    7
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_LORAWAN_ReceiveWindow1Callback
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text45
  7887  0077F8                     __ptext45:
  7888                           	opt stack 0
  7889  0077F8                     _GetRx1Freq:
  7890                           	opt stack 20
  7891                           
  7892                           ; BSR set to: 2
  7893                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  7894                           
  7895                           ;incstack = 0
  7896  0077F8  C213  F064         	movff	_loRa+19,?_GetRx1Freq
  7897  0077FC  C214  F065         	movff	_loRa+20,?_GetRx1Freq+1
  7898  007800  C215  F066         	movff	_loRa+21,?_GetRx1Freq+2
  7899  007804  C216  F067         	movff	_loRa+22,?_GetRx1Freq+3
  7900                           
  7901                           ; BSR set to: 2
  7902  007808  0012               	return		;funcret
  7903  00780A                     __end_of_GetRx1Freq:
  7904                           	opt stack 0
  7905                           tosu	equ	0xFFF
  7906                           tosh	equ	0xFFE
  7907                           tosl	equ	0xFFD
  7908                           pclath	equ	0xFFA
  7909                           tblptru	equ	0xFF8
  7910                           tblptrh	equ	0xFF7
  7911                           tblptrl	equ	0xFF6
  7912                           tablat	equ	0xFF5
  7913                           prodh	equ	0xFF4
  7914                           prodl	equ	0xFF3
  7915                           intcon	equ	0xFF2
  7916                           postinc0	equ	0xFEE
  7917                           wreg	equ	0xFE8
  7918                           postinc1	equ	0xFE6
  7919                           postdec1	equ	0xFE5
  7920                           plusw1	equ	0xFE3
  7921                           fsr1h	equ	0xFE2
  7922                           fsr1l	equ	0xFE1
  7923                           indf2	equ	0xFDF
  7924                           postinc2	equ	0xFDE
  7925                           postdec2	equ	0xFDD
  7926                           fsr2h	equ	0xFDA
  7927                           fsr2l	equ	0xFD9
  7928                           status	equ	0xFD8
  7929                           
  7930 ;; *************** function _RADIO_DIO5 *****************
  7931 ;; Defined at:
  7932 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;		None
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;  dioMapping      1    0        unsigned char 
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      void 
  7939 ;; Registers used:
  7940 ;;		wreg, status,2, status,0, cstack
  7941 ;; Tracked objects:
  7942 ;;		On entry : F/1
  7943 ;;		On exit  : 1/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7946 ;;      Params:         0       0       0       0       0       0       0       0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7948 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7949 ;;      Totals:         0       1       0       0       0       0       0       0       0
  7950 ;;Total ram usage:        1 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; Hardware stack levels required when called:   11
  7953 ;; This function calls:
  7954 ;;		_RADIO_RegisterRead
  7955 ;;		_RADIO_UnhandledInterrupt
  7956 ;; This function is called by:
  7957 ;;		_LORAWAN_Mainloop
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text46
  7962  0076FA                     __ptext46:
  7963                           	opt stack 0
  7964  0076FA                     _RADIO_DIO5:
  7965                           	opt stack 18
  7966                           
  7967                           ; BSR set to: 1
  7968                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  7969                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  7970                           
  7971                           ; BSR set to: 2
  7972                           ;incstack = 0
  7973  0076FA  0E41               	movlw	65
  7974  0076FC  ECEA  F039         	call	_RADIO_RegisterRead
  7975                           
  7976                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7977  007700  0E01               	movlw	1
  7978  007702  ECEA  F039         	call	_RADIO_RegisterRead
  7979  007706  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  7980  007708  AF69               	btfss	??_RADIO_DIO5& (0+255),7,b
  7981  00770A  0012               	return	
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7985  00770C  0E01               	movlw	1
  7986  00770E  EF34  F03A         	goto	_RADIO_UnhandledInterrupt
  7987  007712                     __end_of_RADIO_DIO5:
  7988                           	opt stack 0
  7989                           tosu	equ	0xFFF
  7990                           tosh	equ	0xFFE
  7991                           tosl	equ	0xFFD
  7992                           pclath	equ	0xFFA
  7993                           tblptru	equ	0xFF8
  7994                           tblptrh	equ	0xFF7
  7995                           tblptrl	equ	0xFF6
  7996                           tablat	equ	0xFF5
  7997                           prodh	equ	0xFF4
  7998                           prodl	equ	0xFF3
  7999                           intcon	equ	0xFF2
  8000                           postinc0	equ	0xFEE
  8001                           wreg	equ	0xFE8
  8002                           postinc1	equ	0xFE6
  8003                           postdec1	equ	0xFE5
  8004                           plusw1	equ	0xFE3
  8005                           fsr1h	equ	0xFE2
  8006                           fsr1l	equ	0xFE1
  8007                           indf2	equ	0xFDF
  8008                           postinc2	equ	0xFDE
  8009                           postdec2	equ	0xFDD
  8010                           fsr2h	equ	0xFDA
  8011                           fsr2l	equ	0xFD9
  8012                           status	equ	0xFD8
  8013                           
  8014 ;; *************** function _RADIO_DIO4 *****************
  8015 ;; Defined at:
  8016 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;		None
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  dioMapping      1    0        unsigned char 
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  1    wreg      void 
  8023 ;; Registers used:
  8024 ;;		wreg, status,2, status,0, cstack
  8025 ;; Tracked objects:
  8026 ;;		On entry : F/1
  8027 ;;		On exit  : 1/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8030 ;;      Params:         0       0       0       0       0       0       0       0       0
  8031 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8032 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8033 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8034 ;;Total ram usage:        1 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; Hardware stack levels required when called:   11
  8037 ;; This function calls:
  8038 ;;		_RADIO_RegisterRead
  8039 ;;		_RADIO_UnhandledInterrupt
  8040 ;; This function is called by:
  8041 ;;		_LORAWAN_Mainloop
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text47
  8046  007712                     __ptext47:
  8047                           	opt stack 0
  8048  007712                     _RADIO_DIO4:
  8049                           	opt stack 18
  8050                           
  8051                           ; BSR set to: 1
  8052                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  8053                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  8054                           
  8055                           ;incstack = 0
  8056  007712  0E41               	movlw	65
  8057  007714  ECEA  F039         	call	_RADIO_RegisterRead
  8058                           
  8059                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8060  007718  0E01               	movlw	1
  8061  00771A  ECEA  F039         	call	_RADIO_RegisterRead
  8062  00771E  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8063  007720  AF69               	btfss	??_RADIO_DIO4& (0+255),7,b
  8064  007722  0012               	return	
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8068  007724  0E01               	movlw	1
  8069  007726  EF34  F03A         	goto	_RADIO_UnhandledInterrupt
  8070  00772A                     __end_of_RADIO_DIO4:
  8071                           	opt stack 0
  8072                           tosu	equ	0xFFF
  8073                           tosh	equ	0xFFE
  8074                           tosl	equ	0xFFD
  8075                           pclath	equ	0xFFA
  8076                           tblptru	equ	0xFF8
  8077                           tblptrh	equ	0xFF7
  8078                           tblptrl	equ	0xFF6
  8079                           tablat	equ	0xFF5
  8080                           prodh	equ	0xFF4
  8081                           prodl	equ	0xFF3
  8082                           intcon	equ	0xFF2
  8083                           postinc0	equ	0xFEE
  8084                           wreg	equ	0xFE8
  8085                           postinc1	equ	0xFE6
  8086                           postdec1	equ	0xFE5
  8087                           plusw1	equ	0xFE3
  8088                           fsr1h	equ	0xFE2
  8089                           fsr1l	equ	0xFE1
  8090                           indf2	equ	0xFDF
  8091                           postinc2	equ	0xFDE
  8092                           postdec2	equ	0xFDD
  8093                           fsr2h	equ	0xFDA
  8094                           fsr2l	equ	0xFD9
  8095                           status	equ	0xFD8
  8096                           
  8097 ;; *************** function _RADIO_DIO3 *****************
  8098 ;; Defined at:
  8099 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;		None
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;  dioMapping      1    0        unsigned char 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : F/1
  8110 ;;		On exit  : 1/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8113 ;;      Params:         0       0       0       0       0       0       0       0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8115 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8116 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8117 ;;Total ram usage:        1 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:   11
  8120 ;; This function calls:
  8121 ;;		_RADIO_RegisterRead
  8122 ;;		_RADIO_UnhandledInterrupt
  8123 ;; This function is called by:
  8124 ;;		_LORAWAN_Mainloop
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           	psect	text48
  8129  00772A                     __ptext48:
  8130                           	opt stack 0
  8131  00772A                     _RADIO_DIO3:
  8132                           	opt stack 18
  8133                           
  8134                           ; BSR set to: 1
  8135                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  8136                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  8137                           
  8138                           ;incstack = 0
  8139  00772A  0E40               	movlw	64
  8140  00772C  ECEA  F039         	call	_RADIO_RegisterRead
  8141                           
  8142                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8143  007730  0E01               	movlw	1
  8144  007732  ECEA  F039         	call	_RADIO_RegisterRead
  8145  007736  6F69               	movwf	??_RADIO_DIO3& (0+255),b
  8146  007738  AF69               	btfss	??_RADIO_DIO3& (0+255),7,b
  8147  00773A  0012               	return	
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8151  00773C  0E01               	movlw	1
  8152  00773E  EF34  F03A         	goto	_RADIO_UnhandledInterrupt
  8153  007742                     __end_of_RADIO_DIO3:
  8154                           	opt stack 0
  8155                           tosu	equ	0xFFF
  8156                           tosh	equ	0xFFE
  8157                           tosl	equ	0xFFD
  8158                           pclath	equ	0xFFA
  8159                           tblptru	equ	0xFF8
  8160                           tblptrh	equ	0xFF7
  8161                           tblptrl	equ	0xFF6
  8162                           tablat	equ	0xFF5
  8163                           prodh	equ	0xFF4
  8164                           prodl	equ	0xFF3
  8165                           intcon	equ	0xFF2
  8166                           postinc0	equ	0xFEE
  8167                           wreg	equ	0xFE8
  8168                           postinc1	equ	0xFE6
  8169                           postdec1	equ	0xFE5
  8170                           plusw1	equ	0xFE3
  8171                           fsr1h	equ	0xFE2
  8172                           fsr1l	equ	0xFE1
  8173                           indf2	equ	0xFDF
  8174                           postinc2	equ	0xFDE
  8175                           postdec2	equ	0xFDD
  8176                           fsr2h	equ	0xFDA
  8177                           fsr2l	equ	0xFD9
  8178                           status	equ	0xFD8
  8179                           
  8180 ;; *************** function _RADIO_DIO2 *****************
  8181 ;; Defined at:
  8182 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;		None
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;  dioMapping      1   30[BANK0 ] unsigned char 
  8187 ;;  opMode          1    0        unsigned char 
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  1    wreg      void 
  8190 ;; Registers used:
  8191 ;;		wreg, status,2, status,0, cstack
  8192 ;; Tracked objects:
  8193 ;;		On entry : F/1
  8194 ;;		On exit  : 1/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8197 ;;      Params:         0       0       0       0       0       0       0       0       0
  8198 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8199 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8200 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8201 ;;Total ram usage:        2 bytes
  8202 ;; Hardware stack levels used:    1
  8203 ;; Hardware stack levels required when called:   12
  8204 ;; This function calls:
  8205 ;;		_RADIO_FHSSChangeChannel
  8206 ;;		_RADIO_RegisterRead
  8207 ;;		_RADIO_UnhandledInterrupt
  8208 ;; This function is called by:
  8209 ;;		_LORAWAN_Mainloop
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           	psect	text49
  8214  006C34                     __ptext49:
  8215                           	opt stack 0
  8216  006C34                     _RADIO_DIO2:
  8217                           	opt stack 17
  8218                           
  8219                           ; BSR set to: 1
  8220                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  8221                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  8222                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  8223                           
  8224                           ;incstack = 0
  8225  006C34  0E40               	movlw	64
  8226  006C36  ECEA  F039         	call	_RADIO_RegisterRead
  8227  006C3A  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8228  006C3C  90D8               	bcf	status,0,c
  8229  006C3E  337D               	rrcf	??_RADIO_DIO2& (0+255),f,b
  8230  006C40  90D8               	bcf	status,0,c
  8231  006C42  317D               	rrcf	??_RADIO_DIO2& (0+255),w,b
  8232  006C44  0B03               	andlw	3
  8233  006C46  6F7E               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  8234                           
  8235                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  8236  006C48  0E01               	movlw	1
  8237  006C4A  ECEA  F039         	call	_RADIO_RegisterRead
  8238                           
  8239                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8240  006C4E  0E01               	movlw	1
  8241  006C50  ECEA  F039         	call	_RADIO_RegisterRead
  8242  006C54  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8243  006C56  AF7D               	btfss	??_RADIO_DIO2& (0+255),7,b
  8244  006C58  0012               	return	
  8245  006C5A  D003               	goto	l15551
  8246  006C5C                     l15547:
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8250  006C5C  0E01               	movlw	1
  8251  006C5E  EF34  F03A         	goto	_RADIO_UnhandledInterrupt
  8252  006C62                     l15551:
  8253                           
  8254                           ; BSR set to: 0
  8255  006C62  517E               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  8256                           
  8257                           ; Switch size 1, requested type "speed"
  8258                           ; Number of cases is 3, Range of values is 0 to 2
  8259                           ; switch strategies available:
  8260                           ; Name         Instructions Cycles
  8261                           ; simple_byte           10     6 (average)
  8262                           ;	Chosen strategy is simple_byte
  8263  006C64  E102 EF19  F039    	bz	_RADIO_FHSSChangeChannel
  8264  006C6A  0A01               	xorlw	1	; case 1
  8265  006C6C  E102 EF19  F039    	bz	_RADIO_FHSSChangeChannel
  8266  006C72  0A03               	xorlw	3	; case 2
  8267  006C74  E102 EF19  F039    	bz	_RADIO_FHSSChangeChannel
  8268  006C7A  D7F0               	goto	l15547
  8269  006C7C                     __end_of_RADIO_DIO2:
  8270                           	opt stack 0
  8271                           tosu	equ	0xFFF
  8272                           tosh	equ	0xFFE
  8273                           tosl	equ	0xFFD
  8274                           pclath	equ	0xFFA
  8275                           tblptru	equ	0xFF8
  8276                           tblptrh	equ	0xFF7
  8277                           tblptrl	equ	0xFF6
  8278                           tablat	equ	0xFF5
  8279                           prodh	equ	0xFF4
  8280                           prodl	equ	0xFF3
  8281                           intcon	equ	0xFF2
  8282                           postinc0	equ	0xFEE
  8283                           wreg	equ	0xFE8
  8284                           postinc1	equ	0xFE6
  8285                           postdec1	equ	0xFE5
  8286                           plusw1	equ	0xFE3
  8287                           fsr1h	equ	0xFE2
  8288                           fsr1l	equ	0xFE1
  8289                           indf2	equ	0xFDF
  8290                           postinc2	equ	0xFDE
  8291                           postdec2	equ	0xFDD
  8292                           fsr2h	equ	0xFDA
  8293                           fsr2l	equ	0xFD9
  8294                           status	equ	0xFD8
  8295                           
  8296 ;; *************** function _RADIO_DIO1 *****************
  8297 ;; Defined at:
  8298 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;  dioMapping      1   79[BANK0 ] unsigned char 
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8307 ;; Tracked objects:
  8308 ;;		On entry : F/1
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8312 ;;      Params:         0       0       0       0       0       0       0       0       0
  8313 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8314 ;;      Temps:          0       1       0       0       0       0       0       0       0
  8315 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8316 ;;Total ram usage:        2 bytes
  8317 ;; Hardware stack levels used:    1
  8318 ;; Hardware stack levels required when called:   17
  8319 ;; This function calls:
  8320 ;;		_RADIO_FHSSChangeChannel
  8321 ;;		_RADIO_RegisterRead
  8322 ;;		_RADIO_RxTimeout
  8323 ;;		_RADIO_UnhandledInterrupt
  8324 ;; This function is called by:
  8325 ;;		_LORAWAN_Mainloop
  8326 ;; This function uses a non-reentrant model
  8327 ;;
  8328                           
  8329                           	psect	text50
  8330  006FBC                     __ptext50:
  8331                           	opt stack 0
  8332  006FBC                     _RADIO_DIO1:
  8333                           	opt stack 12
  8334                           
  8335                           ; BSR set to: 1
  8336                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  8337                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  8338                           
  8339                           ;incstack = 0
  8340  006FBC  0E40               	movlw	64
  8341  006FBE  ECEA  F039         	call	_RADIO_RegisterRead
  8342  006FC2  6FAE               	movwf	??_RADIO_DIO1& (0+255),b
  8343  006FC4  39AE               	swapf	??_RADIO_DIO1& (0+255),w,b
  8344  006FC6  0B0F               	andlw	15
  8345  006FC8  0B03               	andlw	3
  8346  006FCA  6FAF               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  8347                           
  8348                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8349  006FCC  0E01               	movlw	1
  8350  006FCE  ECEA  F039         	call	_RADIO_RegisterRead
  8351  006FD2  6FAE               	movwf	??_RADIO_DIO1& (0+255),b
  8352  006FD4  AFAE               	btfss	??_RADIO_DIO1& (0+255),7,b
  8353  006FD6  D00D               	goto	l15539
  8354  006FD8  D003               	goto	l15535
  8355  006FDA                     l15531:
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8359  006FDA  0E01               	movlw	1
  8360  006FDC  EF34  F03A         	goto	_RADIO_UnhandledInterrupt
  8361  006FE0                     l15535:
  8362                           
  8363                           ; BSR set to: 0
  8364  006FE0  51AF               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8365                           
  8366                           ; Switch size 1, requested type "speed"
  8367                           ; Number of cases is 2, Range of values is 0 to 1
  8368                           ; switch strategies available:
  8369                           ; Name         Instructions Cycles
  8370                           ; simple_byte            7     4 (average)
  8371                           ;	Chosen strategy is simple_byte
  8372  006FE2  E102 EFAF  F039    	bz	_RADIO_RxTimeout
  8373  006FE8  0A01               	xorlw	1	; case 1
  8374  006FEA  E102 EF19  F039    	bz	_RADIO_FHSSChangeChannel
  8375  006FF0  D7F4               	goto	l15531
  8376  006FF2                     l15539:
  8377                           
  8378                           ; BSR set to: 0
  8379  006FF2  51AF               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8380                           
  8381                           ; Switch size 1, requested type "speed"
  8382                           ; Number of cases is 1, Range of values is 0 to 0
  8383                           ; switch strategies available:
  8384                           ; Name         Instructions Cycles
  8385                           ; simple_byte            4     3 (average)
  8386                           ;	Chosen strategy is simple_byte
  8387  006FF4  0012               	return	
  8388  006FF6                     __end_of_RADIO_DIO1:
  8389                           	opt stack 0
  8390                           tosu	equ	0xFFF
  8391                           tosh	equ	0xFFE
  8392                           tosl	equ	0xFFD
  8393                           pclath	equ	0xFFA
  8394                           tblptru	equ	0xFF8
  8395                           tblptrh	equ	0xFF7
  8396                           tblptrl	equ	0xFF6
  8397                           tablat	equ	0xFF5
  8398                           prodh	equ	0xFF4
  8399                           prodl	equ	0xFF3
  8400                           intcon	equ	0xFF2
  8401                           postinc0	equ	0xFEE
  8402                           wreg	equ	0xFE8
  8403                           postinc1	equ	0xFE6
  8404                           postdec1	equ	0xFE5
  8405                           plusw1	equ	0xFE3
  8406                           fsr1h	equ	0xFE2
  8407                           fsr1l	equ	0xFE1
  8408                           indf2	equ	0xFDF
  8409                           postinc2	equ	0xFDE
  8410                           postdec2	equ	0xFDD
  8411                           fsr2h	equ	0xFDA
  8412                           fsr2l	equ	0xFD9
  8413                           status	equ	0xFD8
  8414                           
  8415 ;; *************** function _RADIO_RxTimeout *****************
  8416 ;; Defined at:
  8417 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;		None
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      void 
  8424 ;; Registers used:
  8425 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8426 ;; Tracked objects:
  8427 ;;		On entry : E/0
  8428 ;;		On exit  : C/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8431 ;;      Params:         0       0       0       0       0       0       0       0       0
  8432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8434 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8435 ;;Total ram usage:        0 bytes
  8436 ;; Hardware stack levels used:    1
  8437 ;; Hardware stack levels required when called:   16
  8438 ;; This function calls:
  8439 ;;		_LORAWAN_RxTimeout
  8440 ;;		_RADIO_RegisterWrite
  8441 ;;		_RADIO_WriteMode
  8442 ;;		_SwTimerStop
  8443 ;; This function is called by:
  8444 ;;		_RADIO_DIO1
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text51
  8449  00735E                     __ptext51:
  8450                           	opt stack 0
  8451  00735E                     _RADIO_RxTimeout:
  8452                           	opt stack 12
  8453                           
  8454                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8455                           
  8456                           ;incstack = 0
  8457  00735E  0101               	movlb	1	; () banked
  8458  007360  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8459  007362  EC2D  F03B         	call	_SwTimerStop
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8463  007366  0E80               	movlw	128
  8464  007368  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8465  00736A  0E12               	movlw	18
  8466  00736C  ECD4  F03A         	call	_RADIO_RegisterWrite
  8467                           
  8468                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8469  007370  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8470  007374  0E00               	movlw	0
  8471  007376  0100               	movlb	0	; () banked
  8472  007378  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8473  00737A  ECFE  F028         	call	_RADIO_WriteMode
  8474                           
  8475                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8476  00737E  0101               	movlb	1	; () banked
  8477  007380  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8478                           
  8479                           ; BSR set to: 1
  8480                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  8481  007382  EF89  F013         	goto	_LORAWAN_RxTimeout	;wreg free
  8482  007386                     __end_of_RADIO_RxTimeout:
  8483                           	opt stack 0
  8484                           tosu	equ	0xFFF
  8485                           tosh	equ	0xFFE
  8486                           tosl	equ	0xFFD
  8487                           pclath	equ	0xFFA
  8488                           tblptru	equ	0xFF8
  8489                           tblptrh	equ	0xFF7
  8490                           tblptrl	equ	0xFF6
  8491                           tablat	equ	0xFF5
  8492                           prodh	equ	0xFF4
  8493                           prodl	equ	0xFF3
  8494                           intcon	equ	0xFF2
  8495                           postinc0	equ	0xFEE
  8496                           wreg	equ	0xFE8
  8497                           postinc1	equ	0xFE6
  8498                           postdec1	equ	0xFE5
  8499                           plusw1	equ	0xFE3
  8500                           fsr1h	equ	0xFE2
  8501                           fsr1l	equ	0xFE1
  8502                           indf2	equ	0xFDF
  8503                           postinc2	equ	0xFDE
  8504                           postdec2	equ	0xFDD
  8505                           fsr2h	equ	0xFDA
  8506                           fsr2l	equ	0xFD9
  8507                           status	equ	0xFD8
  8508                           
  8509 ;; *************** function _RADIO_FHSSChangeChannel *****************
  8510 ;; Defined at:
  8511 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;		None
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  irqFlags        1    0        unsigned char 
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      void 
  8518 ;; Registers used:
  8519 ;;		wreg, status,2, status,0, cstack
  8520 ;; Tracked objects:
  8521 ;;		On entry : E/0
  8522 ;;		On exit  : 1/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8525 ;;      Params:         0       0       0       0       0       0       0       0       0
  8526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8528 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8529 ;;Total ram usage:        0 bytes
  8530 ;; Hardware stack levels used:    1
  8531 ;; Hardware stack levels required when called:   11
  8532 ;; This function calls:
  8533 ;;		_RADIO_RegisterRead
  8534 ;;		_RADIO_RegisterWrite
  8535 ;;		_RADIO_WriteFrequency
  8536 ;; This function is called by:
  8537 ;;		_RADIO_DIO1
  8538 ;;		_RADIO_DIO2
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           	psect	text52
  8543  007232                     __ptext52:
  8544                           	opt stack 0
  8545  007232                     _RADIO_FHSSChangeChannel:
  8546                           	opt stack 17
  8547                           
  8548                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  8549                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  8550                           
  8551                           ;incstack = 0
  8552  007232  0E12               	movlw	18
  8553  007234  ECEA  F039         	call	_RADIO_RegisterRead
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  8557  007238  0101               	movlb	1	; () banked
  8558  00723A  5197               	movf	(_RadioConfiguration+30)& (0+255),w,b
  8559  00723C  1198               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  8560  00723E  E00A               	bz	l611
  8561                           
  8562                           ; BSR set to: 1
  8563                           ;radio_driver_SX1276.c: 1164: {
  8564                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  8565  007240  51A8               	movf	(_RadioConfiguration+47)& (0+255),w,b
  8566  007242  11A9               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  8567  007244  E007               	bz	l611
  8568                           
  8569                           ; BSR set to: 1
  8570                           ;radio_driver_SX1276.c: 1166: {
  8571                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  8572  007246  0100               	movlb	0	; () banked
  8573  007248  6B71               	clrf	RADIO_WriteFrequency@frequency& (0+255),b
  8574  00724A  6B72               	clrf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  8575  00724C  6B73               	clrf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  8576  00724E  6B74               	clrf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  8577  007250  EC90  F028         	call	_RADIO_WriteFrequency	;wreg free
  8578  007254                     l611:
  8579                           
  8580                           ;radio_driver_SX1276.c: 1168: }
  8581                           ;radio_driver_SX1276.c: 1169: }
  8582                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  8583  007254  0E02               	movlw	2
  8584  007256  0100               	movlb	0	; () banked
  8585  007258  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8586  00725A  0E12               	movlw	18
  8587  00725C  EFD4  F03A         	goto	_RADIO_RegisterWrite
  8588  007260                     __end_of_RADIO_FHSSChangeChannel:
  8589                           	opt stack 0
  8590                           tosu	equ	0xFFF
  8591                           tosh	equ	0xFFE
  8592                           tosl	equ	0xFFD
  8593                           pclath	equ	0xFFA
  8594                           tblptru	equ	0xFF8
  8595                           tblptrh	equ	0xFF7
  8596                           tblptrl	equ	0xFF6
  8597                           tablat	equ	0xFF5
  8598                           prodh	equ	0xFF4
  8599                           prodl	equ	0xFF3
  8600                           intcon	equ	0xFF2
  8601                           postinc0	equ	0xFEE
  8602                           wreg	equ	0xFE8
  8603                           postinc1	equ	0xFE6
  8604                           postdec1	equ	0xFE5
  8605                           plusw1	equ	0xFE3
  8606                           fsr1h	equ	0xFE2
  8607                           fsr1l	equ	0xFE1
  8608                           indf2	equ	0xFDF
  8609                           postinc2	equ	0xFDE
  8610                           postdec2	equ	0xFDD
  8611                           fsr2h	equ	0xFDA
  8612                           fsr2l	equ	0xFD9
  8613                           status	equ	0xFD8
  8614                           
  8615 ;; *************** function _RADIO_DIO0 *****************
  8616 ;; Defined at:
  8617 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;		None
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;  opMode          1  146[BANK0 ] unsigned char 
  8622 ;;  dioMapping      1  145[BANK0 ] unsigned char 
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  1    wreg      void 
  8625 ;; Registers used:
  8626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8627 ;; Tracked objects:
  8628 ;;		On entry : F/1
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8632 ;;      Params:         0       0       0       0       0       0       0       0       0
  8633 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8634 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8635 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8636 ;;Total ram usage:        4 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; Hardware stack levels required when called:   17
  8639 ;; This function calls:
  8640 ;;		_RADIO_FSKPacketSent
  8641 ;;		_RADIO_FSKPayloadReady
  8642 ;;		_RADIO_RegisterRead
  8643 ;;		_RADIO_RxDone
  8644 ;;		_RADIO_TxDone
  8645 ;;		_RADIO_UnhandledInterrupt
  8646 ;; This function is called by:
  8647 ;;		_LORAWAN_Mainloop
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text53
  8652  006522                     __ptext53:
  8653                           	opt stack 0
  8654  006522                     _RADIO_DIO0:
  8655                           	opt stack 12
  8656                           
  8657                           ; BSR set to: 1
  8658                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  8659                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  8660                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  8661                           
  8662                           ;incstack = 0
  8663  006522  0E40               	movlw	64
  8664  006524  ECEA  F039         	call	_RADIO_RegisterRead
  8665  006528  6FEF               	movwf	??_RADIO_DIO0& (0+255),b
  8666  00652A  0E06               	movlw	6
  8667  00652C  6FF0               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  8668  00652E                     u18295:
  8669  00652E  90D8               	bcf	status,0,c
  8670  006530  33EF               	rrcf	??_RADIO_DIO0& (0+255),f,b
  8671  006532  2FF0               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  8672  006534  D7FC               	goto	u18295
  8673  006536  51EF               	movf	??_RADIO_DIO0& (0+255),w,b
  8674  006538  0B03               	andlw	3
  8675  00653A  6FF1               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  8676                           
  8677                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  8678  00653C  0E01               	movlw	1
  8679  00653E  ECEA  F039         	call	_RADIO_RegisterRead
  8680  006542  6FF2               	movwf	RADIO_DIO0@opMode& (0+255),b
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  8684  006544  AFF2               	btfss	RADIO_DIO0@opMode& (0+255),7,b
  8685  006546  D01C               	goto	l15521
  8686  006548  D003               	goto	l15505
  8687  00654A                     l15501:
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8691  00654A  0E01               	movlw	1
  8692  00654C  EF34  F03A         	goto	_RADIO_UnhandledInterrupt
  8693  006550                     l15505:
  8694                           
  8695                           ; BSR set to: 0
  8696  006550  51F1               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8697                           
  8698                           ; Switch size 1, requested type "speed"
  8699                           ; Number of cases is 2, Range of values is 0 to 1
  8700                           ; switch strategies available:
  8701                           ; Name         Instructions Cycles
  8702                           ; simple_byte            7     4 (average)
  8703                           ;	Chosen strategy is simple_byte
  8704  006552  E102 EF6A  F029    	bz	_RADIO_RxDone
  8705  006558  0A01               	xorlw	1	; case 1
  8706  00655A  E102 EFF1  F01D    	bz	_RADIO_TxDone
  8707  006560  D7F4               	goto	l15501
  8708  006562                     l15507:
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  8712  006562  0E07               	movlw	7
  8713  006564  17F2               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  8714                           
  8715                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  8716  006566  0E03               	movlw	3
  8717  006568  19F2               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8718  00656A  E102               	bnz	l15511
  8719                           
  8720                           ; BSR set to: 0
  8721                           ;radio_driver_SX1276.c: 1209: {
  8722                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  8723  00656C  EF28  F01D         	goto	_RADIO_FSKPacketSent	;wreg free
  8724  006570                     l15511:
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  8728  006570  0E05               	movlw	5
  8729  006572  19F2               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8730  006574  E102               	bnz	l15517
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;radio_driver_SX1276.c: 1214: {
  8734                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  8735  006576  EFC8  F02D         	goto	_RADIO_FSKPayloadReady	;wreg free
  8736  00657A                     l15517:
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  8740  00657A  0E00               	movlw	0
  8741  00657C  EF34  F03A         	goto	_RADIO_UnhandledInterrupt
  8742  006580                     l15521:
  8743                           
  8744                           ; BSR set to: 0
  8745  006580  51F1               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8746                           
  8747                           ; Switch size 1, requested type "speed"
  8748                           ; Number of cases is 1, Range of values is 0 to 0
  8749                           ; switch strategies available:
  8750                           ; Name         Instructions Cycles
  8751                           ; simple_byte            4     3 (average)
  8752                           ;	Chosen strategy is simple_byte
  8753  006582  E0EF               	bz	l15507
  8754  006584  D7FA               	goto	l15517
  8755  006586                     __end_of_RADIO_DIO0:
  8756                           	opt stack 0
  8757                           tosu	equ	0xFFF
  8758                           tosh	equ	0xFFE
  8759                           tosl	equ	0xFFD
  8760                           pclath	equ	0xFFA
  8761                           tblptru	equ	0xFF8
  8762                           tblptrh	equ	0xFF7
  8763                           tblptrl	equ	0xFF6
  8764                           tablat	equ	0xFF5
  8765                           prodh	equ	0xFF4
  8766                           prodl	equ	0xFF3
  8767                           intcon	equ	0xFF2
  8768                           postinc0	equ	0xFEE
  8769                           wreg	equ	0xFE8
  8770                           postinc1	equ	0xFE6
  8771                           postdec1	equ	0xFE5
  8772                           plusw1	equ	0xFE3
  8773                           fsr1h	equ	0xFE2
  8774                           fsr1l	equ	0xFE1
  8775                           indf2	equ	0xFDF
  8776                           postinc2	equ	0xFDE
  8777                           postdec2	equ	0xFDD
  8778                           fsr2h	equ	0xFDA
  8779                           fsr2l	equ	0xFD9
  8780                           status	equ	0xFD8
  8781                           
  8782 ;; *************** function _RADIO_UnhandledInterrupt *****************
  8783 ;; Defined at:
  8784 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  modulation      1    wreg     enum E16925
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;  modulation      1    8[BANK0 ] enum E16925
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  1    wreg      void 
  8791 ;; Registers used:
  8792 ;;		wreg, status,2, status,0, cstack
  8793 ;; Tracked objects:
  8794 ;;		On entry : E/0
  8795 ;;		On exit  : 1/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8798 ;;      Params:         0       0       0       0       0       0       0       0       0
  8799 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8801 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8802 ;;Total ram usage:        1 bytes
  8803 ;; Hardware stack levels used:    1
  8804 ;; Hardware stack levels required when called:   10
  8805 ;; This function calls:
  8806 ;;		_RADIO_RegisterWrite
  8807 ;; This function is called by:
  8808 ;;		_RADIO_DIO0
  8809 ;;		_RADIO_DIO1
  8810 ;;		_RADIO_DIO2
  8811 ;;		_RADIO_DIO3
  8812 ;;		_RADIO_DIO4
  8813 ;;		_RADIO_DIO5
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text54
  8818  007468                     __ptext54:
  8819                           	opt stack 0
  8820  007468                     _RADIO_UnhandledInterrupt:
  8821                           	opt stack 18
  8822                           
  8823                           ;incstack = 0
  8824                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  8825  007468  0100               	movlb	0	; () banked
  8826  00746A  6F68               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  8827                           
  8828                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  8829  00746C  0568               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  8830  00746E  E104               	bnz	l15015
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;radio_driver_SX1276.c: 1145: {
  8834                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  8835  007470  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8836  007472  0E12               	movlw	18
  8837  007474  EFD4  F03A         	goto	_RADIO_RegisterWrite
  8838  007478                     l15015:
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;radio_driver_SX1276.c: 1148: else
  8842                           ;radio_driver_SX1276.c: 1149: {
  8843                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  8844  007478  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8845  00747A  0E3E               	movlw	62
  8846  00747C  ECD4  F03A         	call	_RADIO_RegisterWrite
  8847                           
  8848                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  8849  007480  0100               	movlb	0	; () banked
  8850  007482  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8851  007484  0E3F               	movlw	63
  8852  007486  EFD4  F03A         	goto	_RADIO_RegisterWrite
  8853  00748A                     __end_of_RADIO_UnhandledInterrupt:
  8854                           	opt stack 0
  8855                           tosu	equ	0xFFF
  8856                           tosh	equ	0xFFE
  8857                           tosl	equ	0xFFD
  8858                           pclath	equ	0xFFA
  8859                           tblptru	equ	0xFF8
  8860                           tblptrh	equ	0xFF7
  8861                           tblptrl	equ	0xFF6
  8862                           tablat	equ	0xFF5
  8863                           prodh	equ	0xFF4
  8864                           prodl	equ	0xFF3
  8865                           intcon	equ	0xFF2
  8866                           postinc0	equ	0xFEE
  8867                           wreg	equ	0xFE8
  8868                           postinc1	equ	0xFE6
  8869                           postdec1	equ	0xFE5
  8870                           plusw1	equ	0xFE3
  8871                           fsr1h	equ	0xFE2
  8872                           fsr1l	equ	0xFE1
  8873                           indf2	equ	0xFDF
  8874                           postinc2	equ	0xFDE
  8875                           postdec2	equ	0xFDD
  8876                           fsr2h	equ	0xFDA
  8877                           fsr2l	equ	0xFD9
  8878                           status	equ	0xFD8
  8879                           
  8880 ;; *************** function _RADIO_TxDone *****************
  8881 ;; Defined at:
  8882 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;		None
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;  timeOnAir       4  116[BANK0 ] unsigned long 
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1    wreg      void 
  8889 ;; Registers used:
  8890 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8891 ;; Tracked objects:
  8892 ;;		On entry : E/0
  8893 ;;		On exit  : C/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8896 ;;      Params:         0       0       0       0       0       0       0       0       0
  8897 ;;      Locals:         0       8       0       0       0       0       0       0       0
  8898 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8899 ;;      Totals:         0      12       0       0       0       0       0       0       0
  8900 ;;Total ram usage:       12 bytes
  8901 ;; Hardware stack levels used:    1
  8902 ;; Hardware stack levels required when called:   15
  8903 ;; This function calls:
  8904 ;;		_LORAWAN_TxDone
  8905 ;;		_RADIO_RegisterWrite
  8906 ;;		_RADIO_WriteMode
  8907 ;;		_SwTimerReadValue
  8908 ;;		_SwTimerStop
  8909 ;; This function is called by:
  8910 ;;		_RADIO_DIO0
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text55
  8915  003BE2                     __ptext55:
  8916                           	opt stack 0
  8917  003BE2                     _RADIO_TxDone:
  8918                           	opt stack 13
  8919                           
  8920                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  8921                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8922                           
  8923                           ;incstack = 0
  8924  003BE2  0101               	movlb	1	; () banked
  8925  003BE4  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8926  003BE6  EC2D  F03B         	call	_SwTimerStop
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  8930  003BEA  0E08               	movlw	8
  8931  003BEC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8932  003BEE  0E12               	movlw	18
  8933  003BF0  ECD4  F03A         	call	_RADIO_RegisterWrite
  8934                           
  8935                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8936  003BF4  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8937  003BF8  0E00               	movlw	0
  8938  003BFA  0100               	movlb	0	; () banked
  8939  003BFC  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8940  003BFE  ECFE  F028         	call	_RADIO_WriteMode
  8941                           
  8942                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  8943  003C02  0101               	movlb	1	; () banked
  8944  003C04  919C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  8945                           
  8946                           ; BSR set to: 1
  8947                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  8948  003C06  B99C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  8949  003C08  0012               	return	
  8950                           
  8951                           ; BSR set to: 1
  8952                           ;radio_driver_SX1276.c: 1087: {
  8953                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  8954  003C0A  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8955  003C0C  EC26  F037         	call	_SwTimerReadValue
  8956  003C10  518E               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  8957  003C12  E107               	bnz	u17470
  8958  003C14  0E1F               	movlw	31
  8959  003C16  5D8B               	subwf	?_SwTimerReadValue& (0+255),w,b
  8960  003C18  0EAC               	movlw	172
  8961  003C1A  598C               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  8962  003C1C  0EDF               	movlw	223
  8963  003C1E  598D               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  8964  003C20  E346               	bnc	l14981
  8965  003C22                     u17470:
  8966                           
  8967                           ; BSR set to: 0
  8968  003C22  0101               	movlb	1	; () banked
  8969  003C24  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8970  003C26  EC26  F037         	call	_SwTimerReadValue
  8971  003C2A  0E0D               	movlw	13
  8972  003C2C  D005               	goto	u17480
  8973  003C2E                     u17485:
  8974  003C2E  90D8               	bcf	status,0,c
  8975  003C30  338E               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  8976  003C32  338D               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  8977  003C34  338C               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  8978  003C36  338B               	rrcf	?_SwTimerReadValue& (0+255),f,b
  8979  003C38                     u17480:
  8980  003C38  2EE8               	decfsz	wreg,f,c
  8981  003C3A  D7F9               	goto	u17485
  8982  003C3C  0E7D               	movlw	125
  8983  003C3E  038B               	mulwf	?_SwTimerReadValue& (0+255),b
  8984  003C40  CFF3 F0D0          	movff	prodl,??_RADIO_TxDone
  8985  003C44  CFF4 F0D1          	movff	prodh,??_RADIO_TxDone+1
  8986  003C48  6BD2               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  8987  003C4A  6BD3               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  8988  003C4C  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  8989  003C4E  50F3               	movf	prodl,w,c
  8990  003C50  27D1               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  8991  003C52  50F4               	movf	prodh,w,c
  8992  003C54  23D2               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  8993  003C56  0E00               	movlw	0
  8994  003C58  23D3               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  8995  003C5A  038B               	mulwf	?_SwTimerReadValue& (0+255),b
  8996  003C5C  50F3               	movf	prodl,w,c
  8997  003C5E  27D1               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  8998  003C60  50F4               	movf	prodh,w,c
  8999  003C62  23D2               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9000  003C64  0E00               	movlw	0
  9001  003C66  23D3               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9002  003C68  0E7D               	movlw	125
  9003  003C6A  038D               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9004  003C6C  50F3               	movf	prodl,w,c
  9005  003C6E  27D2               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9006  003C70  50F4               	movf	prodh,w,c
  9007  003C72  23D3               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9008  003C74  0E00               	movlw	0
  9009  003C76  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9010  003C78  50F3               	movf	prodl,w,c
  9011  003C7A  27D2               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9012  003C7C  50F4               	movf	prodh,w,c
  9013  003C7E  23D3               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9014  003C80  0E00               	movlw	0
  9015  003C82  038B               	mulwf	?_SwTimerReadValue& (0+255),b
  9016  003C84  50F3               	movf	prodl,w,c
  9017  003C86  27D2               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9018  003C88  50F4               	movf	prodh,w,c
  9019  003C8A  23D3               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9020  003C8C  0E7D               	movlw	125
  9021  003C8E  038E               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9022  003C90  50F3               	movf	prodl,w,c
  9023  003C92  27D3               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9024  003C94  0E00               	movlw	0
  9025  003C96  038D               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9026  003C98  50F3               	movf	prodl,w,c
  9027  003C9A  27D3               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9028  003C9C  0E00               	movlw	0
  9029  003C9E  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9030  003CA0  50F3               	movf	prodl,w,c
  9031  003CA2  27D3               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9032  003CA4  0E00               	movlw	0
  9033  003CA6  038B               	mulwf	?_SwTimerReadValue& (0+255),b
  9034  003CA8  50F3               	movf	prodl,w,c
  9035  003CAA  27D3               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9036  003CAC  D045               	goto	L4
  9037  003CAE                     l14981:
  9038                           
  9039                           ; BSR set to: 0
  9040  003CAE  0101               	movlb	1	; () banked
  9041  003CB0  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9042  003CB2  EC26  F037         	call	_SwTimerReadValue
  9043  003CB6  0E7D               	movlw	125
  9044  003CB8  038B               	mulwf	?_SwTimerReadValue& (0+255),b
  9045  003CBA  CFF3 F0D0          	movff	prodl,??_RADIO_TxDone
  9046  003CBE  CFF4 F0D1          	movff	prodh,??_RADIO_TxDone+1
  9047  003CC2  6BD2               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9048  003CC4  6BD3               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9049  003CC6  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9050  003CC8  50F3               	movf	prodl,w,c
  9051  003CCA  27D1               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9052  003CCC  50F4               	movf	prodh,w,c
  9053  003CCE  23D2               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9054  003CD0  0E00               	movlw	0
  9055  003CD2  23D3               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9056  003CD4  038B               	mulwf	?_SwTimerReadValue& (0+255),b
  9057  003CD6  50F3               	movf	prodl,w,c
  9058  003CD8  27D1               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9059  003CDA  50F4               	movf	prodh,w,c
  9060  003CDC  23D2               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9061  003CDE  0E00               	movlw	0
  9062  003CE0  23D3               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9063  003CE2  0E7D               	movlw	125
  9064  003CE4  038D               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9065  003CE6  50F3               	movf	prodl,w,c
  9066  003CE8  27D2               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9067  003CEA  50F4               	movf	prodh,w,c
  9068  003CEC  23D3               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9069  003CEE  0E00               	movlw	0
  9070  003CF0  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9071  003CF2  50F3               	movf	prodl,w,c
  9072  003CF4  27D2               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9073  003CF6  50F4               	movf	prodh,w,c
  9074  003CF8  23D3               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9075  003CFA  0E00               	movlw	0
  9076  003CFC  038B               	mulwf	?_SwTimerReadValue& (0+255),b
  9077  003CFE  50F3               	movf	prodl,w,c
  9078  003D00  27D2               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9079  003D02  50F4               	movf	prodh,w,c
  9080  003D04  23D3               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9081  003D06  0E7D               	movlw	125
  9082  003D08  038E               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9083  003D0A  50F3               	movf	prodl,w,c
  9084  003D0C  27D3               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9085  003D0E  0E00               	movlw	0
  9086  003D10  038D               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9087  003D12  50F3               	movf	prodl,w,c
  9088  003D14  27D3               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9089  003D16  0E00               	movlw	0
  9090  003D18  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9091  003D1A  50F3               	movf	prodl,w,c
  9092  003D1C  27D3               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9093  003D1E  0E00               	movlw	0
  9094  003D20  038B               	mulwf	?_SwTimerReadValue& (0+255),b
  9095  003D22  50F3               	movf	prodl,w,c
  9096  003D24  27D3               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9097  003D26  0E0D               	movlw	13
  9098  003D28  D005               	goto	u17490
  9099  003D2A                     u17495:
  9100  003D2A  90D8               	bcf	status,0,c
  9101  003D2C  33D3               	rrcf	(??_RADIO_TxDone+3)& (0+255),f,b
  9102  003D2E  33D2               	rrcf	(??_RADIO_TxDone+2)& (0+255),f,b
  9103  003D30  33D1               	rrcf	(??_RADIO_TxDone+1)& (0+255),f,b
  9104  003D32  33D0               	rrcf	??_RADIO_TxDone& (0+255),f,b
  9105  003D34                     u17490:
  9106  003D34  2EE8               	decfsz	wreg,f,c
  9107  003D36  D7F9               	goto	u17495
  9108  003D38                     L4:
  9109  003D38  C0D0  F0D8         	movff	??_RADIO_TxDone,_RADIO_TxDone$1067
  9110  003D3C  C0D1  F0D9         	movff	??_RADIO_TxDone+1,_RADIO_TxDone$1067+1
  9111  003D40  C0D2  F0DA         	movff	??_RADIO_TxDone+2,_RADIO_TxDone$1067+2
  9112  003D44  C0D3  F0DB         	movff	??_RADIO_TxDone+3,_RADIO_TxDone$1067+3
  9113                           
  9114                           ; BSR set to: 0
  9115  003D48  51D8               	movf	_RADIO_TxDone$1067& (0+255),w,b
  9116  003D4A  0820               	sublw	32
  9117  003D4C  6FD4               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  9118  003D4E  0E4E               	movlw	78
  9119  003D50  55D9               	subfwb	(_RADIO_TxDone$1067+1)& (0+255),w,b
  9120  003D52  6FD5               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  9121  003D54  0E00               	movlw	0
  9122  003D56  55DA               	subfwb	(_RADIO_TxDone$1067+2)& (0+255),w,b
  9123  003D58  6FD6               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  9124  003D5A  0E00               	movlw	0
  9125  003D5C  55DB               	subfwb	(_RADIO_TxDone$1067+3)& (0+255),w,b
  9126  003D5E  6FD7               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  9130  003D60  C0D4  F09E         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  9131  003D64  C0D5  F09F         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  9132  003D68  EF9A  F005         	goto	_LORAWAN_TxDone	;wreg free
  9133  003D6C                     __end_of_RADIO_TxDone:
  9134                           	opt stack 0
  9135                           tosu	equ	0xFFF
  9136                           tosh	equ	0xFFE
  9137                           tosl	equ	0xFFD
  9138                           pclath	equ	0xFFA
  9139                           tblptru	equ	0xFF8
  9140                           tblptrh	equ	0xFF7
  9141                           tblptrl	equ	0xFF6
  9142                           tablat	equ	0xFF5
  9143                           prodh	equ	0xFF4
  9144                           prodl	equ	0xFF3
  9145                           intcon	equ	0xFF2
  9146                           postinc0	equ	0xFEE
  9147                           wreg	equ	0xFE8
  9148                           postinc1	equ	0xFE6
  9149                           postdec1	equ	0xFE5
  9150                           plusw1	equ	0xFE3
  9151                           fsr1h	equ	0xFE2
  9152                           fsr1l	equ	0xFE1
  9153                           indf2	equ	0xFDF
  9154                           postinc2	equ	0xFDE
  9155                           postdec2	equ	0xFDD
  9156                           fsr2h	equ	0xFDA
  9157                           fsr2l	equ	0xFD9
  9158                           status	equ	0xFD8
  9159                           
  9160 ;; *************** function _RADIO_RxDone *****************
  9161 ;; Defined at:
  9162 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;		None
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  i               1  142[BANK0 ] unsigned char 
  9167 ;;  irqFlags        1  141[BANK0 ] unsigned char 
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      void 
  9170 ;; Registers used:
  9171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : E/0
  9174 ;;		On exit  : C/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9177 ;;      Params:         0       0       0       0       0       0       0       0       0
  9178 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9180 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9181 ;;Total ram usage:        2 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:   16
  9184 ;; This function calls:
  9185 ;;		_HALSPICSAssert
  9186 ;;		_HALSPICSDeassert
  9187 ;;		_HALSPISend
  9188 ;;		_LORAWAN_RxDone
  9189 ;;		_RADIO_RegisterRead
  9190 ;;		_RADIO_RegisterWrite
  9191 ;;		_RADIO_WriteMode
  9192 ;;		_SwTimerStop
  9193 ;;		___abdiv
  9194 ;; This function is called by:
  9195 ;;		_RADIO_DIO0
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text56
  9200  0052D4                     __ptext56:
  9201                           	opt stack 0
  9202  0052D4                     _RADIO_RxDone:
  9203                           	opt stack 12
  9204                           
  9205                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  9206                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  9207                           
  9208                           ;incstack = 0
  9209  0052D4  0E12               	movlw	18
  9210  0052D6  ECEA  F039         	call	_RADIO_RegisterRead
  9211  0052DA  6FED               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  9212                           
  9213                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  9214  0052DC  0E70               	movlw	112
  9215  0052DE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9216  0052E0  0E12               	movlw	18
  9217  0052E2  ECD4  F03A         	call	_RADIO_RegisterWrite
  9218                           
  9219                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  9220  0052E6  0100               	movlb	0	; () banked
  9221  0052E8  51ED               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  9222  0052EA  0B50               	andlw	80
  9223  0052EC  0A50               	xorlw	80
  9224  0052EE  A4D8               	btfss	status,2,c
  9225  0052F0  0012               	return	
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;radio_driver_SX1276.c: 969: {
  9229                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9230  0052F2  0101               	movlb	1	; () banked
  9231  0052F4  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9232  0052F6  EC2D  F03B         	call	_SwTimerStop
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  9236  0052FA  0E1C               	movlw	28
  9237  0052FC  ECEA  F039         	call	_RADIO_RegisterRead
  9238  005300  6FEE               	movwf	RADIO_RxDone@i& (0+255),b
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  9242  005302  0101               	movlb	1	; () banked
  9243  005304  5195               	movf	(_RadioConfiguration+28)& (0+255),w,b
  9244  005306  E004               	bz	l14883
  9245                           
  9246                           ; BSR set to: 1
  9247  005308  0100               	movlb	0	; () banked
  9248  00530A  ABED               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  9249                           
  9250                           ; BSR set to: 0
  9251  00530C  ADEE               	btfss	RADIO_RxDone@i& (0+255),6,b
  9252  00530E  D037               	goto	l14905
  9253  005310                     l14883:
  9254                           
  9255                           ;radio_driver_SX1276.c: 976: {
  9256                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  9257  005310  0E13               	movlw	19
  9258  005312  ECEA  F039         	call	_RADIO_RegisterRead
  9259  005316  0101               	movlb	1	; () banked
  9260  005318  6F9D               	movwf	(_RadioConfiguration+36)& (0+255),b
  9261                           
  9262                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  9263  00531A  0100               	movlb	0	; () banked
  9264  00531C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
  9265  00531E  0E0D               	movlw	13
  9266  005320  ECD4  F03A         	call	_RADIO_RegisterWrite
  9267                           
  9268                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  9269  005324  ECBA  F03C         	call	_HALSPICSAssert	;wreg free
  9270                           
  9271                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  9272  005328  0E00               	movlw	0
  9273  00532A  EC68  F03C         	call	_HALSPISend
  9274                           
  9275                           ; BSR set to: 14
  9276                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9277  00532E  0100               	movlb	0	; () banked
  9278  005330  6BEE               	clrf	RADIO_RxDone@i& (0+255),b
  9279  005332  D00D               	goto	l14895
  9280  005334                     l14891:
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;radio_driver_SX1276.c: 990: {
  9284                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9285  005334  51EE               	movf	RADIO_RxDone@i& (0+255),w,b
  9286  005336  0101               	movlb	1	; () banked
  9287  005338  259E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9288  00533A  6ED9               	movwf	fsr2l,c
  9289  00533C  0E00               	movlw	0
  9290  00533E  219F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9291  005340  6EDA               	movwf	fsr2h,c
  9292  005342  0EFF               	movlw	255
  9293  005344  EC68  F03C         	call	_HALSPISend
  9294  005348  6EDF               	movwf	indf2,c
  9295                           
  9296                           ; BSR set to: 14
  9297  00534A  0100               	movlb	0	; () banked
  9298  00534C  2BEE               	incf	RADIO_RxDone@i& (0+255),f,b
  9299  00534E                     l14895:
  9300                           
  9301                           ; BSR set to: 0
  9302  00534E  0101               	movlb	1	; () banked
  9303  005350  519D               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9304  005352  0100               	movlb	0	; () banked
  9305  005354  5DEE               	subwf	RADIO_RxDone@i& (0+255),w,b
  9306  005356  E3EE               	bnc	l14891
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;radio_driver_SX1276.c: 992: }
  9310                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  9311  005358  ECB8  F03C         	call	_HALSPICSDeassert	;wreg free
  9312                           
  9313                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  9314  00535C  0101               	movlb	1	; () banked
  9315  00535E  859C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9316                           
  9317                           ; BSR set to: 1
  9318                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  9319  005360  0E19               	movlw	25
  9320  005362  ECEA  F039         	call	_RADIO_RegisterRead
  9321  005366  0101               	movlb	1	; () banked
  9322  005368  6FAB               	movwf	(_RadioConfiguration+50)& (0+255),b
  9323                           
  9324                           ; BSR set to: 1
  9325                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  9326  00536A  0E04               	movlw	4
  9327  00536C  0100               	movlb	0	; () banked
  9328  00536E  6F64               	movwf	___abdiv@divisor& (0+255),b
  9329  005370  0101               	movlb	1	; () banked
  9330  005372  51AB               	movf	(_RadioConfiguration+50)& (0+255),w,b
  9331  005374  EC95  F034         	call	___abdiv
  9332  005378  0101               	movlb	1	; () banked
  9333  00537A  6FAB               	movwf	(_RadioConfiguration+50)& (0+255),b
  9334                           
  9335                           ;radio_driver_SX1276.c: 998: }
  9336  00537C  D002               	goto	l14907
  9337  00537E                     l14905:
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;radio_driver_SX1276.c: 999: else
  9341                           ;radio_driver_SX1276.c: 1000: {
  9342                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  9343  00537E  0101               	movlb	1	; () banked
  9344  005380  879C               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  9345  005382                     l14907:
  9346                           
  9347                           ; BSR set to: 1
  9348                           ;radio_driver_SX1276.c: 1003: }
  9349                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9350  005382  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9351  005386  0E00               	movlw	0
  9352  005388  0100               	movlb	0	; () banked
  9353  00538A  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9354  00538C  ECFE  F028         	call	_RADIO_WriteMode
  9355                           
  9356                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  9357  005390  0101               	movlb	1	; () banked
  9358  005392  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9359                           
  9360                           ; BSR set to: 1
  9361                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9362  005394  C19E  F16B         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9363  005398  C19F  F16C         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9364  00539C  C19D  F16D         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9365  0053A0  EF4B  F000         	goto	_LORAWAN_RxDone	;wreg free
  9366  0053A4                     __end_of_RADIO_RxDone:
  9367                           	opt stack 0
  9368                           tosu	equ	0xFFF
  9369                           tosh	equ	0xFFE
  9370                           tosl	equ	0xFFD
  9371                           pclath	equ	0xFFA
  9372                           tblptru	equ	0xFF8
  9373                           tblptrh	equ	0xFF7
  9374                           tblptrl	equ	0xFF6
  9375                           tablat	equ	0xFF5
  9376                           prodh	equ	0xFF4
  9377                           prodl	equ	0xFF3
  9378                           intcon	equ	0xFF2
  9379                           postinc0	equ	0xFEE
  9380                           wreg	equ	0xFE8
  9381                           postinc1	equ	0xFE6
  9382                           postdec1	equ	0xFE5
  9383                           plusw1	equ	0xFE3
  9384                           fsr1h	equ	0xFE2
  9385                           fsr1l	equ	0xFE1
  9386                           indf2	equ	0xFDF
  9387                           postinc2	equ	0xFDE
  9388                           postdec2	equ	0xFDD
  9389                           fsr2h	equ	0xFDA
  9390                           fsr2l	equ	0xFD9
  9391                           status	equ	0xFD8
  9392                           
  9393 ;; *************** function ___abdiv *****************
  9394 ;; Defined at:
  9395 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\abdiv.c"
  9396 ;; Parameters:    Size  Location     Type
  9397 ;;  dividend        1    wreg     char 
  9398 ;;  divisor         1    4[BANK0 ] char 
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;  dividend        1    8[BANK0 ] char 
  9401 ;;  quotient        1    7[BANK0 ] char 
  9402 ;;  sign            1    6[BANK0 ] unsigned char 
  9403 ;;  counter         1    5[BANK0 ] unsigned char 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      char 
  9406 ;; Registers used:
  9407 ;;		wreg, status,2, status,0
  9408 ;; Tracked objects:
  9409 ;;		On entry : F/1
  9410 ;;		On exit  : F/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9413 ;;      Params:         0       1       0       0       0       0       0       0       0
  9414 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9416 ;;      Totals:         0       5       0       0       0       0       0       0       0
  9417 ;;Total ram usage:        5 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:    7
  9420 ;; This function calls:
  9421 ;;		Nothing
  9422 ;; This function is called by:
  9423 ;;		_RADIO_RxDone
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           	psect	text57
  9428  00692A                     __ptext57:
  9429                           	opt stack 0
  9430  00692A                     ___abdiv:
  9431                           	opt stack 20
  9432                           
  9433                           ;incstack = 0
  9434                           ;___abdiv@dividend stored from wreg
  9435  00692A  0100               	movlb	0	; () banked
  9436  00692C  6F68               	movwf	___abdiv@dividend& (0+255),b
  9437  00692E  6B66               	clrf	___abdiv@sign& (0+255),b
  9438                           
  9439                           ; BSR set to: 0
  9440  006930  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9441  006932  D003               	goto	l14773
  9442                           
  9443                           ; BSR set to: 0
  9444  006934  6D64               	negf	___abdiv@divisor& (0+255),b
  9445                           
  9446                           ; BSR set to: 0
  9447  006936  0E01               	movlw	1
  9448  006938  6F66               	movwf	___abdiv@sign& (0+255),b
  9449  00693A                     l14773:
  9450                           
  9451                           ; BSR set to: 0
  9452  00693A  AF68               	btfss	___abdiv@dividend& (0+255),7,b
  9453  00693C  D003               	goto	l14779
  9454                           
  9455                           ; BSR set to: 0
  9456  00693E  6D68               	negf	___abdiv@dividend& (0+255),b
  9457                           
  9458                           ; BSR set to: 0
  9459  006940  0E01               	movlw	1
  9460  006942  1B66               	xorwf	___abdiv@sign& (0+255),f,b
  9461  006944                     l14779:
  9462                           
  9463                           ; BSR set to: 0
  9464  006944  6B67               	clrf	___abdiv@quotient& (0+255),b
  9465                           
  9466                           ; BSR set to: 0
  9467  006946  5164               	movf	___abdiv@divisor& (0+255),w,b
  9468  006948  E014               	bz	l14801
  9469                           
  9470                           ; BSR set to: 0
  9471  00694A  0E01               	movlw	1
  9472  00694C  6F65               	movwf	___abdiv@counter& (0+255),b
  9473  00694E  D003               	goto	l14789
  9474  006950                     l14785:
  9475                           
  9476                           ; BSR set to: 0
  9477  006950  90D8               	bcf	status,0,c
  9478  006952  3764               	rlcf	___abdiv@divisor& (0+255),f,b
  9479                           
  9480                           ; BSR set to: 0
  9481  006954  2B65               	incf	___abdiv@counter& (0+255),f,b
  9482  006956                     l14789:
  9483                           
  9484                           ; BSR set to: 0
  9485  006956  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9486  006958  D7FB               	goto	l14785
  9487  00695A                     l14791:
  9488                           
  9489                           ; BSR set to: 0
  9490  00695A  90D8               	bcf	status,0,c
  9491  00695C  3767               	rlcf	___abdiv@quotient& (0+255),f,b
  9492  00695E  5164               	movf	___abdiv@divisor& (0+255),w,b
  9493  006960  5D68               	subwf	___abdiv@dividend& (0+255),w,b
  9494  006962  E303               	bnc	l14797
  9495                           
  9496                           ; BSR set to: 0
  9497  006964  5164               	movf	___abdiv@divisor& (0+255),w,b
  9498  006966  5F68               	subwf	___abdiv@dividend& (0+255),f,b
  9499                           
  9500                           ; BSR set to: 0
  9501  006968  8167               	bsf	___abdiv@quotient& (0+255),0,b
  9502  00696A                     l14797:
  9503                           
  9504                           ; BSR set to: 0
  9505  00696A  90D8               	bcf	status,0,c
  9506  00696C  3364               	rrcf	___abdiv@divisor& (0+255),f,b
  9507                           
  9508                           ; BSR set to: 0
  9509  00696E  2F65               	decfsz	___abdiv@counter& (0+255),f,b
  9510  006970  D7F4               	goto	l14791
  9511  006972                     l14801:
  9512                           
  9513                           ; BSR set to: 0
  9514  006972  5166               	movf	___abdiv@sign& (0+255),w,b
  9515  006974  E001               	bz	l14805
  9516                           
  9517                           ; BSR set to: 0
  9518  006976  6D67               	negf	___abdiv@quotient& (0+255),b
  9519  006978                     l14805:
  9520                           
  9521                           ; BSR set to: 0
  9522  006978  5167               	movf	___abdiv@quotient& (0+255),w,b
  9523                           
  9524                           ; BSR set to: 0
  9525  00697A  0012               	return		;funcret
  9526  00697C                     __end_of___abdiv:
  9527                           	opt stack 0
  9528                           tosu	equ	0xFFF
  9529                           tosh	equ	0xFFE
  9530                           tosl	equ	0xFFD
  9531                           pclath	equ	0xFFA
  9532                           tblptru	equ	0xFF8
  9533                           tblptrh	equ	0xFF7
  9534                           tblptrl	equ	0xFF6
  9535                           tablat	equ	0xFF5
  9536                           prodh	equ	0xFF4
  9537                           prodl	equ	0xFF3
  9538                           intcon	equ	0xFF2
  9539                           postinc0	equ	0xFEE
  9540                           wreg	equ	0xFE8
  9541                           postinc1	equ	0xFE6
  9542                           postdec1	equ	0xFE5
  9543                           plusw1	equ	0xFE3
  9544                           fsr1h	equ	0xFE2
  9545                           fsr1l	equ	0xFE1
  9546                           indf2	equ	0xFDF
  9547                           postinc2	equ	0xFDE
  9548                           postdec2	equ	0xFDD
  9549                           fsr2h	equ	0xFDA
  9550                           fsr2l	equ	0xFD9
  9551                           status	equ	0xFD8
  9552                           
  9553 ;; *************** function _RADIO_FSKPayloadReady *****************
  9554 ;; Defined at:
  9555 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;		None
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;  i               1  142[BANK0 ] unsigned char 
  9560 ;;  irqFlags        1  141[BANK0 ] unsigned char 
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  1    wreg      void 
  9563 ;; Registers used:
  9564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9565 ;; Tracked objects:
  9566 ;;		On entry : F/0
  9567 ;;		On exit  : C/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9570 ;;      Params:         0       0       0       0       0       0       0       0       0
  9571 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9572 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9573 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9574 ;;Total ram usage:        2 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; Hardware stack levels required when called:   16
  9577 ;; This function calls:
  9578 ;;		_HALSPICSAssert
  9579 ;;		_HALSPICSDeassert
  9580 ;;		_HALSPISend
  9581 ;;		_LORAWAN_RxDone
  9582 ;;		_LORAWAN_RxTimeout
  9583 ;;		_RADIO_RegisterRead
  9584 ;;		_RADIO_WriteMode
  9585 ;;		_SwTimerStop
  9586 ;; This function is called by:
  9587 ;;		_RADIO_DIO0
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           	psect	text58
  9592  005B90                     __ptext58:
  9593                           	opt stack 0
  9594  005B90                     _RADIO_FSKPayloadReady:
  9595                           	opt stack 12
  9596                           
  9597                           ; BSR set to: 0
  9598                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
  9599                           ;radio_driver_SX1276.c: 1013: uint8_t i;
  9600                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;incstack = 0
  9604  005B90  0E3F               	movlw	63
  9605  005B92  ECEA  F039         	call	_RADIO_RegisterRead
  9606  005B96  6FED               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  9607                           
  9608                           ; BSR set to: 0
  9609                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  9610  005B98  A5ED               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  9611  005B9A  0012               	return	
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;radio_driver_SX1276.c: 1017: {
  9615                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9616  005B9C  0101               	movlb	1	; () banked
  9617  005B9E  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9618  005BA0  EC2D  F03B         	call	_SwTimerStop
  9619                           
  9620                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  9621  005BA4  0101               	movlb	1	; () banked
  9622  005BA6  51A1               	movf	(_RadioConfiguration+40)& (0+255),w,b
  9623  005BA8  EC2D  F03B         	call	_SwTimerStop
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  9627  005BAC  ECBA  F03C         	call	_HALSPICSAssert	;wreg free
  9628                           
  9629                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  9630  005BB0  0E00               	movlw	0
  9631  005BB2  EC68  F03C         	call	_HALSPISend
  9632                           
  9633                           ; BSR set to: 14
  9634                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  9635  005BB6  0EFF               	movlw	255
  9636  005BB8  EC68  F03C         	call	_HALSPISend
  9637  005BBC  0101               	movlb	1	; () banked
  9638  005BBE  6F9D               	movwf	(_RadioConfiguration+36)& (0+255),b
  9639                           
  9640                           ; BSR set to: 1
  9641                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9642  005BC0  0100               	movlb	0	; () banked
  9643  005BC2  6BEE               	clrf	RADIO_FSKPayloadReady@i& (0+255),b
  9644  005BC4  D00D               	goto	l14931
  9645  005BC6                     l14927:
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;radio_driver_SX1276.c: 1029: {
  9649                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9650  005BC6  51EE               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9651  005BC8  0101               	movlb	1	; () banked
  9652  005BCA  259E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9653  005BCC  6ED9               	movwf	fsr2l,c
  9654  005BCE  0E00               	movlw	0
  9655  005BD0  219F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9656  005BD2  6EDA               	movwf	fsr2h,c
  9657  005BD4  0EFF               	movlw	255
  9658  005BD6  EC68  F03C         	call	_HALSPISend
  9659  005BDA  6EDF               	movwf	indf2,c
  9660                           
  9661                           ; BSR set to: 14
  9662  005BDC  0100               	movlb	0	; () banked
  9663  005BDE  2BEE               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  9664  005BE0                     l14931:
  9665                           
  9666                           ; BSR set to: 0
  9667  005BE0  0101               	movlb	1	; () banked
  9668  005BE2  519D               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9669  005BE4  0100               	movlb	0	; () banked
  9670  005BE6  5DEE               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9671  005BE8  E3EE               	bnc	l14927
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;radio_driver_SX1276.c: 1031: }
  9675                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  9676  005BEA  ECB8  F03C         	call	_HALSPICSDeassert	;wreg free
  9677                           
  9678                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9679  005BEE  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9680  005BF2  0E00               	movlw	0
  9681  005BF4  0100               	movlb	0	; () banked
  9682  005BF6  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9683  005BF8  ECFE  F028         	call	_RADIO_WriteMode
  9684                           
  9685                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  9686  005BFC  0101               	movlb	1	; () banked
  9687  005BFE  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9688                           
  9689                           ; BSR set to: 1
  9690                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  9691  005C00  0E80               	movlw	128
  9692  005C02  6FAB               	movwf	(_RadioConfiguration+50)& (0+255),b
  9693                           
  9694                           ; BSR set to: 1
  9695                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  9696  005C04  0595               	decf	(_RadioConfiguration+28)& (0+255),w,b
  9697  005C06  E103               	bnz	l14945
  9698                           
  9699                           ; BSR set to: 1
  9700                           ;radio_driver_SX1276.c: 1040: {
  9701                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
  9702  005C08  0100               	movlb	0	; () banked
  9703  005C0A  A3ED               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  9704  005C0C  D003               	goto	l14947
  9705  005C0E                     l14945:
  9706                           
  9707                           ;radio_driver_SX1276.c: 1042: {
  9708                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
  9709  005C0E  0101               	movlb	1	; () banked
  9710  005C10  859C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9711                           
  9712                           ;radio_driver_SX1276.c: 1044: }
  9713  005C12  D002               	goto	l14951
  9714  005C14                     l14947:
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;radio_driver_SX1276.c: 1045: else
  9718                           ;radio_driver_SX1276.c: 1046: {
  9719                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
  9720  005C14  0101               	movlb	1	; () banked
  9721  005C16  959C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
  9722  005C18                     l14951:
  9723                           
  9724                           ; BSR set to: 1
  9725                           ;radio_driver_SX1276.c: 1053: }
  9726                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  9727  005C18  A59C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  9728  005C1A  EF89  F013         	goto	_LORAWAN_RxTimeout
  9729                           
  9730                           ; BSR set to: 1
  9731                           ;radio_driver_SX1276.c: 1056: {
  9732                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9733  005C1E  C19E  F16B         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9734  005C22  C19F  F16C         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9735  005C26  C19D  F16D         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9736  005C2A  EF4B  F000         	goto	_LORAWAN_RxDone	;wreg free
  9737  005C2E                     __end_of_RADIO_FSKPayloadReady:
  9738                           	opt stack 0
  9739                           tosu	equ	0xFFF
  9740                           tosh	equ	0xFFE
  9741                           tosl	equ	0xFFD
  9742                           pclath	equ	0xFFA
  9743                           tblptru	equ	0xFF8
  9744                           tblptrh	equ	0xFF7
  9745                           tblptrl	equ	0xFF6
  9746                           tablat	equ	0xFF5
  9747                           prodh	equ	0xFF4
  9748                           prodl	equ	0xFF3
  9749                           intcon	equ	0xFF2
  9750                           postinc0	equ	0xFEE
  9751                           wreg	equ	0xFE8
  9752                           postinc1	equ	0xFE6
  9753                           postdec1	equ	0xFE5
  9754                           plusw1	equ	0xFE3
  9755                           fsr1h	equ	0xFE2
  9756                           fsr1l	equ	0xFE1
  9757                           indf2	equ	0xFDF
  9758                           postinc2	equ	0xFDE
  9759                           postdec2	equ	0xFDD
  9760                           fsr2h	equ	0xFDA
  9761                           fsr2l	equ	0xFD9
  9762                           status	equ	0xFD8
  9763                           
  9764 ;; *************** function _LORAWAN_RxTimeout *****************
  9765 ;; Defined at:
  9766 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;		None
  9769 ;; Auto vars:     Size  Location     Type
  9770 ;;  minim           4   73[BANK0 ] unsigned long 
  9771 ;;  i               1   77[BANK0 ] unsigned char 
  9772 ;; Return value:  Size  Location     Type
  9773 ;;                  1    wreg      void 
  9774 ;; Registers used:
  9775 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9776 ;; Tracked objects:
  9777 ;;		On entry : F/1
  9778 ;;		On exit  : C/0
  9779 ;;		Unchanged: 0/0
  9780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9781 ;;      Params:         0       0       0       0       0       0       0       0       0
  9782 ;;      Locals:         0       5       0       0       0       0       0       0       0
  9783 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9784 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9785 ;;Total ram usage:        9 bytes
  9786 ;; Hardware stack levels used:    1
  9787 ;; Hardware stack levels required when called:   15
  9788 ;; This function calls:
  9789 ;;		_LORAWAN_ReceiveWindow2Callback
  9790 ;;		_RADIO_Transmit
  9791 ;;		_ResetParametersForConfirmedTransmission
  9792 ;;		_ResetParametersForUnconfirmedTransmission
  9793 ;;		_RxDataDone
  9794 ;;		_SelectChannelForTransmission
  9795 ;;		_SetJoinFailState
  9796 ;;		_SwTimerSetTimeout
  9797 ;;		_SwTimerStart
  9798 ;;		___lldiv
  9799 ;; This function is called by:
  9800 ;;		_RADIO_FSKPayloadReady
  9801 ;;		_RADIO_RxTimeout
  9802 ;;		_RADIO_RxFSKTimeout
  9803 ;;		_RADIO_WatchdogTimeout
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807                           	psect	text59
  9808  002712                     __ptext59:
  9809                           	opt stack 0
  9810  002712                     _LORAWAN_RxTimeout:
  9811                           	opt stack 12
  9812                           
  9813                           ; BSR set to: 1
  9814                           ;lorawan_eu.c: 466: uint8_t i;
  9815                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
  9816                           
  9817                           ;incstack = 0
  9818  002712  0100               	movlb	0	; () banked
  9819  002714  69A9               	setf	LORAWAN_RxTimeout@minim& (0+255),b
  9820  002716  69AA               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
  9821  002718  69AB               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
  9822  00271A  69AC               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
  9823                           
  9824                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
  9825  00271C  0102               	movlb	2	; () banked
  9826  00271E  B103               	btfsc	(_loRa+3)& (0+255),0,b
  9827  002720  D13C               	goto	l14663
  9828                           
  9829                           ; BSR set to: 2
  9830                           ;lorawan_eu.c: 470: {
  9831                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
  9832  002722  5102               	movf	(_loRa+2)& (0+255),w,b
  9833  002724  0B0F               	andlw	15
  9834  002726  0A03               	xorlw	3
  9835  002728  E10E               	bnz	l1068
  9836                           
  9837                           ; BSR set to: 2
  9838                           ;lorawan_eu.c: 473: {
  9839                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
  9840  00272A  5112               	movf	(_loRa+18)& (0+255),w,b
  9841  00272C  E105               	bnz	l14599
  9842                           
  9843                           ; BSR set to: 2
  9844                           ;lorawan_eu.c: 475: {
  9845                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  9846  00272E  5102               	movf	(_loRa+2)& (0+255),w,b
  9847  002730  0BF0               	andlw	-16
  9848  002732  0904               	iorlw	4
  9849  002734  6F02               	movwf	(_loRa+2)& (0+255),b
  9850                           
  9851                           ;lorawan_eu.c: 477: }
  9852  002736  0012               	return	
  9853  002738                     l14599:
  9854                           
  9855                           ; BSR set to: 2
  9856                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
  9857  002738  0E02               	movlw	2
  9858  00273A  1912               	xorwf	(_loRa+18)& (0+255),w,b
  9859  00273C  A4D8               	btfss	status,2,c
  9860  00273E  0012               	return	
  9861                           
  9862                           ; BSR set to: 2
  9863                           ;lorawan_eu.c: 479: {
  9864                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
  9865  002740  6AE6               	clrf	postinc1,c
  9866  002742  EF9D  F02A         	goto	_LORAWAN_ReceiveWindow2Callback	;wreg free
  9867  002746                     l1068:
  9868                           
  9869                           ; BSR set to: 2
  9870                           ;lorawan_eu.c: 483: else
  9871                           ;lorawan_eu.c: 484: {
  9872                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
  9873  002746  B500               	btfsc	_loRa& (0+255),2,b
  9874                           
  9875                           ; BSR set to: 2
  9876                           ;lorawan_eu.c: 487: {
  9877                           ;lorawan_eu.c: 488: SetJoinFailState();
  9878  002748  EF70  F039         	goto	_SetJoinFailState	;wreg free
  9879                           
  9880                           ; BSR set to: 2
  9881                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
  9882                           
  9883                           ;lorawan_eu.c: 489: }
  9884  00274C  A902               	btfss	(_loRa+2)& (0+255),4,b
  9885  00274E  0012               	return	
  9886                           
  9887                           ; BSR set to: 2
  9888                           ;lorawan_eu.c: 492: {
  9889                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
  9890  002750  A100               	btfss	_loRa& (0+255),0,b
  9891  002752  D04F               	goto	l14621
  9892                           
  9893                           ; BSR set to: 2
  9894                           ;lorawan_eu.c: 494: {
  9895                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
  9896  002754  51D9               	movf	(_loRa+217)& (0+255),w,b
  9897  002756  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  9898  002758  E334               	bnc	l14615
  9899                           
  9900                           ; BSR set to: 2
  9901                           ;lorawan_eu.c: 496: {
  9902                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9903  00275A  5102               	movf	(_loRa+2)& (0+255),w,b
  9904  00275C  0BF0               	andlw	-16
  9905  00275E  0906               	iorlw	6
  9906  002760  6F02               	movwf	(_loRa+2)& (0+255),b
  9907                           
  9908                           ; BSR set to: 2
  9909                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
  9910  002762  51A0               	movf	(_loRa+160)& (0+255),w,b
  9911  002764  0100               	movlb	0	; () banked
  9912  002766  6FA5               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9913  002768  0102               	movlb	2	; () banked
  9914  00276A  51A1               	movf	(_loRa+161)& (0+255),w,b
  9915  00276C  0100               	movlb	0	; () banked
  9916  00276E  6FA6               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
  9917  002770  6BA7               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
  9918  002772  6BA8               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
  9919  002774  0E0C               	movlw	12
  9920  002776                     u16835:
  9921  002776  90D8               	bcf	status,0,c
  9922  002778  37A5               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9923  00277A  37A6               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9924  00277C  37A7               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9925  00277E  37A8               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9926  002780  2EE8               	decfsz	wreg,f,c
  9927  002782  D7F9               	goto	u16835
  9928  002784  C0A5  F064         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
  9929  002788  C0A6  F065         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
  9930  00278C  C0A7  F066         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
  9931  002790  C0A8  F067         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
  9932  002794  0E7D               	movlw	125
  9933  002796  6F68               	movwf	___lldiv@divisor& (0+255),b
  9934  002798  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  9935  00279A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  9936  00279C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  9937  00279E  ECAA  F030         	call	___lldiv	;wreg free
  9938  0027A2  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
  9939  0027A6  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9940  0027AA  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9941  0027AE  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9942  0027B2  0102               	movlb	2	; () banked
  9943  0027B4  51E8               	movf	(_loRa+232)& (0+255),w,b
  9944  0027B6  ECE5  F036         	call	_SwTimerSetTimeout
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
  9948  0027BA  0102               	movlb	2	; () banked
  9949  0027BC  51E8               	movf	(_loRa+232)& (0+255),w,b
  9950  0027BE  EFAA  F02E         	goto	_SwTimerStart
  9951  0027C2                     l14615:
  9952                           
  9953                           ; BSR set to: 2
  9954                           ;lorawan_eu.c: 501: else
  9955                           ;lorawan_eu.c: 502: {
  9956                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
  9957  0027C2  EC15  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9958                           
  9959                           ; BSR set to: 2
  9960                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
  9961  0027C6  0101               	movlb	1	; () banked
  9962  0027C8  5172               	movf	_rxPayload& (0+255),w,b
  9963  0027CA  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
  9964  0027CC  B4D8               	btfsc	status,2,c
  9965  0027CE  0012               	return	
  9966  0027D0                     l14619:
  9967                           
  9968                           ; BSR set to: 1
  9969                           ;lorawan_eu.c: 505: {
  9970                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  9971  0027D0  0E00               	movlw	0
  9972  0027D2  0100               	movlb	0	; () banked
  9973  0027D4  6F64               	movwf	RxDataDone@pData& (0+255),b
  9974  0027D6  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
  9975  0027D8  6F66               	movwf	RxDataDone@dataLength& (0+255),b
  9976  0027DA  6F67               	movwf	RxDataDone@status& (0+255),b
  9977  0027DC  0005               	push	
  9978  0027DE  0101               	movlb	1	; () banked
  9979  0027E0  6EFA               	movwf	pclath,c
  9980  0027E2  5172               	movf	_rxPayload& (0+255),w,b
  9981  0027E4  6EFD               	movwf	tosl,c
  9982  0027E6  5173               	movf	(_rxPayload+1)& (0+255),w,b
  9983  0027E8  6EFE               	movwf	tosh,c
  9984  0027EA  50F8               	movf	tblptru,w,c
  9985  0027EC  6EFF               	movwf	tosu,c
  9986  0027EE  50FA               	movf	pclath,w,c
  9987  0027F0  0012               	return		;indir
  9988  0027F2                     l14621:
  9989                           
  9990                           ; BSR set to: 2
  9991                           ;lorawan_eu.c: 511: else
  9992                           ;lorawan_eu.c: 512: {
  9993                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
  9994  0027F2  51D8               	movf	(_loRa+216)& (0+255),w,b
  9995  0027F4  5DD6               	subwf	(_loRa+214)& (0+255),w,b
  9996  0027F6  E201 D0B7          	bnc	l14657
  9997                           
  9998                           ; BSR set to: 2
  9999                           ;lorawan_eu.c: 514: {
 10000                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10001  0027FA  5102               	movf	(_loRa+2)& (0+255),w,b
 10002  0027FC  0BF0               	andlw	-16
 10003  0027FE  0906               	iorlw	6
 10004  002800  6F02               	movwf	(_loRa+2)& (0+255),b
 10005                           
 10006                           ; BSR set to: 2
 10007                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 10008  002802  0E01               	movlw	1
 10009  002804  EC57  F033         	call	_SelectChannelForTransmission
 10010  002808  0900               	iorlw	0
 10011  00280A  E119               	bnz	l1082
 10012                           
 10013                           ; BSR set to: 0
 10014                           ;lorawan_eu.c: 517: {
 10015                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 10016  00280C  0EF0               	movlw	low (_macBuffer+16)
 10017  00280E  6F94               	movwf	RADIO_Transmit@buffer& (0+255),b
 10018  002810  0E04               	movlw	high (_macBuffer+16)
 10019  002812  6F95               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10020  002814  C2D4  F096         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10021  002818  ECFA  F017         	call	_RADIO_Transmit	;wreg free
 10022  00281C  5194               	movf	?_RADIO_Transmit& (0+255),w,b
 10023  00281E  1195               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 10024  002820  E107               	bnz	l14633
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;lorawan_eu.c: 520: {
 10028                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10029  002822  0102               	movlb	2	; () banked
 10030  002824  2BD8               	incf	(_loRa+216)& (0+255),f,b
 10031                           
 10032                           ; BSR set to: 2
 10033                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10034  002826  5102               	movf	(_loRa+2)& (0+255),w,b
 10035  002828  0BF0               	andlw	-16
 10036  00282A  0901               	iorlw	1
 10037  00282C  6F02               	movwf	(_loRa+2)& (0+255),b
 10038                           
 10039                           ;lorawan_eu.c: 523: }
 10040  00282E  0012               	return	
 10041  002830                     l14633:
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;lorawan_eu.c: 524: else
 10045                           ;lorawan_eu.c: 526: {
 10046                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 10047  002830  EC0E  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10048                           
 10049                           ; BSR set to: 2
 10050                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 10051  002834  0101               	movlb	1	; () banked
 10052  002836  5172               	movf	_rxPayload& (0+255),w,b
 10053  002838  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 10054  00283A  E1CA               	bnz	l14619
 10055  00283C  0012               	return	
 10056  00283E                     l1082:
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;lorawan_eu.c: 534: else
 10060                           ;lorawan_eu.c: 535: {
 10061                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 10062  00283E  6BAD               	clrf	LORAWAN_RxTimeout@i& (0+255),b
 10063  002840  D05B               	goto	l14653
 10064  002842                     l14639:
 10065                           
 10066                           ; BSR set to: 2
 10067                           ;lorawan_eu.c: 538: {
 10068                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10069  002842  0100               	movlb	0	; () banked
 10070  002844  51AD               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10071  002846  0D0E               	mullw	14
 10072  002848  0E04               	movlw	low (_Channels+4)
 10073  00284A  24F3               	addwf	prodl,w,c
 10074  00284C  6ED9               	movwf	fsr2l,c
 10075  00284E  0E04               	movlw	high (_Channels+4)
 10076  002850  20F4               	addwfc	prodh,w,c
 10077  002852  6EDA               	movwf	fsr2h,c
 10078  002854  04DE               	decf	postinc2,w,c
 10079  002856  E14E               	bnz	l14651
 10080                           
 10081                           ; BSR set to: 0
 10082  002858  51AD               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10083  00285A  0D0E               	mullw	14
 10084  00285C  0E08               	movlw	low (_Channels+8)
 10085  00285E  24F3               	addwf	prodl,w,c
 10086  002860  6ED9               	movwf	fsr2l,c
 10087  002862  0E04               	movlw	high (_Channels+8)
 10088  002864  20F4               	addwfc	prodh,w,c
 10089  002866  6EDA               	movwf	fsr2h,c
 10090  002868  50DE               	movf	postinc2,w,c
 10091  00286A  10DE               	iorwf	postinc2,w,c
 10092  00286C  10DE               	iorwf	postinc2,w,c
 10093  00286E  10DE               	iorwf	postinc2,w,c
 10094  002870  E041               	bz	l14651
 10095                           
 10096                           ; BSR set to: 0
 10097  002872  51AD               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10098  002874  0D0E               	mullw	14
 10099  002876  0E08               	movlw	low (_Channels+8)
 10100  002878  24F3               	addwf	prodl,w,c
 10101  00287A  6ED9               	movwf	fsr2l,c
 10102  00287C  0E04               	movlw	high (_Channels+8)
 10103  00287E  20F4               	addwfc	prodh,w,c
 10104  002880  6EDA               	movwf	fsr2h,c
 10105  002882  50DE               	movf	postinc2,w,c
 10106  002884  5DA9               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 10107  002886  50DE               	movf	postinc2,w,c
 10108  002888  59AA               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 10109  00288A  50DE               	movf	postinc2,w,c
 10110  00288C  59AB               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 10111  00288E  50DE               	movf	postinc2,w,c
 10112  002890  59AC               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 10113  002892  E330               	bnc	l14651
 10114                           
 10115                           ; BSR set to: 0
 10116  002894  51AD               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10117  002896  0D0E               	mullw	14
 10118  002898  0E05               	movlw	low (_Channels+5)
 10119  00289A  24F3               	addwf	prodl,w,c
 10120  00289C  6ED9               	movwf	fsr2l,c
 10121  00289E  0E04               	movlw	high (_Channels+5)
 10122  0028A0  20F4               	addwfc	prodh,w,c
 10123  0028A2  6EDA               	movwf	fsr2h,c
 10124  0028A4  50DF               	movf	223,w,c
 10125  0028A6  0B0F               	andlw	15
 10126  0028A8  6FA5               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10127  0028AA  51A5               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 10128  0028AC  0102               	movlb	2	; () banked
 10129  0028AE  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10130  0028B0  E321               	bnc	l14651
 10131                           
 10132                           ; BSR set to: 2
 10133  0028B2  0100               	movlb	0	; () banked
 10134  0028B4  51AD               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10135  0028B6  0D0E               	mullw	14
 10136  0028B8  0E05               	movlw	low (_Channels+5)
 10137  0028BA  24F3               	addwf	prodl,w,c
 10138  0028BC  6ED9               	movwf	fsr2l,c
 10139  0028BE  0E04               	movlw	high (_Channels+5)
 10140  0028C0  20F4               	addwfc	prodh,w,c
 10141  0028C2  6EDA               	movwf	fsr2h,c
 10142  0028C4  38DF               	swapf	223,w,c
 10143  0028C6  0B0F               	andlw	15
 10144  0028C8  6FA5               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10145  0028CA  0102               	movlb	2	; () banked
 10146  0028CC  51DF               	movf	(_loRa+223)& (0+255),w,b
 10147  0028CE  0100               	movlb	0	; () banked
 10148  0028D0  5DA5               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10149  0028D2  E310               	bnc	l14651
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;lorawan_eu.c: 540: {
 10153                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 10154  0028D4  51AD               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10155  0028D6  0D0E               	mullw	14
 10156  0028D8  0E08               	movlw	low (_Channels+8)
 10157  0028DA  24F3               	addwf	prodl,w,c
 10158  0028DC  6ED9               	movwf	fsr2l,c
 10159  0028DE  0E04               	movlw	high (_Channels+8)
 10160  0028E0  20F4               	addwfc	prodh,w,c
 10161  0028E2  6EDA               	movwf	fsr2h,c
 10162  0028E4  CFDE F0A9          	movff	postinc2,LORAWAN_RxTimeout@minim
 10163  0028E8  CFDE F0AA          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 10164  0028EC  CFDE F0AB          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 10165  0028F0  CFDE F0AC          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 10166  0028F4                     l14651:
 10167  0028F4  0100               	movlb	0	; () banked
 10168  0028F6  2BAD               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 10169  0028F8                     l14653:
 10170                           
 10171                           ; BSR set to: 0
 10172  0028F8  51AD               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10173  0028FA  0102               	movlb	2	; () banked
 10174  0028FC  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10175  0028FE  E2A1               	bc	l14639
 10176                           
 10177                           ; BSR set to: 2
 10178                           ;lorawan_eu.c: 542: }
 10179                           ;lorawan_eu.c: 543: }
 10180                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 10181  002900  C0A9  F0A5         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 10182  002904  C0AA  F0A6         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 10183  002908  C0AB  F0A7         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 10184  00290C  C0AC  F0A8         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 10185  002910  0E0C               	movlw	12
 10186  002912                     u16965:
 10187  002912  90D8               	bcf	status,0,c
 10188  002914  0100               	movlb	0	; () banked
 10189  002916  37A5               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10190  002918  37A6               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10191  00291A  37A7               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10192  00291C  37A8               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10193  00291E  2EE8               	decfsz	wreg,f,c
 10194  002920  D7F8               	goto	u16965
 10195  002922  0E00               	movlw	0
 10196  002924  25A5               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10197  002926  6F64               	movwf	___lldiv@dividend& (0+255),b
 10198  002928  0E20               	movlw	32
 10199  00292A  21A6               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 10200  00292C  6F65               	movwf	(___lldiv@dividend+1)& (0+255),b
 10201  00292E  0E03               	movlw	3
 10202  002930  21A7               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 10203  002932  6F66               	movwf	(___lldiv@dividend+2)& (0+255),b
 10204  002934  0E00               	movlw	0
 10205  002936  21A8               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 10206  002938  6F67               	movwf	(___lldiv@dividend+3)& (0+255),b
 10207  00293A  0E7D               	movlw	125
 10208  00293C  6F68               	movwf	___lldiv@divisor& (0+255),b
 10209  00293E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 10210  002940  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10211  002942  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10212  002944  ECAA  F030         	call	___lldiv	;wreg free
 10213  002948  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10214  00294C  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10215  002950  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10216  002954  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10217  002958  0102               	movlb	2	; () banked
 10218  00295A  51EA               	movf	(_loRa+234)& (0+255),w,b
 10219  00295C  ECE5  F036         	call	_SwTimerSetTimeout
 10220                           
 10221                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 10222  002960  0102               	movlb	2	; () banked
 10223  002962  51EA               	movf	(_loRa+234)& (0+255),w,b
 10224  002964  EFAA  F02E         	goto	_SwTimerStart
 10225  002968                     l14657:
 10226                           
 10227                           ; BSR set to: 2
 10228                           ;lorawan_eu.c: 548: else
 10229                           ;lorawan_eu.c: 549: {
 10230                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 10231  002968  EC0E  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10232                           
 10233                           ; BSR set to: 2
 10234                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 10235  00296C  0101               	movlb	1	; () banked
 10236  00296E  5172               	movf	_rxPayload& (0+255),w,b
 10237  002970  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 10238  002972  B4D8               	btfsc	status,2,c
 10239  002974  0012               	return	
 10240                           
 10241                           ; BSR set to: 1
 10242                           ;lorawan_eu.c: 552: {
 10243                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 10244  002976  0E00               	movlw	0
 10245  002978  0100               	movlb	0	; () banked
 10246  00297A  6F64               	movwf	RxDataDone@pData& (0+255),b
 10247  00297C  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
 10248  00297E  6F66               	movwf	RxDataDone@dataLength& (0+255),b
 10249  002980  0E01               	movlw	1
 10250  002982  6F67               	movwf	RxDataDone@status& (0+255),b
 10251  002984  0005               	push	
 10252  002986  0101               	movlb	1	; () banked
 10253  002988  6EFA               	movwf	pclath,c
 10254  00298A  5172               	movf	_rxPayload& (0+255),w,b
 10255  00298C  6EFD               	movwf	tosl,c
 10256  00298E  5173               	movf	(_rxPayload+1)& (0+255),w,b
 10257  002990  6EFE               	movwf	tosh,c
 10258  002992  50F8               	movf	tblptru,w,c
 10259  002994  6EFF               	movwf	tosu,c
 10260  002996  50FA               	movf	pclath,w,c
 10261  002998  0012               	return		;indir
 10262  00299A                     l14663:
 10263                           
 10264                           ; BSR set to: 2
 10265                           ;lorawan_eu.c: 560: else
 10266                           ;lorawan_eu.c: 561: {
 10267                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 10268  00299A  0101               	movlb	1	; () banked
 10269  00299C  5172               	movf	_rxPayload& (0+255),w,b
 10270  00299E  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 10271  0029A0  B4D8               	btfsc	status,2,c
 10272  0029A2  0012               	return	
 10273                           
 10274                           ; BSR set to: 1
 10275                           ;lorawan_eu.c: 564: {
 10276                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 10277  0029A4  0E00               	movlw	0
 10278  0029A6  0100               	movlb	0	; () banked
 10279  0029A8  6F64               	movwf	RxDataDone@pData& (0+255),b
 10280  0029AA  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
 10281  0029AC  6F66               	movwf	RxDataDone@dataLength& (0+255),b
 10282  0029AE  0E02               	movlw	2
 10283  0029B0  6F67               	movwf	RxDataDone@status& (0+255),b
 10284  0029B2  0005               	push	
 10285  0029B4  0101               	movlb	1	; () banked
 10286  0029B6  6EFA               	movwf	pclath,c
 10287  0029B8  5172               	movf	_rxPayload& (0+255),w,b
 10288  0029BA  6EFD               	movwf	tosl,c
 10289  0029BC  5173               	movf	(_rxPayload+1)& (0+255),w,b
 10290  0029BE  6EFE               	movwf	tosh,c
 10291  0029C0  50F8               	movf	tblptru,w,c
 10292  0029C2  6EFF               	movwf	tosu,c
 10293  0029C4  50FA               	movf	pclath,w,c
 10294  0029C6  0012               	return		;indir
 10295  0029C8                     __end_of_LORAWAN_RxTimeout:
 10296                           	opt stack 0
 10297                           tosu	equ	0xFFF
 10298                           tosh	equ	0xFFE
 10299                           tosl	equ	0xFFD
 10300                           pclath	equ	0xFFA
 10301                           tblptru	equ	0xFF8
 10302                           tblptrh	equ	0xFF7
 10303                           tblptrl	equ	0xFF6
 10304                           tablat	equ	0xFF5
 10305                           prodh	equ	0xFF4
 10306                           prodl	equ	0xFF3
 10307                           intcon	equ	0xFF2
 10308                           postinc0	equ	0xFEE
 10309                           wreg	equ	0xFE8
 10310                           postinc1	equ	0xFE6
 10311                           postdec1	equ	0xFE5
 10312                           plusw1	equ	0xFE3
 10313                           fsr1h	equ	0xFE2
 10314                           fsr1l	equ	0xFE1
 10315                           indf2	equ	0xFDF
 10316                           postinc2	equ	0xFDE
 10317                           postdec2	equ	0xFDD
 10318                           fsr2h	equ	0xFDA
 10319                           fsr2l	equ	0xFD9
 10320                           status	equ	0xFD8
 10321                           
 10322 ;; *************** function _LORAWAN_RxDone *****************
 10323 ;; Defined at:
 10324 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;  buffer          2  107[BANK1 ] PTR unsigned char 
 10327 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10328 ;;  bufferLength    1  109[BANK1 ] unsigned char 
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  hdr             2   18[BANK3 ] PTR struct .
 10331 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10332 ;;  joinAccept      2   15[BANK3 ] PTR struct .
 10333 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10334 ;;  computedMic     4   11[BANK3 ] unsigned long 
 10335 ;;  extractedMic    4    3[BANK3 ] unsigned long 
 10336 ;;  packet          2    9[BANK3 ] PTR unsigned char 
 10337 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 10338 ;;  frmPayloadLe    1   17[BANK3 ] unsigned char 
 10339 ;;  temp            1    8[BANK3 ] unsigned char 
 10340 ;;  bufferIndex     1    7[BANK3 ] unsigned char 
 10341 ;;  mhdr            1    2[BANK3 ] struct .
 10342 ;;  channelIndex    1    1[BANK3 ] unsigned char 
 10343 ;;  fPort           1    0[BANK3 ] unsigned char 
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  1    wreg      enum E17365
 10346 ;; Registers used:
 10347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10348 ;; Tracked objects:
 10349 ;;		On entry : F/1
 10350 ;;		On exit  : C/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10353 ;;      Params:         0       0       3       0       0       0       0       0       0
 10354 ;;      Locals:         0       0       0       0      20       0       0       0       0
 10355 ;;      Temps:          0       5       0       0       0       0       0       0       0
 10356 ;;      Totals:         0       5       3       0      20       0       0       0       0
 10357 ;;Total ram usage:       28 bytes
 10358 ;; Hardware stack levels used:    1
 10359 ;; Hardware stack levels required when called:   15
 10360 ;; This function calls:
 10361 ;;		_AESCmac
 10362 ;;		_AESEncodeLoRa
 10363 ;;		_AssembleEncryptionBlock
 10364 ;;		_CheckFlags
 10365 ;;		_CheckMcastFlags
 10366 ;;		_ComputeMic
 10367 ;;		_ComputeSessionKeys
 10368 ;;		_EncryptFRMPayload
 10369 ;;		_ExtractMic
 10370 ;;		_LORAWAN_EnterContinuousReceive
 10371 ;;		_LORAWAN_Send
 10372 ;;		_MacExecuteCommands
 10373 ;;		_RADIO_GetStatus
 10374 ;;		_RADIO_ReleaseData
 10375 ;;		_RxDataDone
 10376 ;;		_SearchAvailableChannel
 10377 ;;		_SetJoinFailState
 10378 ;;		_SetReceptionNotOkState
 10379 ;;		_StartReTxTimer
 10380 ;;		_SwTimerStop
 10381 ;;		_UpdateCfList
 10382 ;;		_UpdateDLSettings
 10383 ;;		_UpdateJoinSuccessState
 10384 ;;		_UpdateReceiveDelays
 10385 ;;		_UpdateRetransmissionAckTimeoutState
 10386 ;;		_memcpy
 10387 ;; This function is called by:
 10388 ;;		_RADIO_RxDone
 10389 ;;		_RADIO_FSKPayloadReady
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393                           	psect	text60
 10394  000096                     __ptext60:
 10395                           	opt stack 0
 10396  000096                     _LORAWAN_RxDone:
 10397                           	opt stack 12
 10398                           
 10399                           ; BSR set to: 1
 10400                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 10401                           ;lorawan.c: 1124: Mhdr_t mhdr;
 10402                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 10403                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 10404                           ;lorawan.c: 1127: uint8_t *packet;
 10405                           ;lorawan.c: 1128: uint8_t temp;
 10406                           ;lorawan.c: 1130: RADIO_ReleaseData();
 10407                           
 10408                           ;incstack = 0
 10409  000096  ECA5  F03C         	call	_RADIO_ReleaseData	;wreg free
 10410                           
 10411                           ; BSR set to: 1
 10412                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 10413  00009A  0102               	movlb	2	; () banked
 10414  00009C  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10415  00009E  EF69  F005         	goto	l14581
 10416                           
 10417                           ; BSR set to: 2
 10418                           ;lorawan.c: 1133: {
 10419                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 10420  0000A2  C16B  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10421  0000A6  C16C  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10422  0000AA  50DF               	movf	indf2,w,c
 10423  0000AC  0103               	movlb	3	; () banked
 10424  0000AE  6FA2               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 10425                           
 10426                           ; BSR set to: 3
 10427                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 10428  0000B0  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10429  0000B2  32E8               	rrcf	wreg,f,c
 10430  0000B4  0B07               	andlw	7
 10431  0000B6  06E8               	decf	wreg,f,c
 10432  0000B8  E001 D0C7          	bnz	l14253
 10433                           
 10434                           ; BSR set to: 3
 10435  0000BC  0102               	movlb	2	; () banked
 10436  0000BE  511D               	movf	(_loRa+29)& (0+255),w,b
 10437  0000C0  E001 D0C3          	bnz	l14253
 10438                           
 10439                           ; BSR set to: 2
 10440                           ;lorawan.c: 1136: {
 10441                           ;lorawan.c: 1137: temp = bufferLength - 1;
 10442  0000C4  0101               	movlb	1	; () banked
 10443  0000C6  056D               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10444  0000C8  0103               	movlb	3	; () banked
 10445  0000CA  6FA8               	movwf	LORAWAN_RxDone@temp& (0+255),b
 10446                           
 10447                           ;lorawan.c: 1138: while (temp > 0)
 10448  0000CC  D020               	goto	l14209
 10449  0000CE                     l14203:
 10450                           
 10451                           ; BSR set to: 3
 10452                           ;lorawan.c: 1139: {
 10453                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 10454  0000CE  0101               	movlb	1	; () banked
 10455  0000D0  516D               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10456  0000D2  256B               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10457  0000D4  0100               	movlb	0	; () banked
 10458  0000D6  6FE8               	movwf	??_LORAWAN_RxDone& (0+255),b
 10459  0000D8  0E00               	movlw	0
 10460  0000DA  0101               	movlb	1	; () banked
 10461  0000DC  216C               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10462  0000DE  0100               	movlb	0	; () banked
 10463  0000E0  6FE9               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
 10464  0000E2  0103               	movlb	3	; () banked
 10465  0000E4  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10466  0000E6  0100               	movlb	0	; () banked
 10467  0000E8  5DE8               	subwf	??_LORAWAN_RxDone& (0+255),w,b
 10468  0000EA  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 10469  0000EC  51E9               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10470  0000EE  A0D8               	btfss	status,0,c
 10471  0000F0  05E9               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10472  0000F2  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 10473  0000F4  0E42               	movlw	low (_loRa+66)
 10474  0000F6  6F92               	movwf	AESEncodeLoRa@key& (0+255),b
 10475  0000F8  0E02               	movlw	high (_loRa+66)
 10476  0000FA  6F93               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 10477  0000FC  ECC3  F039         	call	_AESEncodeLoRa	;wreg free
 10478                           
 10479                           ; BSR set to: 0
 10480                           ;lorawan.c: 1142: if (temp > 16)
 10481  000100  0E10               	movlw	16
 10482  000102  0103               	movlb	3	; () banked
 10483  000104  65A8               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 10484  000106  D002               	goto	l2142
 10485                           
 10486                           ; BSR set to: 3
 10487                           ;lorawan.c: 1143: {
 10488                           ;lorawan.c: 1144: temp -= 16;
 10489  000108  5FA8               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 10490                           
 10491                           ;lorawan.c: 1145: }
 10492  00010A  D001               	goto	l14209
 10493  00010C                     l2142:
 10494                           
 10495                           ; BSR set to: 3
 10496                           ;lorawan.c: 1146: else
 10497                           ;lorawan.c: 1147: {
 10498                           ;lorawan.c: 1148: temp = 0;
 10499  00010C  6BA8               	clrf	LORAWAN_RxDone@temp& (0+255),b
 10500  00010E                     l14209:
 10501                           
 10502                           ; BSR set to: 3
 10503  00010E  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10504  000110  E1DE               	bnz	l14203
 10505                           
 10506                           ; BSR set to: 3
 10507                           ;lorawan.c: 1149: }
 10508                           ;lorawan.c: 1150: }
 10509                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 10510  000112  0E42               	movlw	low (_loRa+66)
 10511  000114  0100               	movlb	0	; () banked
 10512  000116  6FDA               	movwf	ComputeMic@key& (0+255),b
 10513  000118  0E02               	movlw	high (_loRa+66)
 10514  00011A  6FDB               	movwf	(ComputeMic@key+1)& (0+255),b
 10515  00011C  C16B  F0DC         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 10516  000120  C16C  F0DD         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 10517  000124  0101               	movlb	1	; () banked
 10518  000126  516D               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10519  000128  0FFC               	addlw	252
 10520  00012A  0100               	movlb	0	; () banked
 10521  00012C  6FDE               	movwf	ComputeMic@bufferLength& (0+255),b
 10522  00012E  ECBE  F034         	call	_ComputeMic	;wreg free
 10523  000132  C0DA  F3AB         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 10524  000136  C0DB  F3AC         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 10525  00013A  C0DC  F3AD         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 10526  00013E  C0DD  F3AE         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 10527                           
 10528                           ; BSR set to: 0
 10529                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 10530  000142  C16B  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10531  000146  C16C  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10532  00014A  C16D  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10533  00014E  ECA3  F036         	call	_ExtractMic	;wreg free
 10534  000152  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10535  000156  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10536  00015A  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10537  00015E  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 10541  000162  0103               	movlb	3	; () banked
 10542  000164  51AB               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10543  000166  19A3               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10544  000168  E109               	bnz	u16090
 10545  00016A  51AC               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10546  00016C  19A4               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10547  00016E  E106               	bnz	u16090
 10548  000170  51AD               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10549  000172  19A5               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10550  000174  E103               	bnz	u16090
 10551  000176  51AE               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10552  000178  19A6               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10553  00017A  E011               	bz	l14227
 10554  00017C                     u16090:
 10555                           
 10556                           ; BSR set to: 3
 10557                           ;lorawan.c: 1156: {
 10558                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 10559  00017C  0102               	movlb	2	; () banked
 10560  00017E  5102               	movf	(_loRa+2)& (0+255),w,b
 10561  000180  0B0F               	andlw	15
 10562  000182  0A05               	xorlw	5
 10563  000184  E102 EF70  F039    	bz	_SetJoinFailState
 10564                           
 10565                           ; BSR set to: 2
 10566  00018A  5102               	movf	(_loRa+2)& (0+255),w,b
 10567  00018C  0B0F               	andlw	15
 10568  00018E  0A03               	xorlw	3
 10569  000190  A4D8               	btfss	status,2,c
 10570  000192  0012               	return	
 10571                           
 10572                           ; BSR set to: 2
 10573  000194  51F1               	movf	(_loRa+241)& (0+255),w,b
 10574  000196  B4D8               	btfsc	status,2,c
 10575  000198  0012               	return	
 10576                           
 10577                           ; BSR set to: 2
 10578                           ;lorawan.c: 1158: {
 10579                           ;lorawan.c: 1159: SetJoinFailState();
 10580  00019A  EF70  F039         	goto	_SetJoinFailState	;wreg free
 10581  00019E                     l14227:
 10582                           
 10583                           ; BSR set to: 3
 10584                           ;lorawan.c: 1163: }
 10585                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 10586  00019E  0102               	movlb	2	; () banked
 10587  0001A0  5102               	movf	(_loRa+2)& (0+255),w,b
 10588  0001A2  0B0F               	andlw	15
 10589  0001A4  0A03               	xorlw	3
 10590  0001A6  E103               	bnz	l14231
 10591                           
 10592                           ; BSR set to: 2
 10593                           ;lorawan.c: 1167: {
 10594                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 10595  0001A8  51E3               	movf	(_loRa+227)& (0+255),w,b
 10596  0001AA  EC2D  F03B         	call	_SwTimerStop
 10597  0001AE                     l14231:
 10598                           
 10599                           ;lorawan.c: 1169: }
 10600                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 10601                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 10602  0001AE  C16B  F3AF         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 10603  0001B2  C16C  F3B0         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 10604                           
 10605                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 10606  0001B6  0103               	movlb	3	; () banked
 10607  0001B8  EE20 F007          	lfsr	2,7
 10608  0001BC  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10609  0001BE  26D9               	addwf	fsr2l,f,c
 10610  0001C0  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10611  0001C2  22DA               	addwfc	fsr2h,f,c
 10612  0001C4  CFDE F21E          	movff	postinc2,_loRa+30
 10613  0001C8  CFDE F21F          	movff	postinc2,_loRa+31
 10614  0001CC  CFDE F220          	movff	postinc2,_loRa+32
 10615  0001D0  CFDE F221          	movff	postinc2,_loRa+33
 10616                           
 10617                           ; BSR set to: 3
 10618                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 10619  0001D4  EE20 F00C          	lfsr	2,12
 10620  0001D8  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10621  0001DA  26D9               	addwf	fsr2l,f,c
 10622  0001DC  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10623  0001DE  22DA               	addwfc	fsr2h,f,c
 10624  0001E0  50DF               	movf	indf2,w,c
 10625  0001E2  0B0F               	andlw	15
 10626  0001E4  ECD0  F035         	call	_UpdateReceiveDelays
 10627                           
 10628                           ; BSR set to: 2
 10629                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 10630  0001E8  0103               	movlb	3	; () banked
 10631  0001EA  EE20 F00B          	lfsr	2,11
 10632  0001EE  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10633  0001F0  26D9               	addwf	fsr2l,f,c
 10634  0001F2  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10635  0001F4  22DA               	addwfc	fsr2h,f,c
 10636  0001F6  38DF               	swapf	223,w,c
 10637  0001F8  0B07               	andlw	7
 10638  0001FA  0100               	movlb	0	; () banked
 10639  0001FC  6F64               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 10640  0001FE  0103               	movlb	3	; () banked
 10641  000200  EE20 F00B          	lfsr	2,11
 10642  000204  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10643  000206  26D9               	addwf	fsr2l,f,c
 10644  000208  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10645  00020A  22DA               	addwfc	fsr2h,f,c
 10646  00020C  50DF               	movf	223,w,c
 10647  00020E  0B0F               	andlw	15
 10648  000210  EC57  F03B         	call	_UpdateDLSettings
 10649                           
 10650                           ; BSR set to: 0
 10651                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 10652  000214  C3AF  F070         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 10653  000218  C3B0  F071         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 10654  00021C  0101               	movlb	1	; () banked
 10655  00021E  516D               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10656  000220  ECF1  F018         	call	_UpdateCfList
 10657                           
 10658                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 10659  000224  C3AF  F0A4         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 10660  000228  C3B0  F0A5         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 10661  00022C  EC72  F02F         	call	_ComputeSessionKeys	;wreg free
 10662                           
 10663                           ; BSR set to: 0
 10664                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 10665  000230  6AE6               	clrf	postinc1,c
 10666  000232  ECAA  F022         	call	_UpdateJoinSuccessState	;wreg free
 10667                           
 10668                           ; BSR set to: 1
 10669                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 10670  000236  0102               	movlb	2	; () banked
 10671  000238  6B06               	clrf	(_loRa+6)& (0+255),b
 10672  00023A  6B07               	clrf	(_loRa+7)& (0+255),b
 10673  00023C  6B08               	clrf	(_loRa+8)& (0+255),b
 10674  00023E  6B09               	clrf	(_loRa+9)& (0+255),b
 10675                           
 10676                           ; BSR set to: 2
 10677                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 10678  000240  6B0A               	clrf	(_loRa+10)& (0+255),b
 10679  000242  6B0B               	clrf	(_loRa+11)& (0+255),b
 10680  000244  6B0C               	clrf	(_loRa+12)& (0+255),b
 10681  000246  6B0D               	clrf	(_loRa+13)& (0+255),b
 10682  000248  0012               	return	
 10683  00024A                     l14253:
 10684                           
 10685                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 10686  00024A  0103               	movlb	3	; () banked
 10687  00024C  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10688  00024E  32E8               	rrcf	wreg,f,c
 10689  000250  0B07               	andlw	7
 10690  000252  0A03               	xorlw	3
 10691  000254  E007               	bz	l2154
 10692                           
 10693                           ; BSR set to: 3
 10694  000256  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10695  000258  32E8               	rrcf	wreg,f,c
 10696  00025A  0B07               	andlw	7
 10697  00025C  0A05               	xorlw	5
 10698  00025E  E002 EFC1  F031    	bnz	_SetReceptionNotOkState
 10699  000264                     l2154:
 10700                           
 10701                           ; BSR set to: 3
 10702                           ;lorawan.c: 1192: {
 10703                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 10704  000264  0102               	movlb	2	; () banked
 10705  000266  6BA7               	clrf	(_loRa+167)& (0+255),b
 10706                           
 10707                           ; BSR set to: 2
 10708                           ;lorawan.c: 1195: Hdr_t *hdr;
 10709                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 10710  000268  C16B  F3B2         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 10711  00026C  C16C  F3B3         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 10712                           
 10713                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 10714  000270  0E02               	movlw	2
 10715  000272  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10716  000274  E001 D18D          	bnz	l14371
 10717                           
 10718                           ; BSR set to: 2
 10719  000278  0103               	movlb	3	; () banked
 10720  00027A  EE20 F001          	lfsr	2,1
 10721  00027E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10722  000280  26D9               	addwf	fsr2l,f,c
 10723  000282  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10724  000284  22DA               	addwfc	fsr2h,f,c
 10725  000286  0102               	movlb	2	; () banked
 10726  000288  5162               	movf	(_loRa+98)& (0+255),w,b
 10727  00028A  18DE               	xorwf	postinc2,w,c
 10728  00028C  E109               	bnz	u16171
 10729  00028E  5163               	movf	(_loRa+99)& (0+255),w,b
 10730  000290  18DE               	xorwf	postinc2,w,c
 10731  000292  E106               	bnz	u16171
 10732  000294  5164               	movf	(_loRa+100)& (0+255),w,b
 10733  000296  18DE               	xorwf	postinc2,w,c
 10734  000298  E103               	bnz	u16171
 10735  00029A  5165               	movf	(_loRa+101)& (0+255),w,b
 10736  00029C  18DE               	xorwf	postinc2,w,c
 10737  00029E  A4D8               	btfss	status,2,c
 10738  0002A0                     u16171:
 10739  0002A0  D178               	goto	l14371
 10740                           
 10741                           ; BSR set to: 2
 10742  0002A2  A504               	btfss	(_loRa+4)& (0+255),2,b
 10743  0002A4  D176               	goto	l14371
 10744                           
 10745                           ; BSR set to: 2
 10746                           ;lorawan.c: 1200: {
 10747                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 10748  0002A6  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 10749  0002AA  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 10750  0002AE  ECE5  F030         	call	_CheckMcastFlags	;wreg free
 10751  0002B2  0900               	iorlw	0
 10752  0002B4  E107               	bnz	l14271
 10753  0002B6                     l14265:
 10754                           
 10755                           ;lorawan.c: 1203: {
 10756                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10757  0002B6  0102               	movlb	2	; () banked
 10758  0002B8  5102               	movf	(_loRa+2)& (0+255),w,b
 10759  0002BA  0BF0               	andlw	-16
 10760  0002BC  0909               	iorlw	9
 10761  0002BE  6F02               	movwf	(_loRa+2)& (0+255),b
 10762                           
 10763                           ; BSR set to: 2
 10764                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 10765  0002C0  EFF6  F031         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 10766  0002C4                     l14271:
 10767                           
 10768                           ;lorawan.c: 1207: }
 10769                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 10770  0002C4  0103               	movlb	3	; () banked
 10771  0002C6  EE20 F006          	lfsr	2,6
 10772  0002CA  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10773  0002CC  26D9               	addwf	fsr2l,f,c
 10774  0002CE  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10775  0002D0  22DA               	addwfc	fsr2h,f,c
 10776  0002D2  CFDE F0E8          	movff	postinc2,??_LORAWAN_RxDone
 10777  0002D6  CFDD F0E9          	movff	postdec2,??_LORAWAN_RxDone+1
 10778  0002DA  C0E8  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10779  0002DE  C0E9  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10780  0002E2  0100               	movlb	0	; () banked
 10781  0002E4  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10782  0002E6  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10783  0002E8  0101               	movlb	1	; () banked
 10784  0002EA  516D               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10785  0002EC  0FFC               	addlw	252
 10786  0002EE  0100               	movlb	0	; () banked
 10787  0002F0  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10788  0002F2  0E49               	movlw	73
 10789  0002F4  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10790  0002F6  0E01               	movlw	1
 10791  0002F8  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10792  0002FA  EC15  F02C         	call	_AssembleEncryptionBlock
 10793                           
 10794                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10795  0002FE  0EEF               	movlw	low _radioBuffer
 10796  000300  6F64               	movwf	memcpy@d1& (0+255),b
 10797  000302  0E05               	movlw	high _radioBuffer
 10798  000304  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10799  000306  0EAF               	movlw	low _aesBuffer
 10800  000308  6F66               	movwf	memcpy@s1& (0+255),b
 10801  00030A  0E01               	movlw	high _aesBuffer
 10802  00030C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10803  00030E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10804  000310  0E10               	movlw	16
 10805  000312  6F68               	movwf	memcpy@n& (0+255),b
 10806  000314  EC6A  F034         	call	_memcpy	;wreg free
 10807                           
 10808                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10809  000318  0EFF               	movlw	low (_radioBuffer+16)
 10810  00031A  6F64               	movwf	memcpy@d1& (0+255),b
 10811  00031C  0E05               	movlw	high (_radioBuffer+16)
 10812  00031E  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10813  000320  C16B  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10814  000324  C16C  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10815  000328  0EFC               	movlw	252
 10816  00032A  0101               	movlb	1	; () banked
 10817  00032C  256D               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10818  00032E  0100               	movlb	0	; () banked
 10819  000330  6F68               	movwf	memcpy@n& (0+255),b
 10820  000332  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10821  000334  0EFF               	movlw	255
 10822  000336  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 10823  000338  EC6A  F034         	call	_memcpy	;wreg free
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10827  00033C  0E66               	movlw	low (_loRa+102)
 10828  00033E  6FCC               	movwf	AESCmac@key& (0+255),b
 10829  000340  0E02               	movlw	high (_loRa+102)
 10830  000342  6FCD               	movwf	(AESCmac@key+1)& (0+255),b
 10831  000344  0EAF               	movlw	low _aesBuffer
 10832  000346  6FCE               	movwf	AESCmac@output& (0+255),b
 10833  000348  0E01               	movlw	high _aesBuffer
 10834  00034A  6FCF               	movwf	(AESCmac@output+1)& (0+255),b
 10835  00034C  0EEF               	movlw	low _radioBuffer
 10836  00034E  6FD0               	movwf	AESCmac@input& (0+255),b
 10837  000350  0E05               	movlw	high _radioBuffer
 10838  000352  6FD1               	movwf	(AESCmac@input+1)& (0+255),b
 10839  000354  0101               	movlb	1	; () banked
 10840  000356  516D               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10841  000358  0F0C               	addlw	12
 10842  00035A  0100               	movlb	0	; () banked
 10843  00035C  6FD2               	movwf	AESCmac@size& (0+255),b
 10844  00035E  EC16  F00C         	call	_AESCmac	;wreg free
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10848  000362  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 10849  000364  6F64               	movwf	memcpy@d1& (0+255),b
 10850  000366  0E03               	movlw	high LORAWAN_RxDone@computedMic
 10851  000368  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10852  00036A  0EAF               	movlw	low _aesBuffer
 10853  00036C  6F66               	movwf	memcpy@s1& (0+255),b
 10854  00036E  0E01               	movlw	high _aesBuffer
 10855  000370  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10856  000372  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10857  000374  0E04               	movlw	4
 10858  000376  6F68               	movwf	memcpy@n& (0+255),b
 10859  000378  EC6A  F034         	call	_memcpy	;wreg free
 10860                           
 10861                           ; BSR set to: 0
 10862                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 10863  00037C  C16B  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10864  000380  C16C  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10865  000384  C16D  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10866  000388  ECA3  F036         	call	_ExtractMic	;wreg free
 10867  00038C  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10868  000390  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10869  000394  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10870  000398  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10871                           
 10872                           ; BSR set to: 0
 10873                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 10874  00039C  0103               	movlb	3	; () banked
 10875  00039E  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10876  0003A0  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10877  0003A2  E189               	bnz	l14265
 10878  0003A4  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10879  0003A6  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10880  0003A8  E186               	bnz	l14265
 10881  0003AA  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10882  0003AC  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10883  0003AE  E183               	bnz	l14265
 10884  0003B0  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10885  0003B2  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10886  0003B4  E180               	bnz	l14265
 10887                           
 10888                           ; BSR set to: 3
 10889                           ;lorawan.c: 1222: }
 10890                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 10891  0003B6  EE20 F006          	lfsr	2,6
 10892  0003BA  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10893  0003BC  26D9               	addwf	fsr2l,f,c
 10894  0003BE  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10895  0003C0  22DA               	addwfc	fsr2h,f,c
 10896  0003C2  0102               	movlb	2	; () banked
 10897  0003C4  510E               	movf	(_loRa+14)& (0+255),w,b
 10898  0003C6  5CDE               	subwf	postinc2,w,c
 10899  0003C8  510F               	movf	(_loRa+15)& (0+255),w,b
 10900  0003CA  58DE               	subwfb	postinc2,w,c
 10901  0003CC  E336               	bnc	l14305
 10902                           
 10903                           ; BSR set to: 2
 10904                           ;lorawan.c: 1225: {
 10905                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 10906  0003CE  0103               	movlb	3	; () banked
 10907  0003D0  EE20 F006          	lfsr	2,6
 10908  0003D4  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10909  0003D6  26D9               	addwf	fsr2l,f,c
 10910  0003D8  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10911  0003DA  22DA               	addwfc	fsr2h,f,c
 10912  0003DC  CFDE F0E8          	movff	postinc2,??_LORAWAN_RxDone
 10913  0003E0  CFDD F0E9          	movff	postdec2,??_LORAWAN_RxDone+1
 10914  0003E4  0102               	movlb	2	; () banked
 10915  0003E6  510E               	movf	(_loRa+14)& (0+255),w,b
 10916  0003E8  0100               	movlb	0	; () banked
 10917  0003EA  5FE8               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 10918  0003EC  0102               	movlb	2	; () banked
 10919  0003EE  510F               	movf	(_loRa+15)& (0+255),w,b
 10920  0003F0  0100               	movlb	0	; () banked
 10921  0003F2  5BE9               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 10922  0003F4  51E8               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10923  0003F6  0102               	movlb	2	; () banked
 10924  0003F8  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 10925  0003FA  0100               	movlb	0	; () banked
 10926  0003FC  51E9               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10927  0003FE  0102               	movlb	2	; () banked
 10928  000400  599F               	subwfb	(_loRa+159)& (0+255),w,b
 10929  000402  E20F               	bc	l14303
 10930  000404                     l14291:
 10931                           
 10932                           ; BSR set to: 2
 10933                           ;lorawan.c: 1227: {
 10934                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 10935  000404  0101               	movlb	1	; () banked
 10936  000406  5172               	movf	_rxPayload& (0+255),w,b
 10937  000408  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 10938  00040A  E101 D754          	bz	l14265
 10939                           
 10940                           ; BSR set to: 1
 10941                           ;lorawan.c: 1229: {
 10942                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10943  00040E  0E00               	movlw	0
 10944  000410  0100               	movlb	0	; () banked
 10945  000412  6F64               	movwf	RxDataDone@pData& (0+255),b
 10946  000414  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
 10947  000416  6F66               	movwf	RxDataDone@dataLength& (0+255),b
 10948  000418  0E05               	movlw	5
 10949  00041A  6F67               	movwf	RxDataDone@status& (0+255),b
 10950  00041C  D801               	call	u16248
 10951  00041E  D74B               	goto	l14265
 10952  000420                     u16248:
 10953  000420  D0AD               	goto	u16348
 10954  000422                     l14303:
 10955                           
 10956                           ; BSR set to: 2
 10957                           ;lorawan.c: 1237: else
 10958                           ;lorawan.c: 1238: {
 10959                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 10960  000422  0103               	movlb	3	; () banked
 10961  000424  EE20 F006          	lfsr	2,6
 10962  000428  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10963  00042A  26D9               	addwf	fsr2l,f,c
 10964  00042C  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10965  00042E  22DA               	addwfc	fsr2h,f,c
 10966  000430  CFDE F20E          	movff	postinc2,_loRa+14
 10967  000434  CFDD F20F          	movff	postdec2,_loRa+15
 10968  000438  D013               	goto	l14323
 10969  00043A                     l14305:
 10970                           
 10971                           ; BSR set to: 2
 10972                           ;lorawan.c: 1242: else
 10973                           ;lorawan.c: 1243: {
 10974                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 10975  00043A  0103               	movlb	3	; () banked
 10976  00043C  EE20 F006          	lfsr	2,6
 10977  000440  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10978  000442  26D9               	addwf	fsr2l,f,c
 10979  000444  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10980  000446  22DA               	addwfc	fsr2h,f,c
 10981  000448  50DE               	movf	postinc2,w,c
 10982  00044A  10DE               	iorwf	postinc2,w,c
 10983  00044C  E1DB               	bnz	l14291
 10984                           
 10985                           ; BSR set to: 3
 10986  00044E  0102               	movlb	2	; () banked
 10987  000450  290E               	incf	(_loRa+14)& (0+255),w,b
 10988  000452  E1D8               	bnz	l14291
 10989  000454  290F               	incf	(_loRa+15)& (0+255),w,b
 10990  000456  E1D6               	bnz	l14291
 10991                           
 10992                           ; BSR set to: 2
 10993                           ;lorawan.c: 1245: {
 10994                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 10995  000458  6B0E               	clrf	(_loRa+14)& (0+255),b
 10996  00045A  6B0F               	clrf	(_loRa+15)& (0+255),b
 10997                           
 10998                           ; BSR set to: 2
 10999                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 11000  00045C  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 11001  00045E  2B11               	incf	(_loRa+17)& (0+255),f,b
 11002  000460                     l14323:
 11003                           
 11004                           ;lorawan.c: 1259: }
 11005                           ;lorawan.c: 1260: }
 11006                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 11007  000460  0102               	movlb	2	; () banked
 11008  000462  290E               	incf	(_loRa+14)& (0+255),w,b
 11009  000464  E107               	bnz	l14335
 11010  000466  290F               	incf	(_loRa+15)& (0+255),w,b
 11011  000468  E105               	bnz	l14335
 11012  00046A  2910               	incf	(_loRa+16)& (0+255),w,b
 11013  00046C  E103               	bnz	l14335
 11014  00046E  2911               	incf	(_loRa+17)& (0+255),w,b
 11015  000470  E101               	bnz	l14335
 11016  000472  D7C8               	goto	l14291
 11017  000474                     l14335:
 11018                           
 11019                           ; BSR set to: 2
 11020                           ;lorawan.c: 1272: }
 11021                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 11022  000474  5102               	movf	(_loRa+2)& (0+255),w,b
 11023  000476  0B0F               	andlw	15
 11024  000478  0A08               	xorlw	8
 11025  00047A  E108               	bnz	l14339
 11026                           
 11027                           ; BSR set to: 2
 11028                           ;lorawan.c: 1275: {
 11029                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 11030  00047C  51E4               	movf	(_loRa+228)& (0+255),w,b
 11031  00047E  EC2D  F03B         	call	_SwTimerStop
 11032                           
 11033                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 11034  000482  0102               	movlb	2	; () banked
 11035  000484  51E5               	movf	(_loRa+229)& (0+255),w,b
 11036  000486  EC2D  F03B         	call	_SwTimerStop
 11037                           
 11038                           ;lorawan.c: 1278: }
 11039  00048A  D007               	goto	l14343
 11040  00048C                     l14339:
 11041                           
 11042                           ; BSR set to: 2
 11043                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 11044  00048C  5102               	movf	(_loRa+2)& (0+255),w,b
 11045  00048E  0B0F               	andlw	15
 11046  000490  0A03               	xorlw	3
 11047  000492  E103               	bnz	l14343
 11048                           
 11049                           ; BSR set to: 2
 11050                           ;lorawan.c: 1280: {
 11051                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 11052  000494  51E5               	movf	(_loRa+229)& (0+255),w,b
 11053  000496  EC2D  F03B         	call	_SwTimerStop
 11054  00049A                     l14343:
 11055                           
 11056                           ;lorawan.c: 1282: }
 11057                           ;lorawan.c: 1284: buffer = buffer + 8;
 11058  00049A  0E08               	movlw	8
 11059  00049C  0101               	movlb	1	; () banked
 11060  00049E  276B               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11061  0004A0  0E00               	movlw	0
 11062  0004A2  236C               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11063                           
 11064                           ; BSR set to: 1
 11065                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11066  0004A4  516D               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11067  0004A6  0100               	movlb	0	; () banked
 11068  0004A8  6FE8               	movwf	??_LORAWAN_RxDone& (0+255),b
 11069  0004AA  6BE9               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11070  0004AC  0103               	movlb	3	; () banked
 11071  0004AE  EE20 F005          	lfsr	2,5
 11072  0004B2  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11073  0004B4  26D9               	addwf	fsr2l,f,c
 11074  0004B6  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11075  0004B8  22DA               	addwfc	fsr2h,f,c
 11076  0004BA  50DF               	movf	223,w,c
 11077  0004BC  0B0F               	andlw	15
 11078  0004BE  0100               	movlb	0	; () banked
 11079  0004C0  6FEA               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11080  0004C2  6BEB               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11081  0004C4  0E0C               	movlw	12
 11082  0004C6  27EA               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11083  0004C8  0E00               	movlw	0
 11084  0004CA  23EB               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11085  0004CC  51E8               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11086  0004CE  19EA               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11087  0004D0  E103               	bnz	u16320
 11088  0004D2  51E9               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11089  0004D4  19EB               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11090  0004D6  E03A               	bz	l2171
 11091  0004D8                     u16320:
 11092                           
 11093                           ; BSR set to: 0
 11094                           ;lorawan.c: 1287: {
 11095                           ;lorawan.c: 1288: fPort = *(buffer++);
 11096  0004D8  C16B  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11097  0004DC  C16C  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11098  0004E0  50DF               	movf	indf2,w,c
 11099  0004E2  0103               	movlb	3	; () banked
 11100  0004E4  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11101                           
 11102                           ; BSR set to: 3
 11103  0004E6  0101               	movlb	1	; () banked
 11104  0004E8  4B6B               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11105  0004EA  2B6C               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11106                           
 11107                           ; BSR set to: 1
 11108                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 11109  0004EC  516D               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11110  0004EE  0FF4               	addlw	244
 11111  0004F0  0103               	movlb	3	; () banked
 11112  0004F2  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11113                           
 11114                           ; BSR set to: 3
 11115                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 11116  0004F4  0E19               	movlw	25
 11117  0004F6  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11118                           
 11119                           ; BSR set to: 3
 11120                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 11121  0004F8  C16B  F0A4         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11122  0004FC  C16C  F0A5         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11123  000500  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11124  000502  0100               	movlb	0	; () banked
 11125  000504  6FA6               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11126  000506  0E01               	movlw	1
 11127  000508  6FA7               	movwf	EncryptFRMPayload@dir& (0+255),b
 11128  00050A  C20E  F0A8         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 11129  00050E  C20F  F0A9         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 11130  000512  C210  F0AA         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 11131  000516  C211  F0AB         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 11132  00051A  0E76               	movlw	low (_loRa+118)
 11133  00051C  6FAC               	movwf	EncryptFRMPayload@key& (0+255),b
 11134  00051E  0E02               	movlw	high (_loRa+118)
 11135  000520  6FAD               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11136  000522  C3A7  F0AE         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11137  000526  0EEF               	movlw	low _radioBuffer
 11138  000528  6FAF               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11139  00052A  0E05               	movlw	high _radioBuffer
 11140  00052C  6FB0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11141  00052E  0E01               	movlw	1
 11142  000530  6FB1               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11143  000532  ECC2  F020         	call	_EncryptFRMPayload	;wreg free
 11144                           
 11145                           ; BSR set to: 0
 11146                           ;lorawan.c: 1294: packet = buffer - 1;
 11147  000536  0EFF               	movlw	255
 11148  000538  0101               	movlb	1	; () banked
 11149  00053A  256B               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11150  00053C  0103               	movlb	3	; () banked
 11151  00053E  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11152  000540  0EFF               	movlw	255
 11153  000542  0101               	movlb	1	; () banked
 11154  000544  216C               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11155  000546  0103               	movlb	3	; () banked
 11156  000548  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11157                           
 11158                           ;lorawan.c: 1295: }
 11159  00054A  D004               	goto	l2172
 11160  00054C                     l2171:
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;lorawan.c: 1296: else
 11164                           ;lorawan.c: 1297: {
 11165                           ;lorawan.c: 1298: frmPayloadLength = 0;
 11166  00054C  0103               	movlb	3	; () banked
 11167  00054E  6BB1               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11168                           
 11169                           ;lorawan.c: 1299: packet = (0);
 11170  000550  6BA9               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11171  000552  6BAA               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11172  000554                     l2172:
 11173                           
 11174                           ; BSR set to: 3
 11175                           ;lorawan.c: 1300: }
 11176                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 11177  000554  0102               	movlb	2	; () banked
 11178  000556  8303               	bsf	(_loRa+3)& (0+255),1,b
 11179                           
 11180                           ; BSR set to: 2
 11181                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 11182  000558  0EF0               	movlw	-16
 11183  00055A  1702               	andwf	(_loRa+2)& (0+255),f,b
 11184                           
 11185                           ; BSR set to: 2
 11186                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 11187  00055C  0101               	movlb	1	; () banked
 11188  00055E  5172               	movf	_rxPayload& (0+255),w,b
 11189  000560  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 11190  000562  E101 D6A8          	bz	l14265
 11191                           
 11192                           ; BSR set to: 1
 11193                           ;lorawan.c: 1306: {
 11194                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11195  000566  C3A9  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11196  00056A  C3AA  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11197  00056E  C3B1  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11198  000572  0E01               	movlw	1
 11199  000574  0100               	movlb	0	; () banked
 11200  000576  6F67               	movwf	RxDataDone@status& (0+255),b
 11201  000578  D801               	call	u16348
 11202  00057A  D69D               	goto	l14265
 11203  00057C                     u16348:
 11204  00057C  0005               	push	
 11205  00057E  0101               	movlb	1	; () banked
 11206  000580  6EFA               	movwf	pclath,c
 11207  000582  5172               	movf	_rxPayload& (0+255),w,b
 11208  000584  6EFD               	movwf	tosl,c
 11209  000586  5173               	movf	(_rxPayload+1)& (0+255),w,b
 11210  000588  6EFE               	movwf	tosh,c
 11211  00058A  50F8               	movf	tblptru,w,c
 11212  00058C  6EFF               	movwf	tosu,c
 11213  00058E  50FA               	movf	pclath,w,c
 11214  000590  0012               	return		;indir
 11215  000592                     l14371:
 11216                           
 11217                           ; BSR set to: 2
 11218                           ;lorawan.c: 1313: }
 11219                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 11220  000592  0103               	movlb	3	; () banked
 11221  000594  EE20 F001          	lfsr	2,1
 11222  000598  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11223  00059A  26D9               	addwf	fsr2l,f,c
 11224  00059C  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11225  00059E  22DA               	addwfc	fsr2h,f,c
 11226  0005A0  0102               	movlb	2	; () banked
 11227  0005A2  511E               	movf	(_loRa+30)& (0+255),w,b
 11228  0005A4  18DE               	xorwf	postinc2,w,c
 11229  0005A6  E109               	bnz	u16350
 11230  0005A8  511F               	movf	(_loRa+31)& (0+255),w,b
 11231  0005AA  18DE               	xorwf	postinc2,w,c
 11232  0005AC  E106               	bnz	u16350
 11233  0005AE  5120               	movf	(_loRa+32)& (0+255),w,b
 11234  0005B0  18DE               	xorwf	postinc2,w,c
 11235  0005B2  E103               	bnz	u16350
 11236  0005B4  5121               	movf	(_loRa+33)& (0+255),w,b
 11237  0005B6  18DE               	xorwf	postinc2,w,c
 11238  0005B8  E008               	bz	l14383
 11239  0005BA                     u16350:
 11240                           
 11241                           ; BSR set to: 2
 11242                           ;lorawan.c: 1317: {
 11243                           ;lorawan.c: 1318: SetReceptionNotOkState();
 11244  0005BA  ECC1  F031         	call	_SetReceptionNotOkState	;wreg free
 11245  0005BE                     l14375:
 11246                           
 11247                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 11248  0005BE  0E02               	movlw	2
 11249  0005C0  0102               	movlb	2	; () banked
 11250  0005C2                     L5:
 11251  0005C2  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11252  0005C4  E101 D677          	bz	l14265
 11253  0005C8  0012               	return	
 11254  0005CA                     l14383:
 11255                           
 11256                           ; BSR set to: 2
 11257                           ;lorawan.c: 1325: }
 11258                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 11259  0005CA  0103               	movlb	3	; () banked
 11260  0005CC  EE20 F006          	lfsr	2,6
 11261  0005D0  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11262  0005D2  26D9               	addwf	fsr2l,f,c
 11263  0005D4  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11264  0005D6  22DA               	addwfc	fsr2h,f,c
 11265  0005D8  CFDE F0E8          	movff	postinc2,??_LORAWAN_RxDone
 11266  0005DC  CFDD F0E9          	movff	postdec2,??_LORAWAN_RxDone+1
 11267  0005E0  C0E8  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11268  0005E4  C0E9  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11269  0005E8  0100               	movlb	0	; () banked
 11270  0005EA  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11271  0005EC  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11272  0005EE  0101               	movlb	1	; () banked
 11273  0005F0  516D               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11274  0005F2  0FFC               	addlw	252
 11275  0005F4  0100               	movlb	0	; () banked
 11276  0005F6  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11277  0005F8  0E49               	movlw	73
 11278  0005FA  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11279  0005FC  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11280  0005FE  0E01               	movlw	1
 11281  000600  EC15  F02C         	call	_AssembleEncryptionBlock
 11282                           
 11283                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11284  000604  0EEF               	movlw	low _radioBuffer
 11285  000606  6F64               	movwf	memcpy@d1& (0+255),b
 11286  000608  0E05               	movlw	high _radioBuffer
 11287  00060A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11288  00060C  0EAF               	movlw	low _aesBuffer
 11289  00060E  6F66               	movwf	memcpy@s1& (0+255),b
 11290  000610  0E01               	movlw	high _aesBuffer
 11291  000612  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11292  000614  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11293  000616  0E10               	movlw	16
 11294  000618  6F68               	movwf	memcpy@n& (0+255),b
 11295  00061A  EC6A  F034         	call	_memcpy	;wreg free
 11296                           
 11297                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11298  00061E  0EFF               	movlw	low (_radioBuffer+16)
 11299  000620  6F64               	movwf	memcpy@d1& (0+255),b
 11300  000622  0E05               	movlw	high (_radioBuffer+16)
 11301  000624  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11302  000626  C16B  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11303  00062A  C16C  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11304  00062E  0EFC               	movlw	252
 11305  000630  0101               	movlb	1	; () banked
 11306  000632  256D               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11307  000634  0100               	movlb	0	; () banked
 11308  000636  6F68               	movwf	memcpy@n& (0+255),b
 11309  000638  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11310  00063A  0EFF               	movlw	255
 11311  00063C  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 11312  00063E  EC6A  F034         	call	_memcpy	;wreg free
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11316  000642  0E22               	movlw	low (_loRa+34)
 11317  000644  6FCC               	movwf	AESCmac@key& (0+255),b
 11318  000646  0E02               	movlw	high (_loRa+34)
 11319  000648  6FCD               	movwf	(AESCmac@key+1)& (0+255),b
 11320  00064A  0EAF               	movlw	low _aesBuffer
 11321  00064C  6FCE               	movwf	AESCmac@output& (0+255),b
 11322  00064E  0E01               	movlw	high _aesBuffer
 11323  000650  6FCF               	movwf	(AESCmac@output+1)& (0+255),b
 11324  000652  0EEF               	movlw	low _radioBuffer
 11325  000654  6FD0               	movwf	AESCmac@input& (0+255),b
 11326  000656  0E05               	movlw	high _radioBuffer
 11327  000658  6FD1               	movwf	(AESCmac@input+1)& (0+255),b
 11328  00065A  0101               	movlb	1	; () banked
 11329  00065C  516D               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11330  00065E  0F0C               	addlw	12
 11331  000660  0100               	movlb	0	; () banked
 11332  000662  6FD2               	movwf	AESCmac@size& (0+255),b
 11333  000664  EC16  F00C         	call	_AESCmac	;wreg free
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11337  000668  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 11338  00066A  6F64               	movwf	memcpy@d1& (0+255),b
 11339  00066C  0E03               	movlw	high LORAWAN_RxDone@computedMic
 11340  00066E  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11341  000670  0EAF               	movlw	low _aesBuffer
 11342  000672  6F66               	movwf	memcpy@s1& (0+255),b
 11343  000674  0E01               	movlw	high _aesBuffer
 11344  000676  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11345  000678  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11346  00067A  0E04               	movlw	4
 11347  00067C  6F68               	movwf	memcpy@n& (0+255),b
 11348  00067E  EC6A  F034         	call	_memcpy	;wreg free
 11349                           
 11350                           ; BSR set to: 0
 11351                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11352  000682  C16B  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11353  000686  C16C  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11354  00068A  C16D  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11355  00068E  ECA3  F036         	call	_ExtractMic	;wreg free
 11356  000692  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11357  000696  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11358  00069A  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11359  00069E  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 11363  0006A2  0103               	movlb	3	; () banked
 11364  0006A4  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11365  0006A6  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11366  0006A8  E109               	bnz	u16370
 11367  0006AA  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11368  0006AC  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11369  0006AE  E106               	bnz	u16370
 11370  0006B0  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11371  0006B2  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11372  0006B4  E103               	bnz	u16370
 11373  0006B6  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11374  0006B8  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11375  0006BA  E003               	bz	l14403
 11376  0006BC                     u16370:
 11377                           
 11378                           ; BSR set to: 3
 11379                           ;lorawan.c: 1337: {
 11380                           ;lorawan.c: 1338: SetReceptionNotOkState();
 11381  0006BC  ECC1  F031         	call	_SetReceptionNotOkState	;wreg free
 11382  0006C0  D77E               	goto	l14375
 11383  0006C2                     l14403:
 11384                           
 11385                           ; BSR set to: 3
 11386                           ;lorawan.c: 1345: }
 11387                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 11388  0006C2  EE20 F006          	lfsr	2,6
 11389  0006C6  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11390  0006C8  26D9               	addwf	fsr2l,f,c
 11391  0006CA  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11392  0006CC  22DA               	addwfc	fsr2h,f,c
 11393  0006CE  0102               	movlb	2	; () banked
 11394  0006D0  510A               	movf	(_loRa+10)& (0+255),w,b
 11395  0006D2  5CDE               	subwf	postinc2,w,c
 11396  0006D4  510B               	movf	(_loRa+11)& (0+255),w,b
 11397  0006D6  58DE               	subwfb	postinc2,w,c
 11398  0006D8  E346               	bnc	l14433
 11399                           
 11400                           ; BSR set to: 2
 11401                           ;lorawan.c: 1349: {
 11402                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 11403  0006DA  0103               	movlb	3	; () banked
 11404  0006DC  EE20 F006          	lfsr	2,6
 11405  0006E0  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11406  0006E2  26D9               	addwf	fsr2l,f,c
 11407  0006E4  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11408  0006E6  22DA               	addwfc	fsr2h,f,c
 11409  0006E8  CFDE F0E8          	movff	postinc2,??_LORAWAN_RxDone
 11410  0006EC  CFDD F0E9          	movff	postdec2,??_LORAWAN_RxDone+1
 11411  0006F0  0102               	movlb	2	; () banked
 11412  0006F2  510A               	movf	(_loRa+10)& (0+255),w,b
 11413  0006F4  0100               	movlb	0	; () banked
 11414  0006F6  5FE8               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 11415  0006F8  0102               	movlb	2	; () banked
 11416  0006FA  510B               	movf	(_loRa+11)& (0+255),w,b
 11417  0006FC  0100               	movlb	0	; () banked
 11418  0006FE  5BE9               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11419  000700  51E8               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11420  000702  0102               	movlb	2	; () banked
 11421  000704  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 11422  000706  0100               	movlb	0	; () banked
 11423  000708  51E9               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11424  00070A  0102               	movlb	2	; () banked
 11425  00070C  599D               	subwfb	(_loRa+157)& (0+255),w,b
 11426  00070E  E21F               	bc	l14431
 11427                           
 11428                           ; BSR set to: 2
 11429                           ;lorawan.c: 1351: {
 11430                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11431  000710  9100               	bcf	_loRa& (0+255),0,b
 11432                           
 11433                           ; BSR set to: 2
 11434                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 11435  000712  0EF0               	movlw	-16
 11436  000714  1702               	andwf	(_loRa+2)& (0+255),f,b
 11437                           
 11438                           ; BSR set to: 2
 11439                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 11440  000716  0101               	movlb	1	; () banked
 11441  000718  5172               	movf	_rxPayload& (0+255),w,b
 11442  00071A  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 11443  00071C  E015               	bz	l14417
 11444                           
 11445                           ; BSR set to: 1
 11446                           ;lorawan.c: 1355: {
 11447                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 11448  00071E  0102               	movlb	2	; () banked
 11449  000720  9B00               	bcf	_loRa& (0+255),5,b
 11450                           
 11451                           ; BSR set to: 2
 11452                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11453  000722  0E00               	movlw	0
 11454  000724  0100               	movlb	0	; () banked
 11455  000726  6F64               	movwf	RxDataDone@pData& (0+255),b
 11456  000728  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
 11457  00072A  6F66               	movwf	RxDataDone@dataLength& (0+255),b
 11458  00072C  6F67               	movwf	RxDataDone@status& (0+255),b
 11459  00072E  D801               	call	u16428
 11460  000730  D00B               	goto	l14417
 11461  000732                     u16428:
 11462  000732  0005               	push	
 11463  000734  0101               	movlb	1	; () banked
 11464  000736  6EFA               	movwf	pclath,c
 11465  000738  5172               	movf	_rxPayload& (0+255),w,b
 11466  00073A  6EFD               	movwf	tosl,c
 11467  00073C  5173               	movf	(_rxPayload+1)& (0+255),w,b
 11468  00073E  6EFE               	movwf	tosh,c
 11469  000740  50F8               	movf	tblptru,w,c
 11470  000742  6EFF               	movwf	tosu,c
 11471  000744  50FA               	movf	pclath,w,c
 11472  000746  0012               	return		;indir
 11473  000748                     l14417:
 11474                           
 11475                           ; BSR set to: 1
 11476                           ;lorawan.c: 1358: }
 11477                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 11478  000748  0102               	movlb	2	; () banked
 11479  00074A  9303               	bcf	(_loRa+3)& (0+255),1,b
 11480  00074C  D036               	goto	l14453
 11481  00074E                     l14431:
 11482                           
 11483                           ; BSR set to: 2
 11484                           ;lorawan.c: 1370: else
 11485                           ;lorawan.c: 1371: {
 11486                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11487  00074E  0103               	movlb	3	; () banked
 11488  000750  EE20 F006          	lfsr	2,6
 11489  000754  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11490  000756  26D9               	addwf	fsr2l,f,c
 11491  000758  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11492  00075A  22DA               	addwfc	fsr2h,f,c
 11493  00075C  CFDE F20A          	movff	postinc2,_loRa+10
 11494  000760  CFDD F20B          	movff	postdec2,_loRa+11
 11495  000764  D021               	goto	l14451
 11496  000766                     l14433:
 11497                           
 11498                           ; BSR set to: 2
 11499                           ;lorawan.c: 1375: else
 11500                           ;lorawan.c: 1376: {
 11501                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 11502  000766  0103               	movlb	3	; () banked
 11503  000768  EE20 F006          	lfsr	2,6
 11504  00076C  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11505  00076E  26D9               	addwf	fsr2l,f,c
 11506  000770  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11507  000772  22DA               	addwfc	fsr2h,f,c
 11508  000774  50DE               	movf	postinc2,w,c
 11509  000776  10DE               	iorwf	postinc2,w,c
 11510  000778  E114               	bnz	l14441
 11511                           
 11512                           ; BSR set to: 3
 11513  00077A  0102               	movlb	2	; () banked
 11514  00077C  290A               	incf	(_loRa+10)& (0+255),w,b
 11515  00077E  E111               	bnz	l14441
 11516  000780  290B               	incf	(_loRa+11)& (0+255),w,b
 11517  000782  E10F               	bnz	l14441
 11518                           
 11519                           ; BSR set to: 2
 11520                           ;lorawan.c: 1378: {
 11521                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11522  000784  0103               	movlb	3	; () banked
 11523  000786  EE20 F006          	lfsr	2,6
 11524  00078A  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11525  00078C  26D9               	addwf	fsr2l,f,c
 11526  00078E  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11527  000790  22DA               	addwfc	fsr2h,f,c
 11528  000792  CFDE F20A          	movff	postinc2,_loRa+10
 11529  000796  CFDD F20B          	movff	postdec2,_loRa+11
 11530                           
 11531                           ; BSR set to: 3
 11532                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 11533  00079A  0102               	movlb	2	; () banked
 11534  00079C  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 11535  00079E  2B0D               	incf	(_loRa+13)& (0+255),f,b
 11536                           
 11537                           ;lorawan.c: 1382: }
 11538  0007A0  D003               	goto	l14451
 11539  0007A2                     l14441:
 11540                           
 11541                           ;lorawan.c: 1383: else
 11542                           ;lorawan.c: 1384: {
 11543                           ;lorawan.c: 1385: SetReceptionNotOkState();
 11544  0007A2  ECC1  F031         	call	_SetReceptionNotOkState	;wreg free
 11545  0007A6  D70B               	goto	l14375
 11546  0007A8                     l14451:
 11547                           
 11548                           ;lorawan.c: 1393: }
 11549                           ;lorawan.c: 1394: }
 11550                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 11551  0007A8  0102               	movlb	2	; () banked
 11552  0007AA  290A               	incf	(_loRa+10)& (0+255),w,b
 11553  0007AC  E109               	bnz	l14463
 11554  0007AE  290B               	incf	(_loRa+11)& (0+255),w,b
 11555  0007B0  E107               	bnz	l14463
 11556  0007B2  290C               	incf	(_loRa+12)& (0+255),w,b
 11557  0007B4  E105               	bnz	l14463
 11558  0007B6  290D               	incf	(_loRa+13)& (0+255),w,b
 11559  0007B8  E103               	bnz	l14463
 11560  0007BA                     l14453:
 11561                           
 11562                           ; BSR set to: 2
 11563                           ;lorawan.c: 1397: {
 11564                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 11565  0007BA  8304               	bsf	(_loRa+4)& (0+255),1,b
 11566                           
 11567                           ; BSR set to: 2
 11568                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 11569  0007BC  0E02               	movlw	2
 11570  0007BE  D701               	goto	L5
 11571  0007C0                     l14463:
 11572                           
 11573                           ; BSR set to: 2
 11574                           ;lorawan.c: 1407: }
 11575                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 11576  0007C0  5102               	movf	(_loRa+2)& (0+255),w,b
 11577  0007C2  0B0F               	andlw	15
 11578  0007C4  0A03               	xorlw	3
 11579  0007C6  E103               	bnz	l14467
 11580                           
 11581                           ; BSR set to: 2
 11582                           ;lorawan.c: 1411: {
 11583                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 11584  0007C8  51E5               	movf	(_loRa+229)& (0+255),w,b
 11585  0007CA  EC2D  F03B         	call	_SwTimerStop
 11586  0007CE                     l14467:
 11587                           
 11588                           ;lorawan.c: 1413: }
 11589                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11590  0007CE  0E01               	movlw	1
 11591  0007D0  0102               	movlb	2	; () banked
 11592  0007D2  6FD8               	movwf	(_loRa+216)& (0+255),b
 11593                           
 11594                           ; BSR set to: 2
 11595                           ;lorawan.c: 1417: CheckFlags (hdr);
 11596  0007D4  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 11597  0007D8  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 11598  0007DC  EC87  F033         	call	_CheckFlags	;wreg free
 11599                           
 11600                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 11601  0007E0  0103               	movlb	3	; () banked
 11602  0007E2  EE20 F005          	lfsr	2,5
 11603  0007E6  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11604  0007E8  26D9               	addwf	fsr2l,f,c
 11605  0007EA  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11606  0007EC  22DA               	addwfc	fsr2h,f,c
 11607  0007EE  50DF               	movf	223,w,c
 11608  0007F0  0B0F               	andlw	15
 11609  0007F2  E01B               	bz	l14475
 11610                           
 11611                           ; BSR set to: 3
 11612                           ;lorawan.c: 1420: {
 11613                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 11614  0007F4  0E08               	movlw	8
 11615  0007F6  25B2               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 11616  0007F8  0100               	movlb	0	; () banked
 11617  0007FA  6F7A               	movwf	MacExecuteCommands@buffer& (0+255),b
 11618  0007FC  0E00               	movlw	0
 11619  0007FE  0103               	movlb	3	; () banked
 11620  000800  21B3               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11621  000802  0100               	movlb	0	; () banked
 11622  000804  6F7B               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 11623  000806  0103               	movlb	3	; () banked
 11624  000808  EE20 F005          	lfsr	2,5
 11625  00080C  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11626  00080E  26D9               	addwf	fsr2l,f,c
 11627  000810  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11628  000812  22DA               	addwfc	fsr2h,f,c
 11629  000814  50DF               	movf	223,w,c
 11630  000816  0B0F               	andlw	15
 11631  000818  0100               	movlb	0	; () banked
 11632  00081A  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11633  00081C  EC02  F017         	call	_MacExecuteCommands	;wreg free
 11634  000820  C07A  F16B         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11635  000824  C07B  F16C         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11636                           
 11637                           ;lorawan.c: 1422: }
 11638  000828  D005               	goto	l14477
 11639  00082A                     l14475:
 11640                           
 11641                           ; BSR set to: 3
 11642                           ;lorawan.c: 1423: else
 11643                           ;lorawan.c: 1424: {
 11644                           ;lorawan.c: 1425: buffer = buffer + 8;
 11645  00082A  0E08               	movlw	8
 11646  00082C  0101               	movlb	1	; () banked
 11647  00082E  276B               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11648  000830  0E00               	movlw	0
 11649  000832  236C               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11650  000834                     l14477:
 11651                           
 11652                           ;lorawan.c: 1426: }
 11653                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11654  000834  0101               	movlb	1	; () banked
 11655  000836  516D               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11656  000838  0100               	movlb	0	; () banked
 11657  00083A  6FE8               	movwf	??_LORAWAN_RxDone& (0+255),b
 11658  00083C  6BE9               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11659  00083E  0103               	movlb	3	; () banked
 11660  000840  EE20 F005          	lfsr	2,5
 11661  000844  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11662  000846  26D9               	addwf	fsr2l,f,c
 11663  000848  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11664  00084A  22DA               	addwfc	fsr2h,f,c
 11665  00084C  50DF               	movf	223,w,c
 11666  00084E  0B0F               	andlw	15
 11667  000850  0100               	movlb	0	; () banked
 11668  000852  6FEA               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11669  000854  6BEB               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11670  000856  0E0C               	movlw	12
 11671  000858  27EA               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11672  00085A  0E00               	movlw	0
 11673  00085C  23EB               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11674  00085E  51E8               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11675  000860  19EA               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11676  000862  E104               	bnz	u16510
 11677  000864  51E9               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11678  000866  19EB               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11679  000868  E101 D09B          	bz	l2192
 11680  00086C                     u16510:
 11681                           
 11682                           ; BSR set to: 0
 11683                           ;lorawan.c: 1428: {
 11684                           ;lorawan.c: 1429: fPort = *(buffer++);
 11685  00086C  C16B  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11686  000870  C16C  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11687  000874  50DF               	movf	indf2,w,c
 11688  000876  0103               	movlb	3	; () banked
 11689  000878  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11690                           
 11691                           ; BSR set to: 3
 11692  00087A  0101               	movlb	1	; () banked
 11693  00087C  4B6B               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11694  00087E  2B6C               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11695                           
 11696                           ; BSR set to: 1
 11697                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 11698  000880  0103               	movlb	3	; () banked
 11699  000882  EE20 F005          	lfsr	2,5
 11700  000886  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11701  000888  26D9               	addwf	fsr2l,f,c
 11702  00088A  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11703  00088C  22DA               	addwfc	fsr2h,f,c
 11704  00088E  50DF               	movf	223,w,c
 11705  000890  0B0F               	andlw	15
 11706  000892  0100               	movlb	0	; () banked
 11707  000894  6FE8               	movwf	??_LORAWAN_RxDone& (0+255),b
 11708  000896  51E8               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11709  000898  0101               	movlb	1	; () banked
 11710  00089A  5D6D               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11711  00089C  0FF4               	addlw	244
 11712  00089E  0103               	movlb	3	; () banked
 11713  0008A0  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11714                           
 11715                           ; BSR set to: 3
 11716                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 11717  0008A2  EE20 F005          	lfsr	2,5
 11718  0008A6  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11719  0008A8  26D9               	addwf	fsr2l,f,c
 11720  0008AA  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11721  0008AC  22DA               	addwfc	fsr2h,f,c
 11722  0008AE  50DF               	movf	223,w,c
 11723  0008B0  0B0F               	andlw	15
 11724  0008B2  0F19               	addlw	25
 11725  0008B4  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11726                           
 11727                           ; BSR set to: 3
 11728                           ;lorawan.c: 1434: if (fPort != 0)
 11729  0008B6  51A0               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 11730  0008B8  E029               	bz	l14493
 11731                           
 11732                           ; BSR set to: 3
 11733                           ;lorawan.c: 1435: {
 11734                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 11735  0008BA  C16B  F0A4         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11736  0008BE  C16C  F0A5         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11737  0008C2  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11738  0008C4  0100               	movlb	0	; () banked
 11739  0008C6  6FA6               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11740  0008C8  0E01               	movlw	1
 11741  0008CA  6FA7               	movwf	EncryptFRMPayload@dir& (0+255),b
 11742  0008CC  C20A  F0A8         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11743  0008D0  C20B  F0A9         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11744  0008D4  C20C  F0AA         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11745  0008D8  C20D  F0AB         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11746  0008DC  0E32               	movlw	low (_loRa+50)
 11747  0008DE  6FAC               	movwf	EncryptFRMPayload@key& (0+255),b
 11748  0008E0  0E02               	movlw	high (_loRa+50)
 11749  0008E2  6FAD               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11750  0008E4  C3A7  F0AE         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11751  0008E8  0EEF               	movlw	low _radioBuffer
 11752  0008EA  6FAF               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11753  0008EC  0E05               	movlw	high _radioBuffer
 11754  0008EE  6FB0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11755  0008F0  6BB1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11756  0008F2  ECC2  F020         	call	_EncryptFRMPayload	;wreg free
 11757                           
 11758                           ; BSR set to: 0
 11759                           ;lorawan.c: 1437: packet = buffer - 1;
 11760  0008F6  0EFF               	movlw	255
 11761  0008F8  0101               	movlb	1	; () banked
 11762  0008FA  256B               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11763  0008FC  0103               	movlb	3	; () banked
 11764  0008FE  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11765  000900  0EFF               	movlw	255
 11766  000902  0101               	movlb	1	; () banked
 11767  000904  216C               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11768  000906  0103               	movlb	3	; () banked
 11769  000908  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11770                           
 11771                           ;lorawan.c: 1438: }
 11772  00090A  D04F               	goto	l14503
 11773  00090C                     l14493:
 11774                           
 11775                           ; BSR set to: 3
 11776                           ;lorawan.c: 1439: else
 11777                           ;lorawan.c: 1440: {
 11778                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 11779  00090C  0101               	movlb	1	; () banked
 11780  00090E  516D               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11781  000910  0100               	movlb	0	; () banked
 11782  000912  6FE8               	movwf	??_LORAWAN_RxDone& (0+255),b
 11783  000914  6BE9               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11784  000916  0103               	movlb	3	; () banked
 11785  000918  EE20 F005          	lfsr	2,5
 11786  00091C  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11787  00091E  26D9               	addwf	fsr2l,f,c
 11788  000920  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11789  000922  22DA               	addwfc	fsr2h,f,c
 11790  000924  50DF               	movf	223,w,c
 11791  000926  0B0F               	andlw	15
 11792  000928  0100               	movlb	0	; () banked
 11793  00092A  6FEA               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11794  00092C  6BEB               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11795  00092E  0E0D               	movlw	13
 11796  000930  27EA               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11797  000932  0E00               	movlw	0
 11798  000934  23EB               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11799  000936  51E8               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11800  000938  5DEA               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11801  00093A  51EB               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11802  00093C  0A80               	xorlw	128
 11803  00093E  6FEC               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 11804  000940  51E9               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11805  000942  0A80               	xorlw	128
 11806  000944  59EC               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 11807  000946  E22D               	bc	l2192
 11808                           
 11809                           ; BSR set to: 0
 11810                           ;lorawan.c: 1443: {
 11811                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 11812  000948  C16B  F0A4         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11813  00094C  C16C  F0A5         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11814  000950  0103               	movlb	3	; () banked
 11815  000952  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11816  000954  0100               	movlb	0	; () banked
 11817  000956  6FA6               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11818  000958  0E01               	movlw	1
 11819  00095A  6FA7               	movwf	EncryptFRMPayload@dir& (0+255),b
 11820  00095C  C20A  F0A8         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11821  000960  C20B  F0A9         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11822  000964  C20C  F0AA         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11823  000968  C20D  F0AB         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11824  00096C  0E22               	movlw	low (_loRa+34)
 11825  00096E  6FAC               	movwf	EncryptFRMPayload@key& (0+255),b
 11826  000970  0E02               	movlw	high (_loRa+34)
 11827  000972  6FAD               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11828  000974  C3A7  F0AE         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11829  000978  0EEF               	movlw	low _radioBuffer
 11830  00097A  6FAF               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11831  00097C  0E05               	movlw	high _radioBuffer
 11832  00097E  6FB0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11833  000980  6BB1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11834  000982  ECC2  F020         	call	_EncryptFRMPayload	;wreg free
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 11838  000986  C16B  F07A         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 11839  00098A  C16C  F07B         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 11840  00098E  0103               	movlb	3	; () banked
 11841  000990  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11842  000992  0100               	movlb	0	; () banked
 11843  000994  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11844  000996  EC02  F017         	call	_MacExecuteCommands	;wreg free
 11845  00099A  C07A  F16B         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11846  00099E  C07B  F16C         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11847  0009A2                     l2192:
 11848                           
 11849                           ; BSR set to: 0
 11850                           ;lorawan.c: 1453: else
 11851                           ;lorawan.c: 1454: {
 11852                           ;lorawan.c: 1455: frmPayloadLength = 0;
 11853  0009A2  0103               	movlb	3	; () banked
 11854  0009A4  6BB1               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11855                           
 11856                           ;lorawan.c: 1456: packet = (0);
 11857  0009A6  6BA9               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11858  0009A8  6BAA               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11859  0009AA                     l14503:
 11860                           
 11861                           ; BSR set to: 3
 11862                           ;lorawan.c: 1457: }
 11863                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11864  0009AA  0E01               	movlw	1
 11865  0009AC  0102               	movlb	2	; () banked
 11866  0009AE  6FD8               	movwf	(_loRa+216)& (0+255),b
 11867                           
 11868                           ; BSR set to: 2
 11869                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 11870  0009B0  6BD0               	clrf	(_loRa+208)& (0+255),b
 11871  0009B2  6BD1               	clrf	(_loRa+209)& (0+255),b
 11872                           
 11873                           ; BSR set to: 2
 11874                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 11875  0009B4  6BEE               	clrf	(_loRa+238)& (0+255),b
 11876                           
 11877                           ; BSR set to: 2
 11878                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 11879  0009B6  9900               	bcf	_loRa& (0+255),4,b
 11880                           
 11881                           ; BSR set to: 2
 11882                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 11883  0009B8  8303               	bsf	(_loRa+3)& (0+255),1,b
 11884                           
 11885                           ; BSR set to: 2
 11886                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 11887  0009BA  A100               	btfss	_loRa& (0+255),0,b
 11888  0009BC  D04F               	goto	l14547
 11889                           
 11890                           ; BSR set to: 2
 11891                           ;lorawan.c: 1468: {
 11892                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 11893  0009BE  0103               	movlb	3	; () banked
 11894  0009C0  EE20 F005          	lfsr	2,5
 11895  0009C4  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11896  0009C6  26D9               	addwf	fsr2l,f,c
 11897  0009C8  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11898  0009CA  22DA               	addwfc	fsr2h,f,c
 11899  0009CC  AADF               	btfss	indf2,5,c
 11900  0009CE  D043               	goto	l14545
 11901                           
 11902                           ; BSR set to: 3
 11903                           ;lorawan.c: 1470: {
 11904                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11905  0009D0  0102               	movlb	2	; () banked
 11906  0009D2  9100               	bcf	_loRa& (0+255),0,b
 11907                           
 11908                           ; BSR set to: 2
 11909                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 11910  0009D4  0EF0               	movlw	-16
 11911  0009D6  1702               	andwf	(_loRa+2)& (0+255),f,b
 11912                           
 11913                           ; BSR set to: 2
 11914                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 11915  0009D8  0101               	movlb	1	; () banked
 11916  0009DA  5172               	movf	_rxPayload& (0+255),w,b
 11917  0009DC  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 11918  0009DE  E018               	bz	l14527
 11919                           
 11920                           ; BSR set to: 1
 11921                           ;lorawan.c: 1474: {
 11922                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 11923  0009E0  0102               	movlb	2	; () banked
 11924  0009E2  9B00               	bcf	_loRa& (0+255),5,b
 11925                           
 11926                           ; BSR set to: 2
 11927                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11928  0009E4  C3A9  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11929  0009E8  C3AA  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11930  0009EC  C3B1  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11931  0009F0  0E01               	movlw	1
 11932  0009F2  0100               	movlb	0	; () banked
 11933  0009F4  6F67               	movwf	RxDataDone@status& (0+255),b
 11934  0009F6  D801               	call	u16578
 11935  0009F8  D00B               	goto	l14527
 11936  0009FA                     u16578:
 11937  0009FA  0005               	push	
 11938  0009FC  0101               	movlb	1	; () banked
 11939  0009FE  6EFA               	movwf	pclath,c
 11940  000A00  5172               	movf	_rxPayload& (0+255),w,b
 11941  000A02  6EFD               	movwf	tosl,c
 11942  000A04  5173               	movf	(_rxPayload+1)& (0+255),w,b
 11943  000A06  6EFE               	movwf	tosh,c
 11944  000A08  50F8               	movf	tblptru,w,c
 11945  000A0A  6EFF               	movwf	tosu,c
 11946  000A0C  50FA               	movf	pclath,w,c
 11947  000A0E  0012               	return		;indir
 11948  000A10                     l14527:
 11949                           
 11950                           ; BSR set to: 1
 11951                           ;lorawan.c: 1477: }
 11952                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 11953  000A10  0102               	movlb	2	; () banked
 11954  000A12  9303               	bcf	(_loRa+3)& (0+255),1,b
 11955                           
 11956                           ; BSR set to: 2
 11957                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 11958  000A14  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 11959                           
 11960                           ; BSR set to: 2
 11961  000A16  BB00               	btfsc	_loRa& (0+255),5,b
 11962  000A18  D5D2               	goto	l14375
 11963                           
 11964                           ; BSR set to: 2
 11965  000A1A  B300               	btfsc	_loRa& (0+255),1,b
 11966  000A1C  D002               	goto	l14537
 11967                           
 11968                           ; BSR set to: 2
 11969  000A1E  A700               	btfss	_loRa& (0+255),3,b
 11970  000A20  D5CE               	goto	l14375
 11971  000A22                     l14537:
 11972                           
 11973                           ; BSR set to: 2
 11974                           ;lorawan.c: 1480: {
 11975                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 11976  000A22  0E01               	movlw	1
 11977  000A24  0100               	movlb	0	; () banked
 11978  000A26  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 11979  000A28  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 11980  000A2A  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 11981  000A2C  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 11982  000A2E  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 11983  000A30  0102               	movlb	2	; () banked
 11984  000A32  51ED               	movf	(_loRa+237)& (0+255),w,b
 11985  000A34  ECB2  F027         	call	_SearchAvailableChannel
 11986  000A38  0900               	iorlw	0
 11987  000A3A  E10A               	bnz	l14543
 11988                           
 11989                           ; BSR set to: 0
 11990                           ;lorawan.c: 1482: {
 11991                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 11992  000A3C  0E00               	movlw	0
 11993  000A3E  6FE1               	movwf	LORAWAN_Send@port& (0+255),b
 11994  000A40  6FE2               	movwf	LORAWAN_Send@buffer& (0+255),b
 11995  000A42  6FE3               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 11996  000A44  6FE4               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 11997  000A46  EC01  F02B         	call	_LORAWAN_Send
 11998  000A4A                     l14541:
 11999                           
 12000                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
 12001  000A4A  0102               	movlb	2	; () banked
 12002  000A4C  9700               	bcf	_loRa& (0+255),3,b
 12003                           
 12004                           ;lorawan.c: 1485: }
 12005  000A4E  D5B7               	goto	l14375
 12006  000A50                     l14543:
 12007                           
 12008                           ; BSR set to: 0
 12009                           ;lorawan.c: 1486: else
 12010                           ;lorawan.c: 1487: {
 12011                           ;lorawan.c: 1489: StartReTxTimer();
 12012  000A50  EC10  F022         	call	_StartReTxTimer	;wreg free
 12013  000A54  D5B4               	goto	l14375
 12014  000A56                     l14545:
 12015                           
 12016                           ; BSR set to: 3
 12017                           ;lorawan.c: 1494: else
 12018                           ;lorawan.c: 1495: {
 12019                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 12020  000A56  EC8C  F031         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 12021  000A5A  D5B1               	goto	l14375
 12022  000A5C                     l14547:
 12023                           
 12024                           ; BSR set to: 2
 12025                           ;lorawan.c: 1499: else
 12026                           ;lorawan.c: 1500: {
 12027                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 12028  000A5C  0EF0               	movlw	-16
 12029  000A5E  1702               	andwf	(_loRa+2)& (0+255),f,b
 12030                           
 12031                           ; BSR set to: 2
 12032                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 12033  000A60  0101               	movlb	1	; () banked
 12034  000A62  5172               	movf	_rxPayload& (0+255),w,b
 12035  000A64  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 12036  000A66  E018               	bz	l14555
 12037                           
 12038                           ; BSR set to: 1
 12039                           ;lorawan.c: 1504: {
 12040                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 12041  000A68  0102               	movlb	2	; () banked
 12042  000A6A  9B00               	bcf	_loRa& (0+255),5,b
 12043                           
 12044                           ; BSR set to: 2
 12045                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12046  000A6C  C3A9  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 12047  000A70  C3AA  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 12048  000A74  C3B1  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 12049  000A78  0E01               	movlw	1
 12050  000A7A  0100               	movlb	0	; () banked
 12051  000A7C  6F67               	movwf	RxDataDone@status& (0+255),b
 12052  000A7E  D801               	call	u16648
 12053  000A80  D00B               	goto	l14555
 12054  000A82                     u16648:
 12055  000A82  0005               	push	
 12056  000A84  0101               	movlb	1	; () banked
 12057  000A86  6EFA               	movwf	pclath,c
 12058  000A88  5172               	movf	_rxPayload& (0+255),w,b
 12059  000A8A  6EFD               	movwf	tosl,c
 12060  000A8C  5173               	movf	(_rxPayload+1)& (0+255),w,b
 12061  000A8E  6EFE               	movwf	tosh,c
 12062  000A90  50F8               	movf	tblptru,w,c
 12063  000A92  6EFF               	movwf	tosu,c
 12064  000A94  50FA               	movf	pclath,w,c
 12065  000A96  0012               	return		;indir
 12066  000A98                     l14555:
 12067                           
 12068                           ; BSR set to: 1
 12069                           ;lorawan.c: 1507: }
 12070                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12071  000A98  0102               	movlb	2	; () banked
 12072  000A9A  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12073                           
 12074                           ; BSR set to: 2
 12075  000A9C  BB00               	btfsc	_loRa& (0+255),5,b
 12076  000A9E  D58F               	goto	l14375
 12077                           
 12078                           ; BSR set to: 2
 12079  000AA0  B300               	btfsc	_loRa& (0+255),1,b
 12080  000AA2  D002               	goto	l14563
 12081                           
 12082                           ; BSR set to: 2
 12083  000AA4  A700               	btfss	_loRa& (0+255),3,b
 12084  000AA6  D58B               	goto	l14375
 12085  000AA8                     l14563:
 12086                           
 12087                           ; BSR set to: 2
 12088                           ;lorawan.c: 1510: {
 12089                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12090  000AA8  0E01               	movlw	1
 12091  000AAA  0100               	movlb	0	; () banked
 12092  000AAC  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12093  000AAE  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 12094  000AB0  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12095  000AB2  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 12096  000AB4  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12097  000AB6  0102               	movlb	2	; () banked
 12098  000AB8  51ED               	movf	(_loRa+237)& (0+255),w,b
 12099  000ABA  ECB2  F027         	call	_SearchAvailableChannel
 12100  000ABE  0900               	iorlw	0
 12101  000AC0  E1C7               	bnz	l14543
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;lorawan.c: 1512: {
 12105                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 12106  000AC2  0E00               	movlw	0
 12107  000AC4  6FE1               	movwf	LORAWAN_Send@port& (0+255),b
 12108  000AC6  6FE2               	movwf	LORAWAN_Send@buffer& (0+255),b
 12109  000AC8  6FE3               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12110  000ACA  6FE4               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12111  000ACC  EC01  F02B         	call	_LORAWAN_Send
 12112  000AD0  D7BC               	goto	l14541
 12113  000AD2                     l14581:
 12114                           
 12115                           ; BSR set to: 2
 12116                           ;lorawan.c: 1537: else
 12117                           ;lorawan.c: 1538: {
 12118                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 12119  000AD2  0101               	movlb	1	; () banked
 12120  000AD4  5172               	movf	_rxPayload& (0+255),w,b
 12121  000AD6  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 12122  000AD8  B4D8               	btfsc	status,2,c
 12123  000ADA  0012               	return	
 12124                           
 12125                           ; BSR set to: 1
 12126                           ;lorawan.c: 1541: {
 12127                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 12128  000ADC  ECA2  F03C         	call	_RADIO_GetStatus	;wreg free
 12129  000AE0  0100               	movlb	0	; () banked
 12130  000AE2  6FE8               	movwf	??_LORAWAN_RxDone& (0+255),b
 12131  000AE4  B7E8               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 12132  000AE6  D013               	goto	l14587
 12133                           
 12134                           ; BSR set to: 0
 12135                           ;lorawan.c: 1543: {
 12136                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 12137  000AE8  C16B  F064         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12138  000AEC  C16C  F065         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12139  000AF0  C16D  F066         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12140  000AF4  0E03               	movlw	3
 12141  000AF6  6F67               	movwf	RxDataDone@status& (0+255),b
 12142  000AF8  0005               	push	
 12143  000AFA  0101               	movlb	1	; () banked
 12144  000AFC  6EFA               	movwf	pclath,c
 12145  000AFE  5172               	movf	_rxPayload& (0+255),w,b
 12146  000B00  6EFD               	movwf	tosl,c
 12147  000B02  5173               	movf	(_rxPayload+1)& (0+255),w,b
 12148  000B04  6EFE               	movwf	tosh,c
 12149  000B06  50F8               	movf	tblptru,w,c
 12150  000B08  6EFF               	movwf	tosu,c
 12151  000B0A  50FA               	movf	pclath,w,c
 12152  000B0C  0012               	return		;indir
 12153  000B0E                     l14587:
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;lorawan.c: 1546: else
 12157                           ;lorawan.c: 1547: {
 12158                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 12159  000B0E  C16B  F064         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12160  000B12  C16C  F065         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12161  000B16  C16D  F066         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12162  000B1A  0E02               	movlw	2
 12163  000B1C  6F67               	movwf	RxDataDone@status& (0+255),b
 12164  000B1E  0005               	push	
 12165  000B20  0101               	movlb	1	; () banked
 12166  000B22  6EFA               	movwf	pclath,c
 12167  000B24  5172               	movf	_rxPayload& (0+255),w,b
 12168  000B26  6EFD               	movwf	tosl,c
 12169  000B28  5173               	movf	(_rxPayload+1)& (0+255),w,b
 12170  000B2A  6EFE               	movwf	tosh,c
 12171  000B2C  50F8               	movf	tblptru,w,c
 12172  000B2E  6EFF               	movwf	tosu,c
 12173  000B30  50FA               	movf	pclath,w,c
 12174  000B32  0012               	return		;indir
 12175  000B34                     __end_of_LORAWAN_RxDone:
 12176                           	opt stack 0
 12177                           tosu	equ	0xFFF
 12178                           tosh	equ	0xFFE
 12179                           tosl	equ	0xFFD
 12180                           pclath	equ	0xFFA
 12181                           tblptru	equ	0xFF8
 12182                           tblptrh	equ	0xFF7
 12183                           tblptrl	equ	0xFF6
 12184                           tablat	equ	0xFF5
 12185                           prodh	equ	0xFF4
 12186                           prodl	equ	0xFF3
 12187                           intcon	equ	0xFF2
 12188                           postinc0	equ	0xFEE
 12189                           wreg	equ	0xFE8
 12190                           postinc1	equ	0xFE6
 12191                           postdec1	equ	0xFE5
 12192                           plusw1	equ	0xFE3
 12193                           fsr1h	equ	0xFE2
 12194                           fsr1l	equ	0xFE1
 12195                           indf2	equ	0xFDF
 12196                           postinc2	equ	0xFDE
 12197                           postdec2	equ	0xFDD
 12198                           fsr2h	equ	0xFDA
 12199                           fsr2l	equ	0xFD9
 12200                           status	equ	0xFD8
 12201                           
 12202 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 12203 ;; Defined at:
 12204 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;		None
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;		None
 12209 ;; Return value:  Size  Location     Type
 12210 ;;                  1    wreg      void 
 12211 ;; Registers used:
 12212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12213 ;; Tracked objects:
 12214 ;;		On entry : C/0
 12215 ;;		On exit  : F/0
 12216 ;;		Unchanged: 0/0
 12217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12218 ;;      Params:         0       0       0       0       0       0       0       0       0
 12219 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12220 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12221 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12222 ;;Total ram usage:        4 bytes
 12223 ;; Hardware stack levels used:    1
 12224 ;; Hardware stack levels required when called:   11
 12225 ;; This function calls:
 12226 ;;		_SwTimerSetTimeout
 12227 ;;		_SwTimerStart
 12228 ;;		___lldiv
 12229 ;; This function is called by:
 12230 ;;		_AckRetransmissionCallback
 12231 ;;		_LORAWAN_RxDone
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           	psect	text61
 12236  006318                     __ptext61:
 12237                           	opt stack 0
 12238  006318                     _UpdateRetransmissionAckTimeoutState:
 12239                           	opt stack 16
 12240                           
 12241                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12242                           
 12243                           ;incstack = 0
 12244  006318  0102               	movlb	2	; () banked
 12245  00631A  5102               	movf	(_loRa+2)& (0+255),w,b
 12246  00631C  0BF0               	andlw	-16
 12247  00631E  0906               	iorlw	6
 12248  006320  6F02               	movwf	(_loRa+2)& (0+255),b
 12249                           
 12250                           ; BSR set to: 2
 12251                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 12252  006322  51A0               	movf	(_loRa+160)& (0+255),w,b
 12253  006324  0100               	movlb	0	; () banked
 12254  006326  6F94               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 12255  006328  0102               	movlb	2	; () banked
 12256  00632A  51A1               	movf	(_loRa+161)& (0+255),w,b
 12257  00632C  0100               	movlb	0	; () banked
 12258  00632E  6F95               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 12259  006330  6B96               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 12260  006332  6B97               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 12261  006334  0E0C               	movlw	12
 12262  006336                     u15755:
 12263  006336  90D8               	bcf	status,0,c
 12264  006338  3794               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 12265  00633A  3795               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 12266  00633C  3796               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 12267  00633E  3797               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 12268  006340  2EE8               	decfsz	wreg,f,c
 12269  006342  D7F9               	goto	u15755
 12270  006344  C094  F064         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 12271  006348  C095  F065         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 12272  00634C  C096  F066         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 12273  006350  C097  F067         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 12274  006354  0E7D               	movlw	125
 12275  006356  6F68               	movwf	___lldiv@divisor& (0+255),b
 12276  006358  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12277  00635A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12278  00635C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12279  00635E  ECAA  F030         	call	___lldiv	;wreg free
 12280  006362  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12281  006366  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12282  00636A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12283  00636E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12284  006372  0102               	movlb	2	; () banked
 12285  006374  51E8               	movf	(_loRa+232)& (0+255),w,b
 12286  006376  ECE5  F036         	call	_SwTimerSetTimeout
 12287                           
 12288                           ; BSR set to: 0
 12289                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 12290  00637A  0102               	movlb	2	; () banked
 12291  00637C  51E8               	movf	(_loRa+232)& (0+255),w,b
 12292  00637E  EFAA  F02E         	goto	_SwTimerStart
 12293  006382                     __end_of_UpdateRetransmissionAckTimeoutState:
 12294                           	opt stack 0
 12295                           tosu	equ	0xFFF
 12296                           tosh	equ	0xFFE
 12297                           tosl	equ	0xFFD
 12298                           pclath	equ	0xFFA
 12299                           tblptru	equ	0xFF8
 12300                           tblptrh	equ	0xFF7
 12301                           tblptrl	equ	0xFF6
 12302                           tablat	equ	0xFF5
 12303                           prodh	equ	0xFF4
 12304                           prodl	equ	0xFF3
 12305                           intcon	equ	0xFF2
 12306                           postinc0	equ	0xFEE
 12307                           wreg	equ	0xFE8
 12308                           postinc1	equ	0xFE6
 12309                           postdec1	equ	0xFE5
 12310                           plusw1	equ	0xFE3
 12311                           fsr1h	equ	0xFE2
 12312                           fsr1l	equ	0xFE1
 12313                           indf2	equ	0xFDF
 12314                           postinc2	equ	0xFDE
 12315                           postdec2	equ	0xFDD
 12316                           fsr2h	equ	0xFDA
 12317                           fsr2l	equ	0xFD9
 12318                           status	equ	0xFD8
 12319                           
 12320 ;; *************** function _UpdateDLSettings *****************
 12321 ;; Defined at:
 12322 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12323 ;; Parameters:    Size  Location     Type
 12324 ;;  dlRx2Dr         1    wreg     unsigned char 
 12325 ;;  dlRx1DrOffse    1    4[BANK0 ] unsigned char 
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;  dlRx2Dr         1    5[BANK0 ] unsigned char 
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  1    wreg      void 
 12330 ;; Registers used:
 12331 ;;		wreg, status,2, status,0
 12332 ;; Tracked objects:
 12333 ;;		On entry : F/3
 12334 ;;		On exit  : F/0
 12335 ;;		Unchanged: 0/0
 12336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12337 ;;      Params:         0       1       0       0       0       0       0       0       0
 12338 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12339 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12340 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12341 ;;Total ram usage:        2 bytes
 12342 ;; Hardware stack levels used:    1
 12343 ;; Hardware stack levels required when called:    7
 12344 ;; This function calls:
 12345 ;;		Nothing
 12346 ;; This function is called by:
 12347 ;;		_LORAWAN_RxDone
 12348 ;; This function uses a non-reentrant model
 12349 ;;
 12350                           
 12351                           	psect	text62
 12352  0076AE                     __ptext62:
 12353                           	opt stack 0
 12354  0076AE                     _UpdateDLSettings:
 12355                           	opt stack 19
 12356                           
 12357                           ; BSR set to: 0
 12358                           ;incstack = 0
 12359                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 12360  0076AE  0100               	movlb	0	; () banked
 12361  0076B0  6F65               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 12362                           
 12363                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 12364  0076B2  0E08               	movlw	8
 12365  0076B4  6165               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 12366  0076B6  D002               	goto	l13909
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;lorawan_eu.c: 891: {
 12370                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 12371  0076B8  C065  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 12372  0076BC                     l13909:
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;lorawan_eu.c: 893: }
 12376                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 12377  0076BC  0E06               	movlw	6
 12378  0076BE  6164               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12379  0076C0  0C06               	retlw	6
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;lorawan_eu.c: 896: {
 12383                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 12384  0076C2  C064  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 12385                           
 12386                           ; BSR set to: 0
 12387  0076C6  0C06               	retlw	6	;funcret
 12388  0076C8                     __end_of_UpdateDLSettings:
 12389                           	opt stack 0
 12390                           tosu	equ	0xFFF
 12391                           tosh	equ	0xFFE
 12392                           tosl	equ	0xFFD
 12393                           pclath	equ	0xFFA
 12394                           tblptru	equ	0xFF8
 12395                           tblptrh	equ	0xFF7
 12396                           tblptrl	equ	0xFF6
 12397                           tablat	equ	0xFF5
 12398                           prodh	equ	0xFF4
 12399                           prodl	equ	0xFF3
 12400                           intcon	equ	0xFF2
 12401                           postinc0	equ	0xFEE
 12402                           wreg	equ	0xFE8
 12403                           postinc1	equ	0xFE6
 12404                           postdec1	equ	0xFE5
 12405                           plusw1	equ	0xFE3
 12406                           fsr1h	equ	0xFE2
 12407                           fsr1l	equ	0xFE1
 12408                           indf2	equ	0xFDF
 12409                           postinc2	equ	0xFDE
 12410                           postdec2	equ	0xFDD
 12411                           fsr2h	equ	0xFDA
 12412                           fsr2l	equ	0xFD9
 12413                           status	equ	0xFD8
 12414                           
 12415 ;; *************** function _UpdateCfList *****************
 12416 ;; Defined at:
 12417 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12418 ;; Parameters:    Size  Location     Type
 12419 ;;  bufferLength    1    wreg     unsigned char 
 12420 ;;  joinAccept      2   16[BANK0 ] PTR struct .
 12421 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12422 ;; Auto vars:     Size  Location     Type
 12423 ;;  bufferLength    1   20[BANK0 ] unsigned char 
 12424 ;;  frequency       4   21[BANK0 ] unsigned long 
 12425 ;;  i               1   26[BANK0 ] unsigned char 
 12426 ;;  channelIndex    1   25[BANK0 ] unsigned char 
 12427 ;; Return value:  Size  Location     Type
 12428 ;;                  1    wreg      void 
 12429 ;; Registers used:
 12430 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12431 ;; Tracked objects:
 12432 ;;		On entry : F/1
 12433 ;;		On exit  : D/0
 12434 ;;		Unchanged: 0/0
 12435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12436 ;;      Params:         0       2       0       0       0       0       0       0       0
 12437 ;;      Locals:         0       7       0       0       0       0       0       0       0
 12438 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12439 ;;      Totals:         0      11       0       0       0       0       0       0       0
 12440 ;;Total ram usage:       11 bytes
 12441 ;; Hardware stack levels used:    1
 12442 ;; Hardware stack levels required when called:    9
 12443 ;; This function calls:
 12444 ;;		_LORAWAN_SetChannelIdStatus
 12445 ;;		_ValidateFrequency
 12446 ;;		___lmul
 12447 ;;		_memcpy
 12448 ;; This function is called by:
 12449 ;;		_LORAWAN_RxDone
 12450 ;; This function uses a non-reentrant model
 12451 ;;
 12452                           
 12453                           	psect	text63
 12454  0031E2                     __ptext63:
 12455                           	opt stack 0
 12456  0031E2                     _UpdateCfList:
 12457                           	opt stack 17
 12458                           
 12459                           ; BSR set to: 0
 12460                           ;incstack = 0
 12461                           ;UpdateCfList@bufferLength stored from wreg
 12462  0031E2  0100               	movlb	0	; () banked
 12463  0031E4  6F74               	movwf	UpdateCfList@bufferLength& (0+255),b
 12464                           
 12465                           ;lorawan_eu.c: 826: uint8_t i;
 12466                           ;lorawan_eu.c: 827: uint32_t frequency;
 12467                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 12468                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 12469  0031E6  0E21               	movlw	33
 12470  0031E8  1974               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 12471  0031EA  A4D8               	btfss	status,2,c
 12472  0031EC  0012               	return	
 12473                           
 12474                           ; BSR set to: 0
 12475                           ;lorawan_eu.c: 831: {
 12476                           ;lorawan_eu.c: 833: channelIndex = 3;
 12477  0031EE  0E03               	movlw	3
 12478  0031F0  6F79               	movwf	UpdateCfList@channelIndex& (0+255),b
 12479                           
 12480                           ; BSR set to: 0
 12481                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 12482  0031F2  6B7A               	clrf	UpdateCfList@i& (0+255),b
 12483  0031F4                     l1170:
 12484                           
 12485                           ; BSR set to: 0
 12486                           ;lorawan_eu.c: 836: {
 12487                           ;lorawan_eu.c: 837: frequency = 0;
 12488  0031F4  6B75               	clrf	UpdateCfList@frequency& (0+255),b
 12489  0031F6  6B76               	clrf	(UpdateCfList@frequency+1)& (0+255),b
 12490  0031F8  6B77               	clrf	(UpdateCfList@frequency+2)& (0+255),b
 12491  0031FA  6B78               	clrf	(UpdateCfList@frequency+3)& (0+255),b
 12492                           
 12493                           ; BSR set to: 0
 12494                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 12495  0031FC  0E75               	movlw	low UpdateCfList@frequency
 12496  0031FE  6F64               	movwf	memcpy@d1& (0+255),b
 12497  003200  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 12498  003202  517A               	movf	UpdateCfList@i& (0+255),w,b
 12499  003204  0D03               	mullw	3
 12500  003206  C070  F072         	movff	UpdateCfList@joinAccept,??_UpdateCfList
 12501  00320A  C071  F073         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
 12502  00320E  50F3               	movf	prodl,w,c
 12503  003210  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12504  003212  50F4               	movf	prodh,w,c
 12505  003214  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12506  003216  0E0D               	movlw	13
 12507  003218  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12508  00321A  0E00               	movlw	0
 12509  00321C  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12510  00321E  5172               	movf	??_UpdateCfList& (0+255),w,b
 12511  003220  6F66               	movwf	memcpy@s1& (0+255),b
 12512  003222  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 12513  003224  6B69               	clrf	(memcpy@n+1)& (0+255),b
 12514  003226  0E03               	movlw	3
 12515  003228  6F68               	movwf	memcpy@n& (0+255),b
 12516  00322A  EC6A  F034         	call	_memcpy	;wreg free
 12517                           
 12518                           ; BSR set to: 0
 12519                           ;lorawan_eu.c: 839: frequency *= 100;
 12520  00322E  C075  F064         	movff	UpdateCfList@frequency,___lmul@multiplier
 12521  003232  C076  F065         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 12522  003236  C077  F066         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 12523  00323A  C078  F067         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 12524  00323E  0E64               	movlw	100
 12525  003240  6F68               	movwf	___lmul@multiplicand& (0+255),b
 12526  003242  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 12527  003244  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 12528  003246  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 12529  003248  ECEE  F02E         	call	___lmul	;wreg free
 12530  00324C  C064  F075         	movff	?___lmul,UpdateCfList@frequency
 12531  003250  C065  F076         	movff	?___lmul+1,UpdateCfList@frequency+1
 12532  003254  C066  F077         	movff	?___lmul+2,UpdateCfList@frequency+2
 12533  003258  C067  F078         	movff	?___lmul+3,UpdateCfList@frequency+3
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;lorawan_eu.c: 840: if (frequency != 0)
 12537  00325C  5175               	movf	UpdateCfList@frequency& (0+255),w,b
 12538  00325E  1176               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 12539  003260  1177               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 12540  003262  1178               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 12541  003264  E101 D094          	bz	l13899
 12542                           
 12543                           ; BSR set to: 0
 12544                           ;lorawan_eu.c: 841: {
 12545                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 12546  003268  C075  F064         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 12547  00326C  C076  F065         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 12548  003270  C077  F066         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 12549  003274  C078  F067         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 12550  003278  ECE5  F033         	call	_ValidateFrequency	;wreg free
 12551  00327C  0900               	iorlw	0
 12552  00327E  E001 D08C          	bnz	l13901
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;lorawan_eu.c: 843: {
 12556                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 12557  003282  517A               	movf	UpdateCfList@i& (0+255),w,b
 12558  003284  0D0E               	mullw	14
 12559  003286  0E00               	movlw	low _Channels
 12560  003288  6F72               	movwf	??_UpdateCfList& (0+255),b
 12561  00328A  0E04               	movlw	high _Channels
 12562  00328C  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12563  00328E  50F3               	movf	prodl,w,c
 12564  003290  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12565  003292  50F4               	movf	prodh,w,c
 12566  003294  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12567  003296  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12568  003298  0D0E               	mullw	14
 12569  00329A  50F3               	movf	prodl,w,c
 12570  00329C  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12571  00329E  6ED9               	movwf	fsr2l,c
 12572  0032A0  50F4               	movf	prodh,w,c
 12573  0032A2  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12574  0032A4  6EDA               	movwf	fsr2h,c
 12575  0032A6  C075  FFDE         	movff	UpdateCfList@frequency,postinc2
 12576  0032AA  C076  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 12577  0032AE  C077  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 12578  0032B2  C078  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 12579                           
 12580                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 12581  0032B6  517A               	movf	UpdateCfList@i& (0+255),w,b
 12582  0032B8  0D0E               	mullw	14
 12583  0032BA  0E00               	movlw	low _Channels
 12584  0032BC  6F72               	movwf	??_UpdateCfList& (0+255),b
 12585  0032BE  0E04               	movlw	high _Channels
 12586  0032C0  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12587  0032C2  0E05               	movlw	5
 12588  0032C4  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12589  0032C6  0E00               	movlw	0
 12590  0032C8  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12591  0032CA  50F3               	movf	prodl,w,c
 12592  0032CC  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12593  0032CE  50F4               	movf	prodh,w,c
 12594  0032D0  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12595  0032D2  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12596  0032D4  0D0E               	mullw	14
 12597  0032D6  50F3               	movf	prodl,w,c
 12598  0032D8  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12599  0032DA  6ED9               	movwf	fsr2l,c
 12600  0032DC  50F4               	movf	prodh,w,c
 12601  0032DE  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12602  0032E0  6EDA               	movwf	fsr2h,c
 12603  0032E2  50DF               	movf	223,w,c
 12604  0032E4  0B0F               	andlw	-241
 12605  0032E6  0950               	iorlw	80
 12606  0032E8  6EDF               	movwf	223,c
 12607                           
 12608                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 12609  0032EA  0100               	movlb	0	; () banked
 12610  0032EC  517A               	movf	UpdateCfList@i& (0+255),w,b
 12611  0032EE  0D0E               	mullw	14
 12612  0032F0  0E00               	movlw	low _Channels
 12613  0032F2  6F72               	movwf	??_UpdateCfList& (0+255),b
 12614  0032F4  0E04               	movlw	high _Channels
 12615  0032F6  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12616  0032F8  0E05               	movlw	5
 12617  0032FA  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12618  0032FC  0E00               	movlw	0
 12619  0032FE  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12620  003300  50F3               	movf	prodl,w,c
 12621  003302  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12622  003304  50F4               	movf	prodh,w,c
 12623  003306  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12624  003308  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12625  00330A  0D0E               	mullw	14
 12626  00330C  50F3               	movf	prodl,w,c
 12627  00330E  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12628  003310  6ED9               	movwf	fsr2l,c
 12629  003312  50F4               	movf	prodh,w,c
 12630  003314  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12631  003316  6EDA               	movwf	fsr2h,c
 12632  003318  0EF0               	movlw	-16
 12633  00331A  16DF               	andwf	223,f,c
 12634                           
 12635                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 12636  00331C  517A               	movf	UpdateCfList@i& (0+255),w,b
 12637  00331E  0D0E               	mullw	14
 12638  003320  0E00               	movlw	low _Channels
 12639  003322  6F72               	movwf	??_UpdateCfList& (0+255),b
 12640  003324  0E04               	movlw	high _Channels
 12641  003326  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12642  003328  0E06               	movlw	6
 12643  00332A  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12644  00332C  0E00               	movlw	0
 12645  00332E  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12646  003330  50F3               	movf	prodl,w,c
 12647  003332  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12648  003334  50F4               	movf	prodh,w,c
 12649  003336  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12650  003338  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12651  00333A  0D0E               	mullw	14
 12652  00333C  50F3               	movf	prodl,w,c
 12653  00333E  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12654  003340  6ED9               	movwf	fsr2l,c
 12655  003342  50F4               	movf	prodh,w,c
 12656  003344  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12657  003346  6EDA               	movwf	fsr2h,c
 12658  003348  0EE7               	movlw	231
 12659  00334A  6EDE               	movwf	postinc2,c
 12660  00334C  0E03               	movlw	3
 12661  00334E  6EDD               	movwf	postdec2,c
 12662                           
 12663                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 12664  003350  517A               	movf	UpdateCfList@i& (0+255),w,b
 12665  003352  0D0E               	mullw	14
 12666  003354  0E00               	movlw	low _Channels
 12667  003356  6F72               	movwf	??_UpdateCfList& (0+255),b
 12668  003358  0E04               	movlw	high _Channels
 12669  00335A  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12670  00335C  0E0D               	movlw	13
 12671  00335E  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12672  003360  0E00               	movlw	0
 12673  003362  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12674  003364  50F3               	movf	prodl,w,c
 12675  003366  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12676  003368  50F4               	movf	prodh,w,c
 12677  00336A  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12678  00336C  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12679  00336E  0D0E               	mullw	14
 12680  003370  50F3               	movf	prodl,w,c
 12681  003372  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12682  003374  6ED9               	movwf	fsr2l,c
 12683  003376  50F4               	movf	prodh,w,c
 12684  003378  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12685  00337A  6EDA               	movwf	fsr2h,c
 12686  00337C  68DF               	setf	indf2,c
 12687                           
 12688                           ; BSR set to: 0
 12689                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 12690  00337E  0E01               	movlw	1
 12691  003380  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12692  003382  517A               	movf	UpdateCfList@i& (0+255),w,b
 12693  003384  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12694  003386  EC18  F038         	call	_LORAWAN_SetChannelIdStatus
 12695                           
 12696                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 12697  00338A  0102               	movlb	2	; () banked
 12698  00338C  8703               	bsf	(_loRa+3)& (0+255),3,b
 12699  00338E  D005               	goto	l13901
 12700  003390                     l13899:
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;lorawan_eu.c: 853: else
 12704                           ;lorawan_eu.c: 854: {
 12705                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 12706  003390  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12707  003392  517A               	movf	UpdateCfList@i& (0+255),w,b
 12708  003394  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12709  003396  EC18  F038         	call	_LORAWAN_SetChannelIdStatus
 12710  00339A                     l13901:
 12711  00339A  0100               	movlb	0	; () banked
 12712  00339C  2B7A               	incf	UpdateCfList@i& (0+255),f,b
 12713                           
 12714                           ; BSR set to: 0
 12715  00339E  0E04               	movlw	4
 12716  0033A0  657A               	cpfsgt	UpdateCfList@i& (0+255),b
 12717  0033A2  D728               	goto	l1170
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;lorawan_eu.c: 856: }
 12721                           ;lorawan_eu.c: 857: }
 12722                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 12723  0033A4  0102               	movlb	2	; () banked
 12724  0033A6  8703               	bsf	(_loRa+3)& (0+255),3,b
 12725  0033A8  0C04               	retlw	4	;funcret
 12726  0033AA                     __end_of_UpdateCfList:
 12727                           	opt stack 0
 12728                           tosu	equ	0xFFF
 12729                           tosh	equ	0xFFE
 12730                           tosl	equ	0xFFD
 12731                           pclath	equ	0xFFA
 12732                           tblptru	equ	0xFF8
 12733                           tblptrh	equ	0xFF7
 12734                           tblptrl	equ	0xFF6
 12735                           tablat	equ	0xFF5
 12736                           prodh	equ	0xFF4
 12737                           prodl	equ	0xFF3
 12738                           intcon	equ	0xFF2
 12739                           postinc0	equ	0xFEE
 12740                           wreg	equ	0xFE8
 12741                           postinc1	equ	0xFE6
 12742                           postdec1	equ	0xFE5
 12743                           plusw1	equ	0xFE3
 12744                           fsr1h	equ	0xFE2
 12745                           fsr1l	equ	0xFE1
 12746                           indf2	equ	0xFDF
 12747                           postinc2	equ	0xFDE
 12748                           postdec2	equ	0xFDD
 12749                           fsr2h	equ	0xFDA
 12750                           fsr2l	equ	0xFD9
 12751                           status	equ	0xFD8
 12752                           
 12753 ;; *************** function _StartReTxTimer *****************
 12754 ;; Defined at:
 12755 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12756 ;; Parameters:    Size  Location     Type
 12757 ;;		None
 12758 ;; Auto vars:     Size  Location     Type
 12759 ;;  minim           4   56[BANK0 ] unsigned long 
 12760 ;;  i               1   60[BANK0 ] unsigned char 
 12761 ;; Return value:  Size  Location     Type
 12762 ;;                  1    wreg      void 
 12763 ;; Registers used:
 12764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12765 ;; Tracked objects:
 12766 ;;		On entry : E/0
 12767 ;;		On exit  : F/0
 12768 ;;		Unchanged: 0/0
 12769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12770 ;;      Params:         0       0       0       0       0       0       0       0       0
 12771 ;;      Locals:         0       5       0       0       0       0       0       0       0
 12772 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12773 ;;      Totals:         0       9       0       0       0       0       0       0       0
 12774 ;;Total ram usage:        9 bytes
 12775 ;; Hardware stack levels used:    1
 12776 ;; Hardware stack levels required when called:   11
 12777 ;; This function calls:
 12778 ;;		_SwTimerSetTimeout
 12779 ;;		_SwTimerStart
 12780 ;;		___lldiv
 12781 ;; This function is called by:
 12782 ;;		_LORAWAN_RxDone
 12783 ;; This function uses a non-reentrant model
 12784 ;;
 12785                           
 12786                           	psect	text64
 12787  004420                     __ptext64:
 12788                           	opt stack 0
 12789  004420                     _StartReTxTimer:
 12790                           	opt stack 15
 12791                           
 12792                           ;lorawan_eu.c: 904: uint8_t i;
 12793                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 12794                           
 12795                           ;incstack = 0
 12796  004420  0100               	movlb	0	; () banked
 12797  004422  6998               	setf	StartReTxTimer@minim& (0+255),b
 12798  004424  6999               	setf	(StartReTxTimer@minim+1)& (0+255),b
 12799  004426  699A               	setf	(StartReTxTimer@minim+2)& (0+255),b
 12800  004428  699B               	setf	(StartReTxTimer@minim+3)& (0+255),b
 12801                           
 12802                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 12803  00442A  6B9C               	clrf	StartReTxTimer@i& (0+255),b
 12804  00442C  D05B               	goto	l13929
 12805  00442E                     l13915:
 12806                           
 12807                           ; BSR set to: 2
 12808                           ;lorawan_eu.c: 908: {
 12809                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 12810  00442E  0100               	movlb	0	; () banked
 12811  004430  519C               	movf	StartReTxTimer@i& (0+255),w,b
 12812  004432  0D0E               	mullw	14
 12813  004434  0E04               	movlw	low (_Channels+4)
 12814  004436  24F3               	addwf	prodl,w,c
 12815  004438  6ED9               	movwf	fsr2l,c
 12816  00443A  0E04               	movlw	high (_Channels+4)
 12817  00443C  20F4               	addwfc	prodh,w,c
 12818  00443E  6EDA               	movwf	fsr2h,c
 12819  004440  04DE               	decf	postinc2,w,c
 12820  004442  E14E               	bnz	l13927
 12821                           
 12822                           ; BSR set to: 0
 12823  004444  519C               	movf	StartReTxTimer@i& (0+255),w,b
 12824  004446  0D0E               	mullw	14
 12825  004448  0E08               	movlw	low (_Channels+8)
 12826  00444A  24F3               	addwf	prodl,w,c
 12827  00444C  6ED9               	movwf	fsr2l,c
 12828  00444E  0E04               	movlw	high (_Channels+8)
 12829  004450  20F4               	addwfc	prodh,w,c
 12830  004452  6EDA               	movwf	fsr2h,c
 12831  004454  50DE               	movf	postinc2,w,c
 12832  004456  10DE               	iorwf	postinc2,w,c
 12833  004458  10DE               	iorwf	postinc2,w,c
 12834  00445A  10DE               	iorwf	postinc2,w,c
 12835  00445C  E041               	bz	l13927
 12836                           
 12837                           ; BSR set to: 0
 12838  00445E  519C               	movf	StartReTxTimer@i& (0+255),w,b
 12839  004460  0D0E               	mullw	14
 12840  004462  0E08               	movlw	low (_Channels+8)
 12841  004464  24F3               	addwf	prodl,w,c
 12842  004466  6ED9               	movwf	fsr2l,c
 12843  004468  0E04               	movlw	high (_Channels+8)
 12844  00446A  20F4               	addwfc	prodh,w,c
 12845  00446C  6EDA               	movwf	fsr2h,c
 12846  00446E  50DE               	movf	postinc2,w,c
 12847  004470  5D98               	subwf	StartReTxTimer@minim& (0+255),w,b
 12848  004472  50DE               	movf	postinc2,w,c
 12849  004474  5999               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 12850  004476  50DE               	movf	postinc2,w,c
 12851  004478  599A               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 12852  00447A  50DE               	movf	postinc2,w,c
 12853  00447C  599B               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 12854  00447E  E330               	bnc	l13927
 12855                           
 12856                           ; BSR set to: 0
 12857  004480  519C               	movf	StartReTxTimer@i& (0+255),w,b
 12858  004482  0D0E               	mullw	14
 12859  004484  0E05               	movlw	low (_Channels+5)
 12860  004486  24F3               	addwf	prodl,w,c
 12861  004488  6ED9               	movwf	fsr2l,c
 12862  00448A  0E04               	movlw	high (_Channels+5)
 12863  00448C  20F4               	addwfc	prodh,w,c
 12864  00448E  6EDA               	movwf	fsr2h,c
 12865  004490  50DF               	movf	223,w,c
 12866  004492  0B0F               	andlw	15
 12867  004494  6F94               	movwf	??_StartReTxTimer& (0+255),b
 12868  004496  5194               	movf	??_StartReTxTimer& (0+255),w,b
 12869  004498  0102               	movlb	2	; () banked
 12870  00449A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 12871  00449C  E321               	bnc	l13927
 12872                           
 12873                           ; BSR set to: 2
 12874  00449E  0100               	movlb	0	; () banked
 12875  0044A0  519C               	movf	StartReTxTimer@i& (0+255),w,b
 12876  0044A2  0D0E               	mullw	14
 12877  0044A4  0E05               	movlw	low (_Channels+5)
 12878  0044A6  24F3               	addwf	prodl,w,c
 12879  0044A8  6ED9               	movwf	fsr2l,c
 12880  0044AA  0E04               	movlw	high (_Channels+5)
 12881  0044AC  20F4               	addwfc	prodh,w,c
 12882  0044AE  6EDA               	movwf	fsr2h,c
 12883  0044B0  38DF               	swapf	223,w,c
 12884  0044B2  0B0F               	andlw	15
 12885  0044B4  6F94               	movwf	??_StartReTxTimer& (0+255),b
 12886  0044B6  0102               	movlb	2	; () banked
 12887  0044B8  51DF               	movf	(_loRa+223)& (0+255),w,b
 12888  0044BA  0100               	movlb	0	; () banked
 12889  0044BC  5D94               	subwf	??_StartReTxTimer& (0+255),w,b
 12890  0044BE  E310               	bnc	l13927
 12891                           
 12892                           ; BSR set to: 0
 12893                           ;lorawan_eu.c: 910: {
 12894                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 12895  0044C0  519C               	movf	StartReTxTimer@i& (0+255),w,b
 12896  0044C2  0D0E               	mullw	14
 12897  0044C4  0E08               	movlw	low (_Channels+8)
 12898  0044C6  24F3               	addwf	prodl,w,c
 12899  0044C8  6ED9               	movwf	fsr2l,c
 12900  0044CA  0E04               	movlw	high (_Channels+8)
 12901  0044CC  20F4               	addwfc	prodh,w,c
 12902  0044CE  6EDA               	movwf	fsr2h,c
 12903  0044D0  CFDE F098          	movff	postinc2,StartReTxTimer@minim
 12904  0044D4  CFDE F099          	movff	postinc2,StartReTxTimer@minim+1
 12905  0044D8  CFDE F09A          	movff	postinc2,StartReTxTimer@minim+2
 12906  0044DC  CFDE F09B          	movff	postinc2,StartReTxTimer@minim+3
 12907  0044E0                     l13927:
 12908  0044E0  0100               	movlb	0	; () banked
 12909  0044E2  2B9C               	incf	StartReTxTimer@i& (0+255),f,b
 12910  0044E4                     l13929:
 12911                           
 12912                           ; BSR set to: 0
 12913  0044E4  519C               	movf	StartReTxTimer@i& (0+255),w,b
 12914  0044E6  0102               	movlb	2	; () banked
 12915  0044E8  5DED               	subwf	(_loRa+237)& (0+255),w,b
 12916  0044EA  E2A1               	bc	l13915
 12917                           
 12918                           ; BSR set to: 2
 12919                           ;lorawan_eu.c: 912: }
 12920                           ;lorawan_eu.c: 913: }
 12921                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12922  0044EC  5102               	movf	(_loRa+2)& (0+255),w,b
 12923  0044EE  0BF0               	andlw	-16
 12924  0044F0  0906               	iorlw	6
 12925  0044F2  6F02               	movwf	(_loRa+2)& (0+255),b
 12926                           
 12927                           ; BSR set to: 2
 12928                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 12929  0044F4  C098  F094         	movff	StartReTxTimer@minim,??_StartReTxTimer
 12930  0044F8  C099  F095         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 12931  0044FC  C09A  F096         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 12932  004500  C09B  F097         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 12933  004504  0E0C               	movlw	12
 12934  004506                     u15615:
 12935  004506  90D8               	bcf	status,0,c
 12936  004508  0100               	movlb	0	; () banked
 12937  00450A  3794               	rlcf	??_StartReTxTimer& (0+255),f,b
 12938  00450C  3795               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 12939  00450E  3796               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 12940  004510  3797               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 12941  004512  2EE8               	decfsz	wreg,f,c
 12942  004514  D7F8               	goto	u15615
 12943  004516  C094  F064         	movff	??_StartReTxTimer,___lldiv@dividend
 12944  00451A  C095  F065         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 12945  00451E  C096  F066         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 12946  004522  C097  F067         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 12947  004526  0E7D               	movlw	125
 12948  004528  6F68               	movwf	___lldiv@divisor& (0+255),b
 12949  00452A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12950  00452C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12951  00452E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12952  004530  ECAA  F030         	call	___lldiv	;wreg free
 12953  004534  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12954  004538  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12955  00453C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12956  004540  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12957  004544  0102               	movlb	2	; () banked
 12958  004546  51E6               	movf	(_loRa+230)& (0+255),w,b
 12959  004548  ECE5  F036         	call	_SwTimerSetTimeout
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 12963  00454C  0102               	movlb	2	; () banked
 12964  00454E  51E6               	movf	(_loRa+230)& (0+255),w,b
 12965  004550  EFAA  F02E         	goto	_SwTimerStart
 12966  004554                     __end_of_StartReTxTimer:
 12967                           	opt stack 0
 12968                           tosu	equ	0xFFF
 12969                           tosh	equ	0xFFE
 12970                           tosl	equ	0xFFD
 12971                           pclath	equ	0xFFA
 12972                           tblptru	equ	0xFF8
 12973                           tblptrh	equ	0xFF7
 12974                           tblptrl	equ	0xFF6
 12975                           tablat	equ	0xFF5
 12976                           prodh	equ	0xFF4
 12977                           prodl	equ	0xFF3
 12978                           intcon	equ	0xFF2
 12979                           postinc0	equ	0xFEE
 12980                           wreg	equ	0xFE8
 12981                           postinc1	equ	0xFE6
 12982                           postdec1	equ	0xFE5
 12983                           plusw1	equ	0xFE3
 12984                           fsr1h	equ	0xFE2
 12985                           fsr1l	equ	0xFE1
 12986                           indf2	equ	0xFDF
 12987                           postinc2	equ	0xFDE
 12988                           postdec2	equ	0xFDD
 12989                           fsr2h	equ	0xFDA
 12990                           fsr2l	equ	0xFD9
 12991                           status	equ	0xFD8
 12992                           
 12993 ;; *************** function _SetReceptionNotOkState *****************
 12994 ;; Defined at:
 12995 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12996 ;; Parameters:    Size  Location     Type
 12997 ;;		None
 12998 ;; Auto vars:     Size  Location     Type
 12999 ;;		None
 13000 ;; Return value:  Size  Location     Type
 13001 ;;                  1    wreg      void 
 13002 ;; Registers used:
 13003 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13004 ;; Tracked objects:
 13005 ;;		On entry : E/2
 13006 ;;		On exit  : C/0
 13007 ;;		Unchanged: 0/0
 13008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13009 ;;      Params:         0       0       0       0       0       0       0       0       0
 13010 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13011 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13012 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13013 ;;Total ram usage:        0 bytes
 13014 ;; Hardware stack levels used:    1
 13015 ;; Hardware stack levels required when called:   14
 13016 ;; This function calls:
 13017 ;;		_LORAWAN_EnterContinuousReceive
 13018 ;;		_RxDataDone
 13019 ;; This function is called by:
 13020 ;;		_LORAWAN_RxDone
 13021 ;; This function uses a non-reentrant model
 13022 ;;
 13023                           
 13024                           	psect	text65
 13025  006382                     __ptext65:
 13026                           	opt stack 0
 13027  006382                     _SetReceptionNotOkState:
 13028                           	opt stack 12
 13029                           
 13030                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;incstack = 0
 13034  006382  0102               	movlb	2	; () banked
 13035  006384  5102               	movf	(_loRa+2)& (0+255),w,b
 13036  006386  0B0F               	andlw	15
 13037  006388  0A05               	xorlw	5
 13038  00638A  E006               	bz	l2328
 13039                           
 13040                           ; BSR set to: 2
 13041  00638C  5102               	movf	(_loRa+2)& (0+255),w,b
 13042  00638E  0B0F               	andlw	15
 13043  006390  0A03               	xorlw	3
 13044  006392  E122               	bnz	l14093
 13045                           
 13046                           ; BSR set to: 2
 13047  006394  51F1               	movf	(_loRa+241)& (0+255),w,b
 13048  006396  E020               	bz	l14093
 13049  006398                     l2328:
 13050                           
 13051                           ; BSR set to: 2
 13052                           ;lorawan.c: 2000: {
 13053                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13054  006398  9100               	bcf	_loRa& (0+255),0,b
 13055                           
 13056                           ; BSR set to: 2
 13057                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 13058  00639A  0EF0               	movlw	-16
 13059  00639C  1702               	andwf	(_loRa+2)& (0+255),f,b
 13060                           
 13061                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 13062  00639E  5112               	movf	(_loRa+18)& (0+255),w,b
 13063  0063A0  E119               	bnz	l14091
 13064                           
 13065                           ; BSR set to: 2
 13066  0063A2  0101               	movlb	1	; () banked
 13067  0063A4  5172               	movf	_rxPayload& (0+255),w,b
 13068  0063A6  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 13069  0063A8  E015               	bz	l14091
 13070                           
 13071                           ; BSR set to: 1
 13072                           ;lorawan.c: 2005: {
 13073                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 13074  0063AA  0102               	movlb	2	; () banked
 13075  0063AC  9B00               	bcf	_loRa& (0+255),5,b
 13076                           
 13077                           ; BSR set to: 2
 13078                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13079  0063AE  0E00               	movlw	0
 13080  0063B0  0100               	movlb	0	; () banked
 13081  0063B2  6F64               	movwf	RxDataDone@pData& (0+255),b
 13082  0063B4  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
 13083  0063B6  6F66               	movwf	RxDataDone@dataLength& (0+255),b
 13084  0063B8  6F67               	movwf	RxDataDone@status& (0+255),b
 13085  0063BA  D801               	call	u15938
 13086  0063BC  D00B               	goto	l14091
 13087  0063BE                     u15938:
 13088  0063BE  0005               	push	
 13089  0063C0  0101               	movlb	1	; () banked
 13090  0063C2  6EFA               	movwf	pclath,c
 13091  0063C4  5172               	movf	_rxPayload& (0+255),w,b
 13092  0063C6  6EFD               	movwf	tosl,c
 13093  0063C8  5173               	movf	(_rxPayload+1)& (0+255),w,b
 13094  0063CA  6EFE               	movwf	tosh,c
 13095  0063CC  50F8               	movf	tblptru,w,c
 13096  0063CE  6EFF               	movwf	tosu,c
 13097  0063D0  50FA               	movf	pclath,w,c
 13098  0063D2  0012               	return		;indir
 13099  0063D4                     l14091:
 13100                           
 13101                           ;lorawan.c: 2008: }
 13102                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 13103  0063D4  0102               	movlb	2	; () banked
 13104  0063D6  9303               	bcf	(_loRa+3)& (0+255),1,b
 13105  0063D8                     l14093:
 13106                           
 13107                           ; BSR set to: 2
 13108                           ;lorawan.c: 2010: }
 13109                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 13110  0063D8  0E02               	movlw	2
 13111  0063DA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13112  0063DC  A4D8               	btfss	status,2,c
 13113  0063DE  0012               	return	
 13114                           
 13115                           ; BSR set to: 2
 13116                           ;lorawan.c: 2013: {
 13117                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13118  0063E0  5102               	movf	(_loRa+2)& (0+255),w,b
 13119  0063E2  0BF0               	andlw	-16
 13120  0063E4  0909               	iorlw	9
 13121  0063E6  6F02               	movwf	(_loRa+2)& (0+255),b
 13122                           
 13123                           ; BSR set to: 2
 13124                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 13125  0063E8  EFF6  F031         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 13126  0063EC                     __end_of_SetReceptionNotOkState:
 13127                           	opt stack 0
 13128                           tosu	equ	0xFFF
 13129                           tosh	equ	0xFFE
 13130                           tosl	equ	0xFFD
 13131                           pclath	equ	0xFFA
 13132                           tblptru	equ	0xFF8
 13133                           tblptrh	equ	0xFF7
 13134                           tblptrl	equ	0xFF6
 13135                           tablat	equ	0xFF5
 13136                           prodh	equ	0xFF4
 13137                           prodl	equ	0xFF3
 13138                           intcon	equ	0xFF2
 13139                           postinc0	equ	0xFEE
 13140                           wreg	equ	0xFE8
 13141                           postinc1	equ	0xFE6
 13142                           postdec1	equ	0xFE5
 13143                           plusw1	equ	0xFE3
 13144                           fsr1h	equ	0xFE2
 13145                           fsr1l	equ	0xFE1
 13146                           indf2	equ	0xFDF
 13147                           postinc2	equ	0xFDE
 13148                           postdec2	equ	0xFDD
 13149                           fsr2h	equ	0xFDA
 13150                           fsr2l	equ	0xFD9
 13151                           status	equ	0xFD8
 13152                           
 13153 ;; *************** function _SetJoinFailState *****************
 13154 ;; Defined at:
 13155 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;		None
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;		None
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  1    wreg      void 
 13162 ;; Registers used:
 13163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
 13164 ;; Tracked objects:
 13165 ;;		On entry : F/2
 13166 ;;		On exit  : F/1
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13169 ;;      Params:         0       0       0       0       0       0       0       0       0
 13170 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13171 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13172 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13173 ;;Total ram usage:        0 bytes
 13174 ;; Hardware stack levels used:    1
 13175 ;; Hardware stack levels required when called:    8
 13176 ;; This function calls:
 13177 ;;		_RxJoinResponse
 13178 ;; This function is called by:
 13179 ;;		_LORAWAN_RxTimeout
 13180 ;;		_LORAWAN_RxDone
 13181 ;; This function uses a non-reentrant model
 13182 ;;
 13183                           
 13184                           	psect	text66
 13185  0072E0                     __ptext66:
 13186                           	opt stack 0
 13187  0072E0                     _SetJoinFailState:
 13188                           	opt stack 18
 13189                           
 13190                           ; BSR set to: 2
 13191                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13192                           
 13193                           ;incstack = 0
 13194  0072E0  9902               	bcf	(_loRa+2)& (0+255),4,b
 13195                           
 13196                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13197  0072E2  9500               	bcf	_loRa& (0+255),2,b
 13198                           
 13199                           ; BSR set to: 2
 13200                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13201  0072E4  0EF0               	movlw	-16
 13202  0072E6  1702               	andwf	(_loRa+2)& (0+255),f,b
 13203                           
 13204                           ; BSR set to: 2
 13205                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13206  0072E8  0101               	movlb	1	; () banked
 13207  0072EA  5174               	movf	(_rxPayload+2)& (0+255),w,b
 13208  0072EC  1175               	iorwf	(_rxPayload+3)& (0+255),w,b
 13209  0072EE  B4D8               	btfsc	status,2,c
 13210  0072F0  0012               	return	
 13211                           
 13212                           ; BSR set to: 1
 13213                           ;lorawan.c: 1110: {
 13214                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13215  0072F2  EE21  F074         	lfsr	2,_rxPayload+2
 13216  0072F6  0005               	push	
 13217  0072F8  6EFA               	movwf	pclath,c
 13218  0072FA  50DE               	movf	postinc2,w,c
 13219  0072FC  6EFD               	movwf	tosl,c
 13220  0072FE  50DE               	movf	postinc2,w,c
 13221  007300  6EFE               	movwf	tosh,c
 13222  007302  50F8               	movf	tblptru,w,c
 13223  007304  6EFF               	movwf	tosu,c
 13224  007306  50FA               	movf	pclath,w,c
 13225  007308  0C00               	retlw	0	;indir
 13226  00730A                     __end_of_SetJoinFailState:
 13227                           	opt stack 0
 13228                           tosu	equ	0xFFF
 13229                           tosh	equ	0xFFE
 13230                           tosl	equ	0xFFD
 13231                           pclath	equ	0xFFA
 13232                           tblptru	equ	0xFF8
 13233                           tblptrh	equ	0xFF7
 13234                           tblptrl	equ	0xFF6
 13235                           tablat	equ	0xFF5
 13236                           prodh	equ	0xFF4
 13237                           prodl	equ	0xFF3
 13238                           intcon	equ	0xFF2
 13239                           postinc0	equ	0xFEE
 13240                           wreg	equ	0xFE8
 13241                           postinc1	equ	0xFE6
 13242                           postdec1	equ	0xFE5
 13243                           plusw1	equ	0xFE3
 13244                           fsr1h	equ	0xFE2
 13245                           fsr1l	equ	0xFE1
 13246                           indf2	equ	0xFDF
 13247                           postinc2	equ	0xFDE
 13248                           postdec2	equ	0xFDD
 13249                           fsr2h	equ	0xFDA
 13250                           fsr2l	equ	0xFD9
 13251                           status	equ	0xFD8
 13252                           
 13253 ;; *************** function _RxJoinResponse *****************
 13254 ;; Defined at:
 13255 ;;		line 149 in file "main.c"
 13256 ;; Parameters:    Size  Location     Type
 13257 ;;  status          1    wreg     unsigned char 
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;  status          1    0[COMRAM] unsigned char 
 13260 ;; Return value:  Size  Location     Type
 13261 ;;                  1    wreg      void 
 13262 ;; Registers used:
 13263 ;;		wreg, status,2
 13264 ;; Tracked objects:
 13265 ;;		On entry : F/1
 13266 ;;		On exit  : F/1
 13267 ;;		Unchanged: 0/0
 13268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13269 ;;      Params:         0       0       0       0       0       0       0       0       0
 13270 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13271 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13272 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13273 ;;Total ram usage:        0 bytes
 13274 ;; Hardware stack levels used:    1
 13275 ;; Hardware stack levels required when called:    7
 13276 ;; This function calls:
 13277 ;;		Nothing
 13278 ;; This function is called by:
 13279 ;;		_main
 13280 ;;		_SetJoinFailState
 13281 ;;		_UpdateJoinSuccessState
 13282 ;; This function uses a non-reentrant model
 13283 ;;
 13284                           
 13285                           	psect	text67
 13286  007938                     __ptext67:
 13287                           	opt stack 0
 13288  007938                     _RxJoinResponse:
 13289                           	opt stack 20
 13290                           
 13291                           ; BSR set to: 1
 13292                           ;main.c: 151: JoinedServer = 1;
 13293                           
 13294                           ; BSR set to: 1
 13295                           ;incstack = 0
 13296  007938  0E01               	movlw	1
 13297  00793A  6F76               	movwf	_JoinedServer& (0+255),b
 13298                           
 13299                           ; BSR set to: 1
 13300  00793C  0C01               	retlw	1	;funcret
 13301  00793E                     __end_of_RxJoinResponse:
 13302                           	opt stack 0
 13303                           tosu	equ	0xFFF
 13304                           tosh	equ	0xFFE
 13305                           tosl	equ	0xFFD
 13306                           pclath	equ	0xFFA
 13307                           tblptru	equ	0xFF8
 13308                           tblptrh	equ	0xFF7
 13309                           tblptrl	equ	0xFF6
 13310                           tablat	equ	0xFF5
 13311                           prodh	equ	0xFF4
 13312                           prodl	equ	0xFF3
 13313                           intcon	equ	0xFF2
 13314                           postinc0	equ	0xFEE
 13315                           wreg	equ	0xFE8
 13316                           postinc1	equ	0xFE6
 13317                           postdec1	equ	0xFE5
 13318                           plusw1	equ	0xFE3
 13319                           fsr1h	equ	0xFE2
 13320                           fsr1l	equ	0xFE1
 13321                           indf2	equ	0xFDF
 13322                           postinc2	equ	0xFDE
 13323                           postdec2	equ	0xFDD
 13324                           fsr2h	equ	0xFDA
 13325                           fsr2l	equ	0xFD9
 13326                           status	equ	0xFD8
 13327                           
 13328 ;; *************** function _MacExecuteCommands *****************
 13329 ;; Defined at:
 13330 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
 13333 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13334 ;;  fOptsLen        1   28[BANK0 ] unsigned char 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;  ptr             2   32[BANK0 ] PTR unsigned char 
 13337 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13338 ;;  done            1   31[BANK0 ] unsigned char 
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  2   26[BANK0 ] PTR unsigned char 
 13341 ;; Registers used:
 13342 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13343 ;; Tracked objects:
 13344 ;;		On entry : F/0
 13345 ;;		On exit  : F/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13348 ;;      Params:         0       3       0       0       0       0       0       0       0
 13349 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13350 ;;      Temps:          0       2       0       0       0       0       0       0       0
 13351 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13352 ;;Total ram usage:        8 bytes
 13353 ;; Hardware stack levels used:    1
 13354 ;; Hardware stack levels required when called:   11
 13355 ;; This function calls:
 13356 ;;		_ExecuteDevStatus
 13357 ;;		_ExecuteDutyCycle
 13358 ;;		_ExecuteLinkAdr
 13359 ;;		_ExecuteLinkCheck
 13360 ;;		_ExecuteNewChannel
 13361 ;;		_ExecuteRxParamSetupReq
 13362 ;;		_ExecuteRxTimingSetup
 13363 ;; This function is called by:
 13364 ;;		_LORAWAN_RxDone
 13365 ;; This function uses a non-reentrant model
 13366 ;;
 13367                           
 13368                           	psect	text68
 13369  002E04                     __ptext68:
 13370                           	opt stack 0
 13371  002E04                     _MacExecuteCommands:
 13372                           	opt stack 15
 13373                           
 13374                           ; BSR set to: 0
 13375                           ;lorawan.c: 1577: bool done = 0;
 13376                           
 13377                           ; BSR set to: 1
 13378                           ;incstack = 0
 13379  002E04  6B7F               	clrf	MacExecuteCommands@done& (0+255),b
 13380                           
 13381                           ; BSR set to: 0
 13382                           ;lorawan.c: 1578: uint8_t *ptr;
 13383                           ;lorawan.c: 1579: ptr = buffer;
 13384  002E06  C07A  F080         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 13385  002E0A  C07B  F081         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 13386                           
 13387                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 13388  002E0E  D0DE               	goto	l14155
 13389  002E10                     l14119:
 13390                           
 13391                           ; BSR set to: 0
 13392                           ;lorawan.c: 1581: {
 13393                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 13394  002E10  0102               	movlb	2	; () banked
 13395  002E12  51A7               	movf	(_loRa+167)& (0+255),w,b
 13396  002E14  0D02               	mullw	2
 13397  002E16  0EA9               	movlw	low (_loRa+169)
 13398  002E18  24F3               	addwf	prodl,w,c
 13399  002E1A  6ED9               	movwf	fsr2l,c
 13400  002E1C  0E02               	movlw	high (_loRa+169)
 13401  002E1E  20F4               	addwfc	prodh,w,c
 13402  002E20  6EDA               	movwf	fsr2h,c
 13403  002E22  90DF               	bcf	indf2,0,c
 13404                           
 13405                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 13406  002E24  51A7               	movf	(_loRa+167)& (0+255),w,b
 13407  002E26  0D02               	mullw	2
 13408  002E28  0EA9               	movlw	low (_loRa+169)
 13409  002E2A  24F3               	addwf	prodl,w,c
 13410  002E2C  6ED9               	movwf	fsr2l,c
 13411  002E2E  0E02               	movlw	high (_loRa+169)
 13412  002E30  20F4               	addwfc	prodh,w,c
 13413  002E32  6EDA               	movwf	fsr2h,c
 13414  002E34  92DF               	bcf	indf2,1,c
 13415                           
 13416                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 13417  002E36  51A7               	movf	(_loRa+167)& (0+255),w,b
 13418  002E38  0D02               	mullw	2
 13419  002E3A  0EA9               	movlw	low (_loRa+169)
 13420  002E3C  24F3               	addwf	prodl,w,c
 13421  002E3E  6ED9               	movwf	fsr2l,c
 13422  002E40  0E02               	movlw	high (_loRa+169)
 13423  002E42  20F4               	addwfc	prodh,w,c
 13424  002E44  6EDA               	movwf	fsr2h,c
 13425  002E46  94DF               	bcf	indf2,2,c
 13426                           
 13427                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 13428  002E48  51A7               	movf	(_loRa+167)& (0+255),w,b
 13429  002E4A  0D02               	mullw	2
 13430  002E4C  0EA9               	movlw	low (_loRa+169)
 13431  002E4E  24F3               	addwf	prodl,w,c
 13432  002E50  6ED9               	movwf	fsr2l,c
 13433  002E52  0E02               	movlw	high (_loRa+169)
 13434  002E54  20F4               	addwfc	prodh,w,c
 13435  002E56  6EDA               	movwf	fsr2h,c
 13436  002E58  96DF               	bcf	indf2,3,c
 13437                           
 13438                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 13439  002E5A  51A7               	movf	(_loRa+167)& (0+255),w,b
 13440  002E5C  0D02               	mullw	2
 13441  002E5E  0EA9               	movlw	low (_loRa+169)
 13442  002E60  24F3               	addwf	prodl,w,c
 13443  002E62  6ED9               	movwf	fsr2l,c
 13444  002E64  0E02               	movlw	high (_loRa+169)
 13445  002E66  20F4               	addwfc	prodh,w,c
 13446  002E68  6EDA               	movwf	fsr2h,c
 13447  002E6A  98DF               	bcf	indf2,4,c
 13448                           
 13449                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 13450  002E6C  51A7               	movf	(_loRa+167)& (0+255),w,b
 13451  002E6E  0D02               	mullw	2
 13452  002E70  0EA9               	movlw	low (_loRa+169)
 13453  002E72  24F3               	addwf	prodl,w,c
 13454  002E74  6ED9               	movwf	fsr2l,c
 13455  002E76  0E02               	movlw	high (_loRa+169)
 13456  002E78  20F4               	addwfc	prodh,w,c
 13457  002E7A  6EDA               	movwf	fsr2h,c
 13458  002E7C  9ADF               	bcf	indf2,5,c
 13459                           
 13460                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 13461  002E7E  51A7               	movf	(_loRa+167)& (0+255),w,b
 13462  002E80  0D02               	mullw	2
 13463  002E82  0EA9               	movlw	low (_loRa+169)
 13464  002E84  24F3               	addwf	prodl,w,c
 13465  002E86  6ED9               	movwf	fsr2l,c
 13466  002E88  0E02               	movlw	high (_loRa+169)
 13467  002E8A  20F4               	addwfc	prodh,w,c
 13468  002E8C  6EDA               	movwf	fsr2h,c
 13469  002E8E  9CDF               	bcf	indf2,6,c
 13470                           
 13471                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 13472  002E90  51A7               	movf	(_loRa+167)& (0+255),w,b
 13473  002E92  0D02               	mullw	2
 13474  002E94  0EA9               	movlw	low (_loRa+169)
 13475  002E96  24F3               	addwf	prodl,w,c
 13476  002E98  6ED9               	movwf	fsr2l,c
 13477  002E9A  0E02               	movlw	high (_loRa+169)
 13478  002E9C  20F4               	addwfc	prodh,w,c
 13479  002E9E  6EDA               	movwf	fsr2h,c
 13480  002EA0  9EDF               	bcf	indf2,7,c
 13481                           
 13482                           ; BSR set to: 2
 13483                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 13484  002EA2  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13485  002EA6  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13486  002EAA  51A7               	movf	(_loRa+167)& (0+255),w,b
 13487  002EAC  0D02               	mullw	2
 13488  002EAE  0EA8               	movlw	low (_loRa+168)
 13489  002EB0  24F3               	addwf	prodl,w,c
 13490  002EB2  6EE9               	movwf	fsr0l,c
 13491  002EB4  0E02               	movlw	high (_loRa+168)
 13492  002EB6  20F4               	addwfc	prodh,w,c
 13493  002EB8  6EEA               	movwf	fsr0h,c
 13494  002EBA  CFDF FFEF          	movff	indf2,indf0
 13495                           
 13496                           ;lorawan.c: 1595: switch (*ptr ++)
 13497  002EBE  D060               	goto	l14147
 13498  002EC0                     l14123:
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;lorawan.c: 1598: {
 13502                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 13503  002EC0  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 13504  002EC4  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 13505  002EC8  ECB8  F038         	call	_ExecuteLinkCheck
 13506  002ECC  C064  F080         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 13507  002ED0  C065  F081         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 13508  002ED4                     l14125:
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 13512  002ED4  0102               	movlb	2	; () banked
 13513  002ED6  51A7               	movf	(_loRa+167)& (0+255),w,b
 13514  002ED8  0D02               	mullw	2
 13515  002EDA  0EA8               	movlw	low (_loRa+168)
 13516  002EDC  24F3               	addwf	prodl,w,c
 13517  002EDE  6ED9               	movwf	fsr2l,c
 13518  002EE0  0E02               	movlw	high (_loRa+168)
 13519  002EE2  20F4               	addwfc	prodh,w,c
 13520  002EE4  6EDA               	movwf	fsr2h,c
 13521  002EE6  68DF               	setf	indf2,c
 13522                           
 13523                           ;lorawan.c: 1602: } break;
 13524  002EE8  D062               	goto	l14149
 13525  002EEA                     l14127:
 13526                           
 13527                           ; BSR set to: 0
 13528                           ;lorawan.c: 1605: {
 13529                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 13530  002EEA  C080  F071         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 13531  002EEE  C081  F072         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 13532  002EF2  ECB6  F01A         	call	_ExecuteLinkAdr	;wreg free
 13533  002EF6  C071  F080         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 13534  002EFA  C072  F081         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 13535                           
 13536                           ;lorawan.c: 1607: } break;
 13537  002EFE  D057               	goto	l14149
 13538  002F00                     l14129:
 13539                           
 13540                           ; BSR set to: 0
 13541                           ;lorawan.c: 1610: {
 13542                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 13543  002F00  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 13544  002F04  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 13545  002F08  EC10  F035         	call	_ExecuteDutyCycle	;wreg free
 13546  002F0C  C064  F080         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 13547  002F10  C065  F081         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 13548                           
 13549                           ;lorawan.c: 1612: } break;
 13550  002F14  D04C               	goto	l14149
 13551  002F16                     l14131:
 13552                           
 13553                           ; BSR set to: 0
 13554                           ;lorawan.c: 1615: {
 13555                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 13556  002F16  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 13557  002F1A  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 13558  002F1E  EC6C  F021         	call	_ExecuteRxParamSetupReq	;wreg free
 13559  002F22  C070  F080         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 13560  002F26  C071  F081         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 13561                           
 13562                           ;lorawan.c: 1617: } break;
 13563  002F2A  D041               	goto	l14149
 13564  002F2C                     l14133:
 13565                           
 13566                           ; BSR set to: 0
 13567                           ;lorawan.c: 1620: {
 13568                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 13569  002F2C  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 13570  002F30  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 13571  002F34  EC4F  F03C         	call	_ExecuteDevStatus	;wreg free
 13572  002F38  C064  F080         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 13573  002F3C  C065  F081         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 13574                           
 13575                           ;lorawan.c: 1622: } break;
 13576  002F40  D036               	goto	l14149
 13577  002F42                     l14135:
 13578                           
 13579                           ; BSR set to: 0
 13580                           ;lorawan.c: 1625: {
 13581                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 13582  002F42  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 13583  002F46  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 13584  002F4A  ECD5  F019         	call	_ExecuteNewChannel	;wreg free
 13585  002F4E  C070  F080         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 13586  002F52  C071  F081         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 13587                           
 13588                           ;lorawan.c: 1628: } break;
 13589  002F56  D02B               	goto	l14149
 13590  002F58                     l14137:
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;lorawan.c: 1631: {
 13594                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 13595  002F58  C080  F069         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 13596  002F5C  C081  F06A         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 13597  002F60  EC10  F03A         	call	_ExecuteRxTimingSetup	;wreg free
 13598  002F64  C069  F080         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 13599  002F68  C06A  F081         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 13600                           
 13601                           ;lorawan.c: 1633: } break;
 13602  002F6C  D020               	goto	l14149
 13603  002F6E                     l14139:
 13604                           
 13605                           ; BSR set to: 0
 13606                           ;lorawan.c: 1636: {
 13607                           ;lorawan.c: 1637: done = 1;
 13608  002F6E  0E01               	movlw	1
 13609  002F70  6F7F               	movwf	MacExecuteCommands@done& (0+255),b
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 13613  002F72  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13614  002F74  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13615  002F76  6F80               	movwf	MacExecuteCommands@ptr& (0+255),b
 13616  002F78  0E00               	movlw	0
 13617  002F7A  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13618  002F7C  6F81               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 13619  002F7E  D7AA               	goto	l14125
 13620  002F80                     l14147:
 13621                           
 13622                           ; BSR set to: 2
 13623  002F80  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13624  002F84  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13625  002F88  0100               	movlb	0	; () banked
 13626  002F8A  4B80               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 13627  002F8C  2B81               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 13628  002F8E  50DF               	movf	indf2,w,c
 13629                           
 13630                           ; Switch size 1, requested type "speed"
 13631                           ; Number of cases is 7, Range of values is 2 to 8
 13632                           ; switch strategies available:
 13633                           ; Name         Instructions Cycles
 13634                           ; simple_byte           22    12 (average)
 13635                           ;	Chosen strategy is simple_byte
 13636  002F90  0A02               	xorlw	2	; case 2
 13637  002F92  E096               	bz	l14123
 13638  002F94  0A01               	xorlw	1	; case 3
 13639  002F96  E0A9               	bz	l14127
 13640  002F98  0A07               	xorlw	7	; case 4
 13641  002F9A  E0B2               	bz	l14129
 13642  002F9C  0A01               	xorlw	1	; case 5
 13643  002F9E  E0BB               	bz	l14131
 13644  002FA0  0A03               	xorlw	3	; case 6
 13645  002FA2  E0C4               	bz	l14133
 13646  002FA4  0A01               	xorlw	1	; case 7
 13647  002FA6  E0CD               	bz	l14135
 13648  002FA8  0A0F               	xorlw	15	; case 8
 13649  002FAA  E0D6               	bz	l14137
 13650  002FAC  D7E0               	goto	l14139
 13651  002FAE                     l14149:
 13652                           
 13653                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 13654                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 13655  002FAE  0102               	movlb	2	; () banked
 13656  002FB0  51A7               	movf	(_loRa+167)& (0+255),w,b
 13657  002FB2  0D02               	mullw	2
 13658  002FB4  0EA8               	movlw	low (_loRa+168)
 13659  002FB6  24F3               	addwf	prodl,w,c
 13660  002FB8  6ED9               	movwf	fsr2l,c
 13661  002FBA  0E02               	movlw	high (_loRa+168)
 13662  002FBC  20F4               	addwfc	prodh,w,c
 13663  002FBE  6EDA               	movwf	fsr2h,c
 13664  002FC0  28DE               	incf	postinc2,w,c
 13665  002FC2  E004               	bz	l14155
 13666                           
 13667                           ; BSR set to: 2
 13668  002FC4  0E10               	movlw	16
 13669  002FC6  61A7               	cpfslt	(_loRa+167)& (0+255),b
 13670  002FC8  D001               	goto	l14155
 13671                           
 13672                           ; BSR set to: 2
 13673                           ;lorawan.c: 1645: {
 13674                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 13675  002FCA  2BA7               	incf	(_loRa+167)& (0+255),f,b
 13676  002FCC                     l14155:
 13677  002FCC  0100               	movlb	0	; () banked
 13678  002FCE  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13679  002FD0  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13680  002FD2  6F7D               	movwf	??_MacExecuteCommands& (0+255),b
 13681  002FD4  0E00               	movlw	0
 13682  002FD6  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13683  002FD8  6F7E               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13684  002FDA  517D               	movf	??_MacExecuteCommands& (0+255),w,b
 13685  002FDC  5D80               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 13686  002FDE  517E               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 13687  002FE0  5981               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 13688  002FE2  E203               	bc	l14159
 13689                           
 13690                           ; BSR set to: 0
 13691  002FE4  517F               	movf	MacExecuteCommands@done& (0+255),w,b
 13692  002FE6  E101 D713          	bz	l14119
 13693  002FEA                     l14159:
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;lorawan.c: 1647: }
 13697                           ;lorawan.c: 1648: }
 13698                           ;lorawan.c: 1649: return ptr;
 13699  002FEA  C080  F07A         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 13700  002FEE  C081  F07B         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 13701                           
 13702                           ; BSR set to: 0
 13703  002FF2  0012               	return		;funcret
 13704  002FF4                     __end_of_MacExecuteCommands:
 13705                           	opt stack 0
 13706                           tosu	equ	0xFFF
 13707                           tosh	equ	0xFFE
 13708                           tosl	equ	0xFFD
 13709                           pclath	equ	0xFFA
 13710                           tblptru	equ	0xFF8
 13711                           tblptrh	equ	0xFF7
 13712                           tblptrl	equ	0xFF6
 13713                           tablat	equ	0xFF5
 13714                           prodh	equ	0xFF4
 13715                           prodl	equ	0xFF3
 13716                           intcon	equ	0xFF2
 13717                           indf0	equ	0xFEF
 13718                           postinc0	equ	0xFEE
 13719                           fsr0h	equ	0xFEA
 13720                           fsr0l	equ	0xFE9
 13721                           wreg	equ	0xFE8
 13722                           postinc1	equ	0xFE6
 13723                           postdec1	equ	0xFE5
 13724                           plusw1	equ	0xFE3
 13725                           fsr1h	equ	0xFE2
 13726                           fsr1l	equ	0xFE1
 13727                           indf2	equ	0xFDF
 13728                           postinc2	equ	0xFDE
 13729                           postdec2	equ	0xFDD
 13730                           fsr2h	equ	0xFDA
 13731                           fsr2l	equ	0xFD9
 13732                           status	equ	0xFD8
 13733                           
 13734 ;; *************** function _ExecuteRxTimingSetup *****************
 13735 ;; Defined at:
 13736 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13737 ;; Parameters:    Size  Location     Type
 13738 ;;  ptr             2    9[BANK0 ] PTR unsigned char 
 13739 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13740 ;; Auto vars:     Size  Location     Type
 13741 ;;  delay           1   11[BANK0 ] unsigned char 
 13742 ;; Return value:  Size  Location     Type
 13743 ;;                  2    9[BANK0 ] PTR unsigned char 
 13744 ;; Registers used:
 13745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13746 ;; Tracked objects:
 13747 ;;		On entry : F/0
 13748 ;;		On exit  : F/2
 13749 ;;		Unchanged: 0/0
 13750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13751 ;;      Params:         0       2       0       0       0       0       0       0       0
 13752 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13753 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13754 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13755 ;;Total ram usage:        3 bytes
 13756 ;; Hardware stack levels used:    1
 13757 ;; Hardware stack levels required when called:    8
 13758 ;; This function calls:
 13759 ;;		_UpdateReceiveDelays
 13760 ;; This function is called by:
 13761 ;;		_MacExecuteCommands
 13762 ;; This function uses a non-reentrant model
 13763 ;;
 13764                           
 13765                           	psect	text69
 13766  007420                     __ptext69:
 13767                           	opt stack 0
 13768  007420                     _ExecuteRxTimingSetup:
 13769                           	opt stack 17
 13770                           
 13771                           ; BSR set to: 0
 13772                           ;lorawan.c: 1661: uint8_t delay;
 13773                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;incstack = 0
 13777  007420  C069  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 13778  007424  C06A  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 13779  007428  50DF               	movf	indf2,w,c
 13780  00742A  0B0F               	andlw	15
 13781  00742C  6F6B               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 13782                           
 13783                           ; BSR set to: 0
 13784                           ;lorawan.c: 1664: ptr++;
 13785  00742E  4B69               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 13786  007430  2B6A               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 13787                           
 13788                           ; BSR set to: 0
 13789                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 13790  007432  516B               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 13791  007434  ECD0  F035         	call	_UpdateReceiveDelays
 13792                           
 13793                           ; BSR set to: 2
 13794                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 13795  007438  8104               	bsf	(_loRa+4)& (0+255),0,b
 13796                           
 13797                           ; BSR set to: 2
 13798                           ;lorawan.c: 1669: return ptr;
 13799  00743A  C069  F069         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 13800  00743E  C06A  F06A         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 13801                           
 13802                           ; BSR set to: 2
 13803  007442  0012               	return		;funcret
 13804  007444                     __end_of_ExecuteRxTimingSetup:
 13805                           	opt stack 0
 13806                           tosu	equ	0xFFF
 13807                           tosh	equ	0xFFE
 13808                           tosl	equ	0xFFD
 13809                           pclath	equ	0xFFA
 13810                           tblptru	equ	0xFF8
 13811                           tblptrh	equ	0xFF7
 13812                           tblptrl	equ	0xFF6
 13813                           tablat	equ	0xFF5
 13814                           prodh	equ	0xFF4
 13815                           prodl	equ	0xFF3
 13816                           intcon	equ	0xFF2
 13817                           indf0	equ	0xFEF
 13818                           postinc0	equ	0xFEE
 13819                           fsr0h	equ	0xFEA
 13820                           fsr0l	equ	0xFE9
 13821                           wreg	equ	0xFE8
 13822                           postinc1	equ	0xFE6
 13823                           postdec1	equ	0xFE5
 13824                           plusw1	equ	0xFE3
 13825                           fsr1h	equ	0xFE2
 13826                           fsr1l	equ	0xFE1
 13827                           indf2	equ	0xFDF
 13828                           postinc2	equ	0xFDE
 13829                           postdec2	equ	0xFDD
 13830                           fsr2h	equ	0xFDA
 13831                           fsr2l	equ	0xFD9
 13832                           status	equ	0xFD8
 13833                           
 13834 ;; *************** function _UpdateReceiveDelays *****************
 13835 ;; Defined at:
 13836 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13837 ;; Parameters:    Size  Location     Type
 13838 ;;  delay           1    wreg     unsigned char 
 13839 ;; Auto vars:     Size  Location     Type
 13840 ;;  delay           1    8[BANK0 ] unsigned char 
 13841 ;; Return value:  Size  Location     Type
 13842 ;;                  1    wreg      void 
 13843 ;; Registers used:
 13844 ;;		wreg, status,2, status,0, prodl, prodh
 13845 ;; Tracked objects:
 13846 ;;		On entry : C/3
 13847 ;;		On exit  : F/2
 13848 ;;		Unchanged: 0/0
 13849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13850 ;;      Params:         0       0       0       0       0       0       0       0       0
 13851 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13852 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13853 ;;      Totals:         0       5       0       0       0       0       0       0       0
 13854 ;;Total ram usage:        5 bytes
 13855 ;; Hardware stack levels used:    1
 13856 ;; Hardware stack levels required when called:    7
 13857 ;; This function calls:
 13858 ;;		Nothing
 13859 ;; This function is called by:
 13860 ;;		_LORAWAN_RxDone
 13861 ;;		_ExecuteRxTimingSetup
 13862 ;; This function uses a non-reentrant model
 13863 ;;
 13864                           
 13865                           	psect	text70
 13866  006BA0                     __ptext70:
 13867                           	opt stack 0
 13868  006BA0                     _UpdateReceiveDelays:
 13869                           	opt stack 19
 13870                           
 13871                           ; BSR set to: 2
 13872                           ;incstack = 0
 13873                           ;UpdateReceiveDelays@delay stored from wreg
 13874  006BA0  0100               	movlb	0	; () banked
 13875  006BA2  6F68               	movwf	UpdateReceiveDelays@delay& (0+255),b
 13876                           
 13877                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 13878  006BA4  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13879  006BA6  6F64               	movwf	??_UpdateReceiveDelays& (0+255),b
 13880  006BA8  6B65               	clrf	(??_UpdateReceiveDelays+1)& (0+255),b
 13881  006BAA  0EE8               	movlw	232
 13882  006BAC  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13883  006BAE  CFF3 F066          	movff	prodl,??_UpdateReceiveDelays+2
 13884  006BB2  CFF4 F067          	movff	prodh,??_UpdateReceiveDelays+3
 13885  006BB6  0365               	mulwf	(??_UpdateReceiveDelays+1)& (0+255),b
 13886  006BB8  50F3               	movf	prodl,w,c
 13887  006BBA  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13888  006BBC  0E03               	movlw	3
 13889  006BBE  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13890  006BC0  50F3               	movf	prodl,w,c
 13891  006BC2  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13892  006BC4  C066  F294         	movff	??_UpdateReceiveDelays+2,_loRa+148
 13893  006BC8  C067  F295         	movff	??_UpdateReceiveDelays+3,_loRa+149
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;lorawan.c: 2029: if (delay == 0)
 13897  006BCC  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13898  006BCE  E105               	bnz	l13191
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;lorawan.c: 2030: {
 13902                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 13903  006BD0  0E03               	movlw	3
 13904  006BD2  0102               	movlb	2	; () banked
 13905  006BD4  6F95               	movwf	(_loRa+149)& (0+255),b
 13906  006BD6  0EE8               	movlw	232
 13907  006BD8  6F94               	movwf	(_loRa+148)& (0+255),b
 13908  006BDA                     l13191:
 13909                           
 13910                           ;lorawan.c: 2032: }
 13911                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 13912  006BDA  0EE8               	movlw	232
 13913  006BDC  0102               	movlb	2	; () banked
 13914  006BDE  2594               	addwf	(_loRa+148)& (0+255),w,b
 13915  006BE0  6F96               	movwf	(_loRa+150)& (0+255),b
 13916  006BE2  0E03               	movlw	3
 13917  006BE4  2195               	addwfc	(_loRa+149)& (0+255),w,b
 13918  006BE6  6F97               	movwf	(_loRa+151)& (0+255),b
 13919                           
 13920                           ; BSR set to: 2
 13921  006BE8  0012               	return		;funcret
 13922  006BEA                     __end_of_UpdateReceiveDelays:
 13923                           	opt stack 0
 13924                           tosu	equ	0xFFF
 13925                           tosh	equ	0xFFE
 13926                           tosl	equ	0xFFD
 13927                           pclath	equ	0xFFA
 13928                           tblptru	equ	0xFF8
 13929                           tblptrh	equ	0xFF7
 13930                           tblptrl	equ	0xFF6
 13931                           tablat	equ	0xFF5
 13932                           prodh	equ	0xFF4
 13933                           prodl	equ	0xFF3
 13934                           intcon	equ	0xFF2
 13935                           indf0	equ	0xFEF
 13936                           postinc0	equ	0xFEE
 13937                           fsr0h	equ	0xFEA
 13938                           fsr0l	equ	0xFE9
 13939                           wreg	equ	0xFE8
 13940                           postinc1	equ	0xFE6
 13941                           postdec1	equ	0xFE5
 13942                           plusw1	equ	0xFE3
 13943                           fsr1h	equ	0xFE2
 13944                           fsr1l	equ	0xFE1
 13945                           indf2	equ	0xFDF
 13946                           postinc2	equ	0xFDE
 13947                           postdec2	equ	0xFDD
 13948                           fsr2h	equ	0xFDA
 13949                           fsr2l	equ	0xFD9
 13950                           status	equ	0xFD8
 13951                           
 13952 ;; *************** function _ExecuteRxParamSetupReq *****************
 13953 ;; Defined at:
 13954 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13955 ;; Parameters:    Size  Location     Type
 13956 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 13957 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13958 ;; Auto vars:     Size  Location     Type
 13959 ;;  frequency       4   18[BANK0 ] unsigned long 
 13960 ;;  dlSettings      1   22[BANK0 ] struct .
 13961 ;; Return value:  Size  Location     Type
 13962 ;;                  2   16[BANK0 ] PTR unsigned char 
 13963 ;; Registers used:
 13964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13965 ;; Tracked objects:
 13966 ;;		On entry : F/0
 13967 ;;		On exit  : F/2
 13968 ;;		Unchanged: 0/0
 13969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13970 ;;      Params:         0       2       0       0       0       0       0       0       0
 13971 ;;      Locals:         0       5       0       0       0       0       0       0       0
 13972 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13973 ;;      Totals:         0       7       0       0       0       0       0       0       0
 13974 ;;Total ram usage:        7 bytes
 13975 ;; Hardware stack levels used:    1
 13976 ;; Hardware stack levels required when called:    8
 13977 ;; This function calls:
 13978 ;;		_UpdateReceiveWindow2Parameters
 13979 ;;		_ValidateDataRate
 13980 ;;		_ValidateFrequency
 13981 ;;		_ValidateRxOffset
 13982 ;;		___lmul
 13983 ;; This function is called by:
 13984 ;;		_MacExecuteCommands
 13985 ;; This function uses a non-reentrant model
 13986 ;;
 13987                           
 13988                           	psect	text71
 13989  0042D8                     __ptext71:
 13990                           	opt stack 0
 13991  0042D8                     _ExecuteRxParamSetupReq:
 13992                           	opt stack 17
 13993                           
 13994                           ; BSR set to: 0
 13995                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 13996                           
 13997                           ; BSR set to: 0
 13998                           
 13999                           ; BSR set to: 2
 14000                           ;incstack = 0
 14001  0042D8  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14002  0042DC  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14003  0042E0  50DF               	movf	indf2,w,c
 14004  0042E2  6F76               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 14005                           
 14006                           ; BSR set to: 0
 14007  0042E4  4B70               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14008  0042E6  2B71               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14009                           
 14010                           ; BSR set to: 0
 14011                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14012  0042E8  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14013  0042EC  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14014  0042F0  0EFF               	movlw	255
 14015  0042F2  14DE               	andwf	postinc2,w,c
 14016  0042F4  6F72               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14017  0042F6  0EFF               	movlw	255
 14018  0042F8  14DE               	andwf	postinc2,w,c
 14019  0042FA  6F73               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14020  0042FC  0EFF               	movlw	255
 14021  0042FE  14DE               	andwf	postinc2,w,c
 14022  004300  6F74               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14023  004302  0E00               	movlw	0
 14024  004304  14DE               	andwf	postinc2,w,c
 14025  004306  6F75               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14026                           
 14027                           ; BSR set to: 0
 14028                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 14029  004308  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 14030  00430C  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 14031  004310  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 14032  004314  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 14033  004318  0E64               	movlw	100
 14034  00431A  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14035  00431C  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14036  00431E  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14037  004320  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14038  004322  ECEE  F02E         	call	___lmul	;wreg free
 14039  004326  C064  F072         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 14040  00432A  C065  F073         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 14041  00432E  C066  F074         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 14042  004332  C067  F075         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 14043                           
 14044                           ; BSR set to: 0
 14045                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 14046  004336  0E03               	movlw	3
 14047  004338  2770               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14048  00433A  0E00               	movlw	0
 14049  00433C  2371               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14050                           
 14051                           ; BSR set to: 0
 14052                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 14053  00433E  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 14054  004342  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 14055  004346  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 14056  00434A  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 14057  00434E  ECE5  F033         	call	_ValidateFrequency	;wreg free
 14058  004352  0900               	iorlw	0
 14059  004354  E10A               	bnz	l13625
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;lorawan_eu.c: 754: {
 14063                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 14064  004356  0102               	movlb	2	; () banked
 14065  004358  51A7               	movf	(_loRa+167)& (0+255),w,b
 14066  00435A  0D02               	mullw	2
 14067  00435C  0EA9               	movlw	low (_loRa+169)
 14068  00435E  24F3               	addwf	prodl,w,c
 14069  004360  6ED9               	movwf	fsr2l,c
 14070  004362  0E02               	movlw	high (_loRa+169)
 14071  004364  20F4               	addwfc	prodh,w,c
 14072  004366  6EDA               	movwf	fsr2h,c
 14073  004368  86DF               	bsf	indf2,3,c
 14074  00436A                     l13625:
 14075                           
 14076                           ;lorawan_eu.c: 756: }
 14077                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 14078  00436A  0100               	movlb	0	; () banked
 14079  00436C  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14080  00436E  0B0F               	andlw	15
 14081  004370  ECCD  F03B         	call	_ValidateDataRate
 14082  004374  0900               	iorlw	0
 14083  004376  E10A               	bnz	l13629
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;lorawan_eu.c: 759: {
 14087                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 14088  004378  0102               	movlb	2	; () banked
 14089  00437A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14090  00437C  0D02               	mullw	2
 14091  00437E  0EA9               	movlw	low (_loRa+169)
 14092  004380  24F3               	addwf	prodl,w,c
 14093  004382  6ED9               	movwf	fsr2l,c
 14094  004384  0E02               	movlw	high (_loRa+169)
 14095  004386  20F4               	addwfc	prodh,w,c
 14096  004388  6EDA               	movwf	fsr2h,c
 14097  00438A  88DF               	bsf	indf2,4,c
 14098  00438C                     l13629:
 14099                           
 14100                           ;lorawan_eu.c: 761: }
 14101                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 14102  00438C  0100               	movlb	0	; () banked
 14103  00438E  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14104  004390  0B07               	andlw	7
 14105  004392  ECC3  F03B         	call	_ValidateRxOffset
 14106  004396  0900               	iorlw	0
 14107  004398  E10A               	bnz	l1146
 14108                           
 14109                           ; BSR set to: 0
 14110                           ;lorawan_eu.c: 764: {
 14111                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 14112  00439A  0102               	movlb	2	; () banked
 14113  00439C  51A7               	movf	(_loRa+167)& (0+255),w,b
 14114  00439E  0D02               	mullw	2
 14115  0043A0  0EA9               	movlw	low (_loRa+169)
 14116  0043A2  24F3               	addwf	prodl,w,c
 14117  0043A4  6ED9               	movwf	fsr2l,c
 14118  0043A6  0E02               	movlw	high (_loRa+169)
 14119  0043A8  20F4               	addwfc	prodh,w,c
 14120  0043AA  6EDA               	movwf	fsr2h,c
 14121  0043AC  8ADF               	bsf	indf2,5,c
 14122  0043AE                     l1146:
 14123                           
 14124                           ;lorawan_eu.c: 766: }
 14125                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 14126  0043AE  0102               	movlb	2	; () banked
 14127  0043B0  51A7               	movf	(_loRa+167)& (0+255),w,b
 14128  0043B2  0D02               	mullw	2
 14129  0043B4  0EA9               	movlw	low (_loRa+169)
 14130  0043B6  24F3               	addwf	prodl,w,c
 14131  0043B8  6ED9               	movwf	fsr2l,c
 14132  0043BA  0E02               	movlw	high (_loRa+169)
 14133  0043BC  20F4               	addwfc	prodh,w,c
 14134  0043BE  6EDA               	movwf	fsr2h,c
 14135  0043C0  A8DF               	btfss	indf2,4,c
 14136  0043C2  D029               	goto	l13643
 14137                           
 14138                           ; BSR set to: 2
 14139  0043C4  51A7               	movf	(_loRa+167)& (0+255),w,b
 14140  0043C6  0D02               	mullw	2
 14141  0043C8  0EA9               	movlw	low (_loRa+169)
 14142  0043CA  24F3               	addwf	prodl,w,c
 14143  0043CC  6ED9               	movwf	fsr2l,c
 14144  0043CE  0E02               	movlw	high (_loRa+169)
 14145  0043D0  20F4               	addwfc	prodh,w,c
 14146  0043D2  6EDA               	movwf	fsr2h,c
 14147  0043D4  A6DF               	btfss	indf2,3,c
 14148  0043D6  D01F               	goto	l13643
 14149                           
 14150                           ; BSR set to: 2
 14151  0043D8  51A7               	movf	(_loRa+167)& (0+255),w,b
 14152  0043DA  0D02               	mullw	2
 14153  0043DC  0EA9               	movlw	low (_loRa+169)
 14154  0043DE  24F3               	addwf	prodl,w,c
 14155  0043E0  6ED9               	movwf	fsr2l,c
 14156  0043E2  0E02               	movlw	high (_loRa+169)
 14157  0043E4  20F4               	addwfc	prodh,w,c
 14158  0043E6  6EDA               	movwf	fsr2h,c
 14159  0043E8  AADF               	btfss	indf2,5,c
 14160  0043EA  D015               	goto	l13643
 14161                           
 14162                           ; BSR set to: 2
 14163                           ;lorawan_eu.c: 769: {
 14164                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 14165  0043EC  0100               	movlb	0	; () banked
 14166  0043EE  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14167  0043F0  0B07               	andlw	7
 14168  0043F2  0102               	movlb	2	; () banked
 14169  0043F4  6FEF               	movwf	(_loRa+239)& (0+255),b
 14170                           
 14171                           ; BSR set to: 2
 14172                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 14173  0043F6  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 14174  0043FA  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 14175  0043FE  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 14176  004402  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 14177  004406  0100               	movlb	0	; () banked
 14178  004408  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14179  00440A  0B0F               	andlw	15
 14180  00440C  6F68               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 14181  00440E  ECAD  F03B         	call	_UpdateReceiveWindow2Parameters	;wreg free
 14182                           
 14183                           ; BSR set to: 0
 14184                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 14185  004412  0102               	movlb	2	; () banked
 14186  004414  8F03               	bsf	(_loRa+3)& (0+255),7,b
 14187  004416                     l13643:
 14188                           
 14189                           ; BSR set to: 2
 14190                           ;lorawan_eu.c: 773: }
 14191                           ;lorawan_eu.c: 775: return ptr;
 14192  004416  C070  F070         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 14193  00441A  C071  F071         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 14194                           
 14195                           ; BSR set to: 2
 14196  00441E  0012               	return		;funcret
 14197  004420                     __end_of_ExecuteRxParamSetupReq:
 14198                           	opt stack 0
 14199                           tosu	equ	0xFFF
 14200                           tosh	equ	0xFFE
 14201                           tosl	equ	0xFFD
 14202                           pclath	equ	0xFFA
 14203                           tblptru	equ	0xFF8
 14204                           tblptrh	equ	0xFF7
 14205                           tblptrl	equ	0xFF6
 14206                           tablat	equ	0xFF5
 14207                           prodh	equ	0xFF4
 14208                           prodl	equ	0xFF3
 14209                           intcon	equ	0xFF2
 14210                           indf0	equ	0xFEF
 14211                           postinc0	equ	0xFEE
 14212                           fsr0h	equ	0xFEA
 14213                           fsr0l	equ	0xFE9
 14214                           wreg	equ	0xFE8
 14215                           postinc1	equ	0xFE6
 14216                           postdec1	equ	0xFE5
 14217                           plusw1	equ	0xFE3
 14218                           fsr1h	equ	0xFE2
 14219                           fsr1l	equ	0xFE1
 14220                           indf2	equ	0xFDF
 14221                           postinc2	equ	0xFDE
 14222                           postdec2	equ	0xFDD
 14223                           fsr2h	equ	0xFDA
 14224                           fsr2l	equ	0xFD9
 14225                           status	equ	0xFD8
 14226                           
 14227 ;; *************** function _ValidateRxOffset *****************
 14228 ;; Defined at:
 14229 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14230 ;; Parameters:    Size  Location     Type
 14231 ;;  rxOffset        1    wreg     unsigned char 
 14232 ;; Auto vars:     Size  Location     Type
 14233 ;;  rxOffset        1    4[BANK0 ] unsigned char 
 14234 ;;  result          1    5[BANK0 ] enum E17190
 14235 ;; Return value:  Size  Location     Type
 14236 ;;                  1    wreg      enum E17190
 14237 ;; Registers used:
 14238 ;;		wreg, status,2, status,0
 14239 ;; Tracked objects:
 14240 ;;		On entry : F/0
 14241 ;;		On exit  : F/0
 14242 ;;		Unchanged: 0/0
 14243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14244 ;;      Params:         0       0       0       0       0       0       0       0       0
 14245 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14246 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14247 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14248 ;;Total ram usage:        2 bytes
 14249 ;; Hardware stack levels used:    1
 14250 ;; Hardware stack levels required when called:    7
 14251 ;; This function calls:
 14252 ;;		Nothing
 14253 ;; This function is called by:
 14254 ;;		_ExecuteRxParamSetupReq
 14255 ;; This function uses a non-reentrant model
 14256 ;;
 14257                           
 14258                           	psect	text72
 14259  007786                     __ptext72:
 14260                           	opt stack 0
 14261  007786                     _ValidateRxOffset:
 14262                           	opt stack 17
 14263                           
 14264                           ; BSR set to: 2
 14265                           ;incstack = 0
 14266                           ;ValidateRxOffset@rxOffset stored from wreg
 14267  007786  6F64               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 14268                           
 14269                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 14270  007788  0100               	movlb	0	; () banked
 14271  00778A  6B65               	clrf	ValidateRxOffset@result& (0+255),b
 14272                           
 14273                           ; BSR set to: 0
 14274                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 14275  00778C  0E05               	movlw	5
 14276  00778E  6564               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 14277  007790  D002               	goto	l1242
 14278                           
 14279                           ; BSR set to: 0
 14280                           ;lorawan_eu.c: 1081: {
 14281                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 14282  007792  0E03               	movlw	3
 14283  007794  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 14284  007796                     l1242:
 14285                           
 14286                           ; BSR set to: 0
 14287                           ;lorawan_eu.c: 1083: }
 14288                           ;lorawan_eu.c: 1085: return result;
 14289  007796  5165               	movf	ValidateRxOffset@result& (0+255),w,b
 14290                           
 14291                           ; BSR set to: 0
 14292  007798  0012               	return		;funcret
 14293  00779A                     __end_of_ValidateRxOffset:
 14294                           	opt stack 0
 14295                           tosu	equ	0xFFF
 14296                           tosh	equ	0xFFE
 14297                           tosl	equ	0xFFD
 14298                           pclath	equ	0xFFA
 14299                           tblptru	equ	0xFF8
 14300                           tblptrh	equ	0xFF7
 14301                           tblptrl	equ	0xFF6
 14302                           tablat	equ	0xFF5
 14303                           prodh	equ	0xFF4
 14304                           prodl	equ	0xFF3
 14305                           intcon	equ	0xFF2
 14306                           indf0	equ	0xFEF
 14307                           postinc0	equ	0xFEE
 14308                           fsr0h	equ	0xFEA
 14309                           fsr0l	equ	0xFE9
 14310                           wreg	equ	0xFE8
 14311                           postinc1	equ	0xFE6
 14312                           postdec1	equ	0xFE5
 14313                           plusw1	equ	0xFE3
 14314                           fsr1h	equ	0xFE2
 14315                           fsr1l	equ	0xFE1
 14316                           indf2	equ	0xFDF
 14317                           postinc2	equ	0xFDE
 14318                           postdec2	equ	0xFDD
 14319                           fsr2h	equ	0xFDA
 14320                           fsr2l	equ	0xFD9
 14321                           status	equ	0xFD8
 14322                           
 14323 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 14324 ;; Defined at:
 14325 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14326 ;; Parameters:    Size  Location     Type
 14327 ;;  frequency       4    4[BANK0 ] unsigned long 
 14328 ;;  dataRate        1    8[BANK0 ] unsigned char 
 14329 ;; Auto vars:     Size  Location     Type
 14330 ;;		None
 14331 ;; Return value:  Size  Location     Type
 14332 ;;                  1    wreg      void 
 14333 ;; Registers used:
 14334 ;;		None
 14335 ;; Tracked objects:
 14336 ;;		On entry : F/0
 14337 ;;		On exit  : F/0
 14338 ;;		Unchanged: F/0
 14339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14340 ;;      Params:         0       5       0       0       0       0       0       0       0
 14341 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14342 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14343 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14344 ;;Total ram usage:        5 bytes
 14345 ;; Hardware stack levels used:    1
 14346 ;; Hardware stack levels required when called:    7
 14347 ;; This function calls:
 14348 ;;		Nothing
 14349 ;; This function is called by:
 14350 ;;		_ExecuteRxParamSetupReq
 14351 ;; This function uses a non-reentrant model
 14352 ;;
 14353                           
 14354                           	psect	text73
 14355  00775A                     __ptext73:
 14356                           	opt stack 0
 14357  00775A                     _UpdateReceiveWindow2Parameters:
 14358                           	opt stack 17
 14359                           
 14360                           ; BSR set to: 0
 14361                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 14362                           
 14363                           ; BSR set to: 0
 14364                           ;incstack = 0
 14365  00775A  C068  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 14366                           
 14367                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 14368  00775E  C064  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 14369  007762  C065  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 14370  007766  C066  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 14371  00776A  C067  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 14372                           
 14373                           ; BSR set to: 0
 14374  00776E  0012               	return		;funcret
 14375  007770                     __end_of_UpdateReceiveWindow2Parameters:
 14376                           	opt stack 0
 14377                           tosu	equ	0xFFF
 14378                           tosh	equ	0xFFE
 14379                           tosl	equ	0xFFD
 14380                           pclath	equ	0xFFA
 14381                           tblptru	equ	0xFF8
 14382                           tblptrh	equ	0xFF7
 14383                           tblptrl	equ	0xFF6
 14384                           tablat	equ	0xFF5
 14385                           prodh	equ	0xFF4
 14386                           prodl	equ	0xFF3
 14387                           intcon	equ	0xFF2
 14388                           indf0	equ	0xFEF
 14389                           postinc0	equ	0xFEE
 14390                           fsr0h	equ	0xFEA
 14391                           fsr0l	equ	0xFE9
 14392                           wreg	equ	0xFE8
 14393                           postinc1	equ	0xFE6
 14394                           postdec1	equ	0xFE5
 14395                           plusw1	equ	0xFE3
 14396                           fsr1h	equ	0xFE2
 14397                           fsr1l	equ	0xFE1
 14398                           indf2	equ	0xFDF
 14399                           postinc2	equ	0xFDE
 14400                           postdec2	equ	0xFDD
 14401                           fsr2h	equ	0xFDA
 14402                           fsr2l	equ	0xFD9
 14403                           status	equ	0xFD8
 14404                           
 14405 ;; *************** function _ExecuteNewChannel *****************
 14406 ;; Defined at:
 14407 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14408 ;; Parameters:    Size  Location     Type
 14409 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 14410 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14411 ;; Auto vars:     Size  Location     Type
 14412 ;;  frequency       4   19[BANK0 ] unsigned long 
 14413 ;;  channelIndex    1   23[BANK0 ] unsigned char 
 14414 ;;  drRange         1   18[BANK0 ] struct .
 14415 ;; Return value:  Size  Location     Type
 14416 ;;                  2   16[BANK0 ] PTR unsigned char 
 14417 ;; Registers used:
 14418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14419 ;; Tracked objects:
 14420 ;;		On entry : F/0
 14421 ;;		On exit  : F/2
 14422 ;;		Unchanged: 0/0
 14423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14424 ;;      Params:         0       2       0       0       0       0       0       0       0
 14425 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14426 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14427 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14428 ;;Total ram usage:        8 bytes
 14429 ;; Hardware stack levels used:    1
 14430 ;; Hardware stack levels required when called:    9
 14431 ;; This function calls:
 14432 ;;		_LORAWAN_SetChannelIdStatus
 14433 ;;		_UpdateChannelIdStatus
 14434 ;;		_UpdateDataRange
 14435 ;;		_UpdateDutyCycle
 14436 ;;		_UpdateFrequency
 14437 ;;		_ValidateChannelId
 14438 ;;		_ValidateDataRange
 14439 ;;		_ValidateFrequency
 14440 ;;		___lmul
 14441 ;; This function is called by:
 14442 ;;		_MacExecuteCommands
 14443 ;; This function uses a non-reentrant model
 14444 ;;
 14445                           
 14446                           	psect	text74
 14447  0033AA                     __ptext74:
 14448                           	opt stack 0
 14449  0033AA                     _ExecuteNewChannel:
 14450                           	opt stack 16
 14451                           
 14452                           ; BSR set to: 0
 14453                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 14454                           
 14455                           ; BSR set to: 0
 14456                           
 14457                           ; BSR set to: 0
 14458                           ;incstack = 0
 14459  0033AA  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14460  0033AE  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14461  0033B2  50DF               	movf	indf2,w,c
 14462  0033B4  6F77               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 14463                           
 14464                           ; BSR set to: 0
 14465  0033B6  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14466  0033B8  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14467                           
 14468                           ; BSR set to: 0
 14469                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14470  0033BA  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14471  0033BE  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14472  0033C2  0EFF               	movlw	255
 14473  0033C4  14DE               	andwf	postinc2,w,c
 14474  0033C6  6F73               	movwf	ExecuteNewChannel@frequency& (0+255),b
 14475  0033C8  0EFF               	movlw	255
 14476  0033CA  14DE               	andwf	postinc2,w,c
 14477  0033CC  6F74               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 14478  0033CE  0EFF               	movlw	255
 14479  0033D0  14DE               	andwf	postinc2,w,c
 14480  0033D2  6F75               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 14481  0033D4  0E00               	movlw	0
 14482  0033D6  14DE               	andwf	postinc2,w,c
 14483  0033D8  6F76               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 14484                           
 14485                           ; BSR set to: 0
 14486                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 14487  0033DA  C073  F064         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 14488  0033DE  C074  F065         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 14489  0033E2  C075  F066         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 14490  0033E6  C076  F067         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 14491  0033EA  0E64               	movlw	100
 14492  0033EC  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14493  0033EE  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14494  0033F0  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14495  0033F2  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14496  0033F4  ECEE  F02E         	call	___lmul	;wreg free
 14497  0033F8  C064  F073         	movff	?___lmul,ExecuteNewChannel@frequency
 14498  0033FC  C065  F074         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 14499  003400  C066  F075         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 14500  003404  C067  F076         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 14501                           
 14502                           ; BSR set to: 0
 14503                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 14504  003408  0E03               	movlw	3
 14505  00340A  2770               	addwf	ExecuteNewChannel@ptr& (0+255),f,b
 14506  00340C  0E00               	movlw	0
 14507  00340E  2371               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14508                           
 14509                           ; BSR set to: 0
 14510                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 14511  003410  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14512  003414  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14513  003418  50DF               	movf	indf2,w,c
 14514  00341A  6F72               	movwf	ExecuteNewChannel@drRange& (0+255),b
 14515                           
 14516                           ; BSR set to: 0
 14517  00341C  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14518  00341E  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14519                           
 14520                           ; BSR set to: 0
 14521                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 14522  003420  6B64               	clrf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 14523  003422  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14524  003424  ECB6  F03A         	call	_ValidateChannelId
 14525  003428  0900               	iorlw	0
 14526  00342A  E12B               	bnz	l1129
 14527                           
 14528                           ; BSR set to: 0
 14529                           ;lorawan_eu.c: 692: {
 14530                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 14531  00342C  C073  F064         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 14532  003430  C074  F065         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 14533  003434  C075  F066         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 14534  003438  C076  F067         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 14535  00343C  ECE5  F033         	call	_ValidateFrequency	;wreg free
 14536  003440  0900               	iorlw	0
 14537  003442  E005               	bz	l13581
 14538                           
 14539                           ; BSR set to: 0
 14540  003444  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14541  003446  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14542  003448  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14543  00344A  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14544  00344C  E10A               	bnz	l13583
 14545  00344E                     l13581:
 14546                           
 14547                           ; BSR set to: 0
 14548                           ;lorawan_eu.c: 694: {
 14549                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 14550  00344E  0102               	movlb	2	; () banked
 14551  003450  51A7               	movf	(_loRa+167)& (0+255),w,b
 14552  003452  0D02               	mullw	2
 14553  003454  0EA9               	movlw	low (_loRa+169)
 14554  003456  24F3               	addwf	prodl,w,c
 14555  003458  6ED9               	movwf	fsr2l,c
 14556  00345A  0E02               	movlw	high (_loRa+169)
 14557  00345C  20F4               	addwfc	prodh,w,c
 14558  00345E  6EDA               	movwf	fsr2h,c
 14559  003460  8EDF               	bsf	indf2,7,c
 14560  003462                     l13583:
 14561                           
 14562                           ;lorawan_eu.c: 696: }
 14563                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 14564  003462  0100               	movlb	0	; () banked
 14565  003464  5172               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 14566  003466  EC6B  F038         	call	_ValidateDataRange
 14567  00346A  0900               	iorlw	0
 14568  00346C  E10A               	bnz	l1129
 14569                           
 14570                           ; BSR set to: 0
 14571                           ;lorawan_eu.c: 699: {
 14572                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 14573  00346E  0102               	movlb	2	; () banked
 14574  003470  51A7               	movf	(_loRa+167)& (0+255),w,b
 14575  003472  0D02               	mullw	2
 14576  003474  0EA9               	movlw	low (_loRa+169)
 14577  003476  24F3               	addwf	prodl,w,c
 14578  003478  6ED9               	movwf	fsr2l,c
 14579  00347A  0E02               	movlw	high (_loRa+169)
 14580  00347C  20F4               	addwfc	prodh,w,c
 14581  00347E  6EDA               	movwf	fsr2h,c
 14582  003480  8CDF               	bsf	indf2,6,c
 14583  003482                     l1129:
 14584                           
 14585                           ;lorawan_eu.c: 701: }
 14586                           ;lorawan_eu.c: 702: }
 14587                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 14588  003482  0102               	movlb	2	; () banked
 14589  003484  51A7               	movf	(_loRa+167)& (0+255),w,b
 14590  003486  0D02               	mullw	2
 14591  003488  0EA9               	movlw	low (_loRa+169)
 14592  00348A  24F3               	addwf	prodl,w,c
 14593  00348C  6ED9               	movwf	fsr2l,c
 14594  00348E  0E02               	movlw	high (_loRa+169)
 14595  003490  20F4               	addwfc	prodh,w,c
 14596  003492  6EDA               	movwf	fsr2h,c
 14597  003494  AEDF               	btfss	indf2,7,c
 14598  003496  D065               	goto	l13605
 14599                           
 14600                           ; BSR set to: 2
 14601  003498  51A7               	movf	(_loRa+167)& (0+255),w,b
 14602  00349A  0D02               	mullw	2
 14603  00349C  0EA9               	movlw	low (_loRa+169)
 14604  00349E  24F3               	addwf	prodl,w,c
 14605  0034A0  6ED9               	movwf	fsr2l,c
 14606  0034A2  0E02               	movlw	high (_loRa+169)
 14607  0034A4  20F4               	addwfc	prodh,w,c
 14608  0034A6  6EDA               	movwf	fsr2h,c
 14609  0034A8  ACDF               	btfss	indf2,6,c
 14610  0034AA  D05B               	goto	l13605
 14611                           
 14612                           ; BSR set to: 2
 14613                           ;lorawan_eu.c: 705: {
 14614                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 14615  0034AC  0E10               	movlw	16
 14616  0034AE  61DA               	cpfslt	(_loRa+218)& (0+255),b
 14617  0034B0  D029               	goto	l13597
 14618                           
 14619                           ; BSR set to: 2
 14620                           ;lorawan_eu.c: 707: {
 14621                           ;lorawan_eu.c: 708: if (frequency != 0)
 14622  0034B2  0100               	movlb	0	; () banked
 14623  0034B4  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14624  0034B6  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14625  0034B8  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14626  0034BA  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14627  0034BC  E01E               	bz	l13595
 14628                           
 14629                           ; BSR set to: 0
 14630                           ;lorawan_eu.c: 709: {
 14631                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 14632  0034BE  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14633  0034C2  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14634  0034C6  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14635  0034CA  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14636  0034CE  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14637  0034D0  ECFB  F037         	call	_UpdateFrequency
 14638                           
 14639                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 14640  0034D4  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14641  0034D8  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14642  0034DA  EC5B  F025         	call	_UpdateDataRange
 14643                           
 14644                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 14645  0034DE  0E01               	movlw	1
 14646  0034E0  0100               	movlb	0	; () banked
 14647  0034E2  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14648  0034E4  0E2E               	movlw	46
 14649  0034E6  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14650  0034E8  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14651  0034EA  EC9F  F038         	call	_UpdateDutyCycle
 14652                           
 14653                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 14654  0034EE  0E01               	movlw	1
 14655  0034F0  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14656  0034F2  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14657  0034F4  ECD9  F023         	call	_UpdateChannelIdStatus
 14658                           
 14659                           ;lorawan_eu.c: 714: }
 14660  0034F8  D032               	goto	l13603
 14661  0034FA                     l13595:
 14662                           
 14663                           ; BSR set to: 0
 14664                           ;lorawan_eu.c: 715: else
 14665                           ;lorawan_eu.c: 716: {
 14666                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 14667  0034FA  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14668  0034FC  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14669  0034FE  EC18  F038         	call	_LORAWAN_SetChannelIdStatus
 14670  003502  D02D               	goto	l13603
 14671  003504                     l13597:
 14672                           
 14673                           ; BSR set to: 2
 14674                           ;lorawan_eu.c: 720: else
 14675                           ;lorawan_eu.c: 721: {
 14676                           ;lorawan_eu.c: 722: if (frequency != 0)
 14677  003504  0100               	movlb	0	; () banked
 14678  003506  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14679  003508  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14680  00350A  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14681  00350C  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14682  00350E  E022               	bz	l13601
 14683                           
 14684                           ; BSR set to: 0
 14685                           ;lorawan_eu.c: 723: {
 14686                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 14687  003510  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14688  003514  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14689  003518  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14690  00351C  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14691  003520  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14692  003522  0F10               	addlw	16
 14693  003524  ECFB  F037         	call	_UpdateFrequency
 14694                           
 14695                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 14696  003528  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14697  00352C  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14698  00352E  0F10               	addlw	16
 14699  003530  EC5B  F025         	call	_UpdateDataRange
 14700                           
 14701                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 14702  003534  0E01               	movlw	1
 14703  003536  0100               	movlb	0	; () banked
 14704  003538  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14705  00353A  0E2E               	movlw	46
 14706  00353C  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14707  00353E  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14708  003540  0F10               	addlw	16
 14709  003542  EC9F  F038         	call	_UpdateDutyCycle
 14710                           
 14711                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 14712  003546  0E01               	movlw	1
 14713  003548  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14714  00354A  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14715  00354C  0F10               	addlw	16
 14716  00354E  ECD9  F023         	call	_UpdateChannelIdStatus
 14717                           
 14718                           ;lorawan_eu.c: 728: }
 14719  003552  D005               	goto	l13603
 14720  003554                     l13601:
 14721                           
 14722                           ; BSR set to: 0
 14723                           ;lorawan_eu.c: 729: else
 14724                           ;lorawan_eu.c: 730: {
 14725                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 14726  003554  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14727  003556  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14728  003558  0F10               	addlw	16
 14729  00355A  EC18  F038         	call	_LORAWAN_SetChannelIdStatus
 14730  00355E                     l13603:
 14731                           
 14732                           ;lorawan_eu.c: 732: }
 14733                           ;lorawan_eu.c: 733: }
 14734                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 14735  00355E  0102               	movlb	2	; () banked
 14736  003560  8703               	bsf	(_loRa+3)& (0+255),3,b
 14737  003562                     l13605:
 14738                           
 14739                           ; BSR set to: 2
 14740                           ;lorawan_eu.c: 736: }
 14741                           ;lorawan_eu.c: 737: return ptr;
 14742  003562  C070  F070         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 14743  003566  C071  F071         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 14744                           
 14745                           ; BSR set to: 2
 14746  00356A  0012               	return		;funcret
 14747  00356C                     __end_of_ExecuteNewChannel:
 14748                           	opt stack 0
 14749                           tosu	equ	0xFFF
 14750                           tosh	equ	0xFFE
 14751                           tosl	equ	0xFFD
 14752                           pclath	equ	0xFFA
 14753                           tblptru	equ	0xFF8
 14754                           tblptrh	equ	0xFF7
 14755                           tblptrl	equ	0xFF6
 14756                           tablat	equ	0xFF5
 14757                           prodh	equ	0xFF4
 14758                           prodl	equ	0xFF3
 14759                           intcon	equ	0xFF2
 14760                           indf0	equ	0xFEF
 14761                           postinc0	equ	0xFEE
 14762                           fsr0h	equ	0xFEA
 14763                           fsr0l	equ	0xFE9
 14764                           wreg	equ	0xFE8
 14765                           postinc1	equ	0xFE6
 14766                           postdec1	equ	0xFE5
 14767                           plusw1	equ	0xFE3
 14768                           fsr1h	equ	0xFE2
 14769                           fsr1l	equ	0xFE1
 14770                           indf2	equ	0xFDF
 14771                           postinc2	equ	0xFDE
 14772                           postdec2	equ	0xFDD
 14773                           fsr2h	equ	0xFDA
 14774                           fsr2l	equ	0xFD9
 14775                           status	equ	0xFD8
 14776                           
 14777 ;; *************** function _ValidateFrequency *****************
 14778 ;; Defined at:
 14779 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14780 ;; Parameters:    Size  Location     Type
 14781 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 14782 ;; Auto vars:     Size  Location     Type
 14783 ;;  result          1    8[BANK0 ] enum E17190
 14784 ;; Return value:  Size  Location     Type
 14785 ;;                  1    wreg      enum E17190
 14786 ;; Registers used:
 14787 ;;		wreg, status,2, status,0
 14788 ;; Tracked objects:
 14789 ;;		On entry : F/0
 14790 ;;		On exit  : F/0
 14791 ;;		Unchanged: 0/0
 14792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14793 ;;      Params:         0       4       0       0       0       0       0       0       0
 14794 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14795 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14796 ;;      Totals:         0       5       0       0       0       0       0       0       0
 14797 ;;Total ram usage:        5 bytes
 14798 ;; Hardware stack levels used:    1
 14799 ;; Hardware stack levels required when called:    7
 14800 ;; This function calls:
 14801 ;;		Nothing
 14802 ;; This function is called by:
 14803 ;;		_ExecuteNewChannel
 14804 ;;		_ExecuteRxParamSetupReq
 14805 ;;		_UpdateCfList
 14806 ;; This function uses a non-reentrant model
 14807 ;;
 14808                           
 14809                           	psect	text75
 14810  0067CA                     __ptext75:
 14811                           	opt stack 0
 14812  0067CA                     _ValidateFrequency:
 14813                           	opt stack 18
 14814                           
 14815                           ; BSR set to: 0
 14816                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 14817                           
 14818                           ; BSR set to: 2
 14819                           ;incstack = 0
 14820  0067CA  6B68               	clrf	ValidateFrequency@result& (0+255),b
 14821                           
 14822                           ; BSR set to: 0
 14823                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 14824  0067CC  0102               	movlb	2	; () banked
 14825  0067CE  51A4               	movf	(_loRa+164)& (0+255),w,b
 14826  0067D0  E116               	bnz	l12851
 14827                           
 14828                           ; BSR set to: 2
 14829                           ;lorawan_eu.c: 1093: {
 14830                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 14831  0067D2  0E81               	movlw	129
 14832  0067D4  0100               	movlb	0	; () banked
 14833  0067D6  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14834  0067D8  0E25               	movlw	37
 14835  0067DA  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14836  0067DC  0EDB               	movlw	219
 14837  0067DE  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14838  0067E0  0E33               	movlw	51
 14839  0067E2  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14840  0067E4  E209               	bc	l12849
 14841                           
 14842                           ; BSR set to: 0
 14843  0067E6  0EC0               	movlw	192
 14844  0067E8  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14845  0067EA  0E55               	movlw	85
 14846  0067EC  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14847  0067EE  0E70               	movlw	112
 14848  0067F0  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14849  0067F2  0E33               	movlw	51
 14850  0067F4  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14851  0067F6  E215               	bc	l1250
 14852  0067F8                     l12849:
 14853                           
 14854                           ; BSR set to: 0
 14855                           ;lorawan_eu.c: 1095: {
 14856                           ;lorawan_eu.c: 1096: result = INVALID_PARAMETER ;
 14857  0067F8  0E03               	movlw	3
 14858  0067FA  6F68               	movwf	ValidateFrequency@result& (0+255),b
 14859  0067FC  D012               	goto	l1250
 14860  0067FE                     l12851:
 14861                           
 14862                           ; BSR set to: 2
 14863                           ;lorawan_eu.c: 1099: else
 14864                           ;lorawan_eu.c: 1100: {
 14865                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 14866  0067FE  0E71               	movlw	113
 14867  006800  0100               	movlb	0	; () banked
 14868  006802  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14869  006804  0E5E               	movlw	94
 14870  006806  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14871  006808  0EEA               	movlw	234
 14872  00680A  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14873  00680C  0E19               	movlw	25
 14874  00680E  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14875  006810  E2F3               	bc	l12849
 14876                           
 14877                           ; BSR set to: 0
 14878  006812  0E90               	movlw	144
 14879  006814  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14880  006816  0ED1               	movlw	209
 14881  006818  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14882  00681A  0ECF               	movlw	207
 14883  00681C  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14884  00681E  0E19               	movlw	25
 14885  006820  D7E9               	goto	L7
 14886  006822                     l1250:
 14887                           
 14888                           ; BSR set to: 0
 14889                           ;lorawan_eu.c: 1104: }
 14890                           ;lorawan_eu.c: 1105: }
 14891                           ;lorawan_eu.c: 1107: return result;
 14892  006822  5168               	movf	ValidateFrequency@result& (0+255),w,b
 14893                           
 14894                           ; BSR set to: 0
 14895  006824  0012               	return		;funcret
 14896  006826                     __end_of_ValidateFrequency:
 14897                           	opt stack 0
 14898                           tosu	equ	0xFFF
 14899                           tosh	equ	0xFFE
 14900                           tosl	equ	0xFFD
 14901                           pclath	equ	0xFFA
 14902                           tblptru	equ	0xFF8
 14903                           tblptrh	equ	0xFF7
 14904                           tblptrl	equ	0xFF6
 14905                           tablat	equ	0xFF5
 14906                           prodh	equ	0xFF4
 14907                           prodl	equ	0xFF3
 14908                           intcon	equ	0xFF2
 14909                           indf0	equ	0xFEF
 14910                           postinc0	equ	0xFEE
 14911                           fsr0h	equ	0xFEA
 14912                           fsr0l	equ	0xFE9
 14913                           wreg	equ	0xFE8
 14914                           postinc1	equ	0xFE6
 14915                           postdec1	equ	0xFE5
 14916                           plusw1	equ	0xFE3
 14917                           fsr1h	equ	0xFE2
 14918                           fsr1l	equ	0xFE1
 14919                           indf2	equ	0xFDF
 14920                           postinc2	equ	0xFDE
 14921                           postdec2	equ	0xFDD
 14922                           fsr2h	equ	0xFDA
 14923                           fsr2l	equ	0xFD9
 14924                           status	equ	0xFD8
 14925                           
 14926 ;; *************** function _ValidateDataRange *****************
 14927 ;; Defined at:
 14928 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14929 ;; Parameters:    Size  Location     Type
 14930 ;;  dataRangeNew    1    wreg     unsigned char 
 14931 ;; Auto vars:     Size  Location     Type
 14932 ;;  dataRangeNew    1    7[BANK0 ] unsigned char 
 14933 ;;  dataRateMin     1    9[BANK0 ] unsigned char 
 14934 ;;  dataRateMax     1    8[BANK0 ] unsigned char 
 14935 ;;  result          1    6[BANK0 ] enum E17190
 14936 ;; Return value:  Size  Location     Type
 14937 ;;                  1    wreg      enum E17190
 14938 ;; Registers used:
 14939 ;;		wreg, status,2, status,0, cstack
 14940 ;; Tracked objects:
 14941 ;;		On entry : F/0
 14942 ;;		On exit  : F/0
 14943 ;;		Unchanged: 0/0
 14944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14945 ;;      Params:         0       0       0       0       0       0       0       0       0
 14946 ;;      Locals:         0       4       0       0       0       0       0       0       0
 14947 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14948 ;;      Totals:         0       4       0       0       0       0       0       0       0
 14949 ;;Total ram usage:        4 bytes
 14950 ;; Hardware stack levels used:    1
 14951 ;; Hardware stack levels required when called:    8
 14952 ;; This function calls:
 14953 ;;		_ValidateDataRate
 14954 ;; This function is called by:
 14955 ;;		_ExecuteNewChannel
 14956 ;; This function uses a non-reentrant model
 14957 ;;
 14958                           
 14959                           	psect	text76
 14960  0070D6                     __ptext76:
 14961                           	opt stack 0
 14962  0070D6                     _ValidateDataRange:
 14963                           	opt stack 16
 14964                           
 14965                           ; BSR set to: 0
 14966                           ;incstack = 0
 14967                           ;ValidateDataRange@dataRangeNew stored from wreg
 14968  0070D6  6F67               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 14969                           
 14970                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 14971  0070D8  0100               	movlb	0	; () banked
 14972  0070DA  6B66               	clrf	ValidateDataRange@result& (0+255),b
 14973                           
 14974                           ; BSR set to: 0
 14975                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 14976                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 14977  0070DC  5167               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 14978  0070DE  0B0F               	andlw	15
 14979  0070E0  6F69               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 14980                           
 14981                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 14982  0070E2  3967               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 14983  0070E4  0B0F               	andlw	15
 14984  0070E6  6F68               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 14985                           
 14986                           ; BSR set to: 0
 14987                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 14988  0070E8  5168               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 14989  0070EA  ECCD  F03B         	call	_ValidateDataRate
 14990  0070EE  0900               	iorlw	0
 14991  0070F0  E108               	bnz	l12871
 14992                           
 14993                           ; BSR set to: 0
 14994  0070F2  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 14995  0070F4  ECCD  F03B         	call	_ValidateDataRate
 14996  0070F8  0900               	iorlw	0
 14997  0070FA  E103               	bnz	l12871
 14998                           
 14999                           ; BSR set to: 0
 15000  0070FC  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15001  0070FE  5D68               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15002  007100  E202               	bc	l1257
 15003  007102                     l12871:
 15004                           
 15005                           ; BSR set to: 0
 15006                           ;lorawan_eu.c: 1119: {
 15007                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 15008  007102  0E03               	movlw	3
 15009  007104  6F66               	movwf	ValidateDataRange@result& (0+255),b
 15010  007106                     l1257:
 15011                           
 15012                           ; BSR set to: 0
 15013                           ;lorawan_eu.c: 1121: }
 15014                           ;lorawan_eu.c: 1122: return result;
 15015  007106  5166               	movf	ValidateDataRange@result& (0+255),w,b
 15016                           
 15017                           ; BSR set to: 0
 15018  007108  0012               	return		;funcret
 15019  00710A                     __end_of_ValidateDataRange:
 15020                           	opt stack 0
 15021                           tosu	equ	0xFFF
 15022                           tosh	equ	0xFFE
 15023                           tosl	equ	0xFFD
 15024                           pclath	equ	0xFFA
 15025                           tblptru	equ	0xFF8
 15026                           tblptrh	equ	0xFF7
 15027                           tblptrl	equ	0xFF6
 15028                           tablat	equ	0xFF5
 15029                           prodh	equ	0xFF4
 15030                           prodl	equ	0xFF3
 15031                           intcon	equ	0xFF2
 15032                           indf0	equ	0xFEF
 15033                           postinc0	equ	0xFEE
 15034                           fsr0h	equ	0xFEA
 15035                           fsr0l	equ	0xFE9
 15036                           wreg	equ	0xFE8
 15037                           postinc1	equ	0xFE6
 15038                           postdec1	equ	0xFE5
 15039                           plusw1	equ	0xFE3
 15040                           fsr1h	equ	0xFE2
 15041                           fsr1l	equ	0xFE1
 15042                           indf2	equ	0xFDF
 15043                           postinc2	equ	0xFDE
 15044                           postdec2	equ	0xFDD
 15045                           fsr2h	equ	0xFDA
 15046                           fsr2l	equ	0xFD9
 15047                           status	equ	0xFD8
 15048                           
 15049 ;; *************** function _UpdateFrequency *****************
 15050 ;; Defined at:
 15051 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15052 ;; Parameters:    Size  Location     Type
 15053 ;;  channelId       1    wreg     unsigned char 
 15054 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;  channelId       1    8[BANK0 ] unsigned char 
 15057 ;; Return value:  Size  Location     Type
 15058 ;;                  1    wreg      void 
 15059 ;; Registers used:
 15060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15061 ;; Tracked objects:
 15062 ;;		On entry : F/0
 15063 ;;		On exit  : F/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15066 ;;      Params:         0       4       0       0       0       0       0       0       0
 15067 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15068 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15069 ;;      Totals:         0       5       0       0       0       0       0       0       0
 15070 ;;Total ram usage:        5 bytes
 15071 ;; Hardware stack levels used:    1
 15072 ;; Hardware stack levels required when called:    7
 15073 ;; This function calls:
 15074 ;;		Nothing
 15075 ;; This function is called by:
 15076 ;;		_ExecuteNewChannel
 15077 ;; This function uses a non-reentrant model
 15078 ;;
 15079                           
 15080                           	psect	text77
 15081  006FF6                     __ptext77:
 15082                           	opt stack 0
 15083  006FF6                     _UpdateFrequency:
 15084                           	opt stack 17
 15085                           
 15086                           ; BSR set to: 0
 15087                           ;incstack = 0
 15088                           ;UpdateFrequency@channelId stored from wreg
 15089  006FF6  6F68               	movwf	UpdateFrequency@channelId& (0+255),b
 15090                           
 15091                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 15092  006FF8  0100               	movlb	0	; () banked
 15093  006FFA  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15094  006FFC  0D0E               	mullw	14
 15095  006FFE  0E00               	movlw	low _Channels
 15096  007000  24F3               	addwf	prodl,w,c
 15097  007002  6ED9               	movwf	fsr2l,c
 15098  007004  0E04               	movlw	high _Channels
 15099  007006  20F4               	addwfc	prodh,w,c
 15100  007008  6EDA               	movwf	fsr2h,c
 15101  00700A  C064  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 15102  00700E  C065  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 15103  007012  C066  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 15104  007016  C067  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 15105                           
 15106                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 15107  00701A  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15108  00701C  0D0E               	mullw	14
 15109  00701E  0E0D               	movlw	low (_Channels+13)
 15110  007020  24F3               	addwf	prodl,w,c
 15111  007022  6ED9               	movwf	fsr2l,c
 15112  007024  0E04               	movlw	high (_Channels+13)
 15113  007026  20F4               	addwfc	prodh,w,c
 15114  007028  6EDA               	movwf	fsr2h,c
 15115  00702A  0E00               	movlw	0
 15116  00702C  80DB               	bsf	plusw2,0,c
 15117                           
 15118                           ; BSR set to: 0
 15119  00702E  0C00               	retlw	0	;funcret
 15120  007030                     __end_of_UpdateFrequency:
 15121                           	opt stack 0
 15122                           tosu	equ	0xFFF
 15123                           tosh	equ	0xFFE
 15124                           tosl	equ	0xFFD
 15125                           pclath	equ	0xFFA
 15126                           tblptru	equ	0xFF8
 15127                           tblptrh	equ	0xFF7
 15128                           tblptrl	equ	0xFF6
 15129                           tablat	equ	0xFF5
 15130                           prodh	equ	0xFF4
 15131                           prodl	equ	0xFF3
 15132                           intcon	equ	0xFF2
 15133                           indf0	equ	0xFEF
 15134                           postinc0	equ	0xFEE
 15135                           fsr0h	equ	0xFEA
 15136                           fsr0l	equ	0xFE9
 15137                           wreg	equ	0xFE8
 15138                           postinc1	equ	0xFE6
 15139                           postdec1	equ	0xFE5
 15140                           plusw1	equ	0xFE3
 15141                           fsr1h	equ	0xFE2
 15142                           fsr1l	equ	0xFE1
 15143                           indf2	equ	0xFDF
 15144                           postinc2	equ	0xFDE
 15145                           postdec2	equ	0xFDD
 15146                           plusw2	equ	0xFDB
 15147                           fsr2h	equ	0xFDA
 15148                           fsr2l	equ	0xFD9
 15149                           status	equ	0xFD8
 15150                           
 15151 ;; *************** function _UpdateDutyCycle *****************
 15152 ;; Defined at:
 15153 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15154 ;; Parameters:    Size  Location     Type
 15155 ;;  channelId       1    wreg     unsigned char 
 15156 ;;  dutyCycleNew    2    4[BANK0 ] unsigned int 
 15157 ;; Auto vars:     Size  Location     Type
 15158 ;;  channelId       1    6[BANK0 ] unsigned char 
 15159 ;; Return value:  Size  Location     Type
 15160 ;;                  1    wreg      void 
 15161 ;; Registers used:
 15162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15163 ;; Tracked objects:
 15164 ;;		On entry : F/0
 15165 ;;		On exit  : F/0
 15166 ;;		Unchanged: 0/0
 15167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15168 ;;      Params:         0       2       0       0       0       0       0       0       0
 15169 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15170 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15171 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15172 ;;Total ram usage:        3 bytes
 15173 ;; Hardware stack levels used:    1
 15174 ;; Hardware stack levels required when called:    7
 15175 ;; This function calls:
 15176 ;;		Nothing
 15177 ;; This function is called by:
 15178 ;;		_ExecuteNewChannel
 15179 ;; This function uses a non-reentrant model
 15180 ;;
 15181                           
 15182                           	psect	text78
 15183  00713E                     __ptext78:
 15184                           	opt stack 0
 15185  00713E                     _UpdateDutyCycle:
 15186                           	opt stack 17
 15187                           
 15188                           ; BSR set to: 0
 15189                           ;incstack = 0
 15190                           ;UpdateDutyCycle@channelId stored from wreg
 15191  00713E  6F66               	movwf	UpdateDutyCycle@channelId& (0+255),b
 15192                           
 15193                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 15194  007140  0100               	movlb	0	; () banked
 15195  007142  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15196  007144  0D0E               	mullw	14
 15197  007146  0E06               	movlw	low (_Channels+6)
 15198  007148  24F3               	addwf	prodl,w,c
 15199  00714A  6ED9               	movwf	fsr2l,c
 15200  00714C  0E04               	movlw	high (_Channels+6)
 15201  00714E  20F4               	addwfc	prodh,w,c
 15202  007150  6EDA               	movwf	fsr2h,c
 15203  007152  C064  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 15204  007156  C065  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 15205                           
 15206                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 15207  00715A  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15208  00715C  0D0E               	mullw	14
 15209  00715E  0E0D               	movlw	low (_Channels+13)
 15210  007160  24F3               	addwf	prodl,w,c
 15211  007162  6ED9               	movwf	fsr2l,c
 15212  007164  0E04               	movlw	high (_Channels+13)
 15213  007166  20F4               	addwfc	prodh,w,c
 15214  007168  6EDA               	movwf	fsr2h,c
 15215  00716A  0E00               	movlw	0
 15216  00716C  84DB               	bsf	plusw2,2,c
 15217                           
 15218                           ; BSR set to: 0
 15219  00716E  0C00               	retlw	0	;funcret
 15220  007170                     __end_of_UpdateDutyCycle:
 15221                           	opt stack 0
 15222                           tosu	equ	0xFFF
 15223                           tosh	equ	0xFFE
 15224                           tosl	equ	0xFFD
 15225                           pclath	equ	0xFFA
 15226                           tblptru	equ	0xFF8
 15227                           tblptrh	equ	0xFF7
 15228                           tblptrl	equ	0xFF6
 15229                           tablat	equ	0xFF5
 15230                           prodh	equ	0xFF4
 15231                           prodl	equ	0xFF3
 15232                           intcon	equ	0xFF2
 15233                           indf0	equ	0xFEF
 15234                           postinc0	equ	0xFEE
 15235                           fsr0h	equ	0xFEA
 15236                           fsr0l	equ	0xFE9
 15237                           wreg	equ	0xFE8
 15238                           postinc1	equ	0xFE6
 15239                           postdec1	equ	0xFE5
 15240                           plusw1	equ	0xFE3
 15241                           fsr1h	equ	0xFE2
 15242                           fsr1l	equ	0xFE1
 15243                           indf2	equ	0xFDF
 15244                           postinc2	equ	0xFDE
 15245                           postdec2	equ	0xFDD
 15246                           plusw2	equ	0xFDB
 15247                           fsr2h	equ	0xFDA
 15248                           fsr2l	equ	0xFD9
 15249                           status	equ	0xFD8
 15250                           
 15251 ;; *************** function _UpdateDataRange *****************
 15252 ;; Defined at:
 15253 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15254 ;; Parameters:    Size  Location     Type
 15255 ;;  channelId       1    wreg     unsigned char 
 15256 ;;  dataRangeNew    1    4[BANK0 ] unsigned char 
 15257 ;; Auto vars:     Size  Location     Type
 15258 ;;  channelId       1    6[BANK0 ] unsigned char 
 15259 ;;  i               1    7[BANK0 ] unsigned char 
 15260 ;; Return value:  Size  Location     Type
 15261 ;;                  1    wreg      void 
 15262 ;; Registers used:
 15263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15264 ;; Tracked objects:
 15265 ;;		On entry : F/0
 15266 ;;		On exit  : F/2
 15267 ;;		Unchanged: 0/0
 15268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15269 ;;      Params:         0       1       0       0       0       0       0       0       0
 15270 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15271 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15272 ;;      Totals:         0       4       0       0       0       0       0       0       0
 15273 ;;Total ram usage:        4 bytes
 15274 ;; Hardware stack levels used:    1
 15275 ;; Hardware stack levels required when called:    7
 15276 ;; This function calls:
 15277 ;;		Nothing
 15278 ;; This function is called by:
 15279 ;;		_ExecuteNewChannel
 15280 ;; This function uses a non-reentrant model
 15281 ;;
 15282                           
 15283                           	psect	text79
 15284  004AB6                     __ptext79:
 15285                           	opt stack 0
 15286  004AB6                     _UpdateDataRange:
 15287                           	opt stack 17
 15288                           
 15289                           ; BSR set to: 0
 15290                           ;incstack = 0
 15291                           ;UpdateDataRange@channelId stored from wreg
 15292  004AB6  6F66               	movwf	UpdateDataRange@channelId& (0+255),b
 15293                           
 15294                           ;lorawan_eu.c: 1011: uint8_t i;
 15295                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 15296  004AB8  0E07               	movlw	7
 15297  004ABA  0102               	movlb	2	; () banked
 15298  004ABC  6FEB               	movwf	(_loRa+235)& (0+255),b
 15299                           
 15300                           ; BSR set to: 2
 15301                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 15302  004ABE  6BEC               	clrf	(_loRa+236)& (0+255),b
 15303                           
 15304                           ; BSR set to: 2
 15305                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 15306  004AC0  0100               	movlb	0	; () banked
 15307  004AC2  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15308  004AC4  0D0E               	mullw	14
 15309  004AC6  0E05               	movlw	low (_Channels+5)
 15310  004AC8  24F3               	addwf	prodl,w,c
 15311  004ACA  6ED9               	movwf	fsr2l,c
 15312  004ACC  0E04               	movlw	high (_Channels+5)
 15313  004ACE  20F4               	addwfc	prodh,w,c
 15314  004AD0  6EDA               	movwf	fsr2h,c
 15315  004AD2  C064  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 15319  004AD6  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15320  004AD8  0D0E               	mullw	14
 15321  004ADA  0E0D               	movlw	low (_Channels+13)
 15322  004ADC  24F3               	addwf	prodl,w,c
 15323  004ADE  6ED9               	movwf	fsr2l,c
 15324  004AE0  0E04               	movlw	high (_Channels+13)
 15325  004AE2  20F4               	addwfc	prodh,w,c
 15326  004AE4  6EDA               	movwf	fsr2h,c
 15327  004AE6  0E00               	movlw	0
 15328  004AE8  82DB               	bsf	plusw2,1,c
 15329                           
 15330                           ; BSR set to: 0
 15331                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 15332  004AEA  6B67               	clrf	UpdateDataRange@i& (0+255),b
 15333  004AEC  D04E               	goto	l12897
 15334  004AEE                     l12885:
 15335                           
 15336                           ; BSR set to: 0
 15337                           ;lorawan_eu.c: 1020: {
 15338                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 15339  004AEE  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15340  004AF0  0D0E               	mullw	14
 15341  004AF2  0E05               	movlw	low (_Channels+5)
 15342  004AF4  24F3               	addwf	prodl,w,c
 15343  004AF6  6ED9               	movwf	fsr2l,c
 15344  004AF8  0E04               	movlw	high (_Channels+5)
 15345  004AFA  20F4               	addwfc	prodh,w,c
 15346  004AFC  6EDA               	movwf	fsr2h,c
 15347  004AFE  50DF               	movf	223,w,c
 15348  004B00  0B0F               	andlw	15
 15349  004B02  0100               	movlb	0	; () banked
 15350  004B04  6F65               	movwf	??_UpdateDataRange& (0+255),b
 15351  004B06  0102               	movlb	2	; () banked
 15352  004B08  51EB               	movf	(_loRa+235)& (0+255),w,b
 15353  004B0A  0100               	movlb	0	; () banked
 15354  004B0C  5D65               	subwf	??_UpdateDataRange& (0+255),w,b
 15355  004B0E  E216               	bc	l1223
 15356                           
 15357                           ; BSR set to: 0
 15358  004B10  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15359  004B12  0D0E               	mullw	14
 15360  004B14  0E04               	movlw	low (_Channels+4)
 15361  004B16  24F3               	addwf	prodl,w,c
 15362  004B18  6ED9               	movwf	fsr2l,c
 15363  004B1A  0E04               	movlw	high (_Channels+4)
 15364  004B1C  20F4               	addwfc	prodh,w,c
 15365  004B1E  6EDA               	movwf	fsr2h,c
 15366  004B20  04DE               	decf	postinc2,w,c
 15367  004B22  E10C               	bnz	l1223
 15368                           
 15369                           ; BSR set to: 0
 15370                           ;lorawan_eu.c: 1022: {
 15371                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 15372  004B24  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15373  004B26  0D0E               	mullw	14
 15374  004B28  0E05               	movlw	low (_Channels+5)
 15375  004B2A  24F3               	addwf	prodl,w,c
 15376  004B2C  6ED9               	movwf	fsr2l,c
 15377  004B2E  0E04               	movlw	high (_Channels+5)
 15378  004B30  20F4               	addwfc	prodh,w,c
 15379  004B32  6EDA               	movwf	fsr2h,c
 15380  004B34  50DF               	movf	223,w,c
 15381  004B36  0B0F               	andlw	15
 15382  004B38  0102               	movlb	2	; () banked
 15383  004B3A  6FEB               	movwf	(_loRa+235)& (0+255),b
 15384  004B3C                     l1223:
 15385                           
 15386                           ;lorawan_eu.c: 1024: }
 15387                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 15388  004B3C  0100               	movlb	0	; () banked
 15389  004B3E  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15390  004B40  0D0E               	mullw	14
 15391  004B42  0E05               	movlw	low (_Channels+5)
 15392  004B44  24F3               	addwf	prodl,w,c
 15393  004B46  6ED9               	movwf	fsr2l,c
 15394  004B48  0E04               	movlw	high (_Channels+5)
 15395  004B4A  20F4               	addwfc	prodh,w,c
 15396  004B4C  6EDA               	movwf	fsr2h,c
 15397  004B4E  38DF               	swapf	223,w,c
 15398  004B50  0B0F               	andlw	15
 15399  004B52  0102               	movlb	2	; () banked
 15400  004B54  61EC               	cpfslt	(_loRa+236)& (0+255),b
 15401  004B56  D017               	goto	l12895
 15402                           
 15403                           ; BSR set to: 2
 15404  004B58  0100               	movlb	0	; () banked
 15405  004B5A  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15406  004B5C  0D0E               	mullw	14
 15407  004B5E  0E04               	movlw	low (_Channels+4)
 15408  004B60  24F3               	addwf	prodl,w,c
 15409  004B62  6ED9               	movwf	fsr2l,c
 15410  004B64  0E04               	movlw	high (_Channels+4)
 15411  004B66  20F4               	addwfc	prodh,w,c
 15412  004B68  6EDA               	movwf	fsr2h,c
 15413  004B6A  04DE               	decf	postinc2,w,c
 15414  004B6C  E10C               	bnz	l12895
 15415                           
 15416                           ; BSR set to: 0
 15417                           ;lorawan_eu.c: 1026: {
 15418                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 15419  004B6E  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15420  004B70  0D0E               	mullw	14
 15421  004B72  0E05               	movlw	low (_Channels+5)
 15422  004B74  24F3               	addwf	prodl,w,c
 15423  004B76  6ED9               	movwf	fsr2l,c
 15424  004B78  0E04               	movlw	high (_Channels+5)
 15425  004B7A  20F4               	addwfc	prodh,w,c
 15426  004B7C  6EDA               	movwf	fsr2h,c
 15427  004B7E  38DF               	swapf	223,w,c
 15428  004B80  0B0F               	andlw	15
 15429  004B82  0102               	movlb	2	; () banked
 15430  004B84  6FEC               	movwf	(_loRa+236)& (0+255),b
 15431  004B86                     l12895:
 15432  004B86  0100               	movlb	0	; () banked
 15433  004B88  2B67               	incf	UpdateDataRange@i& (0+255),f,b
 15434  004B8A                     l12897:
 15435                           
 15436                           ; BSR set to: 0
 15437  004B8A  0102               	movlb	2	; () banked
 15438  004B8C  51ED               	movf	(_loRa+237)& (0+255),w,b
 15439  004B8E  0100               	movlb	0	; () banked
 15440  004B90  5D67               	subwf	UpdateDataRange@i& (0+255),w,b
 15441  004B92  E3AD               	bnc	l12885
 15442                           
 15443                           ; BSR set to: 0
 15444                           ;lorawan_eu.c: 1028: }
 15445                           ;lorawan_eu.c: 1029: }
 15446                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 15447  004B94  0102               	movlb	2	; () banked
 15448  004B96  51DF               	movf	(_loRa+223)& (0+255),w,b
 15449  004B98  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 15450  004B9A  E202               	bc	l12903
 15451                           
 15452                           ; BSR set to: 2
 15453                           ;lorawan_eu.c: 1032: {
 15454                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 15455  004B9C  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 15456  004BA0                     l12903:
 15457                           
 15458                           ; BSR set to: 2
 15459                           ;lorawan_eu.c: 1034: }
 15460                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 15461  004BA0  51EB               	movf	(_loRa+235)& (0+255),w,b
 15462  004BA2  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 15463  004BA4  A0D8               	btfss	status,0,c
 15464                           
 15465                           ; BSR set to: 2
 15466                           ;lorawan_eu.c: 1037: {
 15467                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 15468  004BA6  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 15469                           
 15470                           ; BSR set to: 2
 15471  004BAA  0012               	return		;funcret
 15472  004BAC                     __end_of_UpdateDataRange:
 15473                           	opt stack 0
 15474                           tosu	equ	0xFFF
 15475                           tosh	equ	0xFFE
 15476                           tosl	equ	0xFFD
 15477                           pclath	equ	0xFFA
 15478                           tblptru	equ	0xFF8
 15479                           tblptrh	equ	0xFF7
 15480                           tblptrl	equ	0xFF6
 15481                           tablat	equ	0xFF5
 15482                           prodh	equ	0xFF4
 15483                           prodl	equ	0xFF3
 15484                           intcon	equ	0xFF2
 15485                           indf0	equ	0xFEF
 15486                           postinc0	equ	0xFEE
 15487                           fsr0h	equ	0xFEA
 15488                           fsr0l	equ	0xFE9
 15489                           wreg	equ	0xFE8
 15490                           postinc1	equ	0xFE6
 15491                           postdec1	equ	0xFE5
 15492                           plusw1	equ	0xFE3
 15493                           fsr1h	equ	0xFE2
 15494                           fsr1l	equ	0xFE1
 15495                           indf2	equ	0xFDF
 15496                           postinc2	equ	0xFDE
 15497                           postdec2	equ	0xFDD
 15498                           plusw2	equ	0xFDB
 15499                           fsr2h	equ	0xFDA
 15500                           fsr2l	equ	0xFD9
 15501                           status	equ	0xFD8
 15502                           
 15503 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 15504 ;; Defined at:
 15505 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15506 ;; Parameters:    Size  Location     Type
 15507 ;;  channelId       1    wreg     unsigned char 
 15508 ;;  statusNew       1    8[BANK0 ] unsigned char 
 15509 ;; Auto vars:     Size  Location     Type
 15510 ;;  channelId       1   10[BANK0 ] unsigned char 
 15511 ;;  result          1    0        enum E17190
 15512 ;; Return value:  Size  Location     Type
 15513 ;;                  1    wreg      enum E17190
 15514 ;; Registers used:
 15515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15516 ;; Tracked objects:
 15517 ;;		On entry : F/0
 15518 ;;		On exit  : D/0
 15519 ;;		Unchanged: 0/0
 15520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15521 ;;      Params:         0       1       0       0       0       0       0       0       0
 15522 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15523 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15524 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15525 ;;Total ram usage:        3 bytes
 15526 ;; Hardware stack levels used:    1
 15527 ;; Hardware stack levels required when called:    8
 15528 ;; This function calls:
 15529 ;;		_UpdateChannelIdStatus
 15530 ;;		_ValidateChannelId
 15531 ;; This function is called by:
 15532 ;;		_ExecuteNewChannel
 15533 ;;		_UpdateCfList
 15534 ;; This function uses a non-reentrant model
 15535 ;;
 15536                           
 15537                           	psect	text80
 15538  007030                     __ptext80:
 15539                           	opt stack 0
 15540  007030                     _LORAWAN_SetChannelIdStatus:
 15541                           	opt stack 17
 15542                           
 15543                           ; BSR set to: 2
 15544                           ;incstack = 0
 15545                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 15546  007030  6F6A               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 15547                           
 15548                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 15549  007032  0E01               	movlw	1
 15550  007034  0100               	movlb	0	; () banked
 15551  007036  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 15552  007038  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15553  00703A  ECB6  F03A         	call	_ValidateChannelId
 15554  00703E  0900               	iorlw	0
 15555  007040  E001               	bz	l12913
 15556                           
 15557                           ; BSR set to: 0
 15558                           ;lorawan_eu.c: 290: }
 15559  007042  0012               	return	
 15560  007044                     l12913:
 15561                           
 15562                           ; BSR set to: 0
 15563                           ;lorawan_eu.c: 292: else
 15564                           ;lorawan_eu.c: 293: {
 15565                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 15566  007044  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15567  007046  0D0E               	mullw	14
 15568  007048  0E0D               	movlw	low (_Channels+13)
 15569  00704A  24F3               	addwf	prodl,w,c
 15570  00704C  6ED9               	movwf	fsr2l,c
 15571  00704E  0E04               	movlw	high (_Channels+13)
 15572  007050  20F4               	addwfc	prodh,w,c
 15573  007052  6EDA               	movwf	fsr2h,c
 15574  007054  50DF               	movf	indf2,w,c
 15575  007056  0B07               	andlw	7
 15576  007058  0A07               	xorlw	7
 15577  00705A  A4D8               	btfss	status,2,c
 15578  00705C  0012               	return	
 15579                           
 15580                           ; BSR set to: 0
 15581                           ;lorawan_eu.c: 295: {
 15582                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 15583  00705E  C068  F064         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 15584  007062  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15585  007064  EFD9  F023         	goto	_UpdateChannelIdStatus
 15586  007068                     __end_of_LORAWAN_SetChannelIdStatus:
 15587                           	opt stack 0
 15588                           tosu	equ	0xFFF
 15589                           tosh	equ	0xFFE
 15590                           tosl	equ	0xFFD
 15591                           pclath	equ	0xFFA
 15592                           tblptru	equ	0xFF8
 15593                           tblptrh	equ	0xFF7
 15594                           tblptrl	equ	0xFF6
 15595                           tablat	equ	0xFF5
 15596                           prodh	equ	0xFF4
 15597                           prodl	equ	0xFF3
 15598                           intcon	equ	0xFF2
 15599                           indf0	equ	0xFEF
 15600                           postinc0	equ	0xFEE
 15601                           fsr0h	equ	0xFEA
 15602                           fsr0l	equ	0xFE9
 15603                           wreg	equ	0xFE8
 15604                           postinc1	equ	0xFE6
 15605                           postdec1	equ	0xFE5
 15606                           plusw1	equ	0xFE3
 15607                           fsr1h	equ	0xFE2
 15608                           fsr1l	equ	0xFE1
 15609                           indf2	equ	0xFDF
 15610                           postinc2	equ	0xFDE
 15611                           postdec2	equ	0xFDD
 15612                           plusw2	equ	0xFDB
 15613                           fsr2h	equ	0xFDA
 15614                           fsr2l	equ	0xFD9
 15615                           status	equ	0xFD8
 15616                           
 15617 ;; *************** function _ValidateChannelId *****************
 15618 ;; Defined at:
 15619 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15620 ;; Parameters:    Size  Location     Type
 15621 ;;  channelId       1    wreg     unsigned char 
 15622 ;;  allowedForDe    1    4[BANK0 ] unsigned char 
 15623 ;; Auto vars:     Size  Location     Type
 15624 ;;  channelId       1    6[BANK0 ] unsigned char 
 15625 ;;  result          1    5[BANK0 ] enum E17190
 15626 ;; Return value:  Size  Location     Type
 15627 ;;                  1    wreg      enum E17190
 15628 ;; Registers used:
 15629 ;;		wreg, status,2, status,0
 15630 ;; Tracked objects:
 15631 ;;		On entry : F/0
 15632 ;;		On exit  : F/0
 15633 ;;		Unchanged: 0/0
 15634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15635 ;;      Params:         0       1       0       0       0       0       0       0       0
 15636 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15637 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15638 ;;      Totals:         0       3       0       0       0       0       0       0       0
 15639 ;;Total ram usage:        3 bytes
 15640 ;; Hardware stack levels used:    1
 15641 ;; Hardware stack levels required when called:    7
 15642 ;; This function calls:
 15643 ;;		Nothing
 15644 ;; This function is called by:
 15645 ;;		_LORAWAN_SetChannelIdStatus
 15646 ;;		_ExecuteNewChannel
 15647 ;; This function uses a non-reentrant model
 15648 ;;
 15649                           
 15650                           	psect	text81
 15651  00756C                     __ptext81:
 15652                           	opt stack 0
 15653  00756C                     _ValidateChannelId:
 15654                           	opt stack 17
 15655                           
 15656                           ;incstack = 0
 15657                           ;ValidateChannelId@channelId stored from wreg
 15658  00756C  6F66               	movwf	ValidateChannelId@channelId& (0+255),b
 15659                           
 15660                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 15661  00756E  0100               	movlb	0	; () banked
 15662  007570  6B65               	clrf	ValidateChannelId@result& (0+255),b
 15663                           
 15664                           ; BSR set to: 0
 15665                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 15666  007572  0E10               	movlw	16
 15667  007574  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15668  007576  D005               	goto	l12651
 15669                           
 15670                           ; BSR set to: 0
 15671  007578  5164               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 15672  00757A  E105               	bnz	l1263
 15673                           
 15674                           ; BSR set to: 0
 15675  00757C  0E03               	movlw	3
 15676  00757E  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15677  007580  D002               	goto	l1263
 15678  007582                     l12651:
 15679                           
 15680                           ; BSR set to: 0
 15681                           ;lorawan_eu.c: 1130: {
 15682                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 15683  007582  0E03               	movlw	3
 15684  007584  6F65               	movwf	ValidateChannelId@result& (0+255),b
 15685  007586                     l1263:
 15686                           
 15687                           ; BSR set to: 0
 15688                           ;lorawan_eu.c: 1132: }
 15689                           ;lorawan_eu.c: 1134: return result;
 15690  007586  5165               	movf	ValidateChannelId@result& (0+255),w,b
 15691                           
 15692                           ; BSR set to: 0
 15693  007588  0012               	return		;funcret
 15694  00758A                     __end_of_ValidateChannelId:
 15695                           	opt stack 0
 15696                           tosu	equ	0xFFF
 15697                           tosh	equ	0xFFE
 15698                           tosl	equ	0xFFD
 15699                           pclath	equ	0xFFA
 15700                           tblptru	equ	0xFF8
 15701                           tblptrh	equ	0xFF7
 15702                           tblptrl	equ	0xFF6
 15703                           tablat	equ	0xFF5
 15704                           prodh	equ	0xFF4
 15705                           prodl	equ	0xFF3
 15706                           intcon	equ	0xFF2
 15707                           indf0	equ	0xFEF
 15708                           postinc0	equ	0xFEE
 15709                           fsr0h	equ	0xFEA
 15710                           fsr0l	equ	0xFE9
 15711                           wreg	equ	0xFE8
 15712                           postinc1	equ	0xFE6
 15713                           postdec1	equ	0xFE5
 15714                           plusw1	equ	0xFE3
 15715                           fsr1h	equ	0xFE2
 15716                           fsr1l	equ	0xFE1
 15717                           indf2	equ	0xFDF
 15718                           postinc2	equ	0xFDE
 15719                           postdec2	equ	0xFDD
 15720                           plusw2	equ	0xFDB
 15721                           fsr2h	equ	0xFDA
 15722                           fsr2l	equ	0xFD9
 15723                           status	equ	0xFD8
 15724                           
 15725 ;; *************** function _ExecuteLinkCheck *****************
 15726 ;; Defined at:
 15727 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 15730 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15731 ;; Auto vars:     Size  Location     Type
 15732 ;;		None
 15733 ;; Return value:  Size  Location     Type
 15734 ;;                  2    4[BANK0 ] PTR unsigned char 
 15735 ;; Registers used:
 15736 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15737 ;; Tracked objects:
 15738 ;;		On entry : F/0
 15739 ;;		On exit  : F/0
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15742 ;;      Params:         0       2       0       0       0       0       0       0       0
 15743 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15745 ;;      Totals:         0       2       0       0       0       0       0       0       0
 15746 ;;Total ram usage:        2 bytes
 15747 ;; Hardware stack levels used:    1
 15748 ;; Hardware stack levels required when called:    7
 15749 ;; This function calls:
 15750 ;;		Nothing
 15751 ;; This function is called by:
 15752 ;;		_MacExecuteCommands
 15753 ;; This function uses a non-reentrant model
 15754 ;;
 15755                           
 15756                           	psect	text82
 15757  007170                     __ptext82:
 15758                           	opt stack 0
 15759  007170                     _ExecuteLinkCheck:
 15760                           	opt stack 18
 15761                           
 15762                           ; BSR set to: 0
 15763                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 15764                           
 15765                           ; BSR set to: 0
 15766                           ;incstack = 0
 15767  007170  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15768  007174  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15769  007178  50DF               	movf	indf2,w,c
 15770  00717A  0102               	movlb	2	; () banked
 15771  00717C  6FDD               	movwf	(_loRa+221)& (0+255),b
 15772                           
 15773                           ; BSR set to: 2
 15774  00717E  0100               	movlb	0	; () banked
 15775  007180  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15776  007182  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15777                           
 15778                           ; BSR set to: 0
 15779                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 15780  007184  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15781  007188  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15782  00718C  50DF               	movf	indf2,w,c
 15783  00718E  0102               	movlb	2	; () banked
 15784  007190  6FDE               	movwf	(_loRa+222)& (0+255),b
 15785  007192  0100               	movlb	0	; () banked
 15786  007194  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15787  007196  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15788                           
 15789                           ; BSR set to: 0
 15790                           ;lorawan.c: 1656: return ptr;
 15791  007198  C064  F064         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 15792  00719C  C065  F065         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 15793                           
 15794                           ; BSR set to: 0
 15795  0071A0  0012               	return		;funcret
 15796  0071A2                     __end_of_ExecuteLinkCheck:
 15797                           	opt stack 0
 15798                           tosu	equ	0xFFF
 15799                           tosh	equ	0xFFE
 15800                           tosl	equ	0xFFD
 15801                           pclath	equ	0xFFA
 15802                           tblptru	equ	0xFF8
 15803                           tblptrh	equ	0xFF7
 15804                           tblptrl	equ	0xFF6
 15805                           tablat	equ	0xFF5
 15806                           prodh	equ	0xFF4
 15807                           prodl	equ	0xFF3
 15808                           intcon	equ	0xFF2
 15809                           indf0	equ	0xFEF
 15810                           postinc0	equ	0xFEE
 15811                           fsr0h	equ	0xFEA
 15812                           fsr0l	equ	0xFE9
 15813                           wreg	equ	0xFE8
 15814                           postinc1	equ	0xFE6
 15815                           postdec1	equ	0xFE5
 15816                           plusw1	equ	0xFE3
 15817                           fsr1h	equ	0xFE2
 15818                           fsr1l	equ	0xFE1
 15819                           indf2	equ	0xFDF
 15820                           postinc2	equ	0xFDE
 15821                           postdec2	equ	0xFDD
 15822                           plusw2	equ	0xFDB
 15823                           fsr2h	equ	0xFDA
 15824                           fsr2l	equ	0xFD9
 15825                           status	equ	0xFD8
 15826                           
 15827 ;; *************** function _ExecuteLinkAdr *****************
 15828 ;; Defined at:
 15829 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15830 ;; Parameters:    Size  Location     Type
 15831 ;;  ptr             2   17[BANK0 ] PTR unsigned char 
 15832 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;  redundancy      2   23[BANK0 ] PTR struct .
 15835 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15836 ;;  channelMask     2   20[BANK0 ] unsigned int 
 15837 ;;  dataRate        1   25[BANK0 ] unsigned char 
 15838 ;;  txPower         1   22[BANK0 ] unsigned char 
 15839 ;; Return value:  Size  Location     Type
 15840 ;;                  2   17[BANK0 ] PTR unsigned char 
 15841 ;; Registers used:
 15842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15843 ;; Tracked objects:
 15844 ;;		On entry : F/0
 15845 ;;		On exit  : F/2
 15846 ;;		Unchanged: 0/0
 15847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15848 ;;      Params:         0       2       0       0       0       0       0       0       0
 15849 ;;      Locals:         0       6       0       0       0       0       0       0       0
 15850 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15851 ;;      Totals:         0       9       0       0       0       0       0       0       0
 15852 ;;Total ram usage:        9 bytes
 15853 ;; Hardware stack levels used:    1
 15854 ;; Hardware stack levels required when called:   10
 15855 ;; This function calls:
 15856 ;;		_EnableChannels
 15857 ;;		_UpdateCurrentDataRate
 15858 ;;		_UpdateTxPower
 15859 ;;		_ValidateChannelMask
 15860 ;;		_ValidateChannelMaskCntl
 15861 ;;		_ValidateDataRate
 15862 ;;		_ValidateTxPower
 15863 ;; This function is called by:
 15864 ;;		_MacExecuteCommands
 15865 ;; This function uses a non-reentrant model
 15866 ;;
 15867                           
 15868                           	psect	text83
 15869  00356C                     __ptext83:
 15870                           	opt stack 0
 15871  00356C                     _ExecuteLinkAdr:
 15872                           	opt stack 15
 15873                           
 15874                           ; BSR set to: 0
 15875                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 15876                           ;lorawan_eu.c: 616: uint16_t channelMask;
 15877                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 15878                           
 15879                           ; BSR set to: 0
 15880                           ;incstack = 0
 15881  00356C  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15882  003570  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15883  003574  50DF               	movf	indf2,w,c
 15884  003576  0B0F               	andlw	15
 15885  003578  6F76               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 15886                           
 15887                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 15888  00357A  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15889  00357E  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15890  003582  50DF               	movf	indf2,w,c
 15891  003584  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 15892  003586  3973               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 15893  003588  0B0F               	andlw	15
 15894  00358A  6F79               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 15895                           
 15896                           ; BSR set to: 0
 15897                           ;lorawan_eu.c: 620: ptr++;
 15898  00358C  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15899  00358E  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15900                           
 15901                           ; BSR set to: 0
 15902                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 15903  003590  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15904  003594  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15905  003598  CFDE F074          	movff	postinc2,ExecuteLinkAdr@channelMask
 15906  00359C  CFDD F075          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 15910  0035A0  0E02               	movlw	2
 15911  0035A2  2771               	addwf	ExecuteLinkAdr@ptr& (0+255),f,b
 15912  0035A4  0E00               	movlw	0
 15913  0035A6  2372               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15914                           
 15915                           ; BSR set to: 0
 15916                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 15917                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 15918  0035A8  C071  F077         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 15919  0035AC  C072  F078         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 15920                           
 15921                           ; BSR set to: 0
 15922  0035B0  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15923  0035B2  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15924                           
 15925                           ; BSR set to: 0
 15926                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 15927  0035B4  0102               	movlb	2	; () banked
 15928  0035B6  AD02               	btfss	(_loRa+2)& (0+255),6,b
 15929  0035B8  D092               	goto	l13549
 15930                           
 15931                           ; BSR set to: 2
 15932                           ;lorawan_eu.c: 627: {
 15933                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 15934  0035BA  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 15935  0035BE  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 15936  0035C2  0100               	movlb	0	; () banked
 15937  0035C4  38DF               	swapf	223,w,c
 15938  0035C6  0B07               	andlw	7
 15939  0035C8  ECA1  F03B         	call	_ValidateChannelMaskCntl
 15940  0035CC  0900               	iorlw	0
 15941  0035CE  E112               	bnz	l13517
 15942                           
 15943                           ; BSR set to: 0
 15944  0035D0  C074  F064         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 15945  0035D4  C075  F065         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 15946  0035D8  EC34  F038         	call	_ValidateChannelMask	;wreg free
 15947  0035DC  0900               	iorlw	0
 15948  0035DE  E10A               	bnz	l13517
 15949                           
 15950                           ; BSR set to: 0
 15951                           ;lorawan_eu.c: 629: {
 15952                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 15953  0035E0  0102               	movlb	2	; () banked
 15954  0035E2  51A7               	movf	(_loRa+167)& (0+255),w,b
 15955  0035E4  0D02               	mullw	2
 15956  0035E6  0EA9               	movlw	low (_loRa+169)
 15957  0035E8  24F3               	addwf	prodl,w,c
 15958  0035EA  6ED9               	movwf	fsr2l,c
 15959  0035EC  0E02               	movlw	high (_loRa+169)
 15960  0035EE  20F4               	addwfc	prodh,w,c
 15961  0035F0  6EDA               	movwf	fsr2h,c
 15962  0035F2  80DF               	bsf	indf2,0,c
 15963  0035F4                     l13517:
 15964                           
 15965                           ;lorawan_eu.c: 631: }
 15966                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 15967  0035F4  0100               	movlb	0	; () banked
 15968  0035F6  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 15969  0035F8  ECCD  F03B         	call	_ValidateDataRate
 15970  0035FC  0900               	iorlw	0
 15971  0035FE  E112               	bnz	l13525
 15972                           
 15973                           ; BSR set to: 0
 15974  003600  0102               	movlb	2	; () banked
 15975  003602  51EB               	movf	(_loRa+235)& (0+255),w,b
 15976  003604  0100               	movlb	0	; () banked
 15977  003606  5D79               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 15978  003608  E30D               	bnc	l13525
 15979                           
 15980                           ; BSR set to: 0
 15981  00360A  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 15982  00360C  0102               	movlb	2	; () banked
 15983  00360E  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 15984  003610  E309               	bnc	l13525
 15985                           
 15986                           ; BSR set to: 2
 15987                           ;lorawan_eu.c: 634: {
 15988                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 15989  003612  51A7               	movf	(_loRa+167)& (0+255),w,b
 15990  003614  0D02               	mullw	2
 15991  003616  0EA9               	movlw	low (_loRa+169)
 15992  003618  24F3               	addwf	prodl,w,c
 15993  00361A  6ED9               	movwf	fsr2l,c
 15994  00361C  0E02               	movlw	high (_loRa+169)
 15995  00361E  20F4               	addwfc	prodh,w,c
 15996  003620  6EDA               	movwf	fsr2h,c
 15997  003622  82DF               	bsf	indf2,1,c
 15998  003624                     l13525:
 15999                           
 16000                           ;lorawan_eu.c: 636: }
 16001                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 16002  003624  0100               	movlb	0	; () banked
 16003  003626  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16004  003628  EC45  F03A         	call	_ValidateTxPower
 16005  00362C  0900               	iorlw	0
 16006  00362E  E10A               	bnz	l1118
 16007                           
 16008                           ; BSR set to: 0
 16009                           ;lorawan_eu.c: 639: {
 16010                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 16011  003630  0102               	movlb	2	; () banked
 16012  003632  51A7               	movf	(_loRa+167)& (0+255),w,b
 16013  003634  0D02               	mullw	2
 16014  003636  0EA9               	movlw	low (_loRa+169)
 16015  003638  24F3               	addwf	prodl,w,c
 16016  00363A  6ED9               	movwf	fsr2l,c
 16017  00363C  0E02               	movlw	high (_loRa+169)
 16018  00363E  20F4               	addwfc	prodh,w,c
 16019  003640  6EDA               	movwf	fsr2h,c
 16020  003642  84DF               	bsf	indf2,2,c
 16021  003644                     l1118:
 16022                           
 16023                           ;lorawan_eu.c: 641: }
 16024                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 16025  003644  0102               	movlb	2	; () banked
 16026  003646  51A7               	movf	(_loRa+167)& (0+255),w,b
 16027  003648  0D02               	mullw	2
 16028  00364A  0EA9               	movlw	low (_loRa+169)
 16029  00364C  24F3               	addwf	prodl,w,c
 16030  00364E  6ED9               	movwf	fsr2l,c
 16031  003650  0E02               	movlw	high (_loRa+169)
 16032  003652  20F4               	addwfc	prodh,w,c
 16033  003654  6EDA               	movwf	fsr2h,c
 16034  003656  A4DF               	btfss	indf2,2,c
 16035  003658  D05D               	goto	l13551
 16036                           
 16037                           ; BSR set to: 2
 16038  00365A  51A7               	movf	(_loRa+167)& (0+255),w,b
 16039  00365C  0D02               	mullw	2
 16040  00365E  0EA9               	movlw	low (_loRa+169)
 16041  003660  24F3               	addwf	prodl,w,c
 16042  003662  6ED9               	movwf	fsr2l,c
 16043  003664  0E02               	movlw	high (_loRa+169)
 16044  003666  20F4               	addwfc	prodh,w,c
 16045  003668  6EDA               	movwf	fsr2h,c
 16046  00366A  A2DF               	btfss	indf2,1,c
 16047  00366C  D053               	goto	l13551
 16048                           
 16049                           ; BSR set to: 2
 16050  00366E  51A7               	movf	(_loRa+167)& (0+255),w,b
 16051  003670  0D02               	mullw	2
 16052  003672  0EA9               	movlw	low (_loRa+169)
 16053  003674  24F3               	addwf	prodl,w,c
 16054  003676  6ED9               	movwf	fsr2l,c
 16055  003678  0E02               	movlw	high (_loRa+169)
 16056  00367A  20F4               	addwfc	prodh,w,c
 16057  00367C  6EDA               	movwf	fsr2h,c
 16058  00367E  A0DF               	btfss	indf2,0,c
 16059  003680  D049               	goto	l13551
 16060                           
 16061                           ; BSR set to: 2
 16062                           ;lorawan_eu.c: 644: {
 16063                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 16064  003682  C074  F06E         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 16065  003686  C075  F06F         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 16066  00368A  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16067  00368E  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16068  003692  0100               	movlb	0	; () banked
 16069  003694  38DF               	swapf	223,w,c
 16070  003696  0B07               	andlw	7
 16071  003698  6F70               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 16072  00369A  ECB8  F03B         	call	_EnableChannels	;wreg free
 16073                           
 16074                           ; BSR set to: 0
 16075                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 16076  00369E  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16077  0036A0  EC71  F03C         	call	_UpdateTxPower
 16078                           
 16079                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 16080  0036A4  0102               	movlb	2	; () banked
 16081  0036A6  8903               	bsf	(_loRa+3)& (0+255),4,b
 16082                           
 16083                           ; BSR set to: 2
 16084                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 16085  0036A8  0100               	movlb	0	; () banked
 16086  0036AA  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16087  0036AC  EC75  F03C         	call	_UpdateCurrentDataRate
 16088                           
 16089                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 16090  0036B0  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16091  0036B4  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16092  0036B8  0100               	movlb	0	; () banked
 16093  0036BA  50DF               	movf	223,w,c
 16094  0036BC  0B0F               	andlw	15
 16095  0036BE  E103               	bnz	l13545
 16096                           
 16097                           ; BSR set to: 0
 16098                           ;lorawan_eu.c: 652: {
 16099                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 16100  0036C0  0102               	movlb	2	; () banked
 16101  0036C2  6BD6               	clrf	(_loRa+214)& (0+255),b
 16102                           
 16103                           ;lorawan_eu.c: 654: }
 16104  0036C4  D00A               	goto	l13547
 16105  0036C6                     l13545:
 16106                           
 16107                           ; BSR set to: 0
 16108                           ;lorawan_eu.c: 655: else
 16109                           ;lorawan_eu.c: 656: {
 16110                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 16111  0036C6  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16112  0036CA  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16113  0036CE  50DF               	movf	223,w,c
 16114  0036D0  0B0F               	andlw	15
 16115  0036D2  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 16116  0036D4  0573               	decf	??_ExecuteLinkAdr& (0+255),w,b
 16117  0036D6  0102               	movlb	2	; () banked
 16118  0036D8  6FD6               	movwf	(_loRa+214)& (0+255),b
 16119  0036DA                     l13547:
 16120                           
 16121                           ; BSR set to: 2
 16122                           ;lorawan_eu.c: 658: }
 16123                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 16124  0036DA  8B03               	bsf	(_loRa+3)& (0+255),5,b
 16125  0036DC  D01B               	goto	l13551
 16126  0036DE                     l13549:
 16127                           
 16128                           ; BSR set to: 2
 16129                           ;lorawan_eu.c: 662: else
 16130                           ;lorawan_eu.c: 663: {
 16131                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 16132  0036DE  51A7               	movf	(_loRa+167)& (0+255),w,b
 16133  0036E0  0D02               	mullw	2
 16134  0036E2  0EA9               	movlw	low (_loRa+169)
 16135  0036E4  24F3               	addwf	prodl,w,c
 16136  0036E6  6ED9               	movwf	fsr2l,c
 16137  0036E8  0E02               	movlw	high (_loRa+169)
 16138  0036EA  20F4               	addwfc	prodh,w,c
 16139  0036EC  6EDA               	movwf	fsr2h,c
 16140  0036EE  90DF               	bcf	indf2,0,c
 16141                           
 16142                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 16143  0036F0  51A7               	movf	(_loRa+167)& (0+255),w,b
 16144  0036F2  0D02               	mullw	2
 16145  0036F4  0EA9               	movlw	low (_loRa+169)
 16146  0036F6  24F3               	addwf	prodl,w,c
 16147  0036F8  6ED9               	movwf	fsr2l,c
 16148  0036FA  0E02               	movlw	high (_loRa+169)
 16149  0036FC  20F4               	addwfc	prodh,w,c
 16150  0036FE  6EDA               	movwf	fsr2h,c
 16151  003700  92DF               	bcf	indf2,1,c
 16152                           
 16153                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 16154  003702  51A7               	movf	(_loRa+167)& (0+255),w,b
 16155  003704  0D02               	mullw	2
 16156  003706  0EA9               	movlw	low (_loRa+169)
 16157  003708  24F3               	addwf	prodl,w,c
 16158  00370A  6ED9               	movwf	fsr2l,c
 16159  00370C  0E02               	movlw	high (_loRa+169)
 16160  00370E  20F4               	addwfc	prodh,w,c
 16161  003710  6EDA               	movwf	fsr2h,c
 16162  003712  94DF               	bcf	indf2,2,c
 16163  003714                     l13551:
 16164                           
 16165                           ; BSR set to: 2
 16166                           ;lorawan_eu.c: 667: }
 16167                           ;lorawan_eu.c: 669: return ptr;
 16168  003714  C071  F071         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 16169  003718  C072  F072         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 16170                           
 16171                           ; BSR set to: 2
 16172  00371C  0012               	return		;funcret
 16173  00371E                     __end_of_ExecuteLinkAdr:
 16174                           	opt stack 0
 16175                           tosu	equ	0xFFF
 16176                           tosh	equ	0xFFE
 16177                           tosl	equ	0xFFD
 16178                           pclath	equ	0xFFA
 16179                           tblptru	equ	0xFF8
 16180                           tblptrh	equ	0xFF7
 16181                           tblptrl	equ	0xFF6
 16182                           tablat	equ	0xFF5
 16183                           prodh	equ	0xFF4
 16184                           prodl	equ	0xFF3
 16185                           intcon	equ	0xFF2
 16186                           indf0	equ	0xFEF
 16187                           postinc0	equ	0xFEE
 16188                           fsr0h	equ	0xFEA
 16189                           fsr0l	equ	0xFE9
 16190                           wreg	equ	0xFE8
 16191                           postinc1	equ	0xFE6
 16192                           postdec1	equ	0xFE5
 16193                           plusw1	equ	0xFE3
 16194                           fsr1h	equ	0xFE2
 16195                           fsr1l	equ	0xFE1
 16196                           indf2	equ	0xFDF
 16197                           postinc2	equ	0xFDE
 16198                           postdec2	equ	0xFDD
 16199                           plusw2	equ	0xFDB
 16200                           fsr2h	equ	0xFDA
 16201                           fsr2l	equ	0xFD9
 16202                           status	equ	0xFD8
 16203                           
 16204 ;; *************** function _ValidateTxPower *****************
 16205 ;; Defined at:
 16206 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16207 ;; Parameters:    Size  Location     Type
 16208 ;;  txPowerNew      1    wreg     unsigned char 
 16209 ;; Auto vars:     Size  Location     Type
 16210 ;;  txPowerNew      1    5[BANK0 ] unsigned char 
 16211 ;;  result          1    4[BANK0 ] enum E17190
 16212 ;; Return value:  Size  Location     Type
 16213 ;;                  1    wreg      enum E17190
 16214 ;; Registers used:
 16215 ;;		wreg, status,2, status,0
 16216 ;; Tracked objects:
 16217 ;;		On entry : F/0
 16218 ;;		On exit  : F/0
 16219 ;;		Unchanged: 0/0
 16220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16221 ;;      Params:         0       0       0       0       0       0       0       0       0
 16222 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16223 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16224 ;;      Totals:         0       2       0       0       0       0       0       0       0
 16225 ;;Total ram usage:        2 bytes
 16226 ;; Hardware stack levels used:    1
 16227 ;; Hardware stack levels required when called:    7
 16228 ;; This function calls:
 16229 ;;		Nothing
 16230 ;; This function is called by:
 16231 ;;		_ExecuteLinkAdr
 16232 ;; This function uses a non-reentrant model
 16233 ;;
 16234                           
 16235                           	psect	text84
 16236  00748A                     __ptext84:
 16237                           	opt stack 0
 16238  00748A                     _ValidateTxPower:
 16239                           	opt stack 17
 16240                           
 16241                           ; BSR set to: 2
 16242                           ;incstack = 0
 16243                           ;ValidateTxPower@txPowerNew stored from wreg
 16244  00748A  6F65               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 16245                           
 16246                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 16247  00748C  0100               	movlb	0	; () banked
 16248  00748E  6B64               	clrf	ValidateTxPower@result& (0+255),b
 16249                           
 16250                           ; BSR set to: 0
 16251                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 16252  007490  0102               	movlb	2	; () banked
 16253  007492  51A4               	movf	(_loRa+164)& (0+255),w,b
 16254  007494  E103               	bnz	l12939
 16255                           
 16256                           ; BSR set to: 2
 16257  007496  0100               	movlb	0	; () banked
 16258  007498  5165               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 16259  00749A  E004               	bz	l12941
 16260  00749C                     l12939:
 16261  00749C  0E05               	movlw	5
 16262  00749E  0100               	movlb	0	; () banked
 16263  0074A0  6565               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 16264  0074A2  D002               	goto	l1102
 16265  0074A4                     l12941:
 16266                           
 16267                           ; BSR set to: 0
 16268                           ;lorawan_eu.c: 587: {
 16269                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 16270  0074A4  0E03               	movlw	3
 16271  0074A6  6F64               	movwf	ValidateTxPower@result& (0+255),b
 16272  0074A8                     l1102:
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;lorawan_eu.c: 589: }
 16276                           ;lorawan_eu.c: 591: return result;
 16277  0074A8  5164               	movf	ValidateTxPower@result& (0+255),w,b
 16278                           
 16279                           ; BSR set to: 0
 16280  0074AA  0012               	return		;funcret
 16281  0074AC                     __end_of_ValidateTxPower:
 16282                           	opt stack 0
 16283                           tosu	equ	0xFFF
 16284                           tosh	equ	0xFFE
 16285                           tosl	equ	0xFFD
 16286                           pclath	equ	0xFFA
 16287                           tblptru	equ	0xFF8
 16288                           tblptrh	equ	0xFF7
 16289                           tblptrl	equ	0xFF6
 16290                           tablat	equ	0xFF5
 16291                           prodh	equ	0xFF4
 16292                           prodl	equ	0xFF3
 16293                           intcon	equ	0xFF2
 16294                           indf0	equ	0xFEF
 16295                           postinc0	equ	0xFEE
 16296                           fsr0h	equ	0xFEA
 16297                           fsr0l	equ	0xFE9
 16298                           wreg	equ	0xFE8
 16299                           postinc1	equ	0xFE6
 16300                           postdec1	equ	0xFE5
 16301                           plusw1	equ	0xFE3
 16302                           fsr1h	equ	0xFE2
 16303                           fsr1l	equ	0xFE1
 16304                           indf2	equ	0xFDF
 16305                           postinc2	equ	0xFDE
 16306                           postdec2	equ	0xFDD
 16307                           plusw2	equ	0xFDB
 16308                           fsr2h	equ	0xFDA
 16309                           fsr2l	equ	0xFD9
 16310                           status	equ	0xFD8
 16311                           
 16312 ;; *************** function _ValidateDataRate *****************
 16313 ;; Defined at:
 16314 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16315 ;; Parameters:    Size  Location     Type
 16316 ;;  dataRate        1    wreg     unsigned char 
 16317 ;; Auto vars:     Size  Location     Type
 16318 ;;  dataRate        1    4[BANK0 ] unsigned char 
 16319 ;;  result          1    5[BANK0 ] enum E17190
 16320 ;; Return value:  Size  Location     Type
 16321 ;;                  1    wreg      enum E17190
 16322 ;; Registers used:
 16323 ;;		wreg, status,2, status,0
 16324 ;; Tracked objects:
 16325 ;;		On entry : F/0
 16326 ;;		On exit  : F/0
 16327 ;;		Unchanged: 0/0
 16328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16329 ;;      Params:         0       0       0       0       0       0       0       0       0
 16330 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16331 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16332 ;;      Totals:         0       2       0       0       0       0       0       0       0
 16333 ;;Total ram usage:        2 bytes
 16334 ;; Hardware stack levels used:    1
 16335 ;; Hardware stack levels required when called:    7
 16336 ;; This function calls:
 16337 ;;		Nothing
 16338 ;; This function is called by:
 16339 ;;		_ExecuteLinkAdr
 16340 ;;		_ExecuteRxParamSetupReq
 16341 ;;		_ValidateDataRange
 16342 ;;		_LORAWAN_SetCurrentDataRate
 16343 ;; This function uses a non-reentrant model
 16344 ;;
 16345                           
 16346                           	psect	text85
 16347  00779A                     __ptext85:
 16348                           	opt stack 0
 16349  00779A                     _ValidateDataRate:
 16350                           	opt stack 22
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;incstack = 0
 16354                           ;ValidateDataRate@dataRate stored from wreg
 16355  00779A  6F64               	movwf	ValidateDataRate@dataRate& (0+255),b
 16356                           
 16357                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 16358  00779C  0100               	movlb	0	; () banked
 16359  00779E  6B65               	clrf	ValidateDataRate@result& (0+255),b
 16360                           
 16361                           ; BSR set to: 0
 16362                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 16363  0077A0  0E07               	movlw	7
 16364  0077A2  6564               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 16365  0077A4  D002               	goto	l1098
 16366                           
 16367                           ; BSR set to: 0
 16368                           ;lorawan_eu.c: 575: {
 16369                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 16370  0077A6  0E03               	movlw	3
 16371  0077A8  6F65               	movwf	ValidateDataRate@result& (0+255),b
 16372  0077AA                     l1098:
 16373                           
 16374                           ; BSR set to: 0
 16375                           ;lorawan_eu.c: 577: }
 16376                           ;lorawan_eu.c: 579: return result;
 16377  0077AA  5165               	movf	ValidateDataRate@result& (0+255),w,b
 16378                           
 16379                           ; BSR set to: 0
 16380  0077AC  0012               	return		;funcret
 16381  0077AE                     __end_of_ValidateDataRate:
 16382                           	opt stack 0
 16383                           tosu	equ	0xFFF
 16384                           tosh	equ	0xFFE
 16385                           tosl	equ	0xFFD
 16386                           pclath	equ	0xFFA
 16387                           tblptru	equ	0xFF8
 16388                           tblptrh	equ	0xFF7
 16389                           tblptrl	equ	0xFF6
 16390                           tablat	equ	0xFF5
 16391                           prodh	equ	0xFF4
 16392                           prodl	equ	0xFF3
 16393                           intcon	equ	0xFF2
 16394                           indf0	equ	0xFEF
 16395                           postinc0	equ	0xFEE
 16396                           fsr0h	equ	0xFEA
 16397                           fsr0l	equ	0xFE9
 16398                           wreg	equ	0xFE8
 16399                           postinc1	equ	0xFE6
 16400                           postdec1	equ	0xFE5
 16401                           plusw1	equ	0xFE3
 16402                           fsr1h	equ	0xFE2
 16403                           fsr1l	equ	0xFE1
 16404                           indf2	equ	0xFDF
 16405                           postinc2	equ	0xFDE
 16406                           postdec2	equ	0xFDD
 16407                           plusw2	equ	0xFDB
 16408                           fsr2h	equ	0xFDA
 16409                           fsr2l	equ	0xFD9
 16410                           status	equ	0xFD8
 16411                           
 16412 ;; *************** function _ValidateChannelMaskCntl *****************
 16413 ;; Defined at:
 16414 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16415 ;; Parameters:    Size  Location     Type
 16416 ;;  channelMaskC    1    wreg     unsigned char 
 16417 ;; Auto vars:     Size  Location     Type
 16418 ;;  channelMaskC    1    5[BANK0 ] unsigned char 
 16419 ;;  result          1    4[BANK0 ] enum E17190
 16420 ;; Return value:  Size  Location     Type
 16421 ;;                  1    wreg      enum E17190
 16422 ;; Registers used:
 16423 ;;		wreg, status,2, status,0
 16424 ;; Tracked objects:
 16425 ;;		On entry : F/0
 16426 ;;		On exit  : F/0
 16427 ;;		Unchanged: 0/0
 16428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16429 ;;      Params:         0       0       0       0       0       0       0       0       0
 16430 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16431 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16432 ;;      Totals:         0       2       0       0       0       0       0       0       0
 16433 ;;Total ram usage:        2 bytes
 16434 ;; Hardware stack levels used:    1
 16435 ;; Hardware stack levels required when called:    7
 16436 ;; This function calls:
 16437 ;;		Nothing
 16438 ;; This function is called by:
 16439 ;;		_ExecuteLinkAdr
 16440 ;; This function uses a non-reentrant model
 16441 ;;
 16442                           
 16443                           	psect	text86
 16444  007742                     __ptext86:
 16445                           	opt stack 0
 16446  007742                     _ValidateChannelMaskCntl:
 16447                           	opt stack 17
 16448                           
 16449                           ; BSR set to: 0
 16450                           ;incstack = 0
 16451                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 16452  007742  6F65               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 16453                           
 16454                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 16455  007744  0100               	movlb	0	; () banked
 16456  007746  6B64               	clrf	ValidateChannelMaskCntl@result& (0+255),b
 16457                           
 16458                           ; BSR set to: 0
 16459                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 16460  007748  5165               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16461  00774A  E005               	bz	l1269
 16462                           
 16463                           ; BSR set to: 0
 16464  00774C  0E06               	movlw	6
 16465  00774E  1965               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16466  007750  E002               	bz	l1269
 16467                           
 16468                           ; BSR set to: 0
 16469                           ;lorawan_eu.c: 1142: {
 16470                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 16471  007752  0E03               	movlw	3
 16472  007754  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 16473  007756                     l1269:
 16474                           
 16475                           ; BSR set to: 0
 16476                           ;lorawan_eu.c: 1144: }
 16477                           ;lorawan_eu.c: 1146: return result;
 16478  007756  5164               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 16479                           
 16480                           ; BSR set to: 0
 16481  007758  0012               	return		;funcret
 16482  00775A                     __end_of_ValidateChannelMaskCntl:
 16483                           	opt stack 0
 16484                           tosu	equ	0xFFF
 16485                           tosh	equ	0xFFE
 16486                           tosl	equ	0xFFD
 16487                           pclath	equ	0xFFA
 16488                           tblptru	equ	0xFF8
 16489                           tblptrh	equ	0xFF7
 16490                           tblptrl	equ	0xFF6
 16491                           tablat	equ	0xFF5
 16492                           prodh	equ	0xFF4
 16493                           prodl	equ	0xFF3
 16494                           intcon	equ	0xFF2
 16495                           indf0	equ	0xFEF
 16496                           postinc0	equ	0xFEE
 16497                           fsr0h	equ	0xFEA
 16498                           fsr0l	equ	0xFE9
 16499                           wreg	equ	0xFE8
 16500                           postinc1	equ	0xFE6
 16501                           postdec1	equ	0xFE5
 16502                           plusw1	equ	0xFE3
 16503                           fsr1h	equ	0xFE2
 16504                           fsr1l	equ	0xFE1
 16505                           indf2	equ	0xFDF
 16506                           postinc2	equ	0xFDE
 16507                           postdec2	equ	0xFDD
 16508                           plusw2	equ	0xFDB
 16509                           fsr2h	equ	0xFDA
 16510                           fsr2l	equ	0xFD9
 16511                           status	equ	0xFD8
 16512                           
 16513 ;; *************** function _ValidateChannelMask *****************
 16514 ;; Defined at:
 16515 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16516 ;; Parameters:    Size  Location     Type
 16517 ;;  channelMask     2    4[BANK0 ] unsigned int 
 16518 ;; Auto vars:     Size  Location     Type
 16519 ;;  i               1    6[BANK0 ] unsigned char 
 16520 ;; Return value:  Size  Location     Type
 16521 ;;                  1    wreg      enum E17190
 16522 ;; Registers used:
 16523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16524 ;; Tracked objects:
 16525 ;;		On entry : F/0
 16526 ;;		On exit  : F/0
 16527 ;;		Unchanged: 0/0
 16528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16529 ;;      Params:         0       2       0       0       0       0       0       0       0
 16530 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16531 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16532 ;;      Totals:         0       3       0       0       0       0       0       0       0
 16533 ;;Total ram usage:        3 bytes
 16534 ;; Hardware stack levels used:    1
 16535 ;; Hardware stack levels required when called:    7
 16536 ;; This function calls:
 16537 ;;		Nothing
 16538 ;; This function is called by:
 16539 ;;		_ExecuteLinkAdr
 16540 ;; This function uses a non-reentrant model
 16541 ;;
 16542                           
 16543                           	psect	text87
 16544  007068                     __ptext87:
 16545                           	opt stack 0
 16546  007068                     _ValidateChannelMask:
 16547                           	opt stack 17
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 16551                           
 16552                           ; BSR set to: 0
 16553                           
 16554                           ; BSR set to: 0
 16555                           ;incstack = 0
 16556  007068  5164               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 16557  00706A  1165               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 16558  00706C  B4D8               	btfsc	status,2,c
 16559  00706E  0C03               	retlw	3
 16560                           
 16561                           ; BSR set to: 0
 16562                           ;lorawan_eu.c: 1171: {
 16563                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 16564  007070  6B66               	clrf	ValidateChannelMask@i& (0+255),b
 16565  007072                     l1283:
 16566                           
 16567                           ; BSR set to: 0
 16568                           ;lorawan_eu.c: 1173: {
 16569                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 16570  007072  A164               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 16571  007074  D00D               	goto	l12973
 16572                           
 16573                           ; BSR set to: 0
 16574  007076  5166               	movf	ValidateChannelMask@i& (0+255),w,b
 16575  007078  0D0E               	mullw	14
 16576  00707A  0E0D               	movlw	low (_Channels+13)
 16577  00707C  24F3               	addwf	prodl,w,c
 16578  00707E  6ED9               	movwf	fsr2l,c
 16579  007080  0E04               	movlw	high (_Channels+13)
 16580  007082  20F4               	addwfc	prodh,w,c
 16581  007084  6EDA               	movwf	fsr2h,c
 16582  007086  50DF               	movf	indf2,w,c
 16583  007088  0B07               	andlw	7
 16584  00708A  0A07               	xorlw	7
 16585  00708C  E001               	bz	l12973
 16586                           
 16587                           ; BSR set to: 0
 16588                           ;lorawan_eu.c: 1175: {
 16589                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 16590  00708E  0C03               	retlw	3
 16591  007090                     l12973:
 16592                           
 16593                           ; BSR set to: 0
 16594                           ;lorawan_eu.c: 1178: else
 16595                           ;lorawan_eu.c: 1179: {
 16596                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 16597  007090  90D8               	bcf	status,0,c
 16598  007092  3365               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),f,b
 16599  007094  3364               	rrcf	ValidateChannelMask@channelMask& (0+255),f,b
 16600                           
 16601                           ; BSR set to: 0
 16602  007096  2B66               	incf	ValidateChannelMask@i& (0+255),f,b
 16603                           
 16604                           ; BSR set to: 0
 16605  007098  0E0F               	movlw	15
 16606  00709A  6566               	cpfsgt	ValidateChannelMask@i& (0+255),b
 16607  00709C  D7EA               	goto	l1283
 16608  00709E  0C00               	retlw	0
 16609  0070A0                     __end_of_ValidateChannelMask:
 16610                           	opt stack 0
 16611                           tosu	equ	0xFFF
 16612                           tosh	equ	0xFFE
 16613                           tosl	equ	0xFFD
 16614                           pclath	equ	0xFFA
 16615                           tblptru	equ	0xFF8
 16616                           tblptrh	equ	0xFF7
 16617                           tblptrl	equ	0xFF6
 16618                           tablat	equ	0xFF5
 16619                           prodh	equ	0xFF4
 16620                           prodl	equ	0xFF3
 16621                           intcon	equ	0xFF2
 16622                           indf0	equ	0xFEF
 16623                           postinc0	equ	0xFEE
 16624                           fsr0h	equ	0xFEA
 16625                           fsr0l	equ	0xFE9
 16626                           wreg	equ	0xFE8
 16627                           postinc1	equ	0xFE6
 16628                           postdec1	equ	0xFE5
 16629                           plusw1	equ	0xFE3
 16630                           fsr1h	equ	0xFE2
 16631                           fsr1l	equ	0xFE1
 16632                           indf2	equ	0xFDF
 16633                           postinc2	equ	0xFDE
 16634                           postdec2	equ	0xFDD
 16635                           plusw2	equ	0xFDB
 16636                           fsr2h	equ	0xFDA
 16637                           fsr2l	equ	0xFD9
 16638                           status	equ	0xFD8
 16639                           
 16640 ;; *************** function _UpdateTxPower *****************
 16641 ;; Defined at:
 16642 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16643 ;; Parameters:    Size  Location     Type
 16644 ;;  txPowerNew      1    wreg     unsigned char 
 16645 ;; Auto vars:     Size  Location     Type
 16646 ;;  txPowerNew      1    4[BANK0 ] unsigned char 
 16647 ;; Return value:  Size  Location     Type
 16648 ;;                  1    wreg      void 
 16649 ;; Registers used:
 16650 ;;		wreg
 16651 ;; Tracked objects:
 16652 ;;		On entry : F/0
 16653 ;;		On exit  : 0/0
 16654 ;;		Unchanged: 0/0
 16655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16656 ;;      Params:         0       0       0       0       0       0       0       0       0
 16657 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16658 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16659 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16660 ;;Total ram usage:        1 bytes
 16661 ;; Hardware stack levels used:    1
 16662 ;; Hardware stack levels required when called:    7
 16663 ;; This function calls:
 16664 ;;		Nothing
 16665 ;; This function is called by:
 16666 ;;		_ExecuteLinkAdr
 16667 ;; This function uses a non-reentrant model
 16668 ;;
 16669                           
 16670                           	psect	text88
 16671  0078E2                     __ptext88:
 16672                           	opt stack 0
 16673  0078E2                     _UpdateTxPower:
 16674                           	opt stack 17
 16675                           
 16676                           ; BSR set to: 0
 16677                           ;incstack = 0
 16678                           ;UpdateTxPower@txPowerNew stored from wreg
 16679  0078E2  6F64               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 16680                           
 16681                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 16682  0078E4  C064  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 16683  0078E8  0012               	return		;funcret
 16684  0078EA                     __end_of_UpdateTxPower:
 16685                           	opt stack 0
 16686                           tosu	equ	0xFFF
 16687                           tosh	equ	0xFFE
 16688                           tosl	equ	0xFFD
 16689                           pclath	equ	0xFFA
 16690                           tblptru	equ	0xFF8
 16691                           tblptrh	equ	0xFF7
 16692                           tblptrl	equ	0xFF6
 16693                           tablat	equ	0xFF5
 16694                           prodh	equ	0xFF4
 16695                           prodl	equ	0xFF3
 16696                           intcon	equ	0xFF2
 16697                           indf0	equ	0xFEF
 16698                           postinc0	equ	0xFEE
 16699                           fsr0h	equ	0xFEA
 16700                           fsr0l	equ	0xFE9
 16701                           wreg	equ	0xFE8
 16702                           postinc1	equ	0xFE6
 16703                           postdec1	equ	0xFE5
 16704                           plusw1	equ	0xFE3
 16705                           fsr1h	equ	0xFE2
 16706                           fsr1l	equ	0xFE1
 16707                           indf2	equ	0xFDF
 16708                           postinc2	equ	0xFDE
 16709                           postdec2	equ	0xFDD
 16710                           plusw2	equ	0xFDB
 16711                           fsr2h	equ	0xFDA
 16712                           fsr2l	equ	0xFD9
 16713                           status	equ	0xFD8
 16714                           
 16715 ;; *************** function _UpdateCurrentDataRate *****************
 16716 ;; Defined at:
 16717 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16718 ;; Parameters:    Size  Location     Type
 16719 ;;  valueNew        1    wreg     unsigned char 
 16720 ;; Auto vars:     Size  Location     Type
 16721 ;;  valueNew        1    4[BANK0 ] unsigned char 
 16722 ;; Return value:  Size  Location     Type
 16723 ;;                  1    wreg      void 
 16724 ;; Registers used:
 16725 ;;		wreg
 16726 ;; Tracked objects:
 16727 ;;		On entry : F/0
 16728 ;;		On exit  : 0/0
 16729 ;;		Unchanged: 0/0
 16730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16731 ;;      Params:         0       0       0       0       0       0       0       0       0
 16732 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16733 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16734 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16735 ;;Total ram usage:        1 bytes
 16736 ;; Hardware stack levels used:    1
 16737 ;; Hardware stack levels required when called:    7
 16738 ;; This function calls:
 16739 ;;		Nothing
 16740 ;; This function is called by:
 16741 ;;		_ExecuteLinkAdr
 16742 ;;		_LORAWAN_SetCurrentDataRate
 16743 ;; This function uses a non-reentrant model
 16744 ;;
 16745                           
 16746                           	psect	text89
 16747  0078EA                     __ptext89:
 16748                           	opt stack 0
 16749  0078EA                     _UpdateCurrentDataRate:
 16750                           	opt stack 22
 16751                           
 16752                           ;incstack = 0
 16753                           ;UpdateCurrentDataRate@valueNew stored from wreg
 16754  0078EA  6F64               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 16755                           
 16756                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 16757  0078EC  C064  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 16758  0078F0  0012               	return		;funcret
 16759  0078F2                     __end_of_UpdateCurrentDataRate:
 16760                           	opt stack 0
 16761                           tosu	equ	0xFFF
 16762                           tosh	equ	0xFFE
 16763                           tosl	equ	0xFFD
 16764                           pclath	equ	0xFFA
 16765                           tblptru	equ	0xFF8
 16766                           tblptrh	equ	0xFF7
 16767                           tblptrl	equ	0xFF6
 16768                           tablat	equ	0xFF5
 16769                           prodh	equ	0xFF4
 16770                           prodl	equ	0xFF3
 16771                           intcon	equ	0xFF2
 16772                           indf0	equ	0xFEF
 16773                           postinc0	equ	0xFEE
 16774                           fsr0h	equ	0xFEA
 16775                           fsr0l	equ	0xFE9
 16776                           wreg	equ	0xFE8
 16777                           postinc1	equ	0xFE6
 16778                           postdec1	equ	0xFE5
 16779                           plusw1	equ	0xFE3
 16780                           fsr1h	equ	0xFE2
 16781                           fsr1l	equ	0xFE1
 16782                           indf2	equ	0xFDF
 16783                           postinc2	equ	0xFDE
 16784                           postdec2	equ	0xFDD
 16785                           plusw2	equ	0xFDB
 16786                           fsr2h	equ	0xFDA
 16787                           fsr2l	equ	0xFD9
 16788                           status	equ	0xFD8
 16789                           
 16790 ;; *************** function _EnableChannels *****************
 16791 ;; Defined at:
 16792 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16793 ;; Parameters:    Size  Location     Type
 16794 ;;  channelMask     2   14[BANK0 ] unsigned int 
 16795 ;;  channelMaskC    1   16[BANK0 ] unsigned char 
 16796 ;; Auto vars:     Size  Location     Type
 16797 ;;		None
 16798 ;; Return value:  Size  Location     Type
 16799 ;;                  1    wreg      void 
 16800 ;; Registers used:
 16801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16802 ;; Tracked objects:
 16803 ;;		On entry : F/0
 16804 ;;		On exit  : F/0
 16805 ;;		Unchanged: 0/0
 16806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16807 ;;      Params:         0       3       0       0       0       0       0       0       0
 16808 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16809 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16810 ;;      Totals:         0       3       0       0       0       0       0       0       0
 16811 ;;Total ram usage:        3 bytes
 16812 ;; Hardware stack levels used:    1
 16813 ;; Hardware stack levels required when called:    9
 16814 ;; This function calls:
 16815 ;;		_EnableChannels1
 16816 ;; This function is called by:
 16817 ;;		_ExecuteLinkAdr
 16818 ;; This function uses a non-reentrant model
 16819 ;;
 16820                           
 16821                           	psect	text90
 16822  007770                     __ptext90:
 16823                           	opt stack 0
 16824  007770                     _EnableChannels:
 16825                           	opt stack 15
 16826                           
 16827                           ; BSR set to: 0
 16828                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 16829                           
 16830                           ;incstack = 0
 16831  007770  C06E  F068         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 16832  007774  C06F  F069         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 16833  007778  C070  F06A         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 16834  00777C  6B6B               	clrf	EnableChannels1@channelIndexMin& (0+255),b
 16835  00777E  0E10               	movlw	16
 16836  007780  6F6C               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 16837  007782  EF13  F034         	goto	_EnableChannels1	;wreg free
 16838  007786                     __end_of_EnableChannels:
 16839                           	opt stack 0
 16840                           tosu	equ	0xFFF
 16841                           tosh	equ	0xFFE
 16842                           tosl	equ	0xFFD
 16843                           pclath	equ	0xFFA
 16844                           tblptru	equ	0xFF8
 16845                           tblptrh	equ	0xFF7
 16846                           tblptrl	equ	0xFF6
 16847                           tablat	equ	0xFF5
 16848                           prodh	equ	0xFF4
 16849                           prodl	equ	0xFF3
 16850                           intcon	equ	0xFF2
 16851                           indf0	equ	0xFEF
 16852                           postinc0	equ	0xFEE
 16853                           fsr0h	equ	0xFEA
 16854                           fsr0l	equ	0xFE9
 16855                           wreg	equ	0xFE8
 16856                           postinc1	equ	0xFE6
 16857                           postdec1	equ	0xFE5
 16858                           plusw1	equ	0xFE3
 16859                           fsr1h	equ	0xFE2
 16860                           fsr1l	equ	0xFE1
 16861                           indf2	equ	0xFDF
 16862                           postinc2	equ	0xFDE
 16863                           postdec2	equ	0xFDD
 16864                           plusw2	equ	0xFDB
 16865                           fsr2h	equ	0xFDA
 16866                           fsr2l	equ	0xFD9
 16867                           status	equ	0xFD8
 16868                           
 16869 ;; *************** function _EnableChannels1 *****************
 16870 ;; Defined at:
 16871 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;  channelMask     2    8[BANK0 ] unsigned int 
 16874 ;;  channelMaskC    1   10[BANK0 ] unsigned char 
 16875 ;;  channelIndex    1   11[BANK0 ] unsigned char 
 16876 ;;  channelIndex    1   12[BANK0 ] unsigned char 
 16877 ;; Auto vars:     Size  Location     Type
 16878 ;;  i               1   13[BANK0 ] unsigned char 
 16879 ;; Return value:  Size  Location     Type
 16880 ;;                  1    wreg      void 
 16881 ;; Registers used:
 16882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16883 ;; Tracked objects:
 16884 ;;		On entry : F/0
 16885 ;;		On exit  : F/0
 16886 ;;		Unchanged: 0/0
 16887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16888 ;;      Params:         0       5       0       0       0       0       0       0       0
 16889 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16890 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16891 ;;      Totals:         0       6       0       0       0       0       0       0       0
 16892 ;;Total ram usage:        6 bytes
 16893 ;; Hardware stack levels used:    1
 16894 ;; Hardware stack levels required when called:    8
 16895 ;; This function calls:
 16896 ;;		_UpdateChannelIdStatus
 16897 ;; This function is called by:
 16898 ;;		_EnableChannels
 16899 ;; This function uses a non-reentrant model
 16900 ;;
 16901                           
 16902                           	psect	text91
 16903  006826                     __ptext91:
 16904                           	opt stack 0
 16905  006826                     _EnableChannels1:
 16906                           	opt stack 15
 16907                           
 16908                           ; BSR set to: 0
 16909                           ;lorawan_eu.c: 1195: uint8_t i;
 16910                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 16911                           
 16912                           ; BSR set to: 0
 16913                           ;incstack = 0
 16914  006826  0E06               	movlw	6
 16915  006828  196A               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 16916  00682A  E10E               	bnz	l12683
 16917                           
 16918                           ; BSR set to: 0
 16919                           ;lorawan_eu.c: 1198: {
 16920                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 16921  00682C  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 16922  006830  D007               	goto	l12681
 16923  006832                     l12677:
 16924                           
 16925                           ; BSR set to: 0
 16926                           ;lorawan_eu.c: 1200: {
 16927                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 16928  006832  0E01               	movlw	1
 16929  006834  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16930  006836  516D               	movf	EnableChannels1@i& (0+255),w,b
 16931  006838  ECD9  F023         	call	_UpdateChannelIdStatus
 16932                           
 16933                           ; BSR set to: 2
 16934  00683C  0100               	movlb	0	; () banked
 16935  00683E  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 16936  006840                     l12681:
 16937                           
 16938                           ; BSR set to: 0
 16939  006840  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 16940  006842  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 16941  006844  E3F6               	bnc	l12677
 16942  006846  0012               	return	
 16943  006848                     l12683:
 16944                           
 16945                           ; BSR set to: 0
 16946                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 16947  006848  516A               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 16948  00684A  A4D8               	btfss	status,2,c
 16949  00684C  0012               	return	
 16950                           
 16951                           ; BSR set to: 0
 16952                           ;lorawan_eu.c: 1205: {
 16953                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 16954  00684E  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 16955  006852  D011               	goto	l12695
 16956  006854                     l1298:
 16957                           
 16958                           ; BSR set to: 0
 16959                           ;lorawan_eu.c: 1207: {
 16960                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 16961  006854  A168               	btfss	EnableChannels1@channelMask& (0+255),0,b
 16962  006856  D006               	goto	l12689
 16963                           
 16964                           ; BSR set to: 0
 16965                           ;lorawan_eu.c: 1209: {
 16966                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 16967  006858  0E01               	movlw	1
 16968  00685A  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16969  00685C  516D               	movf	EnableChannels1@i& (0+255),w,b
 16970  00685E  ECD9  F023         	call	_UpdateChannelIdStatus
 16971                           
 16972                           ;lorawan_eu.c: 1211: }
 16973  006862  D004               	goto	l12691
 16974  006864                     l12689:
 16975                           
 16976                           ; BSR set to: 0
 16977                           ;lorawan_eu.c: 1212: else
 16978                           ;lorawan_eu.c: 1213: {
 16979                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 16980  006864  6B64               	clrf	UpdateChannelIdStatus@statusNew& (0+255),b
 16981  006866  516D               	movf	EnableChannels1@i& (0+255),w,b
 16982  006868  ECD9  F023         	call	_UpdateChannelIdStatus
 16983  00686C                     l12691:
 16984                           
 16985                           ; BSR set to: 2
 16986                           ;lorawan_eu.c: 1215: }
 16987                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 16988  00686C  0100               	movlb	0	; () banked
 16989  00686E  90D8               	bcf	status,0,c
 16990  006870  3369               	rrcf	(EnableChannels1@channelMask+1)& (0+255),f,b
 16991  006872  3368               	rrcf	EnableChannels1@channelMask& (0+255),f,b
 16992                           
 16993                           ; BSR set to: 0
 16994  006874  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 16995  006876                     l12695:
 16996                           
 16997                           ; BSR set to: 0
 16998  006876  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 16999  006878  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 17000  00687A  E3EC               	bnc	l1298
 17001                           
 17002                           ; BSR set to: 0
 17003  00687C  0012               	return		;funcret
 17004  00687E                     __end_of_EnableChannels1:
 17005                           	opt stack 0
 17006                           tosu	equ	0xFFF
 17007                           tosh	equ	0xFFE
 17008                           tosl	equ	0xFFD
 17009                           pclath	equ	0xFFA
 17010                           tblptru	equ	0xFF8
 17011                           tblptrh	equ	0xFF7
 17012                           tblptrl	equ	0xFF6
 17013                           tablat	equ	0xFF5
 17014                           prodh	equ	0xFF4
 17015                           prodl	equ	0xFF3
 17016                           intcon	equ	0xFF2
 17017                           indf0	equ	0xFEF
 17018                           postinc0	equ	0xFEE
 17019                           fsr0h	equ	0xFEA
 17020                           fsr0l	equ	0xFE9
 17021                           wreg	equ	0xFE8
 17022                           postinc1	equ	0xFE6
 17023                           postdec1	equ	0xFE5
 17024                           plusw1	equ	0xFE3
 17025                           fsr1h	equ	0xFE2
 17026                           fsr1l	equ	0xFE1
 17027                           indf2	equ	0xFDF
 17028                           postinc2	equ	0xFDE
 17029                           postdec2	equ	0xFDD
 17030                           plusw2	equ	0xFDB
 17031                           fsr2h	equ	0xFDA
 17032                           fsr2l	equ	0xFD9
 17033                           status	equ	0xFD8
 17034                           
 17035 ;; *************** function _UpdateChannelIdStatus *****************
 17036 ;; Defined at:
 17037 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17038 ;; Parameters:    Size  Location     Type
 17039 ;;  channelId       1    wreg     unsigned char 
 17040 ;;  statusNew       1    4[BANK0 ] unsigned char 
 17041 ;; Auto vars:     Size  Location     Type
 17042 ;;  channelId       1    6[BANK0 ] unsigned char 
 17043 ;;  i               1    7[BANK0 ] unsigned char 
 17044 ;; Return value:  Size  Location     Type
 17045 ;;                  1    wreg      void 
 17046 ;; Registers used:
 17047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17048 ;; Tracked objects:
 17049 ;;		On entry : F/0
 17050 ;;		On exit  : F/2
 17051 ;;		Unchanged: 0/0
 17052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17053 ;;      Params:         0       1       0       0       0       0       0       0       0
 17054 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17055 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17056 ;;      Totals:         0       4       0       0       0       0       0       0       0
 17057 ;;Total ram usage:        4 bytes
 17058 ;; Hardware stack levels used:    1
 17059 ;; Hardware stack levels required when called:    7
 17060 ;; This function calls:
 17061 ;;		Nothing
 17062 ;; This function is called by:
 17063 ;;		_LORAWAN_SetChannelIdStatus
 17064 ;;		_ExecuteNewChannel
 17065 ;;		_EnableChannels1
 17066 ;; This function uses a non-reentrant model
 17067 ;;
 17068                           
 17069                           	psect	text92
 17070  0047B2                     __ptext92:
 17071                           	opt stack 0
 17072  0047B2                     _UpdateChannelIdStatus:
 17073                           	opt stack 17
 17074                           
 17075                           ; BSR set to: 0
 17076                           ;incstack = 0
 17077                           ;UpdateChannelIdStatus@channelId stored from wreg
 17078  0047B2  6F66               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 17079                           
 17080                           ;lorawan_eu.c: 1044: uint8_t i;
 17081                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 17082  0047B4  0100               	movlb	0	; () banked
 17083  0047B6  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17084  0047B8  0D0E               	mullw	14
 17085  0047BA  0E04               	movlw	low (_Channels+4)
 17086  0047BC  24F3               	addwf	prodl,w,c
 17087  0047BE  6ED9               	movwf	fsr2l,c
 17088  0047C0  0E04               	movlw	high (_Channels+4)
 17089  0047C2  20F4               	addwfc	prodh,w,c
 17090  0047C4  6EDA               	movwf	fsr2h,c
 17091  0047C6  C064  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 17092                           
 17093                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 17094  0047CA  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17095  0047CC  0D0E               	mullw	14
 17096  0047CE  0E04               	movlw	low (_Channels+4)
 17097  0047D0  24F3               	addwf	prodl,w,c
 17098  0047D2  6ED9               	movwf	fsr2l,c
 17099  0047D4  0E04               	movlw	high (_Channels+4)
 17100  0047D6  20F4               	addwfc	prodh,w,c
 17101  0047D8  6EDA               	movwf	fsr2h,c
 17102  0047DA  50DF               	movf	indf2,w,c
 17103  0047DC  E10C               	bnz	l12393
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;lorawan_eu.c: 1048: {
 17107                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 17108  0047DE  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17109  0047E0  0D0E               	mullw	14
 17110  0047E2  0E08               	movlw	low (_Channels+8)
 17111  0047E4  24F3               	addwf	prodl,w,c
 17112  0047E6  6ED9               	movwf	fsr2l,c
 17113  0047E8  0E04               	movlw	high (_Channels+8)
 17114  0047EA  20F4               	addwfc	prodh,w,c
 17115  0047EC  6EDA               	movwf	fsr2h,c
 17116  0047EE  6ADE               	clrf	postinc2,c
 17117  0047F0  6ADE               	clrf	postinc2,c
 17118  0047F2  6ADE               	clrf	postinc2,c
 17119  0047F4  6ADD               	clrf	postdec2,c
 17120  0047F6                     l12393:
 17121                           
 17122                           ; BSR set to: 0
 17123                           ;lorawan_eu.c: 1051: }
 17124                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 17125  0047F6  6B67               	clrf	UpdateChannelIdStatus@i& (0+255),b
 17126  0047F8  D04E               	goto	l12407
 17127  0047FA                     l12395:
 17128                           
 17129                           ; BSR set to: 0
 17130                           ;lorawan_eu.c: 1054: {
 17131                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 17132  0047FA  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17133  0047FC  0D0E               	mullw	14
 17134  0047FE  0E05               	movlw	low (_Channels+5)
 17135  004800  24F3               	addwf	prodl,w,c
 17136  004802  6ED9               	movwf	fsr2l,c
 17137  004804  0E04               	movlw	high (_Channels+5)
 17138  004806  20F4               	addwfc	prodh,w,c
 17139  004808  6EDA               	movwf	fsr2h,c
 17140  00480A  50DF               	movf	223,w,c
 17141  00480C  0B0F               	andlw	15
 17142  00480E  0100               	movlb	0	; () banked
 17143  004810  6F65               	movwf	??_UpdateChannelIdStatus& (0+255),b
 17144  004812  0102               	movlb	2	; () banked
 17145  004814  51EB               	movf	(_loRa+235)& (0+255),w,b
 17146  004816  0100               	movlb	0	; () banked
 17147  004818  5D65               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 17148  00481A  E216               	bc	l1234
 17149                           
 17150                           ; BSR set to: 0
 17151  00481C  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17152  00481E  0D0E               	mullw	14
 17153  004820  0E04               	movlw	low (_Channels+4)
 17154  004822  24F3               	addwf	prodl,w,c
 17155  004824  6ED9               	movwf	fsr2l,c
 17156  004826  0E04               	movlw	high (_Channels+4)
 17157  004828  20F4               	addwfc	prodh,w,c
 17158  00482A  6EDA               	movwf	fsr2h,c
 17159  00482C  04DE               	decf	postinc2,w,c
 17160  00482E  E10C               	bnz	l1234
 17161                           
 17162                           ; BSR set to: 0
 17163                           ;lorawan_eu.c: 1056: {
 17164                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 17165  004830  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17166  004832  0D0E               	mullw	14
 17167  004834  0E05               	movlw	low (_Channels+5)
 17168  004836  24F3               	addwf	prodl,w,c
 17169  004838  6ED9               	movwf	fsr2l,c
 17170  00483A  0E04               	movlw	high (_Channels+5)
 17171  00483C  20F4               	addwfc	prodh,w,c
 17172  00483E  6EDA               	movwf	fsr2h,c
 17173  004840  50DF               	movf	223,w,c
 17174  004842  0B0F               	andlw	15
 17175  004844  0102               	movlb	2	; () banked
 17176  004846  6FEB               	movwf	(_loRa+235)& (0+255),b
 17177  004848                     l1234:
 17178                           
 17179                           ;lorawan_eu.c: 1058: }
 17180                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 17181  004848  0100               	movlb	0	; () banked
 17182  00484A  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17183  00484C  0D0E               	mullw	14
 17184  00484E  0E05               	movlw	low (_Channels+5)
 17185  004850  24F3               	addwf	prodl,w,c
 17186  004852  6ED9               	movwf	fsr2l,c
 17187  004854  0E04               	movlw	high (_Channels+5)
 17188  004856  20F4               	addwfc	prodh,w,c
 17189  004858  6EDA               	movwf	fsr2h,c
 17190  00485A  38DF               	swapf	223,w,c
 17191  00485C  0B0F               	andlw	15
 17192  00485E  0102               	movlb	2	; () banked
 17193  004860  61EC               	cpfslt	(_loRa+236)& (0+255),b
 17194  004862  D017               	goto	l12405
 17195                           
 17196                           ; BSR set to: 2
 17197  004864  0100               	movlb	0	; () banked
 17198  004866  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17199  004868  0D0E               	mullw	14
 17200  00486A  0E04               	movlw	low (_Channels+4)
 17201  00486C  24F3               	addwf	prodl,w,c
 17202  00486E  6ED9               	movwf	fsr2l,c
 17203  004870  0E04               	movlw	high (_Channels+4)
 17204  004872  20F4               	addwfc	prodh,w,c
 17205  004874  6EDA               	movwf	fsr2h,c
 17206  004876  04DE               	decf	postinc2,w,c
 17207  004878  E10C               	bnz	l12405
 17208                           
 17209                           ; BSR set to: 0
 17210                           ;lorawan_eu.c: 1060: {
 17211                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 17212  00487A  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17213  00487C  0D0E               	mullw	14
 17214  00487E  0E05               	movlw	low (_Channels+5)
 17215  004880  24F3               	addwf	prodl,w,c
 17216  004882  6ED9               	movwf	fsr2l,c
 17217  004884  0E04               	movlw	high (_Channels+5)
 17218  004886  20F4               	addwfc	prodh,w,c
 17219  004888  6EDA               	movwf	fsr2h,c
 17220  00488A  38DF               	swapf	223,w,c
 17221  00488C  0B0F               	andlw	15
 17222  00488E  0102               	movlb	2	; () banked
 17223  004890  6FEC               	movwf	(_loRa+236)& (0+255),b
 17224  004892                     l12405:
 17225  004892  0100               	movlb	0	; () banked
 17226  004894  2B67               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 17227  004896                     l12407:
 17228                           
 17229                           ; BSR set to: 0
 17230  004896  0102               	movlb	2	; () banked
 17231  004898  51ED               	movf	(_loRa+237)& (0+255),w,b
 17232  00489A  0100               	movlb	0	; () banked
 17233  00489C  5D67               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 17234  00489E  E3AD               	bnc	l12395
 17235                           
 17236                           ; BSR set to: 0
 17237                           ;lorawan_eu.c: 1062: }
 17238                           ;lorawan_eu.c: 1063: }
 17239                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 17240  0048A0  0102               	movlb	2	; () banked
 17241  0048A2  51DF               	movf	(_loRa+223)& (0+255),w,b
 17242  0048A4  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 17243  0048A6  E202               	bc	l12413
 17244                           
 17245                           ; BSR set to: 2
 17246                           ;lorawan_eu.c: 1066: {
 17247                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 17248  0048A8  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 17249  0048AC                     l12413:
 17250                           
 17251                           ; BSR set to: 2
 17252                           ;lorawan_eu.c: 1068: }
 17253                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 17254  0048AC  51EB               	movf	(_loRa+235)& (0+255),w,b
 17255  0048AE  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 17256  0048B0  A0D8               	btfss	status,0,c
 17257                           
 17258                           ; BSR set to: 2
 17259                           ;lorawan_eu.c: 1071: {
 17260                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 17261  0048B2  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 17262                           
 17263                           ; BSR set to: 2
 17264  0048B6  0012               	return		;funcret
 17265  0048B8                     __end_of_UpdateChannelIdStatus:
 17266                           	opt stack 0
 17267                           tosu	equ	0xFFF
 17268                           tosh	equ	0xFFE
 17269                           tosl	equ	0xFFD
 17270                           pclath	equ	0xFFA
 17271                           tblptru	equ	0xFF8
 17272                           tblptrh	equ	0xFF7
 17273                           tblptrl	equ	0xFF6
 17274                           tablat	equ	0xFF5
 17275                           prodh	equ	0xFF4
 17276                           prodl	equ	0xFF3
 17277                           intcon	equ	0xFF2
 17278                           indf0	equ	0xFEF
 17279                           postinc0	equ	0xFEE
 17280                           fsr0h	equ	0xFEA
 17281                           fsr0l	equ	0xFE9
 17282                           wreg	equ	0xFE8
 17283                           postinc1	equ	0xFE6
 17284                           postdec1	equ	0xFE5
 17285                           plusw1	equ	0xFE3
 17286                           fsr1h	equ	0xFE2
 17287                           fsr1l	equ	0xFE1
 17288                           indf2	equ	0xFDF
 17289                           postinc2	equ	0xFDE
 17290                           postdec2	equ	0xFDD
 17291                           plusw2	equ	0xFDB
 17292                           fsr2h	equ	0xFDA
 17293                           fsr2l	equ	0xFD9
 17294                           status	equ	0xFD8
 17295                           
 17296 ;; *************** function _ExecuteDutyCycle *****************
 17297 ;; Defined at:
 17298 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17299 ;; Parameters:    Size  Location     Type
 17300 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17301 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17302 ;; Auto vars:     Size  Location     Type
 17303 ;;  maxDCycle       1    9[BANK0 ] unsigned char 
 17304 ;; Return value:  Size  Location     Type
 17305 ;;                  2    4[BANK0 ] PTR unsigned char 
 17306 ;; Registers used:
 17307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17308 ;; Tracked objects:
 17309 ;;		On entry : F/0
 17310 ;;		On exit  : D/0
 17311 ;;		Unchanged: 0/0
 17312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17313 ;;      Params:         0       2       0       0       0       0       0       0       0
 17314 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17315 ;;      Temps:          0       3       0       0       0       0       0       0       0
 17316 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17317 ;;Total ram usage:        6 bytes
 17318 ;; Hardware stack levels used:    1
 17319 ;; Hardware stack levels required when called:    7
 17320 ;; This function calls:
 17321 ;;		Nothing
 17322 ;; This function is called by:
 17323 ;;		_MacExecuteCommands
 17324 ;; This function uses a non-reentrant model
 17325 ;;
 17326                           
 17327                           	psect	text93
 17328  006A20                     __ptext93:
 17329                           	opt stack 0
 17330  006A20                     _ExecuteDutyCycle:
 17331                           	opt stack 18
 17332                           
 17333                           ; BSR set to: 0
 17334                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 17335                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 17336                           
 17337                           ; BSR set to: 2
 17338                           ;incstack = 0
 17339  006A20  C064  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 17340  006A24  C065  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 17341  006A28  50DF               	movf	indf2,w,c
 17342  006A2A  6F69               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 17343                           
 17344                           ; BSR set to: 0
 17345  006A2C  4B64               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 17346  006A2E  2B65               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 17347                           
 17348                           ; BSR set to: 0
 17349                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 17350  006A30  0E0F               	movlw	15
 17351  006A32  6169               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 17352  006A34  D012               	goto	l1110
 17353                           
 17354                           ; BSR set to: 0
 17355                           ;lorawan_eu.c: 600: {
 17356                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 17357  006A36  C069  F066         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 17358  006A3A  0E01               	movlw	1
 17359  006A3C  6F67               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 17360  006A3E  6B68               	clrf	(??_ExecuteDutyCycle+2)& (0+255),b
 17361  006A40  2B66               	incf	??_ExecuteDutyCycle& (0+255),f,b
 17362  006A42  D003               	goto	u14954
 17363  006A44                     u14955:
 17364  006A44  90D8               	bcf	status,0,c
 17365  006A46  3767               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 17366  006A48  3768               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 17367  006A4A                     u14954:
 17368  006A4A  2F66               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 17369  006A4C  D7FB               	goto	u14955
 17370  006A4E  C067  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 17371  006A52  C068  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 17372                           
 17373                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 17374  006A56  0102               	movlb	2	; () banked
 17375  006A58  8D03               	bsf	(_loRa+3)& (0+255),6,b
 17376  006A5A                     l1110:
 17377                           
 17378                           ;lorawan_eu.c: 603: }
 17379                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 17380  006A5A  0100               	movlb	0	; () banked
 17381  006A5C  2969               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 17382  006A5E  E102               	bnz	l13493
 17383                           
 17384                           ; BSR set to: 0
 17385                           ;lorawan_eu.c: 606: {
 17386                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 17387  006A60  0102               	movlb	2	; () banked
 17388  006A62  8F02               	bsf	(_loRa+2)& (0+255),7,b
 17389  006A64                     l13493:
 17390                           
 17391                           ;lorawan_eu.c: 608: }
 17392                           ;lorawan_eu.c: 610: return ptr;
 17393  006A64  C064  F064         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 17394  006A68  C065  F065         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 17395  006A6C  0012               	return		;funcret
 17396  006A6E                     __end_of_ExecuteDutyCycle:
 17397                           	opt stack 0
 17398                           tosu	equ	0xFFF
 17399                           tosh	equ	0xFFE
 17400                           tosl	equ	0xFFD
 17401                           pclath	equ	0xFFA
 17402                           tblptru	equ	0xFF8
 17403                           tblptrh	equ	0xFF7
 17404                           tblptrl	equ	0xFF6
 17405                           tablat	equ	0xFF5
 17406                           prodh	equ	0xFF4
 17407                           prodl	equ	0xFF3
 17408                           intcon	equ	0xFF2
 17409                           indf0	equ	0xFEF
 17410                           postinc0	equ	0xFEE
 17411                           fsr0h	equ	0xFEA
 17412                           fsr0l	equ	0xFE9
 17413                           wreg	equ	0xFE8
 17414                           postinc1	equ	0xFE6
 17415                           postdec1	equ	0xFE5
 17416                           plusw1	equ	0xFE3
 17417                           fsr1h	equ	0xFE2
 17418                           fsr1l	equ	0xFE1
 17419                           indf2	equ	0xFDF
 17420                           postinc2	equ	0xFDE
 17421                           postdec2	equ	0xFDD
 17422                           plusw2	equ	0xFDB
 17423                           fsr2h	equ	0xFDA
 17424                           fsr2l	equ	0xFD9
 17425                           status	equ	0xFD8
 17426                           
 17427 ;; *************** function _ExecuteDevStatus *****************
 17428 ;; Defined at:
 17429 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17430 ;; Parameters:    Size  Location     Type
 17431 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17432 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17433 ;; Auto vars:     Size  Location     Type
 17434 ;;		None
 17435 ;; Return value:  Size  Location     Type
 17436 ;;                  2    4[BANK0 ] PTR unsigned char 
 17437 ;; Registers used:
 17438 ;;		wreg, status,2, status,0
 17439 ;; Tracked objects:
 17440 ;;		On entry : F/0
 17441 ;;		On exit  : F/0
 17442 ;;		Unchanged: F/0
 17443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17444 ;;      Params:         0       2       0       0       0       0       0       0       0
 17445 ;;      Locals:         0       0       0       0       0       0       0       0       0
 17446 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17447 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17448 ;;Total ram usage:        2 bytes
 17449 ;; Hardware stack levels used:    1
 17450 ;; Hardware stack levels required when called:    7
 17451 ;; This function calls:
 17452 ;;		Nothing
 17453 ;; This function is called by:
 17454 ;;		_MacExecuteCommands
 17455 ;; This function uses a non-reentrant model
 17456 ;;
 17457                           
 17458                           	psect	text94
 17459  00789E                     __ptext94:
 17460                           	opt stack 0
 17461  00789E                     _ExecuteDevStatus:
 17462                           	opt stack 18
 17463                           
 17464                           ; BSR set to: 0
 17465                           ;lorawan_eu.c: 674: return ptr;
 17466                           
 17467                           ;incstack = 0
 17468  00789E  C064  F064         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 17469  0078A2  C065  F065         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 17470                           
 17471                           ; BSR set to: 0
 17472  0078A6  0012               	return		;funcret
 17473  0078A8                     __end_of_ExecuteDevStatus:
 17474                           	opt stack 0
 17475                           tosu	equ	0xFFF
 17476                           tosh	equ	0xFFE
 17477                           tosl	equ	0xFFD
 17478                           pclath	equ	0xFFA
 17479                           tblptru	equ	0xFF8
 17480                           tblptrh	equ	0xFF7
 17481                           tblptrl	equ	0xFF6
 17482                           tablat	equ	0xFF5
 17483                           prodh	equ	0xFF4
 17484                           prodl	equ	0xFF3
 17485                           intcon	equ	0xFF2
 17486                           indf0	equ	0xFEF
 17487                           postinc0	equ	0xFEE
 17488                           fsr0h	equ	0xFEA
 17489                           fsr0l	equ	0xFE9
 17490                           wreg	equ	0xFE8
 17491                           postinc1	equ	0xFE6
 17492                           postdec1	equ	0xFE5
 17493                           plusw1	equ	0xFE3
 17494                           fsr1h	equ	0xFE2
 17495                           fsr1l	equ	0xFE1
 17496                           indf2	equ	0xFDF
 17497                           postinc2	equ	0xFDE
 17498                           postdec2	equ	0xFDD
 17499                           plusw2	equ	0xFDB
 17500                           fsr2h	equ	0xFDA
 17501                           fsr2l	equ	0xFD9
 17502                           status	equ	0xFD8
 17503                           
 17504 ;; *************** function _LORAWAN_Send *****************
 17505 ;; Defined at:
 17506 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17507 ;; Parameters:    Size  Location     Type
 17508 ;;  confirmed       1    wreg     enum E17158
 17509 ;;  port            1  129[BANK0 ] unsigned char 
 17510 ;;  buffer          2  130[BANK0 ] PTR void 
 17511 ;;		 -> payload(2), NULL(0), 
 17512 ;;  bufferLength    1  132[BANK0 ] unsigned char 
 17513 ;; Auto vars:     Size  Location     Type
 17514 ;;  confirmed       1  135[BANK0 ] enum E17158
 17515 ;;  result          1  134[BANK0 ] enum E17131
 17516 ;; Return value:  Size  Location     Type
 17517 ;;                  1    wreg      enum E17131
 17518 ;; Registers used:
 17519 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17520 ;; Tracked objects:
 17521 ;;		On entry : F/0
 17522 ;;		On exit  : D/0
 17523 ;;		Unchanged: 0/0
 17524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17525 ;;      Params:         0       4       0       0       0       0       0       0       0
 17526 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17527 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17528 ;;      Totals:         0       7       0       0       0       0       0       0       0
 17529 ;;Total ram usage:        7 bytes
 17530 ;; Hardware stack levels used:    1
 17531 ;; Hardware stack levels required when called:   13
 17532 ;; This function calls:
 17533 ;;		_AssemblePacket
 17534 ;;		_LORAWAN_GetMaxPayloadSize
 17535 ;;		_RADIO_ReceiveStop
 17536 ;;		_RADIO_Transmit
 17537 ;;		_SelectChannelForTransmission
 17538 ;; This function is called by:
 17539 ;;		_AutomaticReplyCallback
 17540 ;;		_LORAWAN_RxDone
 17541 ;;		_sendPacket
 17542 ;; This function uses a non-reentrant model
 17543 ;;
 17544                           
 17545                           	psect	text95
 17546  005602                     __ptext95:
 17547                           	opt stack 0
 17548  005602                     _LORAWAN_Send:
 17549                           	opt stack 16
 17550                           
 17551                           ; BSR set to: 0
 17552                           ;incstack = 0
 17553                           ;LORAWAN_Send@confirmed stored from wreg
 17554  005602  6FE7               	movwf	LORAWAN_Send@confirmed& (0+255),b
 17555                           
 17556                           ;lorawan.c: 187: LorawanError_t result;
 17557                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 17558  005604  0102               	movlb	2	; () banked
 17559  005606  A103               	btfss	(_loRa+3)& (0+255),0,b
 17560                           
 17561                           ; BSR set to: 2
 17562                           ;lorawan.c: 192: }
 17563                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 17564  005608  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 17565  00560A  0012               	return	
 17566                           
 17567                           ; BSR set to: 2
 17568                           ;lorawan.c: 197: }
 17569                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 17570  00560C  A902               	btfss	(_loRa+2)& (0+255),4,b
 17571  00560E  0012               	return	
 17572                           
 17573                           ; BSR set to: 2
 17574                           ;lorawan.c: 202: }
 17575                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 17576  005610  0100               	movlb	0	; () banked
 17577  005612  51E1               	movf	LORAWAN_Send@port& (0+255),w,b
 17578  005614  E103               	bnz	l13951
 17579                           
 17580                           ; BSR set to: 0
 17581  005616  51E4               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17582  005618  E001               	bz	l13951
 17583  00561A  0012               	return	
 17584  00561C                     l13951:
 17585                           
 17586                           ; BSR set to: 0
 17587                           ;lorawan.c: 207: }
 17588                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 17589  00561C  EC06  F037         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 17590  005620  6FE5               	movwf	??_LORAWAN_Send& (0+255),b
 17591  005622  51E4               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17592  005624  5DE5               	subwf	??_LORAWAN_Send& (0+255),w,b
 17593  005626  E201               	bc	l13955
 17594  005628  0012               	return	
 17595  00562A                     l13955:
 17596                           
 17597                           ; BSR set to: 0
 17598                           ;lorawan.c: 213: }
 17599                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 17600  00562A  0102               	movlb	2	; () banked
 17601  00562C  2906               	incf	(_loRa+6)& (0+255),w,b
 17602  00562E  E108               	bnz	l13959
 17603  005630  2907               	incf	(_loRa+7)& (0+255),w,b
 17604  005632  E106               	bnz	l13959
 17605  005634  2908               	incf	(_loRa+8)& (0+255),w,b
 17606  005636  E104               	bnz	l13959
 17607  005638  2909               	incf	(_loRa+9)& (0+255),w,b
 17608  00563A  E102               	bnz	l13959
 17609                           
 17610                           ; BSR set to: 2
 17611                           ;lorawan.c: 216: {
 17612                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 17613  00563C  8304               	bsf	(_loRa+4)& (0+255),1,b
 17614                           
 17615                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 17616                           ;	Return value of _LORAWAN_Send is never used
 17617  00563E  0012               	return	
 17618  005640                     l13959:
 17619                           
 17620                           ; BSR set to: 2
 17621                           ;lorawan.c: 220: }
 17622                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 17623  005640  5102               	movf	(_loRa+2)& (0+255),w,b
 17624  005642  0B0F               	andlw	15
 17625  005644  E003               	bz	l13965
 17626                           
 17627                           ; BSR set to: 2
 17628  005646  5112               	movf	(_loRa+18)& (0+255),w,b
 17629  005648  E101               	bnz	l13965
 17630  00564A  0012               	return	
 17631  00564C                     l13965:
 17632                           
 17633                           ; BSR set to: 2
 17634                           ;lorawan.c: 225: }
 17635                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 17636  00564C  0E01               	movlw	1
 17637  00564E  EC57  F033         	call	_SelectChannelForTransmission
 17638  005652  6FE6               	movwf	LORAWAN_Send@result& (0+255),b
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;lorawan.c: 228: if (result != OK)
 17642  005654  51E6               	movf	LORAWAN_Send@result& (0+255),w,b
 17643  005656  E001               	bz	l13973
 17644  005658  0012               	return	
 17645  00565A                     l13973:
 17646                           
 17647                           ; BSR set to: 0
 17648                           ;lorawan.c: 232: else
 17649                           ;lorawan.c: 233: {
 17650                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 17651  00565A  0E02               	movlw	2
 17652  00565C  0102               	movlb	2	; () banked
 17653  00565E  1912               	xorwf	(_loRa+18)& (0+255),w,b
 17654  005660  E102               	bnz	l13977
 17655                           
 17656                           ; BSR set to: 2
 17657                           ;lorawan.c: 235: {
 17658                           ;lorawan.c: 236: RADIO_ReceiveStop();
 17659  005662  ECC5  F03A         	call	_RADIO_ReceiveStop	;wreg free
 17660  005666                     l13977:
 17661                           
 17662                           ;lorawan.c: 237: }
 17663                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 17664  005666  C0E1  F166         	movff	LORAWAN_Send@port,AssemblePacket@port
 17665  00566A  C0E2  F167         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 17666  00566E  C0E3  F168         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 17667  005672  C0E4  F169         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 17668  005676  0101               	movlb	1	; () banked
 17669  005678  6B6A               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 17670  00567A  0100               	movlb	0	; () banked
 17671  00567C  51E7               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 17672  00567E  ECA4  F00D         	call	_AssemblePacket
 17673                           
 17674                           ; BSR set to: 2
 17675                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 17676  005682  0EF0               	movlw	low (_macBuffer+16)
 17677  005684  0100               	movlb	0	; () banked
 17678  005686  6F94               	movwf	RADIO_Transmit@buffer& (0+255),b
 17679  005688  0E04               	movlw	high (_macBuffer+16)
 17680  00568A  6F95               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 17681  00568C  C2D4  F096         	movff	_loRa+212,RADIO_Transmit@bufferLen
 17682  005690  ECFA  F017         	call	_RADIO_Transmit	;wreg free
 17683  005694  5194               	movf	?_RADIO_Transmit& (0+255),w,b
 17684  005696  1195               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 17685  005698  A4D8               	btfss	status,2,c
 17686  00569A  0012               	return	
 17687                           
 17688                           ; BSR set to: 0
 17689                           ;lorawan.c: 242: {
 17690                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 17691  00569C  0102               	movlb	2	; () banked
 17692  00569E  2B06               	incf	(_loRa+6)& (0+255),f,b
 17693  0056A0  0E00               	movlw	0
 17694  0056A2  2307               	addwfc	(_loRa+7)& (0+255),f,b
 17695  0056A4  2308               	addwfc	(_loRa+8)& (0+255),f,b
 17696  0056A6  2309               	addwfc	(_loRa+9)& (0+255),f,b
 17697                           
 17698                           ;lorawan.c: 245: if (CNF == confirmed)
 17699  0056A8  0100               	movlb	0	; () banked
 17700  0056AA  05E7               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 17701  0056AC  E102               	bnz	l1767
 17702                           
 17703                           ; BSR set to: 0
 17704                           ;lorawan.c: 246: {
 17705                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 17706  0056AE  0102               	movlb	2	; () banked
 17707  0056B0  8100               	bsf	_loRa& (0+255),0,b
 17708  0056B2                     l1767:
 17709                           
 17710                           ;lorawan.c: 248: }
 17711                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 17712  0056B2  0102               	movlb	2	; () banked
 17713  0056B4  8B00               	bsf	_loRa& (0+255),5,b
 17714                           
 17715                           ; BSR set to: 2
 17716                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 17717  0056B6  5102               	movf	(_loRa+2)& (0+255),w,b
 17718  0056B8  0BF0               	andlw	-16
 17719  0056BA  0901               	iorlw	1
 17720  0056BC  6F02               	movwf	(_loRa+2)& (0+255),b
 17721                           
 17722                           ;lorawan.c: 251: }
 17723  0056BE  0012               	return		;funcret
 17724  0056C0                     __end_of_LORAWAN_Send:
 17725                           	opt stack 0
 17726                           tosu	equ	0xFFF
 17727                           tosh	equ	0xFFE
 17728                           tosl	equ	0xFFD
 17729                           pclath	equ	0xFFA
 17730                           tblptru	equ	0xFF8
 17731                           tblptrh	equ	0xFF7
 17732                           tblptrl	equ	0xFF6
 17733                           tablat	equ	0xFF5
 17734                           prodh	equ	0xFF4
 17735                           prodl	equ	0xFF3
 17736                           intcon	equ	0xFF2
 17737                           indf0	equ	0xFEF
 17738                           postinc0	equ	0xFEE
 17739                           fsr0h	equ	0xFEA
 17740                           fsr0l	equ	0xFE9
 17741                           wreg	equ	0xFE8
 17742                           postinc1	equ	0xFE6
 17743                           postdec1	equ	0xFE5
 17744                           plusw1	equ	0xFE3
 17745                           fsr1h	equ	0xFE2
 17746                           fsr1l	equ	0xFE1
 17747                           indf2	equ	0xFDF
 17748                           postinc2	equ	0xFDE
 17749                           postdec2	equ	0xFDD
 17750                           plusw2	equ	0xFDB
 17751                           fsr2h	equ	0xFDA
 17752                           fsr2l	equ	0xFD9
 17753                           status	equ	0xFD8
 17754                           
 17755 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 17756 ;; Defined at:
 17757 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17758 ;; Parameters:    Size  Location     Type
 17759 ;;		None
 17760 ;; Auto vars:     Size  Location     Type
 17761 ;;  result          1   14[BANK0 ] unsigned char 
 17762 ;;  macCommandsL    1   13[BANK0 ] unsigned char 
 17763 ;; Return value:  Size  Location     Type
 17764 ;;                  1    wreg      unsigned char 
 17765 ;; Registers used:
 17766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17767 ;; Tracked objects:
 17768 ;;		On entry : D/2
 17769 ;;		On exit  : F/0
 17770 ;;		Unchanged: 0/0
 17771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17772 ;;      Params:         0       0       0       0       0       0       0       0       0
 17773 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17774 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17775 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17776 ;;Total ram usage:        3 bytes
 17777 ;; Hardware stack levels used:    1
 17778 ;; Hardware stack levels required when called:    8
 17779 ;; This function calls:
 17780 ;;		_CountfOptsLength
 17781 ;; This function is called by:
 17782 ;;		_LORAWAN_Send
 17783 ;;		_AckRetransmissionCallback
 17784 ;; This function uses a non-reentrant model
 17785 ;;
 17786                           
 17787                           	psect	text96
 17788  006E0C                     __ptext96:
 17789                           	opt stack 0
 17790  006E0C                     _LORAWAN_GetMaxPayloadSize:
 17791                           	opt stack 20
 17792                           
 17793                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 17794                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 17795                           
 17796                           ;incstack = 0
 17797  006E0C  ECC6  F02C         	call	_CountfOptsLength	;wreg free
 17798  006E10  6F6D               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 17799                           
 17800                           ; BSR set to: 0
 17801                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 17802  006E12  0102               	movlb	2	; () banked
 17803  006E14  51A7               	movf	(_loRa+167)& (0+255),w,b
 17804  006E16  E10A               	bnz	l13655
 17805                           
 17806                           ; BSR set to: 2
 17807                           ;lorawan.c: 1564: {
 17808                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 17809  006E18  0E6D               	movlw	low _maxPayloadSize
 17810  006E1A  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17811  006E1C  6EF6               	movwf	tblptrl,c
 17812  006E1E  6AF7               	clrf	tblptrh,c
 17813  006E20  0E7F               	movlw	high _maxPayloadSize
 17814  006E22  22F7               	addwfc	tblptrh,f,c
 17815  006E24                     	if	0	;There are less than 3 active tblptr bytes
 17816  006E24                     	endif
 17817  006E24  0008               	tblrd		*
 17818  006E26  CFF5 F06E          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 17819                           
 17820                           ;lorawan.c: 1566: }
 17821  006E2A  D00D               	goto	l13657
 17822  006E2C                     l13655:
 17823                           
 17824                           ; BSR set to: 2
 17825                           ;lorawan.c: 1567: else
 17826                           ;lorawan.c: 1568: {
 17827                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 17828  006E2C  0E6D               	movlw	low _maxPayloadSize
 17829  006E2E  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17830  006E30  6EF6               	movwf	tblptrl,c
 17831  006E32  6AF7               	clrf	tblptrh,c
 17832  006E34  0E7F               	movlw	high _maxPayloadSize
 17833  006E36  22F7               	addwfc	tblptrh,f,c
 17834  006E38                     	if	0	;There are less than 3 active tblptr bytes
 17835  006E38                     	endif
 17836  006E38  0008               	tblrd		*
 17837  006E3A  CFF5 F06C          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 17838  006E3E  0100               	movlb	0	; () banked
 17839  006E40  516D               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 17840  006E42  5D6C               	subwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 17841  006E44  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 17842  006E46                     l13657:
 17843                           
 17844                           ;lorawan.c: 1570: }
 17845                           ;lorawan.c: 1572: return result;
 17846  006E46  0100               	movlb	0	; () banked
 17847  006E48  516E               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 17848                           
 17849                           ; BSR set to: 0
 17850  006E4A  0012               	return		;funcret
 17851  006E4C                     __end_of_LORAWAN_GetMaxPayloadSize:
 17852                           	opt stack 0
 17853                           tosu	equ	0xFFF
 17854                           tosh	equ	0xFFE
 17855                           tosl	equ	0xFFD
 17856                           pclath	equ	0xFFA
 17857                           tblptru	equ	0xFF8
 17858                           tblptrh	equ	0xFF7
 17859                           tblptrl	equ	0xFF6
 17860                           tablat	equ	0xFF5
 17861                           prodh	equ	0xFF4
 17862                           prodl	equ	0xFF3
 17863                           intcon	equ	0xFF2
 17864                           indf0	equ	0xFEF
 17865                           postinc0	equ	0xFEE
 17866                           fsr0h	equ	0xFEA
 17867                           fsr0l	equ	0xFE9
 17868                           wreg	equ	0xFE8
 17869                           postinc1	equ	0xFE6
 17870                           postdec1	equ	0xFE5
 17871                           plusw1	equ	0xFE3
 17872                           fsr1h	equ	0xFE2
 17873                           fsr1l	equ	0xFE1
 17874                           indf2	equ	0xFDF
 17875                           postinc2	equ	0xFDE
 17876                           postdec2	equ	0xFDD
 17877                           plusw2	equ	0xFDB
 17878                           fsr2h	equ	0xFDA
 17879                           fsr2l	equ	0xFD9
 17880                           status	equ	0xFD8
 17881                           
 17882 ;; *************** function _AssemblePacket *****************
 17883 ;; Defined at:
 17884 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17885 ;; Parameters:    Size  Location     Type
 17886 ;;  confirmed       1    wreg     unsigned char 
 17887 ;;  port            1  102[BANK1 ] unsigned char 
 17888 ;;  buffer          2  103[BANK1 ] PTR unsigned char 
 17889 ;;		 -> payload(2), NULL(0), 
 17890 ;;  bufferLength    2  105[BANK1 ] unsigned int 
 17891 ;; Auto vars:     Size  Location     Type
 17892 ;;  confirmed       1  124[BANK0 ] unsigned char 
 17893 ;;  bufferIndex     1  128[BANK0 ] unsigned char 
 17894 ;;  macCmdIdx       1  127[BANK0 ] unsigned char 
 17895 ;;  fCtrl           1  126[BANK0 ] struct .
 17896 ;;  mhdr            1  125[BANK0 ] struct .
 17897 ;; Return value:  Size  Location     Type
 17898 ;;                  1    wreg      void 
 17899 ;; Registers used:
 17900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17901 ;; Tracked objects:
 17902 ;;		On entry : F/0
 17903 ;;		On exit  : F/2
 17904 ;;		Unchanged: 0/0
 17905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17906 ;;      Params:         0       0       5       0       0       0       0       0       0
 17907 ;;      Locals:         0       5       0       0       0       0       0       0       0
 17908 ;;      Temps:          0       2       0       0       0       0       0       0       0
 17909 ;;      Totals:         0       7       5       0       0       0       0       0       0
 17910 ;;Total ram usage:       12 bytes
 17911 ;; Hardware stack levels used:    1
 17912 ;; Hardware stack levels required when called:   12
 17913 ;; This function calls:
 17914 ;;		_AESCmac
 17915 ;;		_AssembleEncryptionBlock
 17916 ;;		_CountfOptsLength
 17917 ;;		_EncryptFRMPayload
 17918 ;;		_FindSmallestDataRate
 17919 ;;		_IncludeMacCommandsResponse
 17920 ;;		_memcpy
 17921 ;;		_memset
 17922 ;; This function is called by:
 17923 ;;		_LORAWAN_Send
 17924 ;; This function uses a non-reentrant model
 17925 ;;
 17926                           
 17927                           	psect	text97
 17928  001B48                     __ptext97:
 17929                           	opt stack 0
 17930  001B48                     _AssemblePacket:
 17931                           	opt stack 16
 17932                           
 17933                           ; BSR set to: 0
 17934                           ;incstack = 0
 17935                           ;AssemblePacket@confirmed stored from wreg
 17936  001B48  6FDC               	movwf	AssemblePacket@confirmed& (0+255),b
 17937                           
 17938                           ;lorawan.c: 1674: Mhdr_t mhdr;
 17939                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 17940  001B4A  0E10               	movlw	16
 17941  001B4C  0100               	movlb	0	; () banked
 17942  001B4E  6FE0               	movwf	AssemblePacket@bufferIndex& (0+255),b
 17943                           
 17944                           ; BSR set to: 0
 17945                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 17946                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 17947  001B50  6BDF               	clrf	AssemblePacket@macCmdIdx& (0+255),b
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 17951  001B52  0EDD               	movlw	low AssemblePacket@mhdr
 17952  001B54  6F64               	movwf	memset@p1& (0+255),b
 17953  001B56  6B65               	clrf	(memset@p1+1)& (0+255),b
 17954  001B58  6B67               	clrf	(memset@c+1)& (0+255),b
 17955  001B5A  6B66               	clrf	memset@c& (0+255),b
 17956  001B5C  6B69               	clrf	(memset@n+1)& (0+255),b
 17957  001B5E  0E01               	movlw	1
 17958  001B60  6F68               	movwf	memset@n& (0+255),b
 17959  001B62  EC9A  F039         	call	_memset	;wreg free
 17960                           
 17961                           ; BSR set to: 0
 17962                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 17963  001B66  0EE0               	movlw	low _macBuffer
 17964  001B68  6F64               	movwf	memset@p1& (0+255),b
 17965  001B6A  0E04               	movlw	high _macBuffer
 17966  001B6C  6F65               	movwf	(memset@p1+1)& (0+255),b
 17967  001B6E  6B67               	clrf	(memset@c+1)& (0+255),b
 17968  001B70  6B66               	clrf	memset@c& (0+255),b
 17969  001B72  0E01               	movlw	1
 17970  001B74  6F69               	movwf	(memset@n+1)& (0+255),b
 17971  001B76  0E0F               	movlw	15
 17972  001B78  6F68               	movwf	memset@n& (0+255),b
 17973  001B7A  EC9A  F039         	call	_memset	;wreg free
 17974                           
 17975                           ; BSR set to: 0
 17976                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 17977  001B7E  0EAF               	movlw	low _aesBuffer
 17978  001B80  6F64               	movwf	memset@p1& (0+255),b
 17979  001B82  0E01               	movlw	high _aesBuffer
 17980  001B84  6F65               	movwf	(memset@p1+1)& (0+255),b
 17981  001B86  6B67               	clrf	(memset@c+1)& (0+255),b
 17982  001B88  6B66               	clrf	memset@c& (0+255),b
 17983  001B8A  6B69               	clrf	(memset@n+1)& (0+255),b
 17984  001B8C  0E10               	movlw	16
 17985  001B8E  6F68               	movwf	memset@n& (0+255),b
 17986  001B90  EC9A  F039         	call	_memset	;wreg free
 17987                           
 17988                           ; BSR set to: 0
 17989                           ;lorawan.c: 1683: if (confirmed == 1)
 17990  001B94  05DC               	decf	AssemblePacket@confirmed& (0+255),w,b
 17991  001B96  E107               	bnz	l13677
 17992                           
 17993                           ; BSR set to: 0
 17994                           ;lorawan.c: 1684: {
 17995                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 17996  001B98  51DD               	movf	AssemblePacket@mhdr& (0+255),w,b
 17997  001B9A  0B1F               	andlw	-225
 17998  001B9C  0980               	iorlw	128
 17999  001B9E  6FDD               	movwf	AssemblePacket@mhdr& (0+255),b
 18000                           
 18001                           ; BSR set to: 0
 18002                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18003  001BA0  0102               	movlb	2	; () banked
 18004  001BA2  8100               	bsf	_loRa& (0+255),0,b
 18005                           
 18006                           ;lorawan.c: 1687: }
 18007  001BA4  D004               	goto	l2252
 18008  001BA6                     l13677:
 18009                           
 18010                           ; BSR set to: 0
 18011                           ;lorawan.c: 1688: else
 18012                           ;lorawan.c: 1689: {
 18013                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 18014  001BA6  51DD               	movf	AssemblePacket@mhdr& (0+255),w,b
 18015  001BA8  0B1F               	andlw	-225
 18016  001BAA  0940               	iorlw	64
 18017  001BAC  6FDD               	movwf	AssemblePacket@mhdr& (0+255),b
 18018  001BAE                     l2252:
 18019                           
 18020                           ;lorawan.c: 1691: }
 18021                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 18022  001BAE  0EFC               	movlw	-4
 18023  001BB0  0100               	movlb	0	; () banked
 18024  001BB2  17DD               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18025                           
 18026                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 18027  001BB4  0EE3               	movlw	-29
 18028  001BB6  17DD               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18029                           
 18030                           ; BSR set to: 0
 18031                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 18032  001BB8  0EE0               	movlw	low _macBuffer
 18033  001BBA  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18034  001BBC  6ED9               	movwf	fsr2l,c
 18035  001BBE  6ADA               	clrf	fsr2h,c
 18036  001BC0  0E04               	movlw	high _macBuffer
 18037  001BC2  22DA               	addwfc	fsr2h,f,c
 18038  001BC4  C0DD  FFDF         	movff	AssemblePacket@mhdr,indf2
 18039                           
 18040                           ; BSR set to: 0
 18041  001BC8  2BE0               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18042                           
 18043                           ; BSR set to: 0
 18044                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 18045  001BCA  0EE0               	movlw	low _macBuffer
 18046  001BCC  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18047  001BCE  6F64               	movwf	memcpy@d1& (0+255),b
 18048  001BD0  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18049  001BD2  0E04               	movlw	high _macBuffer
 18050  001BD4  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18051  001BD6  0E1E               	movlw	low (_loRa+30)
 18052  001BD8  6F66               	movwf	memcpy@s1& (0+255),b
 18053  001BDA  0E02               	movlw	high (_loRa+30)
 18054  001BDC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18055  001BDE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18056  001BE0  0E04               	movlw	4
 18057  001BE2  6F68               	movwf	memcpy@n& (0+255),b
 18058  001BE4  EC6A  F034         	call	_memcpy	;wreg free
 18059                           
 18060                           ; BSR set to: 0
 18061                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 18062  001BE8  0E04               	movlw	4
 18063  001BEA  27E0               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18064                           
 18065                           ; BSR set to: 0
 18066                           ;lorawan.c: 1699: fCtrl.value = 0;
 18067  001BEC  6BDE               	clrf	AssemblePacket@fCtrl& (0+255),b
 18068                           
 18069                           ; BSR set to: 0
 18070                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 18071  001BEE  0102               	movlb	2	; () banked
 18072  001BF0  AD02               	btfss	(_loRa+2)& (0+255),6,b
 18073  001BF2  D030               	goto	l2253
 18074                           
 18075                           ; BSR set to: 2
 18076                           ;lorawan.c: 1702: {
 18077                           ;lorawan.c: 1703: fCtrl.adr = 1;
 18078  001BF4  0100               	movlb	0	; () banked
 18079  001BF6  8FDE               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 18080                           
 18081                           ; BSR set to: 0
 18082                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 18083  001BF8  0102               	movlb	2	; () banked
 18084  001BFA  51DF               	movf	(_loRa+223)& (0+255),w,b
 18085  001BFC  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 18086  001BFE  E229               	bc	l2254
 18087                           
 18088                           ; BSR set to: 2
 18089                           ;lorawan.c: 1705: {
 18090                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 18091  001C00  0100               	movlb	0	; () banked
 18092  001C02  8DDE               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 18093                           
 18094                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 18095  001C04  0102               	movlb	2	; () banked
 18096  001C06  8900               	bsf	_loRa& (0+255),4,b
 18097                           
 18098                           ; BSR set to: 2
 18099                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 18100  001C08  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 18101  001C0A  2BD1               	incf	(_loRa+209)& (0+255),f,b
 18102                           
 18103                           ; BSR set to: 2
 18104                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 18105  001C0C  51A2               	movf	(_loRa+162)& (0+255),w,b
 18106  001C0E  19D0               	xorwf	(_loRa+208)& (0+255),w,b
 18107  001C10  11D1               	iorwf	(_loRa+209)& (0+255),w,b
 18108  001C12  E102               	bnz	l13703
 18109                           
 18110                           ; BSR set to: 2
 18111                           ;lorawan.c: 1711: {
 18112                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 18113  001C14  6BEE               	clrf	(_loRa+238)& (0+255),b
 18114  001C16  D01A               	goto	L9
 18115  001C18                     l13703:
 18116                           
 18117                           ; BSR set to: 2
 18118                           ;lorawan.c: 1716: else
 18119                           ;lorawan.c: 1717: {
 18120                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 18121  001C18  51A2               	movf	(_loRa+162)& (0+255),w,b
 18122  001C1A  0100               	movlb	0	; () banked
 18123  001C1C  6FDA               	movwf	??_AssemblePacket& (0+255),b
 18124  001C1E  6BDB               	clrf	(??_AssemblePacket+1)& (0+255),b
 18125  001C20  0102               	movlb	2	; () banked
 18126  001C22  51D0               	movf	(_loRa+208)& (0+255),w,b
 18127  001C24  0100               	movlb	0	; () banked
 18128  001C26  5DDA               	subwf	??_AssemblePacket& (0+255),w,b
 18129  001C28  0102               	movlb	2	; () banked
 18130  001C2A  51D1               	movf	(_loRa+209)& (0+255),w,b
 18131  001C2C  0100               	movlb	0	; () banked
 18132  001C2E  59DB               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 18133  001C30  E20E               	bc	l2257
 18134                           
 18135                           ; BSR set to: 0
 18136                           ;lorawan.c: 1719: {
 18137                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 18138  001C32  0102               	movlb	2	; () banked
 18139  001C34  2BEE               	incf	(_loRa+238)& (0+255),f,b
 18140                           
 18141                           ; BSR set to: 2
 18142                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 18143  001C36  51EE               	movf	(_loRa+238)& (0+255),w,b
 18144  001C38  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 18145  001C3A  E20C               	bc	l2253
 18146                           
 18147                           ; BSR set to: 2
 18148                           ;lorawan.c: 1725: {
 18149                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 18150  001C3C  6BEE               	clrf	(_loRa+238)& (0+255),b
 18151                           
 18152                           ; BSR set to: 2
 18153                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 18154  001C3E  EC75  F02D         	call	_FindSmallestDataRate	;wreg free
 18155  001C42  0900               	iorlw	0
 18156  001C44  E107               	bnz	l2253
 18157                           
 18158                           ; BSR set to: 0
 18159                           ;lorawan.c: 1729: {
 18160                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 18161  001C46  0102               	movlb	2	; () banked
 18162  001C48  6BD0               	clrf	(_loRa+208)& (0+255),b
 18163  001C4A  6BD1               	clrf	(_loRa+209)& (0+255),b
 18164  001C4C                     L9:
 18165                           
 18166                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 18167  001C4C  0100               	movlb	0	; () banked
 18168  001C4E                     l2257:
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;lorawan.c: 1737: else
 18172                           ;lorawan.c: 1738: {
 18173                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 18174  001C4E  9DDE               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 18175                           
 18176                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 18177  001C50  0102               	movlb	2	; () banked
 18178  001C52                     l2254:
 18179                           
 18180                           ; BSR set to: 2
 18181                           ;lorawan.c: 1744: else
 18182                           ;lorawan.c: 1745: {
 18183                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 18184  001C52  9900               	bcf	_loRa& (0+255),4,b
 18185  001C54                     l2253:
 18186                           
 18187                           ;lorawan.c: 1747: }
 18188                           ;lorawan.c: 1748: }
 18189                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 18190  001C54  0102               	movlb	2	; () banked
 18191  001C56  A300               	btfss	_loRa& (0+255),1,b
 18192  001C58  D004               	goto	l2262
 18193                           
 18194                           ; BSR set to: 2
 18195                           ;lorawan.c: 1751: {
 18196                           ;lorawan.c: 1752: fCtrl.ack = 1;
 18197  001C5A  0100               	movlb	0	; () banked
 18198  001C5C  8BDE               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 18199                           
 18200                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 18201  001C5E  0102               	movlb	2	; () banked
 18202  001C60  9300               	bcf	_loRa& (0+255),1,b
 18203  001C62                     l2262:
 18204                           
 18205                           ; BSR set to: 2
 18206                           ;lorawan.c: 1754: }
 18207                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 18208  001C62  0100               	movlb	0	; () banked
 18209  001C64  99DE               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 18210                           
 18211                           ; BSR set to: 0
 18212                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 18213  001C66  0102               	movlb	2	; () banked
 18214  001C68  51A7               	movf	(_loRa+167)& (0+255),w,b
 18215  001C6A  E004               	bz	l13721
 18216                           
 18217                           ; BSR set to: 2
 18218  001C6C  0101               	movlb	1	; () banked
 18219  001C6E  5169               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18220  001C70  116A               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18221  001C72  E104               	bnz	l13723
 18222  001C74                     l13721:
 18223                           
 18224                           ;lorawan.c: 1759: {
 18225                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 18226  001C74  0EF0               	movlw	-16
 18227  001C76  0100               	movlb	0	; () banked
 18228  001C78  17DE               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 18229                           
 18230                           ;lorawan.c: 1761: }
 18231  001C7A  D007               	goto	l13725
 18232  001C7C                     l13723:
 18233                           
 18234                           ; BSR set to: 1
 18235                           ;lorawan.c: 1763: else
 18236                           ;lorawan.c: 1764: {
 18237                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 18238  001C7C  ECC6  F02C         	call	_CountfOptsLength	;wreg free
 18239  001C80  6FDA               	movwf	??_AssemblePacket& (0+255),b
 18240  001C82  19DE               	xorwf	AssemblePacket@fCtrl& (0+255),w,b
 18241  001C84  0BF0               	andlw	-16
 18242  001C86  19DA               	xorwf	??_AssemblePacket& (0+255),w,b
 18243  001C88  6FDE               	movwf	AssemblePacket@fCtrl& (0+255),b
 18244  001C8A                     l13725:
 18245                           
 18246                           ; BSR set to: 0
 18247                           ;lorawan.c: 1766: }
 18248                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 18249  001C8A  0EE0               	movlw	low _macBuffer
 18250  001C8C  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18251  001C8E  6ED9               	movwf	fsr2l,c
 18252  001C90  6ADA               	clrf	fsr2h,c
 18253  001C92  0E04               	movlw	high _macBuffer
 18254  001C94  22DA               	addwfc	fsr2h,f,c
 18255  001C96  C0DE  FFDF         	movff	AssemblePacket@fCtrl,indf2
 18256                           
 18257                           ; BSR set to: 0
 18258  001C9A  2BE0               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18259                           
 18260                           ; BSR set to: 0
 18261                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 18262  001C9C  0EE0               	movlw	low _macBuffer
 18263  001C9E  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18264  001CA0  6F64               	movwf	memcpy@d1& (0+255),b
 18265  001CA2  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18266  001CA4  0E04               	movlw	high _macBuffer
 18267  001CA6  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18268  001CA8  0E06               	movlw	low (_loRa+6)
 18269  001CAA  6F66               	movwf	memcpy@s1& (0+255),b
 18270  001CAC  0E02               	movlw	high (_loRa+6)
 18271  001CAE  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18272  001CB0  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18273  001CB2  0E02               	movlw	2
 18274  001CB4  6F68               	movwf	memcpy@n& (0+255),b
 18275  001CB6  EC6A  F034         	call	_memcpy	;wreg free
 18276                           
 18277                           ; BSR set to: 0
 18278                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 18279  001CBA  0E02               	movlw	2
 18280  001CBC  27E0               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18281                           
 18282                           ; BSR set to: 0
 18283                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 18284  001CBE  0102               	movlb	2	; () banked
 18285  001CC0  51A7               	movf	(_loRa+167)& (0+255),w,b
 18286  001CC2  E00F               	bz	l13739
 18287                           
 18288                           ; BSR set to: 2
 18289  001CC4  0101               	movlb	1	; () banked
 18290  001CC6  5169               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18291  001CC8  116A               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18292  001CCA  E00B               	bz	l13739
 18293                           
 18294                           ; BSR set to: 1
 18295                           ;lorawan.c: 1774: {
 18296                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 18297  001CCC  0EE0               	movlw	low _macBuffer
 18298  001CCE  0100               	movlb	0	; () banked
 18299  001CD0  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18300  001CD2  0E04               	movlw	high _macBuffer
 18301  001CD4  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18302  001CD6  0EE0               	movlw	low AssemblePacket@bufferIndex
 18303  001CD8  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18304  001CDA  0E01               	movlw	1
 18305  001CDC  6F67               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18306  001CDE  EC23  F00F         	call	_IncludeMacCommandsResponse	;wreg free
 18307  001CE2                     l13739:
 18308                           
 18309                           ;lorawan.c: 1776: }
 18310                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 18311  001CE2  0EE0               	movlw	low _macBuffer
 18312  001CE4  0100               	movlb	0	; () banked
 18313  001CE6  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18314  001CE8  6ED9               	movwf	fsr2l,c
 18315  001CEA  6ADA               	clrf	fsr2h,c
 18316  001CEC  0E04               	movlw	high _macBuffer
 18317  001CEE  22DA               	addwfc	fsr2h,f,c
 18318  001CF0  C166  FFDF         	movff	AssemblePacket@port,indf2
 18319                           
 18320                           ; BSR set to: 0
 18321  001CF4  2BE0               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18322                           
 18323                           ; BSR set to: 0
 18324                           ;lorawan.c: 1780: if (bufferLength != 0)
 18325  001CF6  0101               	movlb	1	; () banked
 18326  001CF8  5169               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18327  001CFA  116A               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18328  001CFC  E031               	bz	l13751
 18329                           
 18330                           ; BSR set to: 1
 18331                           ;lorawan.c: 1781: {
 18332                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 18333  001CFE  0EE0               	movlw	low _macBuffer
 18334  001D00  0100               	movlb	0	; () banked
 18335  001D02  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18336  001D04  6F64               	movwf	memcpy@d1& (0+255),b
 18337  001D06  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18338  001D08  0E04               	movlw	high _macBuffer
 18339  001D0A  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18340  001D0C  C167  F066         	movff	AssemblePacket@buffer,memcpy@s1
 18341  001D10  C168  F067         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 18342  001D14  C169  F068         	movff	AssemblePacket@bufferLength,memcpy@n
 18343  001D18  C16A  F069         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 18344  001D1C  EC6A  F034         	call	_memcpy	;wreg free
 18345                           
 18346                           ; BSR set to: 0
 18347                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 18348  001D20  C167  F0A4         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 18349  001D24  C168  F0A5         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 18350  001D28  C169  F0A6         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 18351  001D2C  6BA7               	clrf	EncryptFRMPayload@dir& (0+255),b
 18352  001D2E  C206  F0A8         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18353  001D32  C207  F0A9         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18354  001D36  C208  F0AA         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18355  001D3A  C209  F0AB         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18356  001D3E  0E32               	movlw	low (_loRa+50)
 18357  001D40  6FAC               	movwf	EncryptFRMPayload@key& (0+255),b
 18358  001D42  0E02               	movlw	high (_loRa+50)
 18359  001D44  6FAD               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18360  001D46  C0E0  F0AE         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18361  001D4A  0EE0               	movlw	low _macBuffer
 18362  001D4C  6FAF               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18363  001D4E  0E04               	movlw	high _macBuffer
 18364  001D50  6FB0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18365  001D52  6BB1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18366  001D54  ECC2  F020         	call	_EncryptFRMPayload	;wreg free
 18367                           
 18368                           ; BSR set to: 0
 18369                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 18370  001D58  0101               	movlb	1	; () banked
 18371  001D5A  5169               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18372  001D5C  0100               	movlb	0	; () banked
 18373  001D5E  D02A               	goto	L8
 18374  001D60                     l13751:
 18375                           
 18376                           ; BSR set to: 1
 18377                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 18378  001D60  0102               	movlb	2	; () banked
 18379  001D62  51A7               	movf	(_loRa+167)& (0+255),w,b
 18380  001D64  E028               	bz	l13757
 18381                           
 18382                           ; BSR set to: 2
 18383                           ;lorawan.c: 1787: {
 18384                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 18385  001D66  0EEF               	movlw	low _radioBuffer
 18386  001D68  0100               	movlb	0	; () banked
 18387  001D6A  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18388  001D6C  0E05               	movlw	high _radioBuffer
 18389  001D6E  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18390  001D70  0EDF               	movlw	low AssemblePacket@macCmdIdx
 18391  001D72  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18392  001D74  6B67               	clrf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18393  001D76  EC23  F00F         	call	_IncludeMacCommandsResponse	;wreg free
 18394                           
 18395                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 18396  001D7A  0EEF               	movlw	low _radioBuffer
 18397  001D7C  6FA4               	movwf	EncryptFRMPayload@buffer& (0+255),b
 18398  001D7E  0E05               	movlw	high _radioBuffer
 18399  001D80  6FA5               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 18400  001D82  C0DF  F0A6         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 18401  001D86  6BA7               	clrf	EncryptFRMPayload@dir& (0+255),b
 18402  001D88  C206  F0A8         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18403  001D8C  C207  F0A9         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18404  001D90  C208  F0AA         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18405  001D94  C209  F0AB         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18406  001D98  0E22               	movlw	low (_loRa+34)
 18407  001D9A  6FAC               	movwf	EncryptFRMPayload@key& (0+255),b
 18408  001D9C  0E02               	movlw	high (_loRa+34)
 18409  001D9E  6FAD               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18410  001DA0  C0E0  F0AE         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18411  001DA4  0EE0               	movlw	low _macBuffer
 18412  001DA6  6FAF               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18413  001DA8  0E04               	movlw	high _macBuffer
 18414  001DAA  6FB0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18415  001DAC  6BB1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18416  001DAE  ECC2  F020         	call	_EncryptFRMPayload	;wreg free
 18417                           
 18418                           ; BSR set to: 0
 18419                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 18420  001DB2  51DF               	movf	AssemblePacket@macCmdIdx& (0+255),w,b
 18421  001DB4                     L8:
 18422  001DB4  27E0               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18423  001DB6                     l13757:
 18424                           
 18425                           ;lorawan.c: 1793: }
 18426                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 18427  001DB6  C206  F06E         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 18428  001DBA  C207  F06F         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 18429  001DBE  C208  F070         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 18430  001DC2  C209  F071         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 18431  001DC6  0100               	movlb	0	; () banked
 18432  001DC8  51E0               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18433  001DCA  0FF0               	addlw	240
 18434  001DCC  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 18435  001DCE  0E49               	movlw	73
 18436  001DD0  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 18437  001DD2  0E00               	movlw	0
 18438  001DD4  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 18439  001DD6  EC15  F02C         	call	_AssembleEncryptionBlock
 18440                           
 18441                           ; BSR set to: 0
 18442                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 18443  001DDA  0EE0               	movlw	low _macBuffer
 18444  001DDC  6F64               	movwf	memcpy@d1& (0+255),b
 18445  001DDE  0E04               	movlw	high _macBuffer
 18446  001DE0  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 18447  001DE2  0EAF               	movlw	low _aesBuffer
 18448  001DE4  6F66               	movwf	memcpy@s1& (0+255),b
 18449  001DE6  0E01               	movlw	high _aesBuffer
 18450  001DE8  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18451  001DEA  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18452  001DEC  0E10               	movlw	16
 18453  001DEE  6F68               	movwf	memcpy@n& (0+255),b
 18454  001DF0  EC6A  F034         	call	_memcpy	;wreg free
 18455                           
 18456                           ; BSR set to: 0
 18457                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 18458  001DF4  0E22               	movlw	low (_loRa+34)
 18459  001DF6  6FCC               	movwf	AESCmac@key& (0+255),b
 18460  001DF8  0E02               	movlw	high (_loRa+34)
 18461  001DFA  6FCD               	movwf	(AESCmac@key+1)& (0+255),b
 18462  001DFC  0EAF               	movlw	low _aesBuffer
 18463  001DFE  6FCE               	movwf	AESCmac@output& (0+255),b
 18464  001E00  0E01               	movlw	high _aesBuffer
 18465  001E02  6FCF               	movwf	(AESCmac@output+1)& (0+255),b
 18466  001E04  0EE0               	movlw	low _macBuffer
 18467  001E06  6FD0               	movwf	AESCmac@input& (0+255),b
 18468  001E08  0E04               	movlw	high _macBuffer
 18469  001E0A  6FD1               	movwf	(AESCmac@input+1)& (0+255),b
 18470  001E0C  C0E0  F0D2         	movff	AssemblePacket@bufferIndex,AESCmac@size
 18471  001E10  EC16  F00C         	call	_AESCmac	;wreg free
 18472                           
 18473                           ; BSR set to: 0
 18474                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 18475  001E14  0EE0               	movlw	low _macBuffer
 18476  001E16  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18477  001E18  6F64               	movwf	memcpy@d1& (0+255),b
 18478  001E1A  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18479  001E1C  0E04               	movlw	high _macBuffer
 18480  001E1E  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18481  001E20  0EAF               	movlw	low _aesBuffer
 18482  001E22  6F66               	movwf	memcpy@s1& (0+255),b
 18483  001E24  0E01               	movlw	high _aesBuffer
 18484  001E26  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18485  001E28  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18486  001E2A  0E04               	movlw	4
 18487  001E2C  6F68               	movwf	memcpy@n& (0+255),b
 18488  001E2E  EC6A  F034         	call	_memcpy	;wreg free
 18489                           
 18490                           ; BSR set to: 0
 18491                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 18492  001E32  0E04               	movlw	4
 18493  001E34  27E0               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18494                           
 18495                           ; BSR set to: 0
 18496                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 18497  001E36  0EF0               	movlw	240
 18498  001E38  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18499  001E3A  0102               	movlb	2	; () banked
 18500  001E3C  6FD4               	movwf	(_loRa+212)& (0+255),b
 18501  001E3E  6BD5               	clrf	(_loRa+213)& (0+255),b
 18502  001E40  0EFF               	movlw	255
 18503  001E42  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 18504                           
 18505                           ; BSR set to: 2
 18506  001E44  0CFF               	retlw	255	;funcret
 18507  001E46                     __end_of_AssemblePacket:
 18508                           	opt stack 0
 18509                           tosu	equ	0xFFF
 18510                           tosh	equ	0xFFE
 18511                           tosl	equ	0xFFD
 18512                           pclath	equ	0xFFA
 18513                           tblptru	equ	0xFF8
 18514                           tblptrh	equ	0xFF7
 18515                           tblptrl	equ	0xFF6
 18516                           tablat	equ	0xFF5
 18517                           prodh	equ	0xFF4
 18518                           prodl	equ	0xFF3
 18519                           intcon	equ	0xFF2
 18520                           indf0	equ	0xFEF
 18521                           postinc0	equ	0xFEE
 18522                           fsr0h	equ	0xFEA
 18523                           fsr0l	equ	0xFE9
 18524                           wreg	equ	0xFE8
 18525                           postinc1	equ	0xFE6
 18526                           postdec1	equ	0xFE5
 18527                           plusw1	equ	0xFE3
 18528                           fsr1h	equ	0xFE2
 18529                           fsr1l	equ	0xFE1
 18530                           indf2	equ	0xFDF
 18531                           postinc2	equ	0xFDE
 18532                           postdec2	equ	0xFDD
 18533                           plusw2	equ	0xFDB
 18534                           fsr2h	equ	0xFDA
 18535                           fsr2l	equ	0xFD9
 18536                           status	equ	0xFD8
 18537                           
 18538 ;; *************** function _IncludeMacCommandsResponse *****************
 18539 ;; Defined at:
 18540 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18541 ;; Parameters:    Size  Location     Type
 18542 ;;  macBuffer       2    4[BANK0 ] PTR unsigned char 
 18543 ;;		 -> macBuffer(271), radioBuffer(271), 
 18544 ;;  pBufferIndex    1    6[BANK0 ] PTR unsigned char 
 18545 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 18546 ;;  bIncludeInFo    1    7[BANK0 ] unsigned char 
 18547 ;; Auto vars:     Size  Location     Type
 18548 ;;  bufferIndex     1   15[BANK0 ] unsigned char 
 18549 ;;  i               1   14[BANK0 ] unsigned char 
 18550 ;; Return value:  Size  Location     Type
 18551 ;;                  1    wreg      void 
 18552 ;; Registers used:
 18553 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18554 ;; Tracked objects:
 18555 ;;		On entry : F/0
 18556 ;;		On exit  : F/0
 18557 ;;		Unchanged: 0/0
 18558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18559 ;;      Params:         0       4       0       0       0       0       0       0       0
 18560 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18561 ;;      Temps:          0       6       0       0       0       0       0       0       0
 18562 ;;      Totals:         0      12       0       0       0       0       0       0       0
 18563 ;;Total ram usage:       12 bytes
 18564 ;; Hardware stack levels used:    1
 18565 ;; Hardware stack levels required when called:    8
 18566 ;; This function calls:
 18567 ;;		_RADIO_GetPacketSnr
 18568 ;; This function is called by:
 18569 ;;		_AssemblePacket
 18570 ;; This function uses a non-reentrant model
 18571 ;;
 18572                           
 18573                           	psect	text98
 18574  001E46                     __ptext98:
 18575                           	opt stack 0
 18576  001E46                     _IncludeMacCommandsResponse:
 18577                           	opt stack 19
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 18581                           
 18582                           ; BSR set to: 0
 18583                           
 18584                           ; BSR set to: 2
 18585                           ;incstack = 0
 18586  001E46  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18587  001E48  6ED9               	movwf	fsr2l,c
 18588  001E4A  6ADA               	clrf	fsr2h,c
 18589  001E4C  50DF               	movf	indf2,w,c
 18590  001E4E  6F6F               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 18591                           
 18592                           ; BSR set to: 0
 18593                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 18594  001E50  6B6E               	clrf	IncludeMacCommandsResponse@i& (0+255),b
 18595  001E52  D166               	goto	l13351
 18596  001E54                     l13255:
 18597                           
 18598                           ; BSR set to: 0
 18599                           ;lorawan.c: 1851: {
 18600                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 18601  001E54  5167               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 18602  001E56  E101 D148          	bz	l13347
 18603                           
 18604                           ; BSR set to: 0
 18605  001E5A  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18606  001E5C  0D02               	mullw	2
 18607  001E5E  0EA8               	movlw	low (_loRa+168)
 18608  001E60  24F3               	addwf	prodl,w,c
 18609  001E62  6ED9               	movwf	fsr2l,c
 18610  001E64  0E02               	movlw	high (_loRa+168)
 18611  001E66  20F4               	addwfc	prodh,w,c
 18612  001E68  6EDA               	movwf	fsr2h,c
 18613  001E6A  28DE               	incf	postinc2,w,c
 18614  001E6C  E101 D13D          	bz	l13347
 18615                           
 18616                           ; BSR set to: 0
 18617                           ;lorawan.c: 1853: {
 18618                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 18619  001E70  0EFE               	movlw	254
 18620  001E72  6F68               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 18621  001E74  6969               	setf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 18622  001E76  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18623  001E78  0D02               	mullw	2
 18624  001E7A  0EA8               	movlw	low (_loRa+168)
 18625  001E7C  24F3               	addwf	prodl,w,c
 18626  001E7E  6ED9               	movwf	fsr2l,c
 18627  001E80  0E02               	movlw	high (_loRa+168)
 18628  001E82  20F4               	addwfc	prodh,w,c
 18629  001E84  6EDA               	movwf	fsr2h,c
 18630  001E86  50DF               	movf	indf2,w,c
 18631  001E88  6F6A               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 18632  001E8A  6B6B               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 18633  001E8C  5168               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 18634  001E8E  276A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),f,b
 18635  001E90  5169               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 18636  001E92  236B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),f,b
 18637  001E94  0E94               	movlw	low _macEndDevCmdReplyLen
 18638  001E96  256A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 18639  001E98  6EF6               	movwf	tblptrl,c
 18640  001E9A  0E7F               	movlw	high _macEndDevCmdReplyLen
 18641  001E9C  216B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 18642  001E9E  6EF7               	movwf	tblptrh,c
 18643  001EA0                     	if	0	;There are less than 3 active tblptr bytes
 18644  001EA0                     	endif
 18645  001EA0  0008               	tblrd		*
 18646  001EA2  50F5               	movf	tablat,w,c
 18647  001EA4  C06F  F06C         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 18648  001EA8  6B6D               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 18649  001EAA  276C               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18650  001EAC  0E00               	movlw	0
 18651  001EAE  236D               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18652  001EB0  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18653  001EB2  6ED9               	movwf	fsr2l,c
 18654  001EB4  6ADA               	clrf	fsr2h,c
 18655  001EB6  50DF               	movf	indf2,w,c
 18656  001EB8  5F6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18657  001EBA  0E00               	movlw	0
 18658  001EBC  5B6D               	subwfb	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18659  001EBE  BF6D               	btfsc	(??_IncludeMacCommandsResponse+5)& (0+255),7,b
 18660  001EC0  D114               	goto	l13347
 18661  001EC2  516D               	movf	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 18662  001EC4  E105               	bnz	u14670
 18663  001EC6  0E10               	movlw	16
 18664  001EC8  5D6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 18665  001ECA  E301 D12F          	bc	l13353
 18666  001ECE  D10D               	goto	l13347
 18667  001ED0                     u14670:
 18668  001ED0  D12D               	goto	l13353
 18669  001ED2                     l13263:
 18670                           
 18671                           ; BSR set to: 0
 18672                           ;lorawan.c: 1862: {
 18673                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 18674  001ED2  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18675  001ED4  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18676  001ED6  6ED9               	movwf	fsr2l,c
 18677  001ED8  0E00               	movlw	0
 18678  001EDA  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18679  001EDC  6EDA               	movwf	fsr2h,c
 18680  001EDE  0E03               	movlw	3
 18681  001EE0  6EDF               	movwf	indf2,c
 18682                           
 18683                           ; BSR set to: 0
 18684  001EE2  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18685                           
 18686                           ; BSR set to: 0
 18687                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 18688  001EE4  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18689  001EE6  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18690  001EE8  6ED9               	movwf	fsr2l,c
 18691  001EEA  0E00               	movlw	0
 18692  001EEC  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18693  001EEE  6EDA               	movwf	fsr2h,c
 18694  001EF0  6ADF               	clrf	indf2,c
 18695                           
 18696                           ; BSR set to: 0
 18697                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 18698  001EF2  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18699  001EF4  0D02               	mullw	2
 18700  001EF6  0EA9               	movlw	low (_loRa+169)
 18701  001EF8  24F3               	addwf	prodl,w,c
 18702  001EFA  6ED9               	movwf	fsr2l,c
 18703  001EFC  0E02               	movlw	high (_loRa+169)
 18704  001EFE  20F4               	addwfc	prodh,w,c
 18705  001F00  6EDA               	movwf	fsr2h,c
 18706  001F02  A0DF               	btfss	indf2,0,c
 18707  001F04  D009               	goto	l13273
 18708                           
 18709                           ; BSR set to: 2
 18710                           ;lorawan.c: 1866: {
 18711                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 18712  001F06  0100               	movlb	0	; () banked
 18713  001F08  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18714  001F0A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18715  001F0C  6ED9               	movwf	fsr2l,c
 18716  001F0E  0E00               	movlw	0
 18717  001F10  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18718  001F12  6EDA               	movwf	fsr2h,c
 18719  001F14  0E00               	movlw	0
 18720  001F16  80DB               	bsf	plusw2,0,c
 18721  001F18                     l13273:
 18722                           
 18723                           ;lorawan.c: 1868: }
 18724                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 18725  001F18  0100               	movlb	0	; () banked
 18726  001F1A  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18727  001F1C  0D02               	mullw	2
 18728  001F1E  0EA9               	movlw	low (_loRa+169)
 18729  001F20  24F3               	addwf	prodl,w,c
 18730  001F22  6ED9               	movwf	fsr2l,c
 18731  001F24  0E02               	movlw	high (_loRa+169)
 18732  001F26  20F4               	addwfc	prodh,w,c
 18733  001F28  6EDA               	movwf	fsr2h,c
 18734  001F2A  A2DF               	btfss	indf2,1,c
 18735  001F2C  D008               	goto	l13277
 18736                           
 18737                           ; BSR set to: 2
 18738                           ;lorawan.c: 1871: {
 18739                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 18740  001F2E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18741  001F30  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18742  001F32  6ED9               	movwf	fsr2l,c
 18743  001F34  0E00               	movlw	0
 18744  001F36  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18745  001F38  6EDA               	movwf	fsr2h,c
 18746  001F3A  0E00               	movlw	0
 18747  001F3C  82DB               	bsf	plusw2,1,c
 18748  001F3E                     l13277:
 18749                           
 18750                           ;lorawan.c: 1873: }
 18751                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 18752  001F3E  0100               	movlb	0	; () banked
 18753  001F40  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18754  001F42  0D02               	mullw	2
 18755  001F44  0EA9               	movlw	low (_loRa+169)
 18756  001F46  24F3               	addwf	prodl,w,c
 18757  001F48  6ED9               	movwf	fsr2l,c
 18758  001F4A  0E02               	movlw	high (_loRa+169)
 18759  001F4C  20F4               	addwfc	prodh,w,c
 18760  001F4E  6EDA               	movwf	fsr2h,c
 18761  001F50  A4DF               	btfss	indf2,2,c
 18762  001F52  D009               	goto	l13281
 18763  001F54                     l13279:
 18764                           
 18765                           ; BSR set to: 2
 18766                           ;lorawan.c: 1876: {
 18767                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 18768  001F54  0100               	movlb	0	; () banked
 18769  001F56  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18770  001F58  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18771  001F5A  6ED9               	movwf	fsr2l,c
 18772  001F5C  0E00               	movlw	0
 18773  001F5E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18774  001F60  6EDA               	movwf	fsr2h,c
 18775  001F62  0E00               	movlw	0
 18776  001F64  84DB               	bsf	plusw2,2,c
 18777  001F66                     l13281:
 18778                           
 18779                           ;lorawan.c: 1878: }
 18780                           ;lorawan.c: 1879: bufferIndex ++;
 18781  001F66  0100               	movlb	0	; () banked
 18782  001F68  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18783                           
 18784                           ;lorawan.c: 1880: }
 18785                           ;lorawan.c: 1881: break;
 18786  001F6A  D0D9               	goto	l13349
 18787  001F6C                     l13283:
 18788                           
 18789                           ; BSR set to: 0
 18790                           ;lorawan.c: 1884: {
 18791                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 18792  001F6C  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18793  001F6E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18794  001F70  6ED9               	movwf	fsr2l,c
 18795  001F72  0E00               	movlw	0
 18796  001F74  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18797  001F76  6EDA               	movwf	fsr2h,c
 18798  001F78  0E05               	movlw	5
 18799  001F7A  6EDF               	movwf	indf2,c
 18800                           
 18801                           ; BSR set to: 0
 18802  001F7C  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18803                           
 18804                           ; BSR set to: 0
 18805                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 18806  001F7E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18807  001F80  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18808  001F82  6ED9               	movwf	fsr2l,c
 18809  001F84  0E00               	movlw	0
 18810  001F86  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18811  001F88  6EDA               	movwf	fsr2h,c
 18812  001F8A  6ADF               	clrf	indf2,c
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 18816  001F8C  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18817  001F8E  0D02               	mullw	2
 18818  001F90  0EA9               	movlw	low (_loRa+169)
 18819  001F92  24F3               	addwf	prodl,w,c
 18820  001F94  6ED9               	movwf	fsr2l,c
 18821  001F96  0E02               	movlw	high (_loRa+169)
 18822  001F98  20F4               	addwfc	prodh,w,c
 18823  001F9A  6EDA               	movwf	fsr2h,c
 18824  001F9C  A6DF               	btfss	indf2,3,c
 18825  001F9E  D009               	goto	l13293
 18826                           
 18827                           ; BSR set to: 2
 18828                           ;lorawan.c: 1888: {
 18829                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 18830  001FA0  0100               	movlb	0	; () banked
 18831  001FA2  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18832  001FA4  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18833  001FA6  6ED9               	movwf	fsr2l,c
 18834  001FA8  0E00               	movlw	0
 18835  001FAA  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18836  001FAC  6EDA               	movwf	fsr2h,c
 18837  001FAE  0E00               	movlw	0
 18838  001FB0  80DB               	bsf	plusw2,0,c
 18839  001FB2                     l13293:
 18840                           
 18841                           ;lorawan.c: 1890: }
 18842                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 18843  001FB2  0100               	movlb	0	; () banked
 18844  001FB4  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18845  001FB6  0D02               	mullw	2
 18846  001FB8  0EA9               	movlw	low (_loRa+169)
 18847  001FBA  24F3               	addwf	prodl,w,c
 18848  001FBC  6ED9               	movwf	fsr2l,c
 18849  001FBE  0E02               	movlw	high (_loRa+169)
 18850  001FC0  20F4               	addwfc	prodh,w,c
 18851  001FC2  6EDA               	movwf	fsr2h,c
 18852  001FC4  A8DF               	btfss	indf2,4,c
 18853  001FC6  D008               	goto	l13297
 18854                           
 18855                           ; BSR set to: 2
 18856                           ;lorawan.c: 1893: {
 18857                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 18858  001FC8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18859  001FCA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18860  001FCC  6ED9               	movwf	fsr2l,c
 18861  001FCE  0E00               	movlw	0
 18862  001FD0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18863  001FD2  6EDA               	movwf	fsr2h,c
 18864  001FD4  0E00               	movlw	0
 18865  001FD6  82DB               	bsf	plusw2,1,c
 18866  001FD8                     l13297:
 18867                           
 18868                           ;lorawan.c: 1895: }
 18869                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 18870  001FD8  0100               	movlb	0	; () banked
 18871  001FDA  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18872  001FDC  0D02               	mullw	2
 18873  001FDE  0EA9               	movlw	low (_loRa+169)
 18874  001FE0  24F3               	addwf	prodl,w,c
 18875  001FE2  6ED9               	movwf	fsr2l,c
 18876  001FE4  0E02               	movlw	high (_loRa+169)
 18877  001FE6  20F4               	addwfc	prodh,w,c
 18878  001FE8  6EDA               	movwf	fsr2h,c
 18879  001FEA  AADF               	btfss	indf2,5,c
 18880  001FEC  D7BC               	goto	l13281
 18881  001FEE  D7B2               	goto	l13279
 18882  001FF0                     l13303:
 18883                           
 18884                           ; BSR set to: 0
 18885                           ;lorawan.c: 1907: {
 18886                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 18887  001FF0  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18888  001FF2  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18889  001FF4  6ED9               	movwf	fsr2l,c
 18890  001FF6  0E00               	movlw	0
 18891  001FF8  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18892  001FFA  6EDA               	movwf	fsr2h,c
 18893  001FFC  0E06               	movlw	6
 18894  001FFE  6EDF               	movwf	indf2,c
 18895                           
 18896                           ; BSR set to: 0
 18897  002000  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18898                           
 18899                           ; BSR set to: 0
 18900                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 18901  002002  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18902  002004  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18903  002006  6ED9               	movwf	fsr2l,c
 18904  002008  0E00               	movlw	0
 18905  00200A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18906  00200C  6EDA               	movwf	fsr2h,c
 18907  00200E  C2E0  FFDF         	movff	_loRa+224,indf2
 18908  002012  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18909                           
 18910                           ; BSR set to: 0
 18911                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 18912  002014  EC9F  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18913  002018  0A80               	xorlw	128
 18914  00201A  0FA0               	addlw	160
 18915  00201C  E305               	bnc	l13313
 18916                           
 18917                           ; BSR set to: 1
 18918  00201E  EC9F  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18919  002022  0A80               	xorlw	128
 18920  002024  0F60               	addlw	-160
 18921  002026  E309               	bnc	l13317
 18922  002028                     l13313:
 18923                           
 18924                           ; BSR set to: 1
 18925                           ;lorawan.c: 1911: {
 18926                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 18927  002028  0100               	movlb	0	; () banked
 18928  00202A  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18929  00202C  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18930  00202E  6ED9               	movwf	fsr2l,c
 18931  002030  0E00               	movlw	0
 18932  002032  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18933  002034  6EDA               	movwf	fsr2h,c
 18934  002036  0E20               	movlw	32
 18935  002038  D00A               	goto	L10
 18936  00203A                     l13317:
 18937                           
 18938                           ; BSR set to: 1
 18939                           ;lorawan.c: 1914: else
 18940                           ;lorawan.c: 1915: {
 18941                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 18942  00203A  0100               	movlb	0	; () banked
 18943  00203C  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18944  00203E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18945  002040  6ED9               	movwf	fsr2l,c
 18946  002042  0E00               	movlw	0
 18947  002044  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18948  002046  6EDA               	movwf	fsr2h,c
 18949  002048  EC9F  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18950  00204C  0B3F               	andlw	63
 18951  00204E                     L10:
 18952  00204E  6EDF               	movwf	indf2,c
 18953  002050  D78A               	goto	l13281
 18954  002052                     l13321:
 18955                           
 18956                           ; BSR set to: 0
 18957                           ;lorawan.c: 1922: {
 18958                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 18959  002052  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18960  002054  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18961  002056  6ED9               	movwf	fsr2l,c
 18962  002058  0E00               	movlw	0
 18963  00205A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18964  00205C  6EDA               	movwf	fsr2h,c
 18965  00205E  0E07               	movlw	7
 18966  002060  6EDF               	movwf	indf2,c
 18967                           
 18968                           ; BSR set to: 0
 18969  002062  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18970                           
 18971                           ; BSR set to: 0
 18972                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 18973  002064  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18974  002066  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18975  002068  6ED9               	movwf	fsr2l,c
 18976  00206A  0E00               	movlw	0
 18977  00206C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18978  00206E  6EDA               	movwf	fsr2h,c
 18979  002070  6ADF               	clrf	indf2,c
 18980                           
 18981                           ; BSR set to: 0
 18982                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 18983  002072  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18984  002074  0D02               	mullw	2
 18985  002076  0EA9               	movlw	low (_loRa+169)
 18986  002078  24F3               	addwf	prodl,w,c
 18987  00207A  6ED9               	movwf	fsr2l,c
 18988  00207C  0E02               	movlw	high (_loRa+169)
 18989  00207E  20F4               	addwfc	prodh,w,c
 18990  002080  6EDA               	movwf	fsr2h,c
 18991  002082  AEDF               	btfss	indf2,7,c
 18992  002084  D009               	goto	l13331
 18993                           
 18994                           ; BSR set to: 2
 18995                           ;lorawan.c: 1926: {
 18996                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 18997  002086  0100               	movlb	0	; () banked
 18998  002088  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18999  00208A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19000  00208C  6ED9               	movwf	fsr2l,c
 19001  00208E  0E00               	movlw	0
 19002  002090  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19003  002092  6EDA               	movwf	fsr2h,c
 19004  002094  0E00               	movlw	0
 19005  002096  80DB               	bsf	plusw2,0,c
 19006  002098                     l13331:
 19007                           
 19008                           ;lorawan.c: 1928: }
 19009                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 19010  002098  0100               	movlb	0	; () banked
 19011  00209A  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19012  00209C  0D02               	mullw	2
 19013  00209E  0EA9               	movlw	low (_loRa+169)
 19014  0020A0  24F3               	addwf	prodl,w,c
 19015  0020A2  6ED9               	movwf	fsr2l,c
 19016  0020A4  0E02               	movlw	high (_loRa+169)
 19017  0020A6  20F4               	addwfc	prodh,w,c
 19018  0020A8  6EDA               	movwf	fsr2h,c
 19019  0020AA  ACDF               	btfss	indf2,6,c
 19020  0020AC  D75C               	goto	l13281
 19021                           
 19022                           ; BSR set to: 2
 19023                           ;lorawan.c: 1931: {
 19024                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 19025  0020AE  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19026  0020B0  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19027  0020B2  6ED9               	movwf	fsr2l,c
 19028  0020B4  0E00               	movlw	0
 19029  0020B6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19030  0020B8  6EDA               	movwf	fsr2h,c
 19031  0020BA  0E00               	movlw	0
 19032  0020BC  82DB               	bsf	plusw2,1,c
 19033  0020BE  D753               	goto	l13281
 19034  0020C0                     l2304:
 19035                           
 19036                           ; BSR set to: 0
 19037                           ;lorawan.c: 1939: {
 19038                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 19039  0020C0  0102               	movlb	2	; () banked
 19040  0020C2  69DD               	setf	(_loRa+221)& (0+255),b
 19041                           
 19042                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 19043  0020C4  6BDE               	clrf	(_loRa+222)& (0+255),b
 19044  0020C6                     l13337:
 19045                           
 19046                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 19047  0020C6  0100               	movlb	0	; () banked
 19048  0020C8  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19049  0020CA  0D02               	mullw	2
 19050  0020CC  0EA8               	movlw	low (_loRa+168)
 19051  0020CE  24F3               	addwf	prodl,w,c
 19052  0020D0  6ED9               	movwf	fsr2l,c
 19053  0020D2  0E02               	movlw	high (_loRa+168)
 19054  0020D4  20F4               	addwfc	prodh,w,c
 19055  0020D6  6EDA               	movwf	fsr2h,c
 19056  0020D8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19057  0020DA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19058  0020DC  6EE9               	movwf	fsr0l,c
 19059  0020DE  0E00               	movlw	0
 19060  0020E0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19061  0020E2  6EEA               	movwf	fsr0h,c
 19062  0020E4  CFDF FFEF          	movff	indf2,indf0
 19063  0020E8  D73E               	goto	l13281
 19064  0020EA                     l13347:
 19065                           
 19066                           ; BSR set to: 0
 19067  0020EA  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19068  0020EC  0D02               	mullw	2
 19069  0020EE  0EA8               	movlw	low (_loRa+168)
 19070  0020F0  24F3               	addwf	prodl,w,c
 19071  0020F2  6ED9               	movwf	fsr2l,c
 19072  0020F4  0E02               	movlw	high (_loRa+168)
 19073  0020F6  20F4               	addwfc	prodh,w,c
 19074  0020F8  6EDA               	movwf	fsr2h,c
 19075  0020FA  50DF               	movf	indf2,w,c
 19076                           
 19077                           ; Switch size 1, requested type "speed"
 19078                           ; Number of cases is 7, Range of values is 2 to 8
 19079                           ; switch strategies available:
 19080                           ; Name         Instructions Cycles
 19081                           ; simple_byte           22    12 (average)
 19082                           ;	Chosen strategy is simple_byte
 19083  0020FC  0A02               	xorlw	2	; case 2
 19084  0020FE  E0E0               	bz	l2304
 19085  002100  0A01               	xorlw	1	; case 3
 19086  002102  E101 D6E6          	bz	l13263
 19087  002106  0A07               	xorlw	7	; case 4
 19088  002108  E0DE               	bz	l13337
 19089  00210A  0A01               	xorlw	1	; case 5
 19090  00210C  E101 D72E          	bz	l13283
 19091  002110  0A03               	xorlw	3	; case 6
 19092  002112  E101 D76D          	bz	l13303
 19093  002116  0A01               	xorlw	1	; case 7
 19094  002118  E09C               	bz	l13321
 19095  00211A  0A0F               	xorlw	15	; case 8
 19096  00211C  E0D4               	bz	l13337
 19097  00211E                     l13349:
 19098                           
 19099                           ; BSR set to: 0
 19100  00211E  2B6E               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 19101  002120                     l13351:
 19102                           
 19103                           ; BSR set to: 0
 19104  002120  0102               	movlb	2	; () banked
 19105  002122  51A7               	movf	(_loRa+167)& (0+255),w,b
 19106  002124  0100               	movlb	0	; () banked
 19107  002126  5D6E               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 19108  002128  E201 D694          	bnc	l13255
 19109  00212C                     l13353:
 19110                           
 19111                           ; BSR set to: 0
 19112                           ;lorawan.c: 1957: }
 19113                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 19114  00212C  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 19115  00212E  6ED9               	movwf	fsr2l,c
 19116  002130  6ADA               	clrf	fsr2h,c
 19117  002132  C06F  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 19118                           
 19119                           ; BSR set to: 0
 19120  002136  0012               	return		;funcret
 19121  002138                     __end_of_IncludeMacCommandsResponse:
 19122                           	opt stack 0
 19123                           tosu	equ	0xFFF
 19124                           tosh	equ	0xFFE
 19125                           tosl	equ	0xFFD
 19126                           pclath	equ	0xFFA
 19127                           tblptru	equ	0xFF8
 19128                           tblptrh	equ	0xFF7
 19129                           tblptrl	equ	0xFF6
 19130                           tablat	equ	0xFF5
 19131                           prodh	equ	0xFF4
 19132                           prodl	equ	0xFF3
 19133                           intcon	equ	0xFF2
 19134                           indf0	equ	0xFEF
 19135                           postinc0	equ	0xFEE
 19136                           fsr0h	equ	0xFEA
 19137                           fsr0l	equ	0xFE9
 19138                           wreg	equ	0xFE8
 19139                           postinc1	equ	0xFE6
 19140                           postdec1	equ	0xFE5
 19141                           plusw1	equ	0xFE3
 19142                           fsr1h	equ	0xFE2
 19143                           fsr1l	equ	0xFE1
 19144                           indf2	equ	0xFDF
 19145                           postinc2	equ	0xFDE
 19146                           postdec2	equ	0xFDD
 19147                           plusw2	equ	0xFDB
 19148                           fsr2h	equ	0xFDA
 19149                           fsr2l	equ	0xFD9
 19150                           status	equ	0xFD8
 19151                           
 19152 ;; *************** function _RADIO_GetPacketSnr *****************
 19153 ;; Defined at:
 19154 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19155 ;; Parameters:    Size  Location     Type
 19156 ;;		None
 19157 ;; Auto vars:     Size  Location     Type
 19158 ;;		None
 19159 ;; Return value:  Size  Location     Type
 19160 ;;                  1    wreg      char 
 19161 ;; Registers used:
 19162 ;;		wreg, status,2
 19163 ;; Tracked objects:
 19164 ;;		On entry : E/0
 19165 ;;		On exit  : F/1
 19166 ;;		Unchanged: 0/0
 19167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19168 ;;      Params:         0       0       0       0       0       0       0       0       0
 19169 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19170 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19171 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19172 ;;Total ram usage:        0 bytes
 19173 ;; Hardware stack levels used:    1
 19174 ;; Hardware stack levels required when called:    7
 19175 ;; This function calls:
 19176 ;;		Nothing
 19177 ;; This function is called by:
 19178 ;;		_IncludeMacCommandsResponse
 19179 ;; This function uses a non-reentrant model
 19180 ;;
 19181                           
 19182                           	psect	text99
 19183  00793E                     __ptext99:
 19184                           	opt stack 0
 19185  00793E                     _RADIO_GetPacketSnr:
 19186                           	opt stack 19
 19187                           
 19188                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 19189                           
 19190                           ; BSR set to: 0
 19191                           ;incstack = 0
 19192  00793E  0101               	movlb	1	; () banked
 19193  007940  51AB               	movf	(_RadioConfiguration+50)& (0+255),w,b
 19194                           
 19195                           ; BSR set to: 1
 19196  007942  0012               	return		;funcret
 19197  007944                     __end_of_RADIO_GetPacketSnr:
 19198                           	opt stack 0
 19199                           tosu	equ	0xFFF
 19200                           tosh	equ	0xFFE
 19201                           tosl	equ	0xFFD
 19202                           pclath	equ	0xFFA
 19203                           tblptru	equ	0xFF8
 19204                           tblptrh	equ	0xFF7
 19205                           tblptrl	equ	0xFF6
 19206                           tablat	equ	0xFF5
 19207                           prodh	equ	0xFF4
 19208                           prodl	equ	0xFF3
 19209                           intcon	equ	0xFF2
 19210                           indf0	equ	0xFEF
 19211                           postinc0	equ	0xFEE
 19212                           fsr0h	equ	0xFEA
 19213                           fsr0l	equ	0xFE9
 19214                           wreg	equ	0xFE8
 19215                           postinc1	equ	0xFE6
 19216                           postdec1	equ	0xFE5
 19217                           plusw1	equ	0xFE3
 19218                           fsr1h	equ	0xFE2
 19219                           fsr1l	equ	0xFE1
 19220                           indf2	equ	0xFDF
 19221                           postinc2	equ	0xFDE
 19222                           postdec2	equ	0xFDD
 19223                           plusw2	equ	0xFDB
 19224                           fsr2h	equ	0xFDA
 19225                           fsr2l	equ	0xFD9
 19226                           status	equ	0xFD8
 19227                           
 19228 ;; *************** function _FindSmallestDataRate *****************
 19229 ;; Defined at:
 19230 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19231 ;; Parameters:    Size  Location     Type
 19232 ;;		None
 19233 ;; Auto vars:     Size  Location     Type
 19234 ;;  dataRate        1    7[BANK0 ] unsigned char 
 19235 ;;  i               1    6[BANK0 ] unsigned char 
 19236 ;;  found           1    5[BANK0 ] unsigned char 
 19237 ;; Return value:  Size  Location     Type
 19238 ;;                  1    wreg      unsigned char 
 19239 ;; Registers used:
 19240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19241 ;; Tracked objects:
 19242 ;;		On entry : F/2
 19243 ;;		On exit  : F/0
 19244 ;;		Unchanged: 0/0
 19245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19246 ;;      Params:         0       0       0       0       0       0       0       0       0
 19247 ;;      Locals:         0       3       0       0       0       0       0       0       0
 19248 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19249 ;;      Totals:         0       4       0       0       0       0       0       0       0
 19250 ;;Total ram usage:        4 bytes
 19251 ;; Hardware stack levels used:    1
 19252 ;; Hardware stack levels required when called:    7
 19253 ;; This function calls:
 19254 ;;		Nothing
 19255 ;; This function is called by:
 19256 ;;		_AckRetransmissionCallback
 19257 ;;		_AssemblePacket
 19258 ;; This function uses a non-reentrant model
 19259 ;;
 19260                           
 19261                           	psect	text100
 19262  005AEA                     __ptext100:
 19263                           	opt stack 0
 19264  005AEA                     _FindSmallestDataRate:
 19265                           	opt stack 20
 19266                           
 19267                           ; BSR set to: 2
 19268                           ;lorawan.c: 1966: bool found = 0;
 19269                           
 19270                           ; BSR set to: 1
 19271                           ;incstack = 0
 19272  005AEA  0100               	movlb	0	; () banked
 19273  005AEC  6B65               	clrf	FindSmallestDataRate@found& (0+255),b
 19274                           
 19275                           ; BSR set to: 0
 19276                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 19277  005AEE  0102               	movlb	2	; () banked
 19278  005AF0  51DF               	movf	(_loRa+223)& (0+255),w,b
 19279  005AF2  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19280  005AF4  E24A               	bc	l13181
 19281                           
 19282                           ; BSR set to: 2
 19283                           ;lorawan.c: 1969: {
 19284                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 19285  005AF6  05DF               	decf	(_loRa+223)& (0+255),w,b
 19286  005AF8  0100               	movlb	0	; () banked
 19287  005AFA  6F67               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 19288                           
 19289                           ;lorawan.c: 1972: while ( (found == 0) && (dataRate >= loRa.minDataRate) )
 19290  005AFC  D03A               	goto	l13173
 19291  005AFE                     l2313:
 19292                           
 19293                           ; BSR set to: 0
 19294                           ;lorawan.c: 1973: {
 19295                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 19296  005AFE  6B66               	clrf	FindSmallestDataRate@i& (0+255),b
 19297  005B00  D02B               	goto	l13165
 19298  005B02                     l13155:
 19299                           
 19300                           ; BSR set to: 0
 19301                           ;lorawan.c: 1975: {
 19302                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 19303  005B02  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19304  005B04  0D0E               	mullw	14
 19305  005B06  0E05               	movlw	low (_Channels+5)
 19306  005B08  24F3               	addwf	prodl,w,c
 19307  005B0A  6ED9               	movwf	fsr2l,c
 19308  005B0C  0E04               	movlw	high (_Channels+5)
 19309  005B0E  20F4               	addwfc	prodh,w,c
 19310  005B10  6EDA               	movwf	fsr2h,c
 19311  005B12  50DF               	movf	223,w,c
 19312  005B14  0B0F               	andlw	15
 19313  005B16  0100               	movlb	0	; () banked
 19314  005B18  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19315  005B1A  5164               	movf	??_FindSmallestDataRate& (0+255),w,b
 19316  005B1C  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19317  005B1E  E31B               	bnc	l13163
 19318                           
 19319                           ; BSR set to: 0
 19320  005B20  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19321  005B22  0D0E               	mullw	14
 19322  005B24  0E05               	movlw	low (_Channels+5)
 19323  005B26  24F3               	addwf	prodl,w,c
 19324  005B28  6ED9               	movwf	fsr2l,c
 19325  005B2A  0E04               	movlw	high (_Channels+5)
 19326  005B2C  20F4               	addwfc	prodh,w,c
 19327  005B2E  6EDA               	movwf	fsr2h,c
 19328  005B30  38DF               	swapf	223,w,c
 19329  005B32  0B0F               	andlw	15
 19330  005B34  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19331  005B36  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19332  005B38  5D64               	subwf	??_FindSmallestDataRate& (0+255),w,b
 19333  005B3A  E30D               	bnc	l13163
 19334                           
 19335                           ; BSR set to: 0
 19336  005B3C  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19337  005B3E  0D0E               	mullw	14
 19338  005B40  0E04               	movlw	low (_Channels+4)
 19339  005B42  24F3               	addwf	prodl,w,c
 19340  005B44  6ED9               	movwf	fsr2l,c
 19341  005B46  0E04               	movlw	high (_Channels+4)
 19342  005B48  20F4               	addwfc	prodh,w,c
 19343  005B4A  6EDA               	movwf	fsr2h,c
 19344  005B4C  04DE               	decf	postinc2,w,c
 19345  005B4E  E103               	bnz	l13163
 19346                           
 19347                           ; BSR set to: 0
 19348                           ;lorawan.c: 1977: {
 19349                           ;lorawan.c: 1978: found = 1;
 19350  005B50  0E01               	movlw	1
 19351  005B52  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 19352                           
 19353                           ;lorawan.c: 1979: break;
 19354  005B54  D006               	goto	l13167
 19355  005B56                     l13163:
 19356                           
 19357                           ; BSR set to: 0
 19358  005B56  2B66               	incf	FindSmallestDataRate@i& (0+255),f,b
 19359  005B58                     l13165:
 19360                           
 19361                           ; BSR set to: 0
 19362  005B58  0102               	movlb	2	; () banked
 19363  005B5A  51ED               	movf	(_loRa+237)& (0+255),w,b
 19364  005B5C  0100               	movlb	0	; () banked
 19365  005B5E  5D66               	subwf	FindSmallestDataRate@i& (0+255),w,b
 19366  005B60  E3D0               	bnc	l13155
 19367  005B62                     l13167:
 19368                           
 19369                           ; BSR set to: 0
 19370                           ;lorawan.c: 1980: }
 19371                           ;lorawan.c: 1981: }
 19372                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 19373  005B62  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19374  005B64  E106               	bnz	l13173
 19375                           
 19376                           ; BSR set to: 0
 19377  005B66  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19378  005B68  0102               	movlb	2	; () banked
 19379  005B6A  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19380  005B6C  E202               	bc	l13173
 19381                           
 19382                           ; BSR set to: 2
 19383                           ;lorawan.c: 1983: {
 19384                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 19385  005B6E  0100               	movlb	0	; () banked
 19386  005B70  0767               	decf	FindSmallestDataRate@dataRate& (0+255),f,b
 19387  005B72                     l13173:
 19388  005B72  0100               	movlb	0	; () banked
 19389  005B74  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19390  005B76  E105               	bnz	l13177
 19391                           
 19392                           ; BSR set to: 0
 19393  005B78  0102               	movlb	2	; () banked
 19394  005B7A  51EB               	movf	(_loRa+235)& (0+255),w,b
 19395  005B7C  0100               	movlb	0	; () banked
 19396  005B7E  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19397  005B80  E2BE               	bc	l2313
 19398  005B82                     l13177:
 19399                           
 19400                           ; BSR set to: 0
 19401                           ;lorawan.c: 1985: }
 19402                           ;lorawan.c: 1986: }
 19403                           ;lorawan.c: 1988: if (found == 1)
 19404  005B82  0565               	decf	FindSmallestDataRate@found& (0+255),w,b
 19405  005B84  E102               	bnz	l13181
 19406                           
 19407                           ; BSR set to: 0
 19408                           ;lorawan.c: 1989: {
 19409                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 19410  005B86  C067  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 19411  005B8A                     l13181:
 19412                           
 19413                           ;lorawan.c: 1991: }
 19414                           ;lorawan.c: 1992: }
 19415                           ;lorawan.c: 1994: return found;
 19416  005B8A  0100               	movlb	0	; () banked
 19417  005B8C  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19418                           
 19419                           ; BSR set to: 0
 19420  005B8E  0012               	return		;funcret
 19421  005B90                     __end_of_FindSmallestDataRate:
 19422                           	opt stack 0
 19423                           tosu	equ	0xFFF
 19424                           tosh	equ	0xFFE
 19425                           tosl	equ	0xFFD
 19426                           pclath	equ	0xFFA
 19427                           tblptru	equ	0xFF8
 19428                           tblptrh	equ	0xFF7
 19429                           tblptrl	equ	0xFF6
 19430                           tablat	equ	0xFF5
 19431                           prodh	equ	0xFF4
 19432                           prodl	equ	0xFF3
 19433                           intcon	equ	0xFF2
 19434                           indf0	equ	0xFEF
 19435                           postinc0	equ	0xFEE
 19436                           fsr0h	equ	0xFEA
 19437                           fsr0l	equ	0xFE9
 19438                           wreg	equ	0xFE8
 19439                           postinc1	equ	0xFE6
 19440                           postdec1	equ	0xFE5
 19441                           plusw1	equ	0xFE3
 19442                           fsr1h	equ	0xFE2
 19443                           fsr1l	equ	0xFE1
 19444                           indf2	equ	0xFDF
 19445                           postinc2	equ	0xFDE
 19446                           postdec2	equ	0xFDD
 19447                           plusw2	equ	0xFDB
 19448                           fsr2h	equ	0xFDA
 19449                           fsr2l	equ	0xFD9
 19450                           status	equ	0xFD8
 19451                           
 19452 ;; *************** function _EncryptFRMPayload *****************
 19453 ;; Defined at:
 19454 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19455 ;; Parameters:    Size  Location     Type
 19456 ;;  buffer          2   68[BANK0 ] PTR unsigned char 
 19457 ;;		 -> payload(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 19458 ;;  bufferLength    1   70[BANK0 ] unsigned char 
 19459 ;;  dir             1   71[BANK0 ] unsigned char 
 19460 ;;  frameCounter    4   72[BANK0 ] unsigned long 
 19461 ;;  key             2   76[BANK0 ] PTR unsigned char 
 19462 ;;		 -> loRa.activationParameters(105), loRa(245), 
 19463 ;;  macBufferInd    1   78[BANK0 ] unsigned char 
 19464 ;;  bufferToBeEn    2   79[BANK0 ] PTR unsigned char 
 19465 ;;		 -> macBuffer(271), radioBuffer(271), 
 19466 ;;  multicastSta    1   81[BANK0 ] unsigned char 
 19467 ;; Auto vars:     Size  Location     Type
 19468 ;;  j               1   89[BANK0 ] unsigned char 
 19469 ;;  i               1   88[BANK0 ] unsigned char 
 19470 ;;  k               1   87[BANK0 ] unsigned char 
 19471 ;; Return value:  Size  Location     Type
 19472 ;;                  1    wreg      void 
 19473 ;; Registers used:
 19474 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19475 ;; Tracked objects:
 19476 ;;		On entry : F/0
 19477 ;;		On exit  : F/0
 19478 ;;		Unchanged: 0/0
 19479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19480 ;;      Params:         0      14       0       0       0       0       0       0       0
 19481 ;;      Locals:         0       3       0       0       0       0       0       0       0
 19482 ;;      Temps:          0       5       0       0       0       0       0       0       0
 19483 ;;      Totals:         0      22       0       0       0       0       0       0       0
 19484 ;;Total ram usage:       22 bytes
 19485 ;; Hardware stack levels used:    1
 19486 ;; Hardware stack levels required when called:   10
 19487 ;; This function calls:
 19488 ;;		_AESEncodeLoRa
 19489 ;;		_AssembleEncryptionBlock
 19490 ;; This function is called by:
 19491 ;;		_LORAWAN_RxDone
 19492 ;;		_AssemblePacket
 19493 ;; This function uses a non-reentrant model
 19494 ;;
 19495                           
 19496                           	psect	text101
 19497  004184                     __ptext101:
 19498                           	opt stack 0
 19499  004184                     _EncryptFRMPayload:
 19500                           	opt stack 17
 19501                           
 19502                           ; BSR set to: 0
 19503                           
 19504                           ; BSR set to: 0
 19505                           ;incstack = 0
 19506  004184  6BB8               	clrf	EncryptFRMPayload@i& (0+255),b
 19507  004186  6BB9               	clrf	EncryptFRMPayload@j& (0+255),b
 19508                           
 19509                           ; BSR set to: 0
 19510                           ;lorawan.c: 2209: k = bufferLength / 16;
 19511  004188  39A6               	swapf	EncryptFRMPayload@bufferLength& (0+255),w,b
 19512  00418A  0B0F               	andlw	15
 19513  00418C  6FB7               	movwf	EncryptFRMPayload@k& (0+255),b
 19514                           
 19515                           ; BSR set to: 0
 19516                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 19517  00418E  0E01               	movlw	1
 19518  004190  6FB8               	movwf	EncryptFRMPayload@i& (0+255),b
 19519  004192  D051               	goto	l13217
 19520  004194                     l13199:
 19521                           
 19522                           ; BSR set to: 0
 19523                           ;lorawan.c: 2211: {
 19524                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19525  004194  C0A8  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19526  004198  C0A9  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19527  00419C  C0AA  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19528  0041A0  C0AB  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19529  0041A4  C0B8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19530  0041A8  0E01               	movlw	1
 19531  0041AA  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19532  0041AC  C0B1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19533  0041B0  51A7               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19534  0041B2  EC15  F02C         	call	_AssembleEncryptionBlock
 19535                           
 19536                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 19537  0041B6  0EAF               	movlw	low _aesBuffer
 19538  0041B8  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 19539  0041BA  0E01               	movlw	high _aesBuffer
 19540  0041BC  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19541  0041BE  C0AC  F092         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19542  0041C2  C0AD  F093         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19543  0041C6  ECC3  F039         	call	_AESEncodeLoRa	;wreg free
 19544                           
 19545                           ; BSR set to: 0
 19546                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 19547  0041CA  6BB9               	clrf	EncryptFRMPayload@j& (0+255),b
 19548  0041CC                     l13207:
 19549                           
 19550                           ; BSR set to: 0
 19551                           ;lorawan.c: 2216: {
 19552                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 19553  0041CC  51AE               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19554  0041CE  25AF               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19555  0041D0  6ED9               	movwf	fsr2l,c
 19556  0041D2  0E00               	movlw	0
 19557  0041D4  21B0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19558  0041D6  6EDA               	movwf	fsr2h,c
 19559  0041D8  51B8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19560  0041DA  6FB2               	movwf	??_EncryptFRMPayload& (0+255),b
 19561  0041DC  6BB3               	clrf	(??_EncryptFRMPayload+1)& (0+255),b
 19562  0041DE  3BB2               	swapf	??_EncryptFRMPayload& (0+255),f,b
 19563  0041E0  3BB3               	swapf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19564  0041E2  0EF0               	movlw	240
 19565  0041E4  17B3               	andwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19566  0041E6  51B2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19567  0041E8  0B0F               	andlw	15
 19568  0041EA  13B3               	iorwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19569  0041EC  0EF0               	movlw	240
 19570  0041EE  17B2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19571  0041F0  C0A4  F0B4         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 19572  0041F4  C0A5  F0B5         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 19573  0041F8  51B2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19574  0041FA  27B4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19575  0041FC  51B3               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 19576  0041FE  23B5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19577  004200  51B9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19578  004202  27B4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19579  004204  0E00               	movlw	0
 19580  004206  23B5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19581  004208  0EF0               	movlw	240
 19582  00420A  25B4               	addwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19583  00420C  6EE9               	movwf	fsr0l,c
 19584  00420E  0EFF               	movlw	255
 19585  004210  21B5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),w,b
 19586  004212  6EEA               	movwf	fsr0h,c
 19587  004214  50EF               	movf	indf0,w,c
 19588  004216  6FB6               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 19589  004218  0EAF               	movlw	low _aesBuffer
 19590  00421A  25B9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19591  00421C  6EE9               	movwf	fsr0l,c
 19592  00421E  6AEA               	clrf	fsr0h,c
 19593  004220  0E01               	movlw	high _aesBuffer
 19594  004222  22EA               	addwfc	fsr0h,f,c
 19595  004224  50EF               	movf	indf0,w,c
 19596  004226  19B6               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 19597  004228  6EDF               	movwf	indf2,c
 19598                           
 19599                           ; BSR set to: 0
 19600  00422A  2BAE               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19601                           
 19602                           ; BSR set to: 0
 19603  00422C  2BB9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19604                           
 19605                           ; BSR set to: 0
 19606  00422E  0E0F               	movlw	15
 19607  004230  65B9               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 19608  004232  D7CC               	goto	l13207
 19609                           
 19610                           ; BSR set to: 0
 19611  004234  2BB8               	incf	EncryptFRMPayload@i& (0+255),f,b
 19612  004236                     l13217:
 19613                           
 19614                           ; BSR set to: 0
 19615  004236  51B8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19616  004238  5DB7               	subwf	EncryptFRMPayload@k& (0+255),w,b
 19617  00423A  E2AC               	bc	l13199
 19618                           
 19619                           ; BSR set to: 0
 19620                           ;lorawan.c: 2218: }
 19621                           ;lorawan.c: 2219: }
 19622                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 19623  00423C  C0A6  F0B2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19624  004240  0E0F               	movlw	15
 19625  004242  17B2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19626  004244  B4D8               	btfsc	status,2,c
 19627  004246  0C0F               	retlw	15
 19628                           
 19629                           ; BSR set to: 0
 19630                           ;lorawan.c: 2222: {
 19631                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19632  004248  C0A8  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19633  00424C  C0A9  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19634  004250  C0AA  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19635  004254  C0AB  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19636  004258  C0B8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19637  00425C  0E01               	movlw	1
 19638  00425E  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19639  004260  C0B1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19640  004264  51A7               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19641  004266  EC15  F02C         	call	_AssembleEncryptionBlock
 19642                           
 19643                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 19644  00426A  0EAF               	movlw	low _aesBuffer
 19645  00426C  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 19646  00426E  0E01               	movlw	high _aesBuffer
 19647  004270  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19648  004272  C0AC  F092         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19649  004276  C0AD  F093         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19650  00427A  ECC3  F039         	call	_AESEncodeLoRa	;wreg free
 19651                           
 19652                           ; BSR set to: 0
 19653                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 19654  00427E  6BB9               	clrf	EncryptFRMPayload@j& (0+255),b
 19655  004280  D023               	goto	l13231
 19656  004282                     l13225:
 19657                           
 19658                           ; BSR set to: 0
 19659                           ;lorawan.c: 2227: {
 19660                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 19661  004282  51AE               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19662  004284  25AF               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19663  004286  6ED9               	movwf	fsr2l,c
 19664  004288  0E00               	movlw	0
 19665  00428A  21B0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19666  00428C  6EDA               	movwf	fsr2h,c
 19667  00428E  51B7               	movf	EncryptFRMPayload@k& (0+255),w,b
 19668  004290  0D10               	mullw	16
 19669  004292  C0A4  F0B2         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 19670  004296  C0A5  F0B3         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 19671  00429A  50F3               	movf	prodl,w,c
 19672  00429C  27B2               	addwf	??_EncryptFRMPayload& (0+255),f,b
 19673  00429E  50F4               	movf	prodh,w,c
 19674  0042A0  23B3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 19675  0042A2  51B9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19676  0042A4  25B2               	addwf	??_EncryptFRMPayload& (0+255),w,b
 19677  0042A6  6EE9               	movwf	fsr0l,c
 19678  0042A8  0E00               	movlw	0
 19679  0042AA  21B3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),w,b
 19680  0042AC  6EEA               	movwf	fsr0h,c
 19681  0042AE  50EF               	movf	indf0,w,c
 19682  0042B0  6FB4               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 19683  0042B2  0EAF               	movlw	low _aesBuffer
 19684  0042B4  25B9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19685  0042B6  6EE9               	movwf	fsr0l,c
 19686  0042B8  6AEA               	clrf	fsr0h,c
 19687  0042BA  0E01               	movlw	high _aesBuffer
 19688  0042BC  22EA               	addwfc	fsr0h,f,c
 19689  0042BE  50EF               	movf	indf0,w,c
 19690  0042C0  19B4               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19691  0042C2  6EDF               	movwf	indf2,c
 19692                           
 19693                           ; BSR set to: 0
 19694  0042C4  2BAE               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19695                           
 19696                           ; BSR set to: 0
 19697  0042C6  2BB9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19698  0042C8                     l13231:
 19699                           
 19700                           ; BSR set to: 0
 19701  0042C8  C0A6  F0B2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19702  0042CC  0E0F               	movlw	15
 19703  0042CE  17B2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19704  0042D0  51B2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19705  0042D2  5DB9               	subwf	EncryptFRMPayload@j& (0+255),w,b
 19706  0042D4  E3D6               	bnc	l13225
 19707                           
 19708                           ; BSR set to: 0
 19709  0042D6  0012               	return		;funcret
 19710  0042D8                     __end_of_EncryptFRMPayload:
 19711                           	opt stack 0
 19712                           tosu	equ	0xFFF
 19713                           tosh	equ	0xFFE
 19714                           tosl	equ	0xFFD
 19715                           pclath	equ	0xFFA
 19716                           tblptru	equ	0xFF8
 19717                           tblptrh	equ	0xFF7
 19718                           tblptrl	equ	0xFF6
 19719                           tablat	equ	0xFF5
 19720                           prodh	equ	0xFF4
 19721                           prodl	equ	0xFF3
 19722                           intcon	equ	0xFF2
 19723                           indf0	equ	0xFEF
 19724                           postinc0	equ	0xFEE
 19725                           fsr0h	equ	0xFEA
 19726                           fsr0l	equ	0xFE9
 19727                           wreg	equ	0xFE8
 19728                           postinc1	equ	0xFE6
 19729                           postdec1	equ	0xFE5
 19730                           plusw1	equ	0xFE3
 19731                           fsr1h	equ	0xFE2
 19732                           fsr1l	equ	0xFE1
 19733                           indf2	equ	0xFDF
 19734                           postinc2	equ	0xFDE
 19735                           postdec2	equ	0xFDD
 19736                           plusw2	equ	0xFDB
 19737                           fsr2h	equ	0xFDA
 19738                           fsr2l	equ	0xFD9
 19739                           status	equ	0xFD8
 19740                           
 19741 ;; *************** function _AssembleEncryptionBlock *****************
 19742 ;; Defined at:
 19743 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19744 ;; Parameters:    Size  Location     Type
 19745 ;;  dir             1    wreg     unsigned char 
 19746 ;;  frameCounter    4   14[BANK0 ] unsigned long 
 19747 ;;  blockId         1   18[BANK0 ] unsigned char 
 19748 ;;  firstByte       1   19[BANK0 ] unsigned char 
 19749 ;;  multicastSta    1   20[BANK0 ] unsigned char 
 19750 ;; Auto vars:     Size  Location     Type
 19751 ;;  dir             1   21[BANK0 ] unsigned char 
 19752 ;;  bufferIndex     1   22[BANK0 ] unsigned char 
 19753 ;; Return value:  Size  Location     Type
 19754 ;;                  1    wreg      void 
 19755 ;; Registers used:
 19756 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19757 ;; Tracked objects:
 19758 ;;		On entry : F/0
 19759 ;;		On exit  : F/0
 19760 ;;		Unchanged: 0/0
 19761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19762 ;;      Params:         0       7       0       0       0       0       0       0       0
 19763 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19764 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19765 ;;      Totals:         0       9       0       0       0       0       0       0       0
 19766 ;;Total ram usage:        9 bytes
 19767 ;; Hardware stack levels used:    1
 19768 ;; Hardware stack levels required when called:    8
 19769 ;; This function calls:
 19770 ;;		_memcpy
 19771 ;;		_memset
 19772 ;; This function is called by:
 19773 ;;		_LORAWAN_RxDone
 19774 ;;		_AssemblePacket
 19775 ;;		_EncryptFRMPayload
 19776 ;; This function uses a non-reentrant model
 19777 ;;
 19778                           
 19779                           	psect	text102
 19780  00582A                     __ptext102:
 19781                           	opt stack 0
 19782  00582A                     _AssembleEncryptionBlock:
 19783                           	opt stack 18
 19784                           
 19785                           ; BSR set to: 0
 19786                           ;incstack = 0
 19787                           ;AssembleEncryptionBlock@dir stored from wreg
 19788  00582A  6F75               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 19789                           
 19790                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 19791  00582C  0100               	movlb	0	; () banked
 19792  00582E  6B76               	clrf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 19793                           
 19794                           ; BSR set to: 0
 19795                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 19796  005830  0EAF               	movlw	low _aesBuffer
 19797  005832  6F64               	movwf	memset@p1& (0+255),b
 19798  005834  0E01               	movlw	high _aesBuffer
 19799  005836  6F65               	movwf	(memset@p1+1)& (0+255),b
 19800  005838  6B67               	clrf	(memset@c+1)& (0+255),b
 19801  00583A  6B66               	clrf	memset@c& (0+255),b
 19802  00583C  6B69               	clrf	(memset@n+1)& (0+255),b
 19803  00583E  0E10               	movlw	16
 19804  005840  6F68               	movwf	memset@n& (0+255),b
 19805  005842  EC9A  F039         	call	_memset	;wreg free
 19806                           
 19807                           ; BSR set to: 0
 19808                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 19809  005846  C073  F1AF         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 19810                           
 19811                           ; BSR set to: 0
 19812                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 19813  00584A  0E05               	movlw	5
 19814  00584C  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19815                           
 19816                           ; BSR set to: 0
 19817                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 19818  00584E  0EAF               	movlw	low _aesBuffer
 19819  005850  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19820  005852  6ED9               	movwf	fsr2l,c
 19821  005854  6ADA               	clrf	fsr2h,c
 19822  005856  0E01               	movlw	high _aesBuffer
 19823  005858  22DA               	addwfc	fsr2h,f,c
 19824  00585A  C075  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 19825                           
 19826                           ; BSR set to: 0
 19827  00585E  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19828                           
 19829                           ; BSR set to: 0
 19830                           ;lorawan.c: 2168: if (0 == multicastStatus)
 19831  005860  5174               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 19832  005862  E112               	bnz	l12759
 19833                           
 19834                           ; BSR set to: 0
 19835                           ;lorawan.c: 2169: {
 19836                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 19837  005864  0EAF               	movlw	low _aesBuffer
 19838  005866  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19839  005868  6F64               	movwf	memcpy@d1& (0+255),b
 19840  00586A  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19841  00586C  0E01               	movlw	high _aesBuffer
 19842  00586E  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19843  005870  0E1E               	movlw	low (_loRa+30)
 19844  005872  6F66               	movwf	memcpy@s1& (0+255),b
 19845  005874  0E02               	movlw	high (_loRa+30)
 19846  005876  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19847  005878  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19848  00587A  0E04               	movlw	4
 19849  00587C  6F68               	movwf	memcpy@n& (0+255),b
 19850  00587E  EC6A  F034         	call	_memcpy	;wreg free
 19851  005882                     l12757:
 19852                           
 19853                           ; BSR set to: 0
 19854                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 19855  005882  0E04               	movlw	4
 19856  005884  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19857                           
 19858                           ;lorawan.c: 2172: }
 19859  005886  D010               	goto	l12763
 19860  005888                     l12759:
 19861                           
 19862                           ; BSR set to: 0
 19863                           ;lorawan.c: 2173: else
 19864                           ;lorawan.c: 2174: {
 19865                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 19866  005888  0EAF               	movlw	low _aesBuffer
 19867  00588A  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19868  00588C  6F64               	movwf	memcpy@d1& (0+255),b
 19869  00588E  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19870  005890  0E01               	movlw	high _aesBuffer
 19871  005892  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19872  005894  0E62               	movlw	low (_loRa+98)
 19873  005896  6F66               	movwf	memcpy@s1& (0+255),b
 19874  005898  0E02               	movlw	high (_loRa+98)
 19875  00589A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19876  00589C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19877  00589E  0E04               	movlw	4
 19878  0058A0  6F68               	movwf	memcpy@n& (0+255),b
 19879  0058A2  EC6A  F034         	call	_memcpy	;wreg free
 19880  0058A6  D7ED               	goto	l12757
 19881  0058A8                     l12763:
 19882                           
 19883                           ; BSR set to: 0
 19884                           ;lorawan.c: 2177: }
 19885                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 19886  0058A8  0EAF               	movlw	low _aesBuffer
 19887  0058AA  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19888  0058AC  6F64               	movwf	memcpy@d1& (0+255),b
 19889  0058AE  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19890  0058B0  0E01               	movlw	high _aesBuffer
 19891  0058B2  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19892  0058B4  0E6E               	movlw	low AssembleEncryptionBlock@frameCounter
 19893  0058B6  6F66               	movwf	memcpy@s1& (0+255),b
 19894  0058B8  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 19895  0058BA  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19896  0058BC  0E04               	movlw	4
 19897  0058BE  6F68               	movwf	memcpy@n& (0+255),b
 19898  0058C0  EC6A  F034         	call	_memcpy	;wreg free
 19899                           
 19900                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 19901  0058C4  0E04               	movlw	4
 19902  0058C6  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19903                           
 19904                           ; BSR set to: 0
 19905                           ;lorawan.c: 2182: bufferIndex ++;
 19906  0058C8  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19907                           
 19908                           ; BSR set to: 0
 19909                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 19910  0058CA  0EAF               	movlw	low _aesBuffer
 19911  0058CC  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19912  0058CE  6ED9               	movwf	fsr2l,c
 19913  0058D0  6ADA               	clrf	fsr2h,c
 19914  0058D2  0E01               	movlw	high _aesBuffer
 19915  0058D4  22DA               	addwfc	fsr2h,f,c
 19916  0058D6  C072  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 19917                           
 19918                           ; BSR set to: 0
 19919  0058DA  0012               	return		;funcret
 19920  0058DC                     __end_of_AssembleEncryptionBlock:
 19921                           	opt stack 0
 19922                           tosu	equ	0xFFF
 19923                           tosh	equ	0xFFE
 19924                           tosl	equ	0xFFD
 19925                           pclath	equ	0xFFA
 19926                           tblptru	equ	0xFF8
 19927                           tblptrh	equ	0xFF7
 19928                           tblptrl	equ	0xFF6
 19929                           tablat	equ	0xFF5
 19930                           prodh	equ	0xFF4
 19931                           prodl	equ	0xFF3
 19932                           intcon	equ	0xFF2
 19933                           indf0	equ	0xFEF
 19934                           postinc0	equ	0xFEE
 19935                           fsr0h	equ	0xFEA
 19936                           fsr0l	equ	0xFE9
 19937                           wreg	equ	0xFE8
 19938                           postinc1	equ	0xFE6
 19939                           postdec1	equ	0xFE5
 19940                           plusw1	equ	0xFE3
 19941                           fsr1h	equ	0xFE2
 19942                           fsr1l	equ	0xFE1
 19943                           indf2	equ	0xFDF
 19944                           postinc2	equ	0xFDE
 19945                           postdec2	equ	0xFDD
 19946                           plusw2	equ	0xFDB
 19947                           fsr2h	equ	0xFDA
 19948                           fsr2l	equ	0xFD9
 19949                           status	equ	0xFD8
 19950                           
 19951 ;; *************** function _CountfOptsLength *****************
 19952 ;; Defined at:
 19953 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19954 ;; Parameters:    Size  Location     Type
 19955 ;;		None
 19956 ;; Auto vars:     Size  Location     Type
 19957 ;;  i               1   11[BANK0 ] unsigned char 
 19958 ;;  macCommandLe    1   10[BANK0 ] unsigned char 
 19959 ;; Return value:  Size  Location     Type
 19960 ;;                  1    wreg      unsigned char 
 19961 ;; Registers used:
 19962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19963 ;; Tracked objects:
 19964 ;;		On entry : C/2
 19965 ;;		On exit  : F/0
 19966 ;;		Unchanged: 0/0
 19967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19968 ;;      Params:         0       0       0       0       0       0       0       0       0
 19969 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19970 ;;      Temps:          0       6       0       0       0       0       0       0       0
 19971 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19972 ;;Total ram usage:        8 bytes
 19973 ;; Hardware stack levels used:    1
 19974 ;; Hardware stack levels required when called:    7
 19975 ;; This function calls:
 19976 ;;		Nothing
 19977 ;; This function is called by:
 19978 ;;		_LORAWAN_GetMaxPayloadSize
 19979 ;;		_AssemblePacket
 19980 ;; This function uses a non-reentrant model
 19981 ;;
 19982                           
 19983                           	psect	text103
 19984  00598C                     __ptext103:
 19985                           	opt stack 0
 19986  00598C                     _CountfOptsLength:
 19987                           	opt stack 20
 19988                           
 19989                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 19990                           
 19991                           ; BSR set to: 0
 19992                           ;incstack = 0
 19993  00598C  0100               	movlb	0	; () banked
 19994  00598E  6B6A               	clrf	CountfOptsLength@macCommandLength& (0+255),b
 19995                           
 19996                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 19997  005990  6B6B               	clrf	CountfOptsLength@i& (0+255),b
 19998  005992  D04D               	goto	l13243
 19999  005994                     l13235:
 20000                           
 20001                           ; BSR set to: 0
 20002                           ;lorawan.c: 2139: {
 20003                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 20004  005994  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20005  005996  0D02               	mullw	2
 20006  005998  0EA8               	movlw	low (_loRa+168)
 20007  00599A  24F3               	addwf	prodl,w,c
 20008  00599C  6ED9               	movwf	fsr2l,c
 20009  00599E  0E02               	movlw	high (_loRa+168)
 20010  0059A0  20F4               	addwfc	prodh,w,c
 20011  0059A2  6EDA               	movwf	fsr2h,c
 20012  0059A4  28DE               	incf	postinc2,w,c
 20013  0059A6  E042               	bz	l13241
 20014                           
 20015                           ; BSR set to: 0
 20016                           ;lorawan.c: 2141: {
 20017                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 20018  0059A8  0EFE               	movlw	254
 20019  0059AA  6F64               	movwf	??_CountfOptsLength& (0+255),b
 20020  0059AC  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 20021  0059AE  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20022  0059B0  0D02               	mullw	2
 20023  0059B2  0EA8               	movlw	low (_loRa+168)
 20024  0059B4  24F3               	addwf	prodl,w,c
 20025  0059B6  6ED9               	movwf	fsr2l,c
 20026  0059B8  0E02               	movlw	high (_loRa+168)
 20027  0059BA  20F4               	addwfc	prodh,w,c
 20028  0059BC  6EDA               	movwf	fsr2h,c
 20029  0059BE  50DF               	movf	indf2,w,c
 20030  0059C0  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20031  0059C2  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20032  0059C4  5164               	movf	??_CountfOptsLength& (0+255),w,b
 20033  0059C6  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20034  0059C8  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20035  0059CA  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20036  0059CC  0E94               	movlw	low _macEndDevCmdReplyLen
 20037  0059CE  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20038  0059D0  6EF6               	movwf	tblptrl,c
 20039  0059D2  0E7F               	movlw	high _macEndDevCmdReplyLen
 20040  0059D4  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20041  0059D6  6EF7               	movwf	tblptrh,c
 20042  0059D8                     	if	0	;There are less than 3 active tblptr bytes
 20043  0059D8                     	endif
 20044  0059D8  0008               	tblrd		*
 20045  0059DA  50F5               	movf	tablat,w,c
 20046  0059DC  C06A  F068         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 20047  0059E0  6B69               	clrf	(??_CountfOptsLength+5)& (0+255),b
 20048  0059E2  2768               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 20049  0059E4  0E00               	movlw	0
 20050  0059E6  2369               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 20051  0059E8  BF69               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 20052  0059EA  D005               	goto	l13239
 20053  0059EC  5169               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 20054  0059EE  E124               	bnz	l13245
 20055  0059F0  0E10               	movlw	16
 20056  0059F2  5D68               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 20057  0059F4  E221               	bc	l13245
 20058  0059F6                     l13239:
 20059                           
 20060                           ; BSR set to: 0
 20061                           ;lorawan.c: 2143: {
 20062                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 20063  0059F6  0EFE               	movlw	254
 20064  0059F8  6F64               	movwf	??_CountfOptsLength& (0+255),b
 20065  0059FA  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 20066  0059FC  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20067  0059FE  0D02               	mullw	2
 20068  005A00  0EA8               	movlw	low (_loRa+168)
 20069  005A02  24F3               	addwf	prodl,w,c
 20070  005A04  6ED9               	movwf	fsr2l,c
 20071  005A06  0E02               	movlw	high (_loRa+168)
 20072  005A08  20F4               	addwfc	prodh,w,c
 20073  005A0A  6EDA               	movwf	fsr2h,c
 20074  005A0C  50DF               	movf	indf2,w,c
 20075  005A0E  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20076  005A10  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20077  005A12  5164               	movf	??_CountfOptsLength& (0+255),w,b
 20078  005A14  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20079  005A16  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20080  005A18  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20081  005A1A  0E94               	movlw	low _macEndDevCmdReplyLen
 20082  005A1C  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20083  005A1E  6EF6               	movwf	tblptrl,c
 20084  005A20  0E7F               	movlw	high _macEndDevCmdReplyLen
 20085  005A22  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20086  005A24  6EF7               	movwf	tblptrh,c
 20087  005A26                     	if	0	;There are less than 3 active tblptr bytes
 20088  005A26                     	endif
 20089  005A26  0008               	tblrd		*
 20090  005A28  50F5               	movf	tablat,w,c
 20091  005A2A  276A               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 20092  005A2C                     l13241:
 20093                           
 20094                           ; BSR set to: 0
 20095  005A2C  2B6B               	incf	CountfOptsLength@i& (0+255),f,b
 20096  005A2E                     l13243:
 20097                           
 20098                           ; BSR set to: 0
 20099  005A2E  0102               	movlb	2	; () banked
 20100  005A30  51A7               	movf	(_loRa+167)& (0+255),w,b
 20101  005A32  0100               	movlb	0	; () banked
 20102  005A34  5D6B               	subwf	CountfOptsLength@i& (0+255),w,b
 20103  005A36  E3AE               	bnc	l13235
 20104  005A38                     l13245:
 20105                           
 20106                           ; BSR set to: 0
 20107                           ;lorawan.c: 2149: }
 20108                           ;lorawan.c: 2150: }
 20109                           ;lorawan.c: 2151: }
 20110                           ;lorawan.c: 2153: return macCommandLength;
 20111  005A38  516A               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 20112                           
 20113                           ; BSR set to: 0
 20114  005A3A  0012               	return		;funcret
 20115  005A3C                     __end_of_CountfOptsLength:
 20116                           	opt stack 0
 20117                           tosu	equ	0xFFF
 20118                           tosh	equ	0xFFE
 20119                           tosl	equ	0xFFD
 20120                           pclath	equ	0xFFA
 20121                           tblptru	equ	0xFF8
 20122                           tblptrh	equ	0xFF7
 20123                           tblptrl	equ	0xFF6
 20124                           tablat	equ	0xFF5
 20125                           prodh	equ	0xFF4
 20126                           prodl	equ	0xFF3
 20127                           intcon	equ	0xFF2
 20128                           indf0	equ	0xFEF
 20129                           postinc0	equ	0xFEE
 20130                           fsr0h	equ	0xFEA
 20131                           fsr0l	equ	0xFE9
 20132                           wreg	equ	0xFE8
 20133                           postinc1	equ	0xFE6
 20134                           postdec1	equ	0xFE5
 20135                           plusw1	equ	0xFE3
 20136                           fsr1h	equ	0xFE2
 20137                           fsr1l	equ	0xFE1
 20138                           indf2	equ	0xFDF
 20139                           postinc2	equ	0xFDE
 20140                           postdec2	equ	0xFDD
 20141                           plusw2	equ	0xFDB
 20142                           fsr2h	equ	0xFDA
 20143                           fsr2l	equ	0xFD9
 20144                           status	equ	0xFD8
 20145                           
 20146 ;; *************** function _ExtractMic *****************
 20147 ;; Defined at:
 20148 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20149 ;; Parameters:    Size  Location     Type
 20150 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
 20151 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20152 ;;  bufferLength    1   16[BANK0 ] unsigned char 
 20153 ;; Auto vars:     Size  Location     Type
 20154 ;;  mic             4   20[BANK0 ] unsigned long 
 20155 ;; Return value:  Size  Location     Type
 20156 ;;                  4   14[BANK0 ] unsigned long 
 20157 ;; Registers used:
 20158 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20159 ;; Tracked objects:
 20160 ;;		On entry : F/0
 20161 ;;		On exit  : F/0
 20162 ;;		Unchanged: 0/0
 20163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20164 ;;      Params:         0       4       0       0       0       0       0       0       0
 20165 ;;      Locals:         0       4       0       0       0       0       0       0       0
 20166 ;;      Temps:          0       2       0       0       0       0       0       0       0
 20167 ;;      Totals:         0      10       0       0       0       0       0       0       0
 20168 ;;Total ram usage:       10 bytes
 20169 ;; Hardware stack levels used:    1
 20170 ;; Hardware stack levels required when called:    8
 20171 ;; This function calls:
 20172 ;;		_memcpy
 20173 ;; This function is called by:
 20174 ;;		_LORAWAN_RxDone
 20175 ;; This function uses a non-reentrant model
 20176 ;;
 20177                           
 20178                           	psect	text104
 20179  006D46                     __ptext104:
 20180                           	opt stack 0
 20181  006D46                     _ExtractMic:
 20182                           	opt stack 18
 20183                           
 20184                           ; BSR set to: 0
 20185                           ;lorawan.c: 2189: uint32_t mic = 0;
 20186                           
 20187                           ; BSR set to: 0
 20188                           ;incstack = 0
 20189  006D46  6B74               	clrf	ExtractMic@mic& (0+255),b
 20190  006D48  6B75               	clrf	(ExtractMic@mic+1)& (0+255),b
 20191  006D4A  6B76               	clrf	(ExtractMic@mic+2)& (0+255),b
 20192  006D4C  6B77               	clrf	(ExtractMic@mic+3)& (0+255),b
 20193                           
 20194                           ; BSR set to: 0
 20195                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 20196  006D4E  0E74               	movlw	low ExtractMic@mic
 20197  006D50  6F64               	movwf	memcpy@d1& (0+255),b
 20198  006D52  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 20199  006D54  5170               	movf	ExtractMic@bufferLength& (0+255),w,b
 20200  006D56  256E               	addwf	ExtractMic@buffer& (0+255),w,b
 20201  006D58  6F72               	movwf	??_ExtractMic& (0+255),b
 20202  006D5A  0E00               	movlw	0
 20203  006D5C  216F               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 20204  006D5E  6F73               	movwf	(??_ExtractMic+1)& (0+255),b
 20205  006D60  0EFC               	movlw	252
 20206  006D62  2572               	addwf	??_ExtractMic& (0+255),w,b
 20207  006D64  6F66               	movwf	memcpy@s1& (0+255),b
 20208  006D66  0EFF               	movlw	255
 20209  006D68  2173               	addwfc	(??_ExtractMic+1)& (0+255),w,b
 20210  006D6A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20211  006D6C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20212  006D6E  0E04               	movlw	4
 20213  006D70  6F68               	movwf	memcpy@n& (0+255),b
 20214  006D72  EC6A  F034         	call	_memcpy	;wreg free
 20215                           
 20216                           ; BSR set to: 0
 20217                           ;lorawan.c: 2191: return mic;
 20218  006D76  C074  F06E         	movff	ExtractMic@mic,?_ExtractMic
 20219  006D7A  C075  F06F         	movff	ExtractMic@mic+1,?_ExtractMic+1
 20220  006D7E  C076  F070         	movff	ExtractMic@mic+2,?_ExtractMic+2
 20221  006D82  C077  F071         	movff	ExtractMic@mic+3,?_ExtractMic+3
 20222                           
 20223                           ; BSR set to: 0
 20224  006D86  0012               	return		;funcret
 20225  006D88                     __end_of_ExtractMic:
 20226                           	opt stack 0
 20227                           tosu	equ	0xFFF
 20228                           tosh	equ	0xFFE
 20229                           tosl	equ	0xFFD
 20230                           pclath	equ	0xFFA
 20231                           tblptru	equ	0xFF8
 20232                           tblptrh	equ	0xFF7
 20233                           tblptrl	equ	0xFF6
 20234                           tablat	equ	0xFF5
 20235                           prodh	equ	0xFF4
 20236                           prodl	equ	0xFF3
 20237                           intcon	equ	0xFF2
 20238                           indf0	equ	0xFEF
 20239                           postinc0	equ	0xFEE
 20240                           fsr0h	equ	0xFEA
 20241                           fsr0l	equ	0xFE9
 20242                           wreg	equ	0xFE8
 20243                           postinc1	equ	0xFE6
 20244                           postdec1	equ	0xFE5
 20245                           plusw1	equ	0xFE3
 20246                           fsr1h	equ	0xFE2
 20247                           fsr1l	equ	0xFE1
 20248                           indf2	equ	0xFDF
 20249                           postinc2	equ	0xFDE
 20250                           postdec2	equ	0xFDD
 20251                           plusw2	equ	0xFDB
 20252                           fsr2h	equ	0xFDA
 20253                           fsr2l	equ	0xFD9
 20254                           status	equ	0xFD8
 20255                           
 20256 ;; *************** function _ComputeSessionKeys *****************
 20257 ;; Defined at:
 20258 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20259 ;; Parameters:    Size  Location     Type
 20260 ;;  joinAcceptBu    2   68[BANK0 ] PTR struct .
 20261 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20262 ;; Auto vars:     Size  Location     Type
 20263 ;;		None
 20264 ;; Return value:  Size  Location     Type
 20265 ;;                  1    wreg      void 
 20266 ;; Registers used:
 20267 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20268 ;; Tracked objects:
 20269 ;;		On entry : D/0
 20270 ;;		On exit  : F/0
 20271 ;;		Unchanged: 0/0
 20272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20273 ;;      Params:         0       2       0       0       0       0       0       0       0
 20274 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20275 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20276 ;;      Totals:         0       2       0       0       0       0       0       0       0
 20277 ;;Total ram usage:        2 bytes
 20278 ;; Hardware stack levels used:    1
 20279 ;; Hardware stack levels required when called:   10
 20280 ;; This function calls:
 20281 ;;		_AESEncodeLoRa
 20282 ;;		_PrepareSessionKeys
 20283 ;; This function is called by:
 20284 ;;		_LORAWAN_RxDone
 20285 ;; This function uses a non-reentrant model
 20286 ;;
 20287                           
 20288                           	psect	text105
 20289  005EE4                     __ptext105:
 20290                           	opt stack 0
 20291  005EE4                     _ComputeSessionKeys:
 20292                           	opt stack 16
 20293                           
 20294                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20295                           
 20296                           ; BSR set to: 0
 20297                           ;incstack = 0
 20298  005EE4  0E32               	movlw	low (_loRa+50)
 20299  005EE6  0100               	movlb	0	; () banked
 20300  005EE8  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20301  005EEA  0E02               	movlw	high (_loRa+50)
 20302  005EEC  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20303  005EEE  29A4               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20304  005EF0  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20305  005EF2  0E00               	movlw	0
 20306  005EF4  21A5               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20307  005EF6  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20308  005EF8  0E04               	movlw	4
 20309  005EFA  25A4               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20310  005EFC  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20311  005EFE  0E00               	movlw	0
 20312  005F00  21A5               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20313  005F02  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20314  005F04  ECF0  F02F         	call	_PrepareSessionKeys	;wreg free
 20315                           
 20316                           ; BSR set to: 0
 20317                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 20318  005F08  0E02               	movlw	2
 20319  005F0A  0102               	movlb	2	; () banked
 20320  005F0C  6F32               	movwf	(_loRa+50)& (0+255),b
 20321                           
 20322                           ; BSR set to: 2
 20323                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 20324  005F0E  0E32               	movlw	low (_loRa+50)
 20325  005F10  0100               	movlb	0	; () banked
 20326  005F12  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 20327  005F14  0E02               	movlw	high (_loRa+50)
 20328  005F16  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20329  005F18  0E42               	movlw	low (_loRa+66)
 20330  005F1A  6F92               	movwf	AESEncodeLoRa@key& (0+255),b
 20331  005F1C  0E02               	movlw	high (_loRa+66)
 20332  005F1E  6F93               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20333  005F20  ECC3  F039         	call	_AESEncodeLoRa	;wreg free
 20334                           
 20335                           ; BSR set to: 0
 20336                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20337  005F24  0E22               	movlw	low (_loRa+34)
 20338  005F26  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20339  005F28  0E02               	movlw	high (_loRa+34)
 20340  005F2A  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20341  005F2C  29A4               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20342  005F2E  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20343  005F30  0E00               	movlw	0
 20344  005F32  21A5               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20345  005F34  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20346  005F36  0E04               	movlw	4
 20347  005F38  25A4               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20348  005F3A  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20349  005F3C  0E00               	movlw	0
 20350  005F3E  21A5               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20351  005F40  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20352  005F42  ECF0  F02F         	call	_PrepareSessionKeys	;wreg free
 20353                           
 20354                           ; BSR set to: 0
 20355                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 20356  005F46  0E01               	movlw	1
 20357  005F48  0102               	movlb	2	; () banked
 20358  005F4A  6F22               	movwf	(_loRa+34)& (0+255),b
 20359                           
 20360                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 20361  005F4C  0E22               	movlw	low (_loRa+34)
 20362  005F4E  0100               	movlb	0	; () banked
 20363  005F50  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 20364  005F52  0E02               	movlw	high (_loRa+34)
 20365  005F54  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20366  005F56  0E42               	movlw	low (_loRa+66)
 20367  005F58  6F92               	movwf	AESEncodeLoRa@key& (0+255),b
 20368  005F5A  0E02               	movlw	high (_loRa+66)
 20369  005F5C  6F93               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20370  005F5E  EFC3  F039         	goto	_AESEncodeLoRa	;wreg free
 20371  005F62                     __end_of_ComputeSessionKeys:
 20372                           	opt stack 0
 20373                           tosu	equ	0xFFF
 20374                           tosh	equ	0xFFE
 20375                           tosl	equ	0xFFD
 20376                           pclath	equ	0xFFA
 20377                           tblptru	equ	0xFF8
 20378                           tblptrh	equ	0xFF7
 20379                           tblptrl	equ	0xFF6
 20380                           tablat	equ	0xFF5
 20381                           prodh	equ	0xFF4
 20382                           prodl	equ	0xFF3
 20383                           intcon	equ	0xFF2
 20384                           indf0	equ	0xFEF
 20385                           postinc0	equ	0xFEE
 20386                           fsr0h	equ	0xFEA
 20387                           fsr0l	equ	0xFE9
 20388                           wreg	equ	0xFE8
 20389                           postinc1	equ	0xFE6
 20390                           postdec1	equ	0xFE5
 20391                           plusw1	equ	0xFE3
 20392                           fsr1h	equ	0xFE2
 20393                           fsr1l	equ	0xFE1
 20394                           indf2	equ	0xFDF
 20395                           postinc2	equ	0xFDE
 20396                           postdec2	equ	0xFDD
 20397                           plusw2	equ	0xFDB
 20398                           fsr2h	equ	0xFDA
 20399                           fsr2l	equ	0xFD9
 20400                           status	equ	0xFD8
 20401                           
 20402 ;; *************** function _PrepareSessionKeys *****************
 20403 ;; Defined at:
 20404 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20405 ;; Parameters:    Size  Location     Type
 20406 ;;  sessionKey      2   14[BANK0 ] PTR unsigned char 
 20407 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20408 ;;  appNonce        2   16[BANK0 ] PTR unsigned char 
 20409 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20410 ;;  networkId       2   18[BANK0 ] PTR unsigned char 
 20411 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20412 ;; Auto vars:     Size  Location     Type
 20413 ;;  index           1   20[BANK0 ] unsigned char 
 20414 ;; Return value:  Size  Location     Type
 20415 ;;                  1    wreg      void 
 20416 ;; Registers used:
 20417 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20418 ;; Tracked objects:
 20419 ;;		On entry : F/0
 20420 ;;		On exit  : F/0
 20421 ;;		Unchanged: 0/0
 20422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20423 ;;      Params:         0       6       0       0       0       0       0       0       0
 20424 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20425 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20426 ;;      Totals:         0       7       0       0       0       0       0       0       0
 20427 ;;Total ram usage:        7 bytes
 20428 ;; Hardware stack levels used:    1
 20429 ;; Hardware stack levels required when called:    8
 20430 ;; This function calls:
 20431 ;;		_memcpy
 20432 ;;		_memset
 20433 ;; This function is called by:
 20434 ;;		_ComputeSessionKeys
 20435 ;; This function uses a non-reentrant model
 20436 ;;
 20437                           
 20438                           	psect	text106
 20439  005FE0                     __ptext106:
 20440                           	opt stack 0
 20441  005FE0                     _PrepareSessionKeys:
 20442                           	opt stack 17
 20443                           
 20444                           ; BSR set to: 0
 20445                           ;lorawan.c: 2047: uint8_t index = 0;
 20446                           
 20447                           ; BSR set to: 0
 20448                           ;incstack = 0
 20449  005FE0  6B74               	clrf	PrepareSessionKeys@index& (0+255),b
 20450                           
 20451                           ; BSR set to: 0
 20452                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 20453  005FE2  C06E  F064         	movff	PrepareSessionKeys@sessionKey,memset@p1
 20454  005FE6  C06F  F065         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 20455  005FEA  6B67               	clrf	(memset@c+1)& (0+255),b
 20456  005FEC  6B66               	clrf	memset@c& (0+255),b
 20457  005FEE  6B69               	clrf	(memset@n+1)& (0+255),b
 20458  005FF0  0E10               	movlw	16
 20459  005FF2  6F68               	movwf	memset@n& (0+255),b
 20460  005FF4  EC9A  F039         	call	_memset	;wreg free
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;lorawan.c: 2050: index ++;
 20464  005FF8  2B74               	incf	PrepareSessionKeys@index& (0+255),f,b
 20465                           
 20466                           ; BSR set to: 0
 20467                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 20468  005FFA  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20469  005FFC  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20470  005FFE  6F64               	movwf	memcpy@d1& (0+255),b
 20471  006000  0E00               	movlw	0
 20472  006002  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20473  006004  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20474  006006  C070  F066         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 20475  00600A  C071  F067         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 20476  00600E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20477  006010  0E03               	movlw	3
 20478  006012  6F68               	movwf	memcpy@n& (0+255),b
 20479  006014  EC6A  F034         	call	_memcpy	;wreg free
 20480                           
 20481                           ; BSR set to: 0
 20482                           ;lorawan.c: 2053: index = index + 3;
 20483  006018  0E03               	movlw	3
 20484  00601A  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20485                           
 20486                           ; BSR set to: 0
 20487                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 20488  00601C  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20489  00601E  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20490  006020  6F64               	movwf	memcpy@d1& (0+255),b
 20491  006022  0E00               	movlw	0
 20492  006024  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20493  006026  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20494  006028  C072  F066         	movff	PrepareSessionKeys@networkId,memcpy@s1
 20495  00602C  C073  F067         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 20496  006030  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20497  006032  0E03               	movlw	3
 20498  006034  6F68               	movwf	memcpy@n& (0+255),b
 20499  006036  EC6A  F034         	call	_memcpy	;wreg free
 20500                           
 20501                           ; BSR set to: 0
 20502                           ;lorawan.c: 2056: index = index + 3;
 20503  00603A  0E03               	movlw	3
 20504  00603C  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20505                           
 20506                           ; BSR set to: 0
 20507                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 20508  00603E  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20509  006040  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20510  006042  6F64               	movwf	memcpy@d1& (0+255),b
 20511  006044  0E00               	movlw	0
 20512  006046  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20513  006048  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20514  00604A  0ED2               	movlw	low (_loRa+210)
 20515  00604C  6F66               	movwf	memcpy@s1& (0+255),b
 20516  00604E  0E02               	movlw	high (_loRa+210)
 20517  006050  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20518  006052  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20519  006054  0E02               	movlw	2
 20520  006056  6F68               	movwf	memcpy@n& (0+255),b
 20521  006058  EF6A  F034         	goto	_memcpy	;wreg free
 20522  00605C                     __end_of_PrepareSessionKeys:
 20523                           	opt stack 0
 20524                           tosu	equ	0xFFF
 20525                           tosh	equ	0xFFE
 20526                           tosl	equ	0xFFD
 20527                           pclath	equ	0xFFA
 20528                           tblptru	equ	0xFF8
 20529                           tblptrh	equ	0xFF7
 20530                           tblptrl	equ	0xFF6
 20531                           tablat	equ	0xFF5
 20532                           prodh	equ	0xFF4
 20533                           prodl	equ	0xFF3
 20534                           intcon	equ	0xFF2
 20535                           indf0	equ	0xFEF
 20536                           postinc0	equ	0xFEE
 20537                           fsr0h	equ	0xFEA
 20538                           fsr0l	equ	0xFE9
 20539                           wreg	equ	0xFE8
 20540                           postinc1	equ	0xFE6
 20541                           postdec1	equ	0xFE5
 20542                           plusw1	equ	0xFE3
 20543                           fsr1h	equ	0xFE2
 20544                           fsr1l	equ	0xFE1
 20545                           indf2	equ	0xFDF
 20546                           postinc2	equ	0xFDE
 20547                           postdec2	equ	0xFDD
 20548                           plusw2	equ	0xFDB
 20549                           fsr2h	equ	0xFDA
 20550                           fsr2l	equ	0xFD9
 20551                           status	equ	0xFD8
 20552                           
 20553 ;; *************** function _CheckMcastFlags *****************
 20554 ;; Defined at:
 20555 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20556 ;; Parameters:    Size  Location     Type
 20557 ;;  hdr             2    4[BANK0 ] PTR struct .
 20558 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20559 ;; Auto vars:     Size  Location     Type
 20560 ;;		None
 20561 ;; Return value:  Size  Location     Type
 20562 ;;                  1    wreg      unsigned char 
 20563 ;; Registers used:
 20564 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20565 ;; Tracked objects:
 20566 ;;		On entry : F/2
 20567 ;;		On exit  : D/0
 20568 ;;		Unchanged: 0/0
 20569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20570 ;;      Params:         0       2       0       0       0       0       0       0       0
 20571 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20572 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20573 ;;      Totals:         0       2       0       0       0       0       0       0       0
 20574 ;;Total ram usage:        2 bytes
 20575 ;; Hardware stack levels used:    1
 20576 ;; Hardware stack levels required when called:    7
 20577 ;; This function calls:
 20578 ;;		Nothing
 20579 ;; This function is called by:
 20580 ;;		_LORAWAN_RxDone
 20581 ;; This function uses a non-reentrant model
 20582 ;;
 20583                           
 20584                           	psect	text107
 20585  0061CA                     __ptext107:
 20586                           	opt stack 0
 20587  0061CA                     _CheckMcastFlags:
 20588                           	opt stack 19
 20589                           
 20590                           ; BSR set to: 2
 20591                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 20592                           
 20593                           ; BSR set to: 0
 20594                           ;incstack = 0
 20595  0061CA  0100               	movlb	0	; () banked
 20596  0061CC  EE20 F005          	lfsr	2,5
 20597  0061D0  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20598  0061D2  26D9               	addwf	fsr2l,f,c
 20599  0061D4  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20600  0061D6  22DA               	addwfc	fsr2h,f,c
 20601  0061D8  BADF               	btfsc	indf2,5,c
 20602  0061DA  0C00               	retlw	0
 20603                           
 20604                           ; BSR set to: 0
 20605  0061DC  EE20 F005          	lfsr	2,5
 20606  0061E0  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20607  0061E2  26D9               	addwf	fsr2l,f,c
 20608  0061E4  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20609  0061E6  22DA               	addwfc	fsr2h,f,c
 20610  0061E8  BCDF               	btfsc	indf2,6,c
 20611  0061EA  0C00               	retlw	0
 20612                           
 20613                           ; BSR set to: 0
 20614  0061EC  C064  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 20615  0061F0  C065  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 20616  0061F4  38DF               	swapf	223,w,c
 20617  0061F6  32E8               	rrcf	wreg,f,c
 20618  0061F8  0B07               	andlw	7
 20619  0061FA  0A03               	xorlw	3
 20620  0061FC  E001               	bz	l14055
 20621                           
 20622                           ; BSR set to: 0
 20623                           ;lorawan.c: 2110: {
 20624                           ;lorawan.c: 2111: return 0;
 20625  0061FE  0C00               	retlw	0
 20626  006200                     l14055:
 20627                           
 20628                           ; BSR set to: 0
 20629                           ;lorawan.c: 2112: }
 20630                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 20631  006200  EE20 F005          	lfsr	2,5
 20632  006204  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20633  006206  26D9               	addwf	fsr2l,f,c
 20634  006208  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20635  00620A  22DA               	addwfc	fsr2h,f,c
 20636  00620C  50DF               	movf	223,w,c
 20637  00620E  0B0F               	andlw	15
 20638  006210  E001               	bz	l14063
 20639  006212  0C00               	retlw	0
 20640  006214                     l14063:
 20641                           
 20642                           ; BSR set to: 0
 20643                           ;lorawan.c: 2118: else
 20644                           ;lorawan.c: 2119: {
 20645                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 20646  006214  EE20 F008          	lfsr	2,8
 20647  006218  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20648  00621A  26D9               	addwf	fsr2l,f,c
 20649  00621C  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20650  00621E  22DA               	addwfc	fsr2h,f,c
 20651  006220  50DF               	movf	indf2,w,c
 20652  006222  E101               	bnz	l14069
 20653  006224  0C00               	retlw	0
 20654  006226                     l14069:
 20655                           
 20656                           ; BSR set to: 0
 20657                           ;lorawan.c: 2123: }
 20658                           ;lorawan.c: 2124: }
 20659                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 20660  006226  EE20 F005          	lfsr	2,5
 20661  00622A  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20662  00622C  26D9               	addwf	fsr2l,f,c
 20663  00622E  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20664  006230  22DA               	addwfc	fsr2h,f,c
 20665  006232  A8DF               	btfss	indf2,4,c
 20666  006234  0C01               	retlw	1
 20667                           
 20668                           ; BSR set to: 0
 20669                           ;lorawan.c: 2127: {
 20670                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 20671  006236  0102               	movlb	2	; () banked
 20672  006238  8700               	bsf	_loRa& (0+255),3,b
 20673                           
 20674                           ;lorawan.c: 2129: }
 20675                           ;lorawan.c: 2131: return 1;
 20676  00623A  0C01               	retlw	1	;funcret
 20677  00623C                     __end_of_CheckMcastFlags:
 20678                           	opt stack 0
 20679                           tosu	equ	0xFFF
 20680                           tosh	equ	0xFFE
 20681                           tosl	equ	0xFFD
 20682                           pclath	equ	0xFFA
 20683                           tblptru	equ	0xFF8
 20684                           tblptrh	equ	0xFF7
 20685                           tblptrl	equ	0xFF6
 20686                           tablat	equ	0xFF5
 20687                           prodh	equ	0xFF4
 20688                           prodl	equ	0xFF3
 20689                           intcon	equ	0xFF2
 20690                           indf0	equ	0xFEF
 20691                           postinc0	equ	0xFEE
 20692                           fsr0h	equ	0xFEA
 20693                           fsr0l	equ	0xFE9
 20694                           wreg	equ	0xFE8
 20695                           postinc1	equ	0xFE6
 20696                           postdec1	equ	0xFE5
 20697                           plusw1	equ	0xFE3
 20698                           fsr1h	equ	0xFE2
 20699                           fsr1l	equ	0xFE1
 20700                           indf2	equ	0xFDF
 20701                           postinc2	equ	0xFDE
 20702                           postdec2	equ	0xFDD
 20703                           plusw2	equ	0xFDB
 20704                           fsr2h	equ	0xFDA
 20705                           fsr2l	equ	0xFD9
 20706                           status	equ	0xFD8
 20707                           
 20708 ;; *************** function _CheckFlags *****************
 20709 ;; Defined at:
 20710 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20711 ;; Parameters:    Size  Location     Type
 20712 ;;  hdr             2    4[BANK0 ] PTR struct .
 20713 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20714 ;; Auto vars:     Size  Location     Type
 20715 ;;		None
 20716 ;; Return value:  Size  Location     Type
 20717 ;;                  1    wreg      void 
 20718 ;; Registers used:
 20719 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20720 ;; Tracked objects:
 20721 ;;		On entry : F/2
 20722 ;;		On exit  : D/0
 20723 ;;		Unchanged: 0/0
 20724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20725 ;;      Params:         0       2       0       0       0       0       0       0       0
 20726 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20727 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20728 ;;      Totals:         0       2       0       0       0       0       0       0       0
 20729 ;;Total ram usage:        2 bytes
 20730 ;; Hardware stack levels used:    1
 20731 ;; Hardware stack levels required when called:    7
 20732 ;; This function calls:
 20733 ;;		Nothing
 20734 ;; This function is called by:
 20735 ;;		_LORAWAN_RxDone
 20736 ;; This function uses a non-reentrant model
 20737 ;;
 20738                           
 20739                           	psect	text108
 20740  00670E                     __ptext108:
 20741                           	opt stack 0
 20742  00670E                     _CheckFlags:
 20743                           	opt stack 19
 20744                           
 20745                           ; BSR set to: 2
 20746                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 20747                           
 20748                           ;incstack = 0
 20749  00670E  0100               	movlb	0	; () banked
 20750  006710  EE20 F005          	lfsr	2,5
 20751  006714  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20752  006716  26D9               	addwf	fsr2l,f,c
 20753  006718  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20754  00671A  22DA               	addwfc	fsr2h,f,c
 20755  00671C  AEDF               	btfss	indf2,7,c
 20756  00671E  D002               	goto	l14103
 20757                           
 20758                           ; BSR set to: 0
 20759                           ;lorawan.c: 2077: {
 20760                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 20761  006720  0102               	movlb	2	; () banked
 20762  006722  8D02               	bsf	(_loRa+2)& (0+255),6,b
 20763  006724                     l14103:
 20764                           
 20765                           ;lorawan.c: 2079: }
 20766                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 20767  006724  0100               	movlb	0	; () banked
 20768  006726  EE20 F005          	lfsr	2,5
 20769  00672A  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20770  00672C  26D9               	addwf	fsr2l,f,c
 20771  00672E  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20772  006730  22DA               	addwfc	fsr2h,f,c
 20773  006732  A8DF               	btfss	indf2,4,c
 20774  006734  D002               	goto	l14107
 20775                           
 20776                           ; BSR set to: 0
 20777                           ;lorawan.c: 2082: {
 20778                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 20779  006736  0102               	movlb	2	; () banked
 20780  006738  8700               	bsf	_loRa& (0+255),3,b
 20781  00673A                     l14107:
 20782                           
 20783                           ;lorawan.c: 2084: }
 20784                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 20785  00673A  0100               	movlb	0	; () banked
 20786  00673C  EE20 F005          	lfsr	2,5
 20787  006740  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20788  006742  26D9               	addwf	fsr2l,f,c
 20789  006744  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20790  006746  22DA               	addwfc	fsr2h,f,c
 20791  006748  ACDF               	btfss	indf2,6,c
 20792  00674A  D002               	goto	l14111
 20793                           
 20794                           ; BSR set to: 0
 20795                           ;lorawan.c: 2087: {
 20796                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 20797  00674C  0102               	movlb	2	; () banked
 20798  00674E  8900               	bsf	_loRa& (0+255),4,b
 20799  006750                     l14111:
 20800                           
 20801                           ;lorawan.c: 2089: }
 20802                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 20803  006750  C064  FFD9         	movff	CheckFlags@hdr,fsr2l
 20804  006754  C065  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 20805  006758  0100               	movlb	0	; () banked
 20806  00675A  38DF               	swapf	223,w,c
 20807  00675C  32E8               	rrcf	wreg,f,c
 20808  00675E  0B07               	andlw	7
 20809  006760  0A05               	xorlw	5
 20810  006762  A4D8               	btfss	status,2,c
 20811  006764  0012               	return	
 20812                           
 20813                           ; BSR set to: 0
 20814                           ;lorawan.c: 2092: {
 20815                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 20816  006766  0102               	movlb	2	; () banked
 20817  006768  8300               	bsf	_loRa& (0+255),1,b
 20818  00676A  0012               	return		;funcret
 20819  00676C                     __end_of_CheckFlags:
 20820                           	opt stack 0
 20821                           tosu	equ	0xFFF
 20822                           tosh	equ	0xFFE
 20823                           tosl	equ	0xFFD
 20824                           pclath	equ	0xFFA
 20825                           tblptru	equ	0xFF8
 20826                           tblptrh	equ	0xFF7
 20827                           tblptrl	equ	0xFF6
 20828                           tablat	equ	0xFF5
 20829                           prodh	equ	0xFF4
 20830                           prodl	equ	0xFF3
 20831                           intcon	equ	0xFF2
 20832                           indf0	equ	0xFEF
 20833                           postinc0	equ	0xFEE
 20834                           fsr0h	equ	0xFEA
 20835                           fsr0l	equ	0xFE9
 20836                           wreg	equ	0xFE8
 20837                           postinc1	equ	0xFE6
 20838                           postdec1	equ	0xFE5
 20839                           plusw1	equ	0xFE3
 20840                           fsr1h	equ	0xFE2
 20841                           fsr1l	equ	0xFE1
 20842                           indf2	equ	0xFDF
 20843                           postinc2	equ	0xFDE
 20844                           postdec2	equ	0xFDD
 20845                           plusw2	equ	0xFDB
 20846                           fsr2h	equ	0xFDA
 20847                           fsr2l	equ	0xFD9
 20848                           status	equ	0xFD8
 20849                           
 20850 ;; *************** function _RADIO_FSKPacketSent *****************
 20851 ;; Defined at:
 20852 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20853 ;; Parameters:    Size  Location     Type
 20854 ;;		None
 20855 ;; Auto vars:     Size  Location     Type
 20856 ;;  timeOnAir       4  116[BANK0 ] unsigned long 
 20857 ;;  irqFlags        1  124[BANK0 ] unsigned char 
 20858 ;; Return value:  Size  Location     Type
 20859 ;;                  1    wreg      void 
 20860 ;; Registers used:
 20861 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20862 ;; Tracked objects:
 20863 ;;		On entry : F/0
 20864 ;;		On exit  : C/0
 20865 ;;		Unchanged: 0/0
 20866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20867 ;;      Params:         0       0       0       0       0       0       0       0       0
 20868 ;;      Locals:         0       9       0       0       0       0       0       0       0
 20869 ;;      Temps:          0       4       0       0       0       0       0       0       0
 20870 ;;      Totals:         0      13       0       0       0       0       0       0       0
 20871 ;;Total ram usage:       13 bytes
 20872 ;; Hardware stack levels used:    1
 20873 ;; Hardware stack levels required when called:   15
 20874 ;; This function calls:
 20875 ;;		_LORAWAN_TxDone
 20876 ;;		_RADIO_RegisterRead
 20877 ;;		_RADIO_WriteMode
 20878 ;;		_SwTimerReadValue
 20879 ;;		_SwTimerStop
 20880 ;; This function is called by:
 20881 ;;		_RADIO_DIO0
 20882 ;; This function uses a non-reentrant model
 20883 ;;
 20884                           
 20885                           	psect	text109
 20886  003A50                     __ptext109:
 20887                           	opt stack 0
 20888  003A50                     _RADIO_FSKPacketSent:
 20889                           	opt stack 13
 20890                           
 20891                           ; BSR set to: 0
 20892                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 20893                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 20894                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 20895                           
 20896                           ;incstack = 0
 20897  003A50  0E3F               	movlw	63
 20898  003A52  ECEA  F039         	call	_RADIO_RegisterRead
 20899  003A56  6FDC               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 20900                           
 20901                           ; BSR set to: 0
 20902                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 20903  003A58  A7DC               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 20904  003A5A  0012               	return	
 20905                           
 20906                           ; BSR set to: 0
 20907                           ;radio_driver_SX1276.c: 1100: {
 20908                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 20909  003A5C  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 20910  003A60  0E00               	movlw	0
 20911  003A62  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 20912  003A64  ECFE  F028         	call	_RADIO_WriteMode
 20913                           
 20914                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 20915  003A68  0101               	movlb	1	; () banked
 20916  003A6A  919C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 20917                           
 20918                           ; BSR set to: 1
 20919                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 20920  003A6C  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 20921  003A6E  EC2D  F03B         	call	_SwTimerStop
 20922                           
 20923                           ; BSR set to: 0
 20924                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 20925  003A72  0101               	movlb	1	; () banked
 20926  003A74  B99C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 20927  003A76  0012               	return	
 20928                           
 20929                           ; BSR set to: 1
 20930                           ;radio_driver_SX1276.c: 1107: {
 20931                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 20932  003A78  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20933  003A7A  EC26  F037         	call	_SwTimerReadValue
 20934  003A7E  518E               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 20935  003A80  E107               	bnz	u17520
 20936  003A82  0E1F               	movlw	31
 20937  003A84  5D8B               	subwf	?_SwTimerReadValue& (0+255),w,b
 20938  003A86  0EAC               	movlw	172
 20939  003A88  598C               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 20940  003A8A  0EDF               	movlw	223
 20941  003A8C  598D               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 20942  003A8E  E346               	bnc	l15003
 20943  003A90                     u17520:
 20944                           
 20945                           ; BSR set to: 0
 20946  003A90  0101               	movlb	1	; () banked
 20947  003A92  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20948  003A94  EC26  F037         	call	_SwTimerReadValue
 20949  003A98  0E0D               	movlw	13
 20950  003A9A  D005               	goto	u17530
 20951  003A9C                     u17535:
 20952  003A9C  90D8               	bcf	status,0,c
 20953  003A9E  338E               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 20954  003AA0  338D               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 20955  003AA2  338C               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 20956  003AA4  338B               	rrcf	?_SwTimerReadValue& (0+255),f,b
 20957  003AA6                     u17530:
 20958  003AA6  2EE8               	decfsz	wreg,f,c
 20959  003AA8  D7F9               	goto	u17535
 20960  003AAA  0E7D               	movlw	125
 20961  003AAC  038B               	mulwf	?_SwTimerReadValue& (0+255),b
 20962  003AAE  CFF3 F0D0          	movff	prodl,??_RADIO_FSKPacketSent
 20963  003AB2  CFF4 F0D1          	movff	prodh,??_RADIO_FSKPacketSent+1
 20964  003AB6  6BD2               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 20965  003AB8  6BD3               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 20966  003ABA  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20967  003ABC  50F3               	movf	prodl,w,c
 20968  003ABE  27D1               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20969  003AC0  50F4               	movf	prodh,w,c
 20970  003AC2  23D2               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20971  003AC4  0E00               	movlw	0
 20972  003AC6  23D3               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20973  003AC8  038B               	mulwf	?_SwTimerReadValue& (0+255),b
 20974  003ACA  50F3               	movf	prodl,w,c
 20975  003ACC  27D1               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20976  003ACE  50F4               	movf	prodh,w,c
 20977  003AD0  23D2               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20978  003AD2  0E00               	movlw	0
 20979  003AD4  23D3               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20980  003AD6  0E7D               	movlw	125
 20981  003AD8  038D               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 20982  003ADA  50F3               	movf	prodl,w,c
 20983  003ADC  27D2               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20984  003ADE  50F4               	movf	prodh,w,c
 20985  003AE0  23D3               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20986  003AE2  0E00               	movlw	0
 20987  003AE4  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20988  003AE6  50F3               	movf	prodl,w,c
 20989  003AE8  27D2               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20990  003AEA  50F4               	movf	prodh,w,c
 20991  003AEC  23D3               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20992  003AEE  0E00               	movlw	0
 20993  003AF0  038B               	mulwf	?_SwTimerReadValue& (0+255),b
 20994  003AF2  50F3               	movf	prodl,w,c
 20995  003AF4  27D2               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20996  003AF6  50F4               	movf	prodh,w,c
 20997  003AF8  23D3               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20998  003AFA  0E7D               	movlw	125
 20999  003AFC  038E               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 21000  003AFE  50F3               	movf	prodl,w,c
 21001  003B00  27D3               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21002  003B02  0E00               	movlw	0
 21003  003B04  038D               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21004  003B06  50F3               	movf	prodl,w,c
 21005  003B08  27D3               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21006  003B0A  0E00               	movlw	0
 21007  003B0C  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21008  003B0E  50F3               	movf	prodl,w,c
 21009  003B10  27D3               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21010  003B12  0E00               	movlw	0
 21011  003B14  038B               	mulwf	?_SwTimerReadValue& (0+255),b
 21012  003B16  50F3               	movf	prodl,w,c
 21013  003B18  27D3               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21014  003B1A  D045               	goto	L11
 21015  003B1C                     l15003:
 21016                           
 21017                           ; BSR set to: 0
 21018  003B1C  0101               	movlb	1	; () banked
 21019  003B1E  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21020  003B20  EC26  F037         	call	_SwTimerReadValue
 21021  003B24  0E7D               	movlw	125
 21022  003B26  038B               	mulwf	?_SwTimerReadValue& (0+255),b
 21023  003B28  CFF3 F0D0          	movff	prodl,??_RADIO_FSKPacketSent
 21024  003B2C  CFF4 F0D1          	movff	prodh,??_RADIO_FSKPacketSent+1
 21025  003B30  6BD2               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 21026  003B32  6BD3               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 21027  003B34  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21028  003B36  50F3               	movf	prodl,w,c
 21029  003B38  27D1               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21030  003B3A  50F4               	movf	prodh,w,c
 21031  003B3C  23D2               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21032  003B3E  0E00               	movlw	0
 21033  003B40  23D3               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21034  003B42  038B               	mulwf	?_SwTimerReadValue& (0+255),b
 21035  003B44  50F3               	movf	prodl,w,c
 21036  003B46  27D1               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21037  003B48  50F4               	movf	prodh,w,c
 21038  003B4A  23D2               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21039  003B4C  0E00               	movlw	0
 21040  003B4E  23D3               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21041  003B50  0E7D               	movlw	125
 21042  003B52  038D               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21043  003B54  50F3               	movf	prodl,w,c
 21044  003B56  27D2               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21045  003B58  50F4               	movf	prodh,w,c
 21046  003B5A  23D3               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21047  003B5C  0E00               	movlw	0
 21048  003B5E  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21049  003B60  50F3               	movf	prodl,w,c
 21050  003B62  27D2               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21051  003B64  50F4               	movf	prodh,w,c
 21052  003B66  23D3               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21053  003B68  0E00               	movlw	0
 21054  003B6A  038B               	mulwf	?_SwTimerReadValue& (0+255),b
 21055  003B6C  50F3               	movf	prodl,w,c
 21056  003B6E  27D2               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21057  003B70  50F4               	movf	prodh,w,c
 21058  003B72  23D3               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21059  003B74  0E7D               	movlw	125
 21060  003B76  038E               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 21061  003B78  50F3               	movf	prodl,w,c
 21062  003B7A  27D3               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21063  003B7C  0E00               	movlw	0
 21064  003B7E  038D               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21065  003B80  50F3               	movf	prodl,w,c
 21066  003B82  27D3               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21067  003B84  0E00               	movlw	0
 21068  003B86  038C               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21069  003B88  50F3               	movf	prodl,w,c
 21070  003B8A  27D3               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21071  003B8C  0E00               	movlw	0
 21072  003B8E  038B               	mulwf	?_SwTimerReadValue& (0+255),b
 21073  003B90  50F3               	movf	prodl,w,c
 21074  003B92  27D3               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21075  003B94  0E0D               	movlw	13
 21076  003B96  D005               	goto	u17540
 21077  003B98                     u17545:
 21078  003B98  90D8               	bcf	status,0,c
 21079  003B9A  33D3               	rrcf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21080  003B9C  33D2               	rrcf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21081  003B9E  33D1               	rrcf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21082  003BA0  33D0               	rrcf	??_RADIO_FSKPacketSent& (0+255),f,b
 21083  003BA2                     u17540:
 21084  003BA2  2EE8               	decfsz	wreg,f,c
 21085  003BA4  D7F9               	goto	u17545
 21086  003BA6                     L11:
 21087  003BA6  C0D0  F0D8         	movff	??_RADIO_FSKPacketSent,_RADIO_FSKPacketSent$1071
 21088  003BAA  C0D1  F0D9         	movff	??_RADIO_FSKPacketSent+1,_RADIO_FSKPacketSent$1071+1
 21089  003BAE  C0D2  F0DA         	movff	??_RADIO_FSKPacketSent+2,_RADIO_FSKPacketSent$1071+2
 21090  003BB2  C0D3  F0DB         	movff	??_RADIO_FSKPacketSent+3,_RADIO_FSKPacketSent$1071+3
 21091                           
 21092                           ; BSR set to: 0
 21093  003BB6  51D8               	movf	_RADIO_FSKPacketSent$1071& (0+255),w,b
 21094  003BB8  0820               	sublw	32
 21095  003BBA  6FD4               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 21096  003BBC  0E4E               	movlw	78
 21097  003BBE  55D9               	subfwb	(_RADIO_FSKPacketSent$1071+1)& (0+255),w,b
 21098  003BC0  6FD5               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 21099  003BC2  0E00               	movlw	0
 21100  003BC4  55DA               	subfwb	(_RADIO_FSKPacketSent$1071+2)& (0+255),w,b
 21101  003BC6  6FD6               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 21102  003BC8  0E00               	movlw	0
 21103  003BCA  55DB               	subfwb	(_RADIO_FSKPacketSent$1071+3)& (0+255),w,b
 21104  003BCC  6FD7               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 21105                           
 21106                           ; BSR set to: 0
 21107                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 21108  003BCE  0101               	movlb	1	; () banked
 21109  003BD0  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21110  003BD2  EC2D  F03B         	call	_SwTimerStop
 21111                           
 21112                           ; BSR set to: 0
 21113                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 21114  003BD6  C0D4  F09E         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 21115  003BDA  C0D5  F09F         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 21116  003BDE  EF9A  F005         	goto	_LORAWAN_TxDone	;wreg free
 21117  003BE2                     __end_of_RADIO_FSKPacketSent:
 21118                           	opt stack 0
 21119                           tosu	equ	0xFFF
 21120                           tosh	equ	0xFFE
 21121                           tosl	equ	0xFFD
 21122                           pclath	equ	0xFFA
 21123                           tblptru	equ	0xFF8
 21124                           tblptrh	equ	0xFF7
 21125                           tblptrl	equ	0xFF6
 21126                           tablat	equ	0xFF5
 21127                           prodh	equ	0xFF4
 21128                           prodl	equ	0xFF3
 21129                           intcon	equ	0xFF2
 21130                           indf0	equ	0xFEF
 21131                           postinc0	equ	0xFEE
 21132                           fsr0h	equ	0xFEA
 21133                           fsr0l	equ	0xFE9
 21134                           wreg	equ	0xFE8
 21135                           postinc1	equ	0xFE6
 21136                           postdec1	equ	0xFE5
 21137                           plusw1	equ	0xFE3
 21138                           fsr1h	equ	0xFE2
 21139                           fsr1l	equ	0xFE1
 21140                           indf2	equ	0xFDF
 21141                           postinc2	equ	0xFDE
 21142                           postdec2	equ	0xFDD
 21143                           plusw2	equ	0xFDB
 21144                           fsr2h	equ	0xFDA
 21145                           fsr2l	equ	0xFD9
 21146                           status	equ	0xFD8
 21147                           
 21148 ;; *************** function _LORAWAN_TxDone *****************
 21149 ;; Defined at:
 21150 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21151 ;; Parameters:    Size  Location     Type
 21152 ;;  timeOnAir       2   62[BANK0 ] unsigned int 
 21153 ;; Auto vars:     Size  Location     Type
 21154 ;;  minim           4  107[BANK0 ] unsigned long 
 21155 ;;  ticks           4  103[BANK0 ] unsigned long 
 21156 ;;  delta           4   99[BANK0 ] unsigned long 
 21157 ;;  i               1  111[BANK0 ] unsigned char 
 21158 ;;  found           1   98[BANK0 ] unsigned char 
 21159 ;; Return value:  Size  Location     Type
 21160 ;;                  1    wreg      void 
 21161 ;; Registers used:
 21162 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21163 ;; Tracked objects:
 21164 ;;		On entry : E/1
 21165 ;;		On exit  : C/0
 21166 ;;		Unchanged: 0/0
 21167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21168 ;;      Params:         0       2       0       0       0       0       0       0       0
 21169 ;;      Locals:         0      22       0       0       0       0       0       0       0
 21170 ;;      Temps:          0      26       0       0       0       0       0       0       0
 21171 ;;      Totals:         0      50       0       0       0       0       0       0       0
 21172 ;;Total ram usage:       50 bytes
 21173 ;; Hardware stack levels used:    1
 21174 ;; Hardware stack levels required when called:   14
 21175 ;; This function calls:
 21176 ;;		_LORAWAN_EnterContinuousReceive
 21177 ;;		_RADIO_GetStatus
 21178 ;;		_RxDataDone
 21179 ;;		_SwTimerIsRunning
 21180 ;;		_SwTimerReadValue
 21181 ;;		_SwTimerSetTimeout
 21182 ;;		_SwTimerStart
 21183 ;;		_SwTimerStop
 21184 ;;		___lldiv
 21185 ;; This function is called by:
 21186 ;;		_RADIO_TxDone
 21187 ;;		_RADIO_FSKPacketSent
 21188 ;;		_RADIO_WatchdogTimeout
 21189 ;; This function uses a non-reentrant model
 21190 ;;
 21191                           
 21192                           	psect	text110
 21193  000B34                     __ptext110:
 21194                           	opt stack 0
 21195  000B34                     _LORAWAN_TxDone:
 21196                           	opt stack 13
 21197                           
 21198                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 21199                           
 21200                           ;incstack = 0
 21201  000B34  0102               	movlb	2	; () banked
 21202  000B36  B103               	btfsc	(_loRa+3)& (0+255),0,b
 21203  000B38  EFAC  F009         	goto	l14755
 21204                           
 21205                           ; BSR set to: 2
 21206                           ;lorawan_eu.c: 368: {
 21207                           ;lorawan_eu.c: 369: bool found = 0;
 21208  000B3C  0100               	movlb	0	; () banked
 21209  000B3E  6BC2               	clrf	LORAWAN_TxDone@found& (0+255),b
 21210                           
 21211                           ;lorawan_eu.c: 370: uint8_t i;
 21212                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 21213  000B40  6BC3               	clrf	LORAWAN_TxDone@delta& (0+255),b
 21214  000B42  6BC4               	clrf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21215  000B44  6BC5               	clrf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21216  000B46  6BC6               	clrf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21217  000B48  69CB               	setf	LORAWAN_TxDone@minim& (0+255),b
 21218  000B4A  69CC               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 21219  000B4C  69CD               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 21220  000B4E  69CE               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 21221                           
 21222                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 21223  000B50  0102               	movlb	2	; () banked
 21224  000B52  6BF1               	clrf	(_loRa+241)& (0+255),b
 21225                           
 21226                           ; BSR set to: 2
 21227                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 21228  000B54  5102               	movf	(_loRa+2)& (0+255),w,b
 21229  000B56  0BF0               	andlw	-16
 21230  000B58  0902               	iorlw	2
 21231  000B5A  6F02               	movwf	(_loRa+2)& (0+255),b
 21232                           
 21233                           ; BSR set to: 2
 21234                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 21235  000B5C  C2DA  F0CF         	movff	_loRa+218,LORAWAN_TxDone@i
 21236                           
 21237                           ; BSR set to: 2
 21238                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 21239  000B60  A500               	btfss	_loRa& (0+255),2,b
 21240  000B62  D10A               	goto	l14685
 21241                           
 21242                           ; BSR set to: 2
 21243                           ;lorawan_eu.c: 382: {
 21244                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21245  000B64  0E7D               	movlw	low _rxWindowOffset
 21246  000B66  2517               	addwf	(_loRa+23)& (0+255),w,b
 21247  000B68  6EF6               	movwf	tblptrl,c
 21248  000B6A  6AF7               	clrf	tblptrh,c
 21249  000B6C  0E7F               	movlw	high _rxWindowOffset
 21250  000B6E  22F7               	addwfc	tblptrh,f,c
 21251  000B70                     	if	0	;There are less than 3 active tblptr bytes
 21252  000B70                     	endif
 21253  000B70  0008               	tblrd		*
 21254  000B72  CFF5 F0A0          	movff	tablat,??_LORAWAN_TxDone
 21255  000B76  5198               	movf	(_loRa+152)& (0+255),w,b
 21256  000B78  0100               	movlb	0	; () banked
 21257  000B7A  25A0               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21258  000B7C  6FA1               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21259  000B7E  0E00               	movlw	0
 21260  000B80  BFA0               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21261  000B82  0EFF               	movlw	255
 21262  000B84  0102               	movlb	2	; () banked
 21263  000B86  2199               	addwfc	(_loRa+153)& (0+255),w,b
 21264  000B88  0100               	movlb	0	; () banked
 21265  000B8A  6FA2               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21266  000B8C  6BA3               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21267  000B8E  6BA4               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21268  000B90  0E0C               	movlw	12
 21269  000B92                     u17035:
 21270  000B92  90D8               	bcf	status,0,c
 21271  000B94  37A1               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21272  000B96  37A2               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21273  000B98  37A3               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21274  000B9A  37A4               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21275  000B9C  2EE8               	decfsz	wreg,f,c
 21276  000B9E  D7F9               	goto	u17035
 21277  000BA0  C0A1  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21278  000BA4  C0A2  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21279  000BA8  C0A3  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21280  000BAC  C0A4  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21281  000BB0  0E7D               	movlw	125
 21282  000BB2  6F68               	movwf	___lldiv@divisor& (0+255),b
 21283  000BB4  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21284  000BB6  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21285  000BB8  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21286  000BBA  ECAA  F030         	call	___lldiv	;wreg free
 21287  000BBE  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21288  000BC2  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21289  000BC6  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21290  000BCA  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21291  000BCE  0102               	movlb	2	; () banked
 21292  000BD0  51E2               	movf	(_loRa+226)& (0+255),w,b
 21293  000BD2  ECE5  F036         	call	_SwTimerSetTimeout
 21294                           
 21295                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21296  000BD6  0E7D               	movlw	low _rxWindowOffset
 21297  000BD8  0102               	movlb	2	; () banked
 21298  000BDA  251C               	addwf	(_loRa+28)& (0+255),w,b
 21299  000BDC  6EF6               	movwf	tblptrl,c
 21300  000BDE  6AF7               	clrf	tblptrh,c
 21301  000BE0  0E7F               	movlw	high _rxWindowOffset
 21302  000BE2  22F7               	addwfc	tblptrh,f,c
 21303  000BE4                     	if	0	;There are less than 3 active tblptr bytes
 21304  000BE4                     	endif
 21305  000BE4  0008               	tblrd		*
 21306  000BE6  CFF5 F0A0          	movff	tablat,??_LORAWAN_TxDone
 21307  000BEA  519A               	movf	(_loRa+154)& (0+255),w,b
 21308  000BEC  0100               	movlb	0	; () banked
 21309  000BEE  25A0               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21310  000BF0  6FA1               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21311  000BF2  0E00               	movlw	0
 21312  000BF4  BFA0               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21313  000BF6  0EFF               	movlw	255
 21314  000BF8  0102               	movlb	2	; () banked
 21315  000BFA  219B               	addwfc	(_loRa+155)& (0+255),w,b
 21316  000BFC  0100               	movlb	0	; () banked
 21317  000BFE  6FA2               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21318  000C00  6BA3               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21319  000C02  6BA4               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21320  000C04  0E0C               	movlw	12
 21321  000C06                     u17045:
 21322  000C06  90D8               	bcf	status,0,c
 21323  000C08  37A1               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21324  000C0A  37A2               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21325  000C0C  37A3               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21326  000C0E  37A4               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21327  000C10  2EE8               	decfsz	wreg,f,c
 21328  000C12  D7F9               	goto	u17045
 21329  000C14  C0A1  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21330  000C18  C0A2  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21331  000C1C  C0A3  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21332  000C20  C0A4  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21333  000C24  0E7D               	movlw	125
 21334  000C26  6F68               	movwf	___lldiv@divisor& (0+255),b
 21335  000C28  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21336  000C2A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21337  000C2C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21338  000C2E  ECAA  F030         	call	___lldiv	;wreg free
 21339  000C32  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21340  000C36  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21341  000C3A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21342  000C3E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21343  000C42  0102               	movlb	2	; () banked
 21344  000C44  51E3               	movf	(_loRa+227)& (0+255),w,b
 21345  000C46  ECE5  F036         	call	_SwTimerSetTimeout
 21346                           
 21347                           ; BSR set to: 0
 21348                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 21349  000C4A  0102               	movlb	2	; () banked
 21350  000C4C  51E2               	movf	(_loRa+226)& (0+255),w,b
 21351  000C4E  ECAA  F02E         	call	_SwTimerStart
 21352                           
 21353                           ; BSR set to: 0
 21354                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 21355  000C52  0102               	movlb	2	; () banked
 21356  000C54  51E3               	movf	(_loRa+227)& (0+255),w,b
 21357  000C56  ECAA  F02E         	call	_SwTimerStart
 21358                           
 21359                           ; BSR set to: 0
 21360                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 21361  000C5A  C09E  F0A0         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21362  000C5E  C09F  F0A1         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21363  000C62  0102               	movlb	2	; () banked
 21364  000C64  51DB               	movf	(_loRa+219)& (0+255),w,b
 21365  000C66  0100               	movlb	0	; () banked
 21366  000C68  6FA2               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21367  000C6A  0102               	movlb	2	; () banked
 21368  000C6C  51DC               	movf	(_loRa+220)& (0+255),w,b
 21369  000C6E  0100               	movlb	0	; () banked
 21370  000C70  6FA3               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21371  000C72  6BA4               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21372  000C74  6BA5               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 21373  000C76  0ED6               	movlw	214
 21374  000C78  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21375  000C7A  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+6
 21376  000C7E  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+7
 21377  000C82  6BA8               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21378  000C84  6BA9               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21379  000C86  03A3               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21380  000C88  50F3               	movf	prodl,w,c
 21381  000C8A  27A7               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21382  000C8C  50F4               	movf	prodh,w,c
 21383  000C8E  23A8               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21384  000C90  0E00               	movlw	0
 21385  000C92  23A9               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21386  000C94  0E0B               	movlw	11
 21387  000C96  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21388  000C98  50F3               	movf	prodl,w,c
 21389  000C9A  27A7               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21390  000C9C  50F4               	movf	prodh,w,c
 21391  000C9E  23A8               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21392  000CA0  0E00               	movlw	0
 21393  000CA2  23A9               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21394  000CA4  0ED6               	movlw	214
 21395  000CA6  03A4               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21396  000CA8  50F3               	movf	prodl,w,c
 21397  000CAA  27A8               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21398  000CAC  50F4               	movf	prodh,w,c
 21399  000CAE  23A9               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21400  000CB0  0E0B               	movlw	11
 21401  000CB2  03A3               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21402  000CB4  50F3               	movf	prodl,w,c
 21403  000CB6  27A8               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21404  000CB8  50F4               	movf	prodh,w,c
 21405  000CBA  23A9               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21406  000CBC  0E00               	movlw	0
 21407  000CBE  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21408  000CC0  50F3               	movf	prodl,w,c
 21409  000CC2  27A8               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21410  000CC4  50F4               	movf	prodh,w,c
 21411  000CC6  23A9               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21412  000CC8  0ED6               	movlw	214
 21413  000CCA  03A5               	mulwf	(??_LORAWAN_TxDone+5)& (0+255),b
 21414  000CCC  50F3               	movf	prodl,w,c
 21415  000CCE  27A9               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21416  000CD0  0E0B               	movlw	11
 21417  000CD2  03A4               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21418  000CD4  50F3               	movf	prodl,w,c
 21419  000CD6  27A9               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21420  000CD8  0E00               	movlw	0
 21421  000CDA  03A3               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21422  000CDC  50F3               	movf	prodl,w,c
 21423  000CDE  27A9               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21424  000CE0  0E00               	movlw	0
 21425  000CE2  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21426  000CE4  50F3               	movf	prodl,w,c
 21427  000CE6  27A9               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21428  000CE8  0EFF               	movlw	255
 21429  000CEA  25A6               	addwf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21430  000CEC  6FAA               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21431  000CEE  0EFF               	movlw	255
 21432  000CF0  21A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21433  000CF2  6FAB               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21434  000CF4  0EFF               	movlw	255
 21435  000CF6  21A8               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21436  000CF8  6FAC               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21437  000CFA  0EFF               	movlw	255
 21438  000CFC  21A9               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21439  000CFE  6FAD               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21440  000D00  51AA               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21441  000D02  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21442  000D04  CFF3 F0AE          	movff	prodl,??_LORAWAN_TxDone+14
 21443  000D08  CFF4 F0AF          	movff	prodh,??_LORAWAN_TxDone+15
 21444  000D0C  6BB0               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21445  000D0E  6BB1               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21446  000D10  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21447  000D12  50F3               	movf	prodl,w,c
 21448  000D14  27AF               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21449  000D16  50F4               	movf	prodh,w,c
 21450  000D18  23B0               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21451  000D1A  0E00               	movlw	0
 21452  000D1C  23B1               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21453  000D1E  51AB               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21454  000D20  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21455  000D22  50F3               	movf	prodl,w,c
 21456  000D24  27AF               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21457  000D26  50F4               	movf	prodh,w,c
 21458  000D28  23B0               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21459  000D2A  0E00               	movlw	0
 21460  000D2C  23B1               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21461  000D2E  51AB               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21462  000D30  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21463  000D32  50F3               	movf	prodl,w,c
 21464  000D34  27B0               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21465  000D36  50F4               	movf	prodh,w,c
 21466  000D38  23B1               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21467  000D3A  51AC               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21468  000D3C  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21469  000D3E  50F3               	movf	prodl,w,c
 21470  000D40  27B0               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21471  000D42  50F4               	movf	prodh,w,c
 21472  000D44  23B1               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21473  000D46  51AC               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21474  000D48  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21475  000D4A  50F3               	movf	prodl,w,c
 21476  000D4C  27B1               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21477  000D4E  51AD               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21478  000D50  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21479  000D52  50F3               	movf	prodl,w,c
 21480  000D54  27B1               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21481  000D56  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21482  000D58  0D0E               	mullw	14
 21483  000D5A  0E08               	movlw	low (_Channels+8)
 21484  000D5C  24F3               	addwf	prodl,w,c
 21485  000D5E  6ED9               	movwf	fsr2l,c
 21486  000D60  0E04               	movlw	high (_Channels+8)
 21487  000D62  20F4               	addwfc	prodh,w,c
 21488  000D64  6EDA               	movwf	fsr2h,c
 21489  000D66  C0AE  FFDE         	movff	??_LORAWAN_TxDone+14,postinc2
 21490  000D6A  C0AF  FFDE         	movff	??_LORAWAN_TxDone+15,postinc2
 21491  000D6E  C0B0  FFDE         	movff	??_LORAWAN_TxDone+16,postinc2
 21492  000D72  C0B1  FFDE         	movff	??_LORAWAN_TxDone+17,postinc2
 21493                           
 21494                           ;lorawan_eu.c: 389: }
 21495  000D76  D117               	goto	l14695
 21496  000D78                     l14685:
 21497                           
 21498                           ; BSR set to: 2
 21499                           ;lorawan_eu.c: 390: else
 21500                           ;lorawan_eu.c: 391: {
 21501                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21502  000D78  0E7D               	movlw	low _rxWindowOffset
 21503  000D7A  2517               	addwf	(_loRa+23)& (0+255),w,b
 21504  000D7C  6EF6               	movwf	tblptrl,c
 21505  000D7E  6AF7               	clrf	tblptrh,c
 21506  000D80  0E7F               	movlw	high _rxWindowOffset
 21507  000D82  22F7               	addwfc	tblptrh,f,c
 21508  000D84                     	if	0	;There are less than 3 active tblptr bytes
 21509  000D84                     	endif
 21510  000D84  0008               	tblrd		*
 21511  000D86  CFF5 F0A0          	movff	tablat,??_LORAWAN_TxDone
 21512  000D8A  5194               	movf	(_loRa+148)& (0+255),w,b
 21513  000D8C  0100               	movlb	0	; () banked
 21514  000D8E  25A0               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21515  000D90  6FA1               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21516  000D92  0E00               	movlw	0
 21517  000D94  BFA0               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21518  000D96  0EFF               	movlw	255
 21519  000D98  0102               	movlb	2	; () banked
 21520  000D9A  2195               	addwfc	(_loRa+149)& (0+255),w,b
 21521  000D9C  0100               	movlb	0	; () banked
 21522  000D9E  6FA2               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21523  000DA0  6BA3               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21524  000DA2  6BA4               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21525  000DA4  0E0C               	movlw	12
 21526  000DA6                     u17055:
 21527  000DA6  90D8               	bcf	status,0,c
 21528  000DA8  37A1               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21529  000DAA  37A2               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21530  000DAC  37A3               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21531  000DAE  37A4               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21532  000DB0  2EE8               	decfsz	wreg,f,c
 21533  000DB2  D7F9               	goto	u17055
 21534  000DB4  C0A1  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21535  000DB8  C0A2  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21536  000DBC  C0A3  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21537  000DC0  C0A4  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21538  000DC4  0E7D               	movlw	125
 21539  000DC6  6F68               	movwf	___lldiv@divisor& (0+255),b
 21540  000DC8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21541  000DCA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21542  000DCC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21543  000DCE  ECAA  F030         	call	___lldiv	;wreg free
 21544  000DD2  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21545  000DD6  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21546  000DDA  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21547  000DDE  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21548  000DE2  0102               	movlb	2	; () banked
 21549  000DE4  51E4               	movf	(_loRa+228)& (0+255),w,b
 21550  000DE6  ECE5  F036         	call	_SwTimerSetTimeout
 21551                           
 21552                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21553  000DEA  0E7D               	movlw	low _rxWindowOffset
 21554  000DEC  0102               	movlb	2	; () banked
 21555  000DEE  251C               	addwf	(_loRa+28)& (0+255),w,b
 21556  000DF0  6EF6               	movwf	tblptrl,c
 21557  000DF2  6AF7               	clrf	tblptrh,c
 21558  000DF4  0E7F               	movlw	high _rxWindowOffset
 21559  000DF6  22F7               	addwfc	tblptrh,f,c
 21560  000DF8                     	if	0	;There are less than 3 active tblptr bytes
 21561  000DF8                     	endif
 21562  000DF8  0008               	tblrd		*
 21563  000DFA  CFF5 F0A0          	movff	tablat,??_LORAWAN_TxDone
 21564  000DFE  5196               	movf	(_loRa+150)& (0+255),w,b
 21565  000E00  0100               	movlb	0	; () banked
 21566  000E02  25A0               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21567  000E04  6FA1               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21568  000E06  0E00               	movlw	0
 21569  000E08  BFA0               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21570  000E0A  0EFF               	movlw	255
 21571  000E0C  0102               	movlb	2	; () banked
 21572  000E0E  2197               	addwfc	(_loRa+151)& (0+255),w,b
 21573  000E10  0100               	movlb	0	; () banked
 21574  000E12  6FA2               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21575  000E14  6BA3               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21576  000E16  6BA4               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21577  000E18  0E0C               	movlw	12
 21578  000E1A                     u17065:
 21579  000E1A  90D8               	bcf	status,0,c
 21580  000E1C  37A1               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21581  000E1E  37A2               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21582  000E20  37A3               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21583  000E22  37A4               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21584  000E24  2EE8               	decfsz	wreg,f,c
 21585  000E26  D7F9               	goto	u17065
 21586  000E28  C0A1  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21587  000E2C  C0A2  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21588  000E30  C0A3  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21589  000E34  C0A4  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21590  000E38  0E7D               	movlw	125
 21591  000E3A  6F68               	movwf	___lldiv@divisor& (0+255),b
 21592  000E3C  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21593  000E3E  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21594  000E40  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21595  000E42  ECAA  F030         	call	___lldiv	;wreg free
 21596  000E46  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21597  000E4A  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21598  000E4E  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21599  000E52  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21600  000E56  0102               	movlb	2	; () banked
 21601  000E58  51E5               	movf	(_loRa+229)& (0+255),w,b
 21602  000E5A  ECE5  F036         	call	_SwTimerSetTimeout
 21603                           
 21604                           ; BSR set to: 0
 21605                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 21606  000E5E  0102               	movlb	2	; () banked
 21607  000E60  51E4               	movf	(_loRa+228)& (0+255),w,b
 21608  000E62  ECAA  F02E         	call	_SwTimerStart
 21609                           
 21610                           ; BSR set to: 0
 21611                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 21612  000E66  0102               	movlb	2	; () banked
 21613  000E68  5112               	movf	(_loRa+18)& (0+255),w,b
 21614  000E6A  E103               	bnz	l14693
 21615                           
 21616                           ; BSR set to: 2
 21617                           ;lorawan_eu.c: 396: {
 21618                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 21619  000E6C  51E5               	movf	(_loRa+229)& (0+255),w,b
 21620  000E6E  ECAA  F02E         	call	_SwTimerStart
 21621  000E72                     l14693:
 21622                           
 21623                           ;lorawan_eu.c: 398: }
 21624                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 21625  000E72  C09E  F0A0         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21626  000E76  C09F  F0A1         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21627  000E7A  EE22  F0DB         	lfsr	2,_loRa+219
 21628  000E7E  CFDE F0A2          	movff	postinc2,??_LORAWAN_TxDone+2
 21629  000E82  CFDD F0A3          	movff	postdec2,??_LORAWAN_TxDone+3
 21630  000E86  0100               	movlb	0	; () banked
 21631  000E88  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21632  000E8A  0D0E               	mullw	14
 21633  000E8C  0E06               	movlw	low (_Channels+6)
 21634  000E8E  24F3               	addwf	prodl,w,c
 21635  000E90  6ED9               	movwf	fsr2l,c
 21636  000E92  0E04               	movlw	high (_Channels+6)
 21637  000E94  20F4               	addwfc	prodh,w,c
 21638  000E96  6EDA               	movwf	fsr2h,c
 21639  000E98  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+4
 21640  000E9C  CFDD F0A5          	movff	postdec2,??_LORAWAN_TxDone+5
 21641  000EA0  51A4               	movf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 21642  000EA2  6FA6               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 21643  000EA4  51A5               	movf	(??_LORAWAN_TxDone+5)& (0+255),w,b
 21644  000EA6  6FA7               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 21645  000EA8  6BA8               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21646  000EAA  6BA9               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21647  000EAC  29A6               	incf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21648  000EAE  6FAA               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21649  000EB0  0E00               	movlw	0
 21650  000EB2  21A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21651  000EB4  6FAB               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21652  000EB6  0E00               	movlw	0
 21653  000EB8  21A8               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21654  000EBA  6FAC               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21655  000EBC  0E00               	movlw	0
 21656  000EBE  21A9               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21657  000EC0  6FAD               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21658  000EC2  51AA               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21659  000EC4  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21660  000EC6  CFF3 F0AE          	movff	prodl,??_LORAWAN_TxDone+14
 21661  000ECA  CFF4 F0AF          	movff	prodh,??_LORAWAN_TxDone+15
 21662  000ECE  6BB0               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21663  000ED0  6BB1               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21664  000ED2  03A3               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21665  000ED4  50F3               	movf	prodl,w,c
 21666  000ED6  27AF               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21667  000ED8  50F4               	movf	prodh,w,c
 21668  000EDA  23B0               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21669  000EDC  0E00               	movlw	0
 21670  000EDE  23B1               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21671  000EE0  51AB               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21672  000EE2  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21673  000EE4  50F3               	movf	prodl,w,c
 21674  000EE6  27AF               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21675  000EE8  50F4               	movf	prodh,w,c
 21676  000EEA  23B0               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21677  000EEC  0E00               	movlw	0
 21678  000EEE  23B1               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21679  000EF0  51AB               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21680  000EF2  03A3               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21681  000EF4  50F3               	movf	prodl,w,c
 21682  000EF6  27B0               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21683  000EF8  50F4               	movf	prodh,w,c
 21684  000EFA  23B1               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21685  000EFC  51AC               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21686  000EFE  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21687  000F00  50F3               	movf	prodl,w,c
 21688  000F02  27B0               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21689  000F04  50F4               	movf	prodh,w,c
 21690  000F06  23B1               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21691  000F08  51AC               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21692  000F0A  03A3               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21693  000F0C  50F3               	movf	prodl,w,c
 21694  000F0E  27B1               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21695  000F10  51AD               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21696  000F12  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21697  000F14  50F3               	movf	prodl,w,c
 21698  000F16  27B1               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21699  000F18  0EFF               	movlw	255
 21700  000F1A  25AE               	addwf	(??_LORAWAN_TxDone+14)& (0+255),w,b
 21701  000F1C  6FB2               	movwf	(??_LORAWAN_TxDone+18)& (0+255),b
 21702  000F1E  0EFF               	movlw	255
 21703  000F20  21AF               	addwfc	(??_LORAWAN_TxDone+15)& (0+255),w,b
 21704  000F22  6FB3               	movwf	(??_LORAWAN_TxDone+19)& (0+255),b
 21705  000F24  0EFF               	movlw	255
 21706  000F26  21B0               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),w,b
 21707  000F28  6FB4               	movwf	(??_LORAWAN_TxDone+20)& (0+255),b
 21708  000F2A  0EFF               	movlw	255
 21709  000F2C  21B1               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),w,b
 21710  000F2E  6FB5               	movwf	(??_LORAWAN_TxDone+21)& (0+255),b
 21711  000F30  51B2               	movf	(??_LORAWAN_TxDone+18)& (0+255),w,b
 21712  000F32  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21713  000F34  CFF3 F0B6          	movff	prodl,??_LORAWAN_TxDone+22
 21714  000F38  CFF4 F0B7          	movff	prodh,??_LORAWAN_TxDone+23
 21715  000F3C  6BB8               	clrf	(??_LORAWAN_TxDone+24)& (0+255),b
 21716  000F3E  6BB9               	clrf	(??_LORAWAN_TxDone+25)& (0+255),b
 21717  000F40  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21718  000F42  50F3               	movf	prodl,w,c
 21719  000F44  27B7               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21720  000F46  50F4               	movf	prodh,w,c
 21721  000F48  23B8               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21722  000F4A  0E00               	movlw	0
 21723  000F4C  23B9               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21724  000F4E  51B3               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21725  000F50  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21726  000F52  50F3               	movf	prodl,w,c
 21727  000F54  27B7               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21728  000F56  50F4               	movf	prodh,w,c
 21729  000F58  23B8               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21730  000F5A  0E00               	movlw	0
 21731  000F5C  23B9               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21732  000F5E  51B3               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21733  000F60  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21734  000F62  50F3               	movf	prodl,w,c
 21735  000F64  27B8               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21736  000F66  50F4               	movf	prodh,w,c
 21737  000F68  23B9               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21738  000F6A  51B4               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21739  000F6C  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21740  000F6E  50F3               	movf	prodl,w,c
 21741  000F70  27B8               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21742  000F72  50F4               	movf	prodh,w,c
 21743  000F74  23B9               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21744  000F76  51B4               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21745  000F78  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21746  000F7A  50F3               	movf	prodl,w,c
 21747  000F7C  27B9               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21748  000F7E  51B5               	movf	(??_LORAWAN_TxDone+21)& (0+255),w,b
 21749  000F80  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21750  000F82  50F3               	movf	prodl,w,c
 21751  000F84  27B9               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21752  000F86  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21753  000F88  0D0E               	mullw	14
 21754  000F8A  0E08               	movlw	low (_Channels+8)
 21755  000F8C  24F3               	addwf	prodl,w,c
 21756  000F8E  6ED9               	movwf	fsr2l,c
 21757  000F90  0E04               	movlw	high (_Channels+8)
 21758  000F92  20F4               	addwfc	prodh,w,c
 21759  000F94  6EDA               	movwf	fsr2h,c
 21760  000F96  C0B6  FFDE         	movff	??_LORAWAN_TxDone+22,postinc2
 21761  000F9A  C0B7  FFDE         	movff	??_LORAWAN_TxDone+23,postinc2
 21762  000F9E  C0B8  FFDE         	movff	??_LORAWAN_TxDone+24,postinc2
 21763  000FA2  C0B9  FFDE         	movff	??_LORAWAN_TxDone+25,postinc2
 21764  000FA6                     l14695:
 21765                           
 21766                           ; BSR set to: 0
 21767                           ;lorawan_eu.c: 401: }
 21768                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 21769  000FA6  0102               	movlb	2	; () banked
 21770  000FA8  51E9               	movf	(_loRa+233)& (0+255),w,b
 21771  000FAA  EC77  F03A         	call	_SwTimerIsRunning
 21772  000FAE  0900               	iorlw	0
 21773  000FB0  E101 D0C8          	bz	l14707
 21774                           
 21775                           ; BSR set to: 0
 21776                           ;lorawan_eu.c: 404: {
 21777                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 21778  000FB4  0102               	movlb	2	; () banked
 21779  000FB6  51E9               	movf	(_loRa+233)& (0+255),w,b
 21780  000FB8  EC2D  F03B         	call	_SwTimerStop
 21781                           
 21782                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 21783  000FBC  0102               	movlb	2	; () banked
 21784  000FBE  51E9               	movf	(_loRa+233)& (0+255),w,b
 21785  000FC0  EC26  F037         	call	_SwTimerReadValue
 21786  000FC4  C08B  F0C7         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 21787  000FC8  C08C  F0C8         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 21788  000FCC  C08D  F0C9         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 21789  000FD0  C08E  F0CA         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 21790                           
 21791                           ; BSR set to: 0
 21792                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 21793  000FD4  51CA               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 21794  000FD6  E107               	bnz	u17090
 21795  000FD8  0E1F               	movlw	31
 21796  000FDA  5DC7               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 21797  000FDC  0EAC               	movlw	172
 21798  000FDE  59C8               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 21799  000FE0  0EDF               	movlw	223
 21800  000FE2  59C9               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 21801  000FE4  E34A               	bnc	l14703
 21802  000FE6                     u17090:
 21803                           
 21804                           ; BSR set to: 0
 21805  000FE6  C0C7  F0A0         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 21806  000FEA  C0C8  F0A1         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 21807  000FEE  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 21808  000FF2  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 21809  000FF6  0E0D               	movlw	13
 21810  000FF8  D005               	goto	u17100
 21811  000FFA                     u17105:
 21812  000FFA  90D8               	bcf	status,0,c
 21813  000FFC  33A3               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21814  000FFE  33A2               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21815  001000  33A1               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21816  001002  33A0               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 21817  001004                     u17100:
 21818  001004  2EE8               	decfsz	wreg,f,c
 21819  001006  D7F9               	goto	u17105
 21820  001008  0E7D               	movlw	125
 21821  00100A  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21822  00100C  CFF3 F0A4          	movff	prodl,??_LORAWAN_TxDone+4
 21823  001010  CFF4 F0A5          	movff	prodh,??_LORAWAN_TxDone+5
 21824  001014  6BA6               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 21825  001016  6BA7               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 21826  001018  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21827  00101A  50F3               	movf	prodl,w,c
 21828  00101C  27A5               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21829  00101E  50F4               	movf	prodh,w,c
 21830  001020  23A6               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21831  001022  0E00               	movlw	0
 21832  001024  23A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21833  001026  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21834  001028  50F3               	movf	prodl,w,c
 21835  00102A  27A5               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21836  00102C  50F4               	movf	prodh,w,c
 21837  00102E  23A6               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21838  001030  0E00               	movlw	0
 21839  001032  23A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21840  001034  0E7D               	movlw	125
 21841  001036  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21842  001038  50F3               	movf	prodl,w,c
 21843  00103A  27A6               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21844  00103C  50F4               	movf	prodh,w,c
 21845  00103E  23A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21846  001040  0E00               	movlw	0
 21847  001042  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21848  001044  50F3               	movf	prodl,w,c
 21849  001046  27A6               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21850  001048  50F4               	movf	prodh,w,c
 21851  00104A  23A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21852  00104C  0E00               	movlw	0
 21853  00104E  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21854  001050  50F3               	movf	prodl,w,c
 21855  001052  27A6               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21856  001054  50F4               	movf	prodh,w,c
 21857  001056  23A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21858  001058  0E7D               	movlw	125
 21859  00105A  03A3               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21860  00105C  50F3               	movf	prodl,w,c
 21861  00105E  27A7               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21862  001060  0E00               	movlw	0
 21863  001062  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21864  001064  50F3               	movf	prodl,w,c
 21865  001066  27A7               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21866  001068  0E00               	movlw	0
 21867  00106A  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21868  00106C  50F3               	movf	prodl,w,c
 21869  00106E  27A7               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21870  001070  0E00               	movlw	0
 21871  001072  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21872  001074  50F3               	movf	prodl,w,c
 21873  001076  27A7               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21874  001078  D049               	goto	L12
 21875  00107A                     l14703:
 21876                           
 21877                           ; BSR set to: 0
 21878  00107A  C0C7  F0A0         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 21879  00107E  C0C8  F0A1         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 21880  001082  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 21881  001086  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 21882  00108A  0E7D               	movlw	125
 21883  00108C  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21884  00108E  CFF3 F0A4          	movff	prodl,??_LORAWAN_TxDone+4
 21885  001092  CFF4 F0A5          	movff	prodh,??_LORAWAN_TxDone+5
 21886  001096  6BA6               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 21887  001098  6BA7               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 21888  00109A  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21889  00109C  50F3               	movf	prodl,w,c
 21890  00109E  27A5               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21891  0010A0  50F4               	movf	prodh,w,c
 21892  0010A2  23A6               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21893  0010A4  0E00               	movlw	0
 21894  0010A6  23A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21895  0010A8  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21896  0010AA  50F3               	movf	prodl,w,c
 21897  0010AC  27A5               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21898  0010AE  50F4               	movf	prodh,w,c
 21899  0010B0  23A6               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21900  0010B2  0E00               	movlw	0
 21901  0010B4  23A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21902  0010B6  0E7D               	movlw	125
 21903  0010B8  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21904  0010BA  50F3               	movf	prodl,w,c
 21905  0010BC  27A6               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21906  0010BE  50F4               	movf	prodh,w,c
 21907  0010C0  23A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21908  0010C2  0E00               	movlw	0
 21909  0010C4  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21910  0010C6  50F3               	movf	prodl,w,c
 21911  0010C8  27A6               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21912  0010CA  50F4               	movf	prodh,w,c
 21913  0010CC  23A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21914  0010CE  0E00               	movlw	0
 21915  0010D0  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21916  0010D2  50F3               	movf	prodl,w,c
 21917  0010D4  27A6               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21918  0010D6  50F4               	movf	prodh,w,c
 21919  0010D8  23A7               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21920  0010DA  0E7D               	movlw	125
 21921  0010DC  03A3               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21922  0010DE  50F3               	movf	prodl,w,c
 21923  0010E0  27A7               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21924  0010E2  0E00               	movlw	0
 21925  0010E4  03A2               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21926  0010E6  50F3               	movf	prodl,w,c
 21927  0010E8  27A7               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21928  0010EA  0E00               	movlw	0
 21929  0010EC  03A1               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21930  0010EE  50F3               	movf	prodl,w,c
 21931  0010F0  27A7               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21932  0010F2  0E00               	movlw	0
 21933  0010F4  03A0               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21934  0010F6  50F3               	movf	prodl,w,c
 21935  0010F8  27A7               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21936  0010FA  0E0D               	movlw	13
 21937  0010FC  D005               	goto	u17110
 21938  0010FE                     u17115:
 21939  0010FE  90D8               	bcf	status,0,c
 21940  001100  33A7               	rrcf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21941  001102  33A6               	rrcf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21942  001104  33A5               	rrcf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21943  001106  33A4               	rrcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21944  001108                     u17110:
 21945  001108  2EE8               	decfsz	wreg,f,c
 21946  00110A  D7F9               	goto	u17115
 21947  00110C                     L12:
 21948  00110C  C0A4  F0BA         	movff	??_LORAWAN_TxDone+4,_LORAWAN_TxDone$1948
 21949  001110  C0A5  F0BB         	movff	??_LORAWAN_TxDone+5,_LORAWAN_TxDone$1948+1
 21950  001114  C0A6  F0BC         	movff	??_LORAWAN_TxDone+6,_LORAWAN_TxDone$1948+2
 21951  001118  C0A7  F0BD         	movff	??_LORAWAN_TxDone+7,_LORAWAN_TxDone$1948+3
 21952                           
 21953                           ; BSR set to: 0
 21954  00111C  51BA               	movf	_LORAWAN_TxDone$1948& (0+255),w,b
 21955  00111E  0102               	movlb	2	; () banked
 21956  001120  5DC8               	subwf	(_loRa+200)& (0+255),w,b
 21957  001122  0100               	movlb	0	; () banked
 21958  001124  6FC3               	movwf	LORAWAN_TxDone@delta& (0+255),b
 21959  001126  51BB               	movf	(_LORAWAN_TxDone$1948+1)& (0+255),w,b
 21960  001128  0102               	movlb	2	; () banked
 21961  00112A  59C9               	subwfb	(_loRa+201)& (0+255),w,b
 21962  00112C  0100               	movlb	0	; () banked
 21963  00112E  6FC4               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21964  001130  51BC               	movf	(_LORAWAN_TxDone$1948+2)& (0+255),w,b
 21965  001132  0102               	movlb	2	; () banked
 21966  001134  59CA               	subwfb	(_loRa+202)& (0+255),w,b
 21967  001136  0100               	movlb	0	; () banked
 21968  001138  6FC5               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21969  00113A  51BD               	movf	(_LORAWAN_TxDone$1948+3)& (0+255),w,b
 21970  00113C  0102               	movlb	2	; () banked
 21971  00113E  59CB               	subwfb	(_loRa+203)& (0+255),w,b
 21972  001140  0100               	movlb	0	; () banked
 21973  001142  6FC6               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21974  001144                     l14707:
 21975                           
 21976                           ; BSR set to: 0
 21977                           ;lorawan_eu.c: 409: }
 21978                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 21979  001144  6BCF               	clrf	LORAWAN_TxDone@i& (0+255),b
 21980  001146                     l14713:
 21981                           
 21982                           ; BSR set to: 0
 21983                           ;lorawan_eu.c: 412: {
 21984                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 21985  001146  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21986  001148  0D0E               	mullw	14
 21987  00114A  0E04               	movlw	low (_Channels+4)
 21988  00114C  24F3               	addwf	prodl,w,c
 21989  00114E  6ED9               	movwf	fsr2l,c
 21990  001150  0E04               	movlw	high (_Channels+4)
 21991  001152  20F4               	addwfc	prodh,w,c
 21992  001154  6EDA               	movwf	fsr2h,c
 21993  001156  04DE               	decf	postinc2,w,c
 21994  001158  E001 D08E          	bnz	l14731
 21995                           
 21996                           ; BSR set to: 0
 21997  00115C  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21998  00115E  0D0E               	mullw	14
 21999  001160  0E08               	movlw	low (_Channels+8)
 22000  001162  24F3               	addwf	prodl,w,c
 22001  001164  6ED9               	movwf	fsr2l,c
 22002  001166  0E04               	movlw	high (_Channels+8)
 22003  001168  20F4               	addwfc	prodh,w,c
 22004  00116A  6EDA               	movwf	fsr2h,c
 22005  00116C  50DE               	movf	postinc2,w,c
 22006  00116E  10DE               	iorwf	postinc2,w,c
 22007  001170  10DE               	iorwf	postinc2,w,c
 22008  001172  10DE               	iorwf	postinc2,w,c
 22009  001174  E101 D080          	bz	l14731
 22010                           
 22011                           ; BSR set to: 0
 22012                           ;lorawan_eu.c: 414: {
 22013                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 22014  001178  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22015  00117A  0102               	movlb	2	; () banked
 22016  00117C  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 22017  00117E  E04B               	bz	l1050
 22018                           
 22019                           ; BSR set to: 2
 22020                           ;lorawan_eu.c: 416: {
 22021                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 22022  001180  0100               	movlb	0	; () banked
 22023  001182  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22024  001184  0D0E               	mullw	14
 22025  001186  0E08               	movlw	low (_Channels+8)
 22026  001188  24F3               	addwf	prodl,w,c
 22027  00118A  6ED9               	movwf	fsr2l,c
 22028  00118C  0E04               	movlw	high (_Channels+8)
 22029  00118E  20F4               	addwfc	prodh,w,c
 22030  001190  6EDA               	movwf	fsr2h,c
 22031  001192  50DE               	movf	postinc2,w,c
 22032  001194  5DC3               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 22033  001196  50DE               	movf	postinc2,w,c
 22034  001198  59C4               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22035  00119A  50DE               	movf	postinc2,w,c
 22036  00119C  59C5               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22037  00119E  50DE               	movf	postinc2,w,c
 22038  0011A0  59C6               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22039  0011A2  E22D               	bc	l14723
 22040                           
 22041                           ; BSR set to: 0
 22042                           ;lorawan_eu.c: 418: {
 22043                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 22044  0011A4  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22045  0011A6  0D0E               	mullw	14
 22046  0011A8  0E08               	movlw	low (_Channels+8)
 22047  0011AA  24F3               	addwf	prodl,w,c
 22048  0011AC  6ED9               	movwf	fsr2l,c
 22049  0011AE  0E04               	movlw	high (_Channels+8)
 22050  0011B0  20F4               	addwfc	prodh,w,c
 22051  0011B2  6EDA               	movwf	fsr2h,c
 22052  0011B4  CFDE F0A0          	movff	postinc2,??_LORAWAN_TxDone
 22053  0011B8  CFDE F0A1          	movff	postinc2,??_LORAWAN_TxDone+1
 22054  0011BC  CFDE F0A2          	movff	postinc2,??_LORAWAN_TxDone+2
 22055  0011C0  CFDE F0A3          	movff	postinc2,??_LORAWAN_TxDone+3
 22056  0011C4  51C3               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 22057  0011C6  5DA0               	subwf	??_LORAWAN_TxDone& (0+255),w,b
 22058  0011C8  6FA4               	movwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22059  0011CA  51C4               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22060  0011CC  59A1               	subwfb	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22061  0011CE  6FA5               	movwf	(??_LORAWAN_TxDone+5)& (0+255),b
 22062  0011D0  51C5               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22063  0011D2  59A2               	subwfb	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22064  0011D4  6FA6               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 22065  0011D6  51C6               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22066  0011D8  59A3               	subwfb	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22067  0011DA  6FA7               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 22068  0011DC  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22069  0011DE  0D0E               	mullw	14
 22070  0011E0  0E08               	movlw	low (_Channels+8)
 22071  0011E2  24F3               	addwf	prodl,w,c
 22072  0011E4  6ED9               	movwf	fsr2l,c
 22073  0011E6  0E04               	movlw	high (_Channels+8)
 22074  0011E8  20F4               	addwfc	prodh,w,c
 22075  0011EA  6EDA               	movwf	fsr2h,c
 22076  0011EC  C0A4  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 22077  0011F0  C0A5  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 22078  0011F4  C0A6  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 22079  0011F8  C0A7  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 22080                           
 22081                           ;lorawan_eu.c: 420: }
 22082  0011FC  D00C               	goto	l1050
 22083  0011FE                     l14723:
 22084                           
 22085                           ; BSR set to: 0
 22086                           ;lorawan_eu.c: 421: else
 22087                           ;lorawan_eu.c: 422: {
 22088                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 22089  0011FE  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22090  001200  0D0E               	mullw	14
 22091  001202  0E08               	movlw	low (_Channels+8)
 22092  001204  24F3               	addwf	prodl,w,c
 22093  001206  6ED9               	movwf	fsr2l,c
 22094  001208  0E04               	movlw	high (_Channels+8)
 22095  00120A  20F4               	addwfc	prodh,w,c
 22096  00120C  6EDA               	movwf	fsr2h,c
 22097  00120E  6ADE               	clrf	postinc2,c
 22098  001210  6ADE               	clrf	postinc2,c
 22099  001212  6ADE               	clrf	postinc2,c
 22100  001214  6ADD               	clrf	postdec2,c
 22101  001216                     l1050:
 22102                           
 22103                           ;lorawan_eu.c: 424: }
 22104                           ;lorawan_eu.c: 425: }
 22105                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 22106  001216  0100               	movlb	0	; () banked
 22107  001218  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22108  00121A  0D0E               	mullw	14
 22109  00121C  0E08               	movlw	low (_Channels+8)
 22110  00121E  24F3               	addwf	prodl,w,c
 22111  001220  6ED9               	movwf	fsr2l,c
 22112  001222  0E04               	movlw	high (_Channels+8)
 22113  001224  20F4               	addwfc	prodh,w,c
 22114  001226  6EDA               	movwf	fsr2h,c
 22115  001228  50DE               	movf	postinc2,w,c
 22116  00122A  5DCB               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 22117  00122C  50DE               	movf	postinc2,w,c
 22118  00122E  59CC               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22119  001230  50DE               	movf	postinc2,w,c
 22120  001232  59CD               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22121  001234  50DE               	movf	postinc2,w,c
 22122  001236  59CE               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22123  001238  E31F               	bnc	l14731
 22124                           
 22125                           ; BSR set to: 0
 22126  00123A  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22127  00123C  0D0E               	mullw	14
 22128  00123E  0E08               	movlw	low (_Channels+8)
 22129  001240  24F3               	addwf	prodl,w,c
 22130  001242  6ED9               	movwf	fsr2l,c
 22131  001244  0E04               	movlw	high (_Channels+8)
 22132  001246  20F4               	addwfc	prodh,w,c
 22133  001248  6EDA               	movwf	fsr2h,c
 22134  00124A  50DE               	movf	postinc2,w,c
 22135  00124C  10DE               	iorwf	postinc2,w,c
 22136  00124E  10DE               	iorwf	postinc2,w,c
 22137  001250  10DE               	iorwf	postinc2,w,c
 22138  001252  E012               	bz	l14731
 22139                           
 22140                           ; BSR set to: 0
 22141                           ;lorawan_eu.c: 427: {
 22142                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 22143  001254  51CF               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22144  001256  0D0E               	mullw	14
 22145  001258  0E08               	movlw	low (_Channels+8)
 22146  00125A  24F3               	addwf	prodl,w,c
 22147  00125C  6ED9               	movwf	fsr2l,c
 22148  00125E  0E04               	movlw	high (_Channels+8)
 22149  001260  20F4               	addwfc	prodh,w,c
 22150  001262  6EDA               	movwf	fsr2h,c
 22151  001264  CFDE F0CB          	movff	postinc2,LORAWAN_TxDone@minim
 22152  001268  CFDE F0CC          	movff	postinc2,LORAWAN_TxDone@minim+1
 22153  00126C  CFDE F0CD          	movff	postinc2,LORAWAN_TxDone@minim+2
 22154  001270  CFDE F0CE          	movff	postinc2,LORAWAN_TxDone@minim+3
 22155                           
 22156                           ; BSR set to: 0
 22157                           ;lorawan_eu.c: 429: found = 1;
 22158  001274  0E01               	movlw	1
 22159  001276  6FC2               	movwf	LORAWAN_TxDone@found& (0+255),b
 22160  001278                     l14731:
 22161                           
 22162                           ; BSR set to: 0
 22163  001278  2BCF               	incf	LORAWAN_TxDone@i& (0+255),f,b
 22164                           
 22165                           ; BSR set to: 0
 22166  00127A  0E0F               	movlw	15
 22167  00127C  65CF               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 22168  00127E  D763               	goto	l14713
 22169                           
 22170                           ; BSR set to: 0
 22171                           ;lorawan_eu.c: 430: }
 22172                           ;lorawan_eu.c: 431: }
 22173                           ;lorawan_eu.c: 432: }
 22174                           ;lorawan_eu.c: 433: if (found == 1)
 22175  001280  05C2               	decf	LORAWAN_TxDone@found& (0+255),w,b
 22176  001282  E15F               	bnz	l14749
 22177                           
 22178                           ; BSR set to: 0
 22179                           ;lorawan_eu.c: 434: {
 22180                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 22181  001284  C0CB  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 22182  001288  C0CC  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 22183  00128C  C0CD  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 22184  001290  C0CE  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 22185                           
 22186                           ; BSR set to: 0
 22187                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 22188  001294  51CE               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22189  001296  E106               	bnz	u17200
 22190  001298  29CB               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 22191  00129A  0EFF               	movlw	255
 22192  00129C  59CC               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22193  00129E  0E0F               	movlw	15
 22194  0012A0  59CD               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22195  0012A2  E318               	bnc	l14743
 22196  0012A4                     u17200:
 22197                           
 22198                           ; BSR set to: 0
 22199  0012A4  C0CB  F064         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 22200  0012A8  C0CC  F065         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 22201  0012AC  C0CD  F066         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 22202  0012B0  C0CE  F067         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 22203  0012B4  0E7D               	movlw	125
 22204  0012B6  6F68               	movwf	___lldiv@divisor& (0+255),b
 22205  0012B8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22206  0012BA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22207  0012BC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22208  0012BE  ECAA  F030         	call	___lldiv	;wreg free
 22209  0012C2  0E0C               	movlw	12
 22210  0012C4                     u17215:
 22211  0012C4  90D8               	bcf	status,0,c
 22212  0012C6  3764               	rlcf	?___lldiv& (0+255),f,b
 22213  0012C8  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 22214  0012CA  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 22215  0012CC  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 22216  0012CE  2EE8               	decfsz	wreg,f,c
 22217  0012D0  D7F9               	goto	u17215
 22218  0012D2  D01F               	goto	L13
 22219  0012D4                     l14743:
 22220                           
 22221                           ; BSR set to: 0
 22222  0012D4  C0CB  F0A0         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 22223  0012D8  C0CC  F0A1         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 22224  0012DC  C0CD  F0A2         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 22225  0012E0  C0CE  F0A3         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 22226  0012E4  0E0C               	movlw	12
 22227  0012E6                     u17225:
 22228  0012E6  90D8               	bcf	status,0,c
 22229  0012E8  37A0               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 22230  0012EA  37A1               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22231  0012EC  37A2               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22232  0012EE  37A3               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22233  0012F0  2EE8               	decfsz	wreg,f,c
 22234  0012F2  D7F9               	goto	u17225
 22235  0012F4  C0A0  F064         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 22236  0012F8  C0A1  F065         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 22237  0012FC  C0A2  F066         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 22238  001300  C0A3  F067         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 22239  001304  0E7D               	movlw	125
 22240  001306  6F68               	movwf	___lldiv@divisor& (0+255),b
 22241  001308  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22242  00130A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22243  00130C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22244  00130E  ECAA  F030         	call	___lldiv	;wreg free
 22245  001312                     L13:
 22246  001312  C064  F0BE         	movff	?___lldiv,_LORAWAN_TxDone$1949
 22247  001316  C065  F0BF         	movff	?___lldiv+1,_LORAWAN_TxDone$1949+1
 22248  00131A  C066  F0C0         	movff	?___lldiv+2,_LORAWAN_TxDone$1949+2
 22249  00131E  C067  F0C1         	movff	?___lldiv+3,_LORAWAN_TxDone$1949+3
 22250                           
 22251                           ; BSR set to: 0
 22252  001322  C0BE  F071         	movff	_LORAWAN_TxDone$1949,SwTimerSetTimeout@timeout
 22253  001326  C0BF  F072         	movff	_LORAWAN_TxDone$1949+1,SwTimerSetTimeout@timeout+1
 22254  00132A  C0C0  F073         	movff	_LORAWAN_TxDone$1949+2,SwTimerSetTimeout@timeout+2
 22255  00132E  C0C1  F074         	movff	_LORAWAN_TxDone$1949+3,SwTimerSetTimeout@timeout+3
 22256  001332  0102               	movlb	2	; () banked
 22257  001334  51E9               	movf	(_loRa+233)& (0+255),w,b
 22258  001336  ECE5  F036         	call	_SwTimerSetTimeout
 22259                           
 22260                           ; BSR set to: 0
 22261                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 22262  00133A  0102               	movlb	2	; () banked
 22263  00133C  51E9               	movf	(_loRa+233)& (0+255),w,b
 22264  00133E  ECAA  F02E         	call	_SwTimerStart
 22265  001342                     l14749:
 22266                           
 22267                           ; BSR set to: 0
 22268                           ;lorawan_eu.c: 438: }
 22269                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 22270  001342  0E02               	movlw	2
 22271  001344  0102               	movlb	2	; () banked
 22272  001346  1912               	xorwf	(_loRa+18)& (0+255),w,b
 22273  001348  A4D8               	btfss	status,2,c
 22274  00134A  0012               	return	
 22275                           
 22276                           ; BSR set to: 2
 22277                           ;lorawan_eu.c: 440: {
 22278                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 22279  00134C  5102               	movf	(_loRa+2)& (0+255),w,b
 22280  00134E  0BF0               	andlw	-16
 22281  001350  0908               	iorlw	8
 22282  001352  6F02               	movwf	(_loRa+2)& (0+255),b
 22283                           
 22284                           ; BSR set to: 2
 22285                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 22286  001354  EFF6  F031         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 22287  001358                     l14755:
 22288                           
 22289                           ; BSR set to: 2
 22290                           ;lorawan_eu.c: 445: else
 22291                           ;lorawan_eu.c: 446: {
 22292                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 22293  001358  ECA2  F03C         	call	_RADIO_GetStatus	;wreg free
 22294  00135C  0100               	movlb	0	; () banked
 22295  00135E  6FA0               	movwf	??_LORAWAN_TxDone& (0+255),b
 22296  001360  A9A0               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 22297  001362  D011               	goto	l14759
 22298                           
 22299                           ; BSR set to: 0
 22300                           ;lorawan_eu.c: 448: {
 22301                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 22302  001364  0E00               	movlw	0
 22303  001366  6F64               	movwf	RxDataDone@pData& (0+255),b
 22304  001368  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
 22305  00136A  6F66               	movwf	RxDataDone@dataLength& (0+255),b
 22306  00136C  0E02               	movlw	2
 22307  00136E  6F67               	movwf	RxDataDone@status& (0+255),b
 22308  001370  0005               	push	
 22309  001372  0101               	movlb	1	; () banked
 22310  001374  6EFA               	movwf	pclath,c
 22311  001376  5172               	movf	_rxPayload& (0+255),w,b
 22312  001378  6EFD               	movwf	tosl,c
 22313  00137A  5173               	movf	(_rxPayload+1)& (0+255),w,b
 22314  00137C  6EFE               	movwf	tosh,c
 22315  00137E  50F8               	movf	tblptru,w,c
 22316  001380  6EFF               	movwf	tosu,c
 22317  001382  50FA               	movf	pclath,w,c
 22318  001384  0012               	return		;indir
 22319  001386                     l14759:
 22320                           
 22321                           ; BSR set to: 0
 22322                           ;lorawan_eu.c: 452: else
 22323                           ;lorawan_eu.c: 453: {
 22324                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 22325  001386  0101               	movlb	1	; () banked
 22326  001388  5172               	movf	_rxPayload& (0+255),w,b
 22327  00138A  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 22328  00138C  B4D8               	btfsc	status,2,c
 22329  00138E  0012               	return	
 22330                           
 22331                           ; BSR set to: 1
 22332                           ;lorawan_eu.c: 456: {
 22333                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 22334  001390  0E00               	movlw	0
 22335  001392  0100               	movlb	0	; () banked
 22336  001394  6F64               	movwf	RxDataDone@pData& (0+255),b
 22337  001396  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
 22338  001398  6F66               	movwf	RxDataDone@dataLength& (0+255),b
 22339  00139A  0E03               	movlw	3
 22340  00139C  6F67               	movwf	RxDataDone@status& (0+255),b
 22341  00139E  0005               	push	
 22342  0013A0  0101               	movlb	1	; () banked
 22343  0013A2  6EFA               	movwf	pclath,c
 22344  0013A4  5172               	movf	_rxPayload& (0+255),w,b
 22345  0013A6  6EFD               	movwf	tosl,c
 22346  0013A8  5173               	movf	(_rxPayload+1)& (0+255),w,b
 22347  0013AA  6EFE               	movwf	tosh,c
 22348  0013AC  50F8               	movf	tblptru,w,c
 22349  0013AE  6EFF               	movwf	tosu,c
 22350  0013B0  50FA               	movf	pclath,w,c
 22351  0013B2  0012               	return		;indir
 22352  0013B4                     __end_of_LORAWAN_TxDone:
 22353                           	opt stack 0
 22354                           tosu	equ	0xFFF
 22355                           tosh	equ	0xFFE
 22356                           tosl	equ	0xFFD
 22357                           pclath	equ	0xFFA
 22358                           tblptru	equ	0xFF8
 22359                           tblptrh	equ	0xFF7
 22360                           tblptrl	equ	0xFF6
 22361                           tablat	equ	0xFF5
 22362                           prodh	equ	0xFF4
 22363                           prodl	equ	0xFF3
 22364                           intcon	equ	0xFF2
 22365                           indf0	equ	0xFEF
 22366                           postinc0	equ	0xFEE
 22367                           fsr0h	equ	0xFEA
 22368                           fsr0l	equ	0xFE9
 22369                           wreg	equ	0xFE8
 22370                           postinc1	equ	0xFE6
 22371                           postdec1	equ	0xFE5
 22372                           plusw1	equ	0xFE3
 22373                           fsr1h	equ	0xFE2
 22374                           fsr1l	equ	0xFE1
 22375                           indf2	equ	0xFDF
 22376                           postinc2	equ	0xFDE
 22377                           postdec2	equ	0xFDD
 22378                           plusw2	equ	0xFDB
 22379                           fsr2h	equ	0xFDA
 22380                           fsr2l	equ	0xFD9
 22381                           status	equ	0xFD8
 22382                           
 22383 ;; *************** function _SwTimerReadValue *****************
 22384 ;; Defined at:
 22385 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22386 ;; Parameters:    Size  Location     Type
 22387 ;;  timerId         1    wreg     unsigned char 
 22388 ;; Auto vars:     Size  Location     Type
 22389 ;;  timerId         1   51[BANK0 ] unsigned char 
 22390 ;;  ticksCount      4   47[BANK0 ] unsigned long 
 22391 ;; Return value:  Size  Location     Type
 22392 ;;                  4   43[BANK0 ] unsigned long 
 22393 ;; Registers used:
 22394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22395 ;; Tracked objects:
 22396 ;;		On entry : C/1
 22397 ;;		On exit  : F/0
 22398 ;;		Unchanged: 0/0
 22399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22400 ;;      Params:         0       4       0       0       0       0       0       0       0
 22401 ;;      Locals:         0       5       0       0       0       0       0       0       0
 22402 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22403 ;;      Totals:         0       9       0       0       0       0       0       0       0
 22404 ;;Total ram usage:        9 bytes
 22405 ;; Hardware stack levels used:    1
 22406 ;; Hardware stack levels required when called:   10
 22407 ;; This function calls:
 22408 ;;		_SwTimersInterrupt
 22409 ;; This function is called by:
 22410 ;;		_RADIO_TxDone
 22411 ;;		_RADIO_FSKPacketSent
 22412 ;;		_LORAWAN_TxDone
 22413 ;; This function uses a non-reentrant model
 22414 ;;
 22415                           
 22416                           	psect	text111
 22417  006E4C                     __ptext111:
 22418                           	opt stack 0
 22419  006E4C                     _SwTimerReadValue:
 22420                           	opt stack 16
 22421                           
 22422                           ;incstack = 0
 22423                           ;SwTimerReadValue@timerId stored from wreg
 22424  006E4C  0100               	movlb	0	; () banked
 22425  006E4E  6F93               	movwf	SwTimerReadValue@timerId& (0+255),b
 22426                           
 22427                           ;sw_timer.c: 195: uint32_t ticksCount;
 22428                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 22429  006E50  9EF2               	bcf	intcon,7,c	;volatile
 22430                           
 22431                           ;sw_timer.c: 200: SwTimersInterrupt();
 22432  006E52  ECD6  F025         	call	_SwTimersInterrupt	;wreg free
 22433                           
 22434                           ; BSR set to: 0
 22435                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 22436  006E56  5193               	movf	SwTimerReadValue@timerId& (0+255),w,b
 22437  006E58  0D08               	mullw	8
 22438  006E5A  0E00               	movlw	low _swTimers
 22439  006E5C  24F3               	addwf	prodl,w,c
 22440  006E5E  6ED9               	movwf	fsr2l,c
 22441  006E60  0E03               	movlw	high _swTimers
 22442  006E62  20F4               	addwfc	prodh,w,c
 22443  006E64  6EDA               	movwf	fsr2h,c
 22444  006E66  CFDE F08F          	movff	postinc2,SwTimerReadValue@ticksCount
 22445  006E6A  CFDE F090          	movff	postinc2,SwTimerReadValue@ticksCount+1
 22446  006E6E  CFDE F091          	movff	postinc2,SwTimerReadValue@ticksCount+2
 22447  006E72  CFDE F092          	movff	postinc2,SwTimerReadValue@ticksCount+3
 22448                           
 22449                           ; BSR set to: 0
 22450                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 22451  006E76  8EF2               	bsf	intcon,7,c	;volatile
 22452                           
 22453                           ; BSR set to: 0
 22454                           ;sw_timer.c: 204: return ticksCount;
 22455  006E78  C08F  F08B         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 22456  006E7C  C090  F08C         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 22457  006E80  C091  F08D         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 22458  006E84  C092  F08E         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 22459                           
 22460                           ; BSR set to: 0
 22461  006E88  0012               	return		;funcret
 22462  006E8A                     __end_of_SwTimerReadValue:
 22463                           	opt stack 0
 22464                           tosu	equ	0xFFF
 22465                           tosh	equ	0xFFE
 22466                           tosl	equ	0xFFD
 22467                           pclath	equ	0xFFA
 22468                           tblptru	equ	0xFF8
 22469                           tblptrh	equ	0xFF7
 22470                           tblptrl	equ	0xFF6
 22471                           tablat	equ	0xFF5
 22472                           prodh	equ	0xFF4
 22473                           prodl	equ	0xFF3
 22474                           intcon	equ	0xFF2
 22475                           indf0	equ	0xFEF
 22476                           postinc0	equ	0xFEE
 22477                           fsr0h	equ	0xFEA
 22478                           fsr0l	equ	0xFE9
 22479                           wreg	equ	0xFE8
 22480                           postinc1	equ	0xFE6
 22481                           postdec1	equ	0xFE5
 22482                           plusw1	equ	0xFE3
 22483                           fsr1h	equ	0xFE2
 22484                           fsr1l	equ	0xFE1
 22485                           indf2	equ	0xFDF
 22486                           postinc2	equ	0xFDE
 22487                           postdec2	equ	0xFDD
 22488                           plusw2	equ	0xFDB
 22489                           fsr2h	equ	0xFDA
 22490                           fsr2l	equ	0xFD9
 22491                           status	equ	0xFD8
 22492                           
 22493 ;; *************** function _SwTimerIsRunning *****************
 22494 ;; Defined at:
 22495 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22496 ;; Parameters:    Size  Location     Type
 22497 ;;  timerId         1    wreg     unsigned char 
 22498 ;; Auto vars:     Size  Location     Type
 22499 ;;  timerId         1    4[BANK0 ] unsigned char 
 22500 ;;  isRunning       1    5[BANK0 ] unsigned char 
 22501 ;; Return value:  Size  Location     Type
 22502 ;;                  1    wreg      unsigned char 
 22503 ;; Registers used:
 22504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22505 ;; Tracked objects:
 22506 ;;		On entry : F/2
 22507 ;;		On exit  : F/0
 22508 ;;		Unchanged: 0/0
 22509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22510 ;;      Params:         0       0       0       0       0       0       0       0       0
 22511 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22512 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22513 ;;      Totals:         0       2       0       0       0       0       0       0       0
 22514 ;;Total ram usage:        2 bytes
 22515 ;; Hardware stack levels used:    1
 22516 ;; Hardware stack levels required when called:    7
 22517 ;; This function calls:
 22518 ;;		Nothing
 22519 ;; This function is called by:
 22520 ;;		_LORAWAN_TxDone
 22521 ;; This function uses a non-reentrant model
 22522 ;;
 22523                           
 22524                           	psect	text112
 22525  0074EE                     __ptext112:
 22526                           	opt stack 0
 22527  0074EE                     _SwTimerIsRunning:
 22528                           	opt stack 19
 22529                           
 22530                           ; BSR set to: 0
 22531                           ;incstack = 0
 22532                           ;SwTimerIsRunning@timerId stored from wreg
 22533  0074EE  0100               	movlb	0	; () banked
 22534  0074F0  6F64               	movwf	SwTimerIsRunning@timerId& (0+255),b
 22535                           
 22536                           ;sw_timer.c: 209: uint8_t isRunning;
 22537                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 22538  0074F2  9EF2               	bcf	intcon,7,c	;volatile
 22539                           
 22540                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 22541  0074F4  5164               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 22542  0074F6  0D08               	mullw	8
 22543  0074F8  0E04               	movlw	low (_swTimers+4)
 22544  0074FA  24F3               	addwf	prodl,w,c
 22545  0074FC  6ED9               	movwf	fsr2l,c
 22546  0074FE  0E03               	movlw	high (_swTimers+4)
 22547  007500  20F4               	addwfc	prodh,w,c
 22548  007502  6EDA               	movwf	fsr2h,c
 22549  007504  50DF               	movf	indf2,w,c
 22550  007506  6F65               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 22551                           
 22552                           ; BSR set to: 0
 22553                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 22554  007508  8EF2               	bsf	intcon,7,c	;volatile
 22555                           
 22556                           ; BSR set to: 0
 22557                           ;sw_timer.c: 215: return isRunning;
 22558  00750A  5165               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 22559                           
 22560                           ; BSR set to: 0
 22561  00750C  0012               	return		;funcret
 22562  00750E                     __end_of_SwTimerIsRunning:
 22563                           	opt stack 0
 22564                           tosu	equ	0xFFF
 22565                           tosh	equ	0xFFE
 22566                           tosl	equ	0xFFD
 22567                           pclath	equ	0xFFA
 22568                           tblptru	equ	0xFF8
 22569                           tblptrh	equ	0xFF7
 22570                           tblptrl	equ	0xFF6
 22571                           tablat	equ	0xFF5
 22572                           prodh	equ	0xFF4
 22573                           prodl	equ	0xFF3
 22574                           intcon	equ	0xFF2
 22575                           indf0	equ	0xFEF
 22576                           postinc0	equ	0xFEE
 22577                           fsr0h	equ	0xFEA
 22578                           fsr0l	equ	0xFE9
 22579                           wreg	equ	0xFE8
 22580                           postinc1	equ	0xFE6
 22581                           postdec1	equ	0xFE5
 22582                           plusw1	equ	0xFE3
 22583                           fsr1h	equ	0xFE2
 22584                           fsr1l	equ	0xFE1
 22585                           indf2	equ	0xFDF
 22586                           postinc2	equ	0xFDE
 22587                           postdec2	equ	0xFDD
 22588                           plusw2	equ	0xFDB
 22589                           fsr2h	equ	0xFDA
 22590                           fsr2l	equ	0xFD9
 22591                           status	equ	0xFD8
 22592                           
 22593 ;; *************** function _RADIO_GetStatus *****************
 22594 ;; Defined at:
 22595 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22596 ;; Parameters:    Size  Location     Type
 22597 ;;		None
 22598 ;; Auto vars:     Size  Location     Type
 22599 ;;		None
 22600 ;; Return value:  Size  Location     Type
 22601 ;;                  1    wreg      unsigned char 
 22602 ;; Registers used:
 22603 ;;		wreg, status,2
 22604 ;; Tracked objects:
 22605 ;;		On entry : C/2
 22606 ;;		On exit  : F/1
 22607 ;;		Unchanged: 0/0
 22608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22609 ;;      Params:         0       0       0       0       0       0       0       0       0
 22610 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22611 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22612 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22613 ;;Total ram usage:        0 bytes
 22614 ;; Hardware stack levels used:    1
 22615 ;; Hardware stack levels required when called:    7
 22616 ;; This function calls:
 22617 ;;		Nothing
 22618 ;; This function is called by:
 22619 ;;		_LORAWAN_TxDone
 22620 ;;		_LORAWAN_ReceiveWindow2Callback
 22621 ;;		_LORAWAN_RxDone
 22622 ;; This function uses a non-reentrant model
 22623 ;;
 22624                           
 22625                           	psect	text113
 22626  007944                     __ptext113:
 22627                           	opt stack 0
 22628  007944                     _RADIO_GetStatus:
 22629                           	opt stack 19
 22630                           
 22631                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 22632                           
 22633                           ; BSR set to: 0
 22634                           ;incstack = 0
 22635  007944  0101               	movlb	1	; () banked
 22636  007946  519C               	movf	(_RadioConfiguration+35)& (0+255),w,b
 22637                           
 22638                           ; BSR set to: 1
 22639  007948  0012               	return		;funcret
 22640  00794A                     __end_of_RADIO_GetStatus:
 22641                           	opt stack 0
 22642                           tosu	equ	0xFFF
 22643                           tosh	equ	0xFFE
 22644                           tosl	equ	0xFFD
 22645                           pclath	equ	0xFFA
 22646                           tblptru	equ	0xFF8
 22647                           tblptrh	equ	0xFF7
 22648                           tblptrl	equ	0xFF6
 22649                           tablat	equ	0xFF5
 22650                           prodh	equ	0xFF4
 22651                           prodl	equ	0xFF3
 22652                           intcon	equ	0xFF2
 22653                           indf0	equ	0xFEF
 22654                           postinc0	equ	0xFEE
 22655                           fsr0h	equ	0xFEA
 22656                           fsr0l	equ	0xFE9
 22657                           wreg	equ	0xFE8
 22658                           postinc1	equ	0xFE6
 22659                           postdec1	equ	0xFE5
 22660                           plusw1	equ	0xFE3
 22661                           fsr1h	equ	0xFE2
 22662                           fsr1l	equ	0xFE1
 22663                           indf2	equ	0xFDF
 22664                           postinc2	equ	0xFDE
 22665                           postdec2	equ	0xFDD
 22666                           plusw2	equ	0xFDB
 22667                           fsr2h	equ	0xFDA
 22668                           fsr2l	equ	0xFD9
 22669                           status	equ	0xFD8
 22670                           
 22671 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 22672 ;; Defined at:
 22673 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22674 ;; Parameters:    Size  Location     Type
 22675 ;;		None
 22676 ;; Auto vars:     Size  Location     Type
 22677 ;;		None
 22678 ;; Return value:  Size  Location     Type
 22679 ;;                  1    wreg      void 
 22680 ;; Registers used:
 22681 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22682 ;; Tracked objects:
 22683 ;;		On entry : F/2
 22684 ;;		On exit  : E/0
 22685 ;;		Unchanged: 0/0
 22686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22687 ;;      Params:         0       0       0       0       0       0       0       0       0
 22688 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22689 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22690 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22691 ;;Total ram usage:        0 bytes
 22692 ;; Hardware stack levels used:    1
 22693 ;; Hardware stack levels required when called:   13
 22694 ;; This function calls:
 22695 ;;		_ConfigureRadioRx
 22696 ;;		_RADIO_ReceiveStart
 22697 ;;		_RADIO_ReceiveStop
 22698 ;;		_RADIO_ReleaseData
 22699 ;;		_ResetParametersForConfirmedTransmission
 22700 ;;		_ResetParametersForUnconfirmedTransmission
 22701 ;;		_RxDataDone
 22702 ;; This function is called by:
 22703 ;;		_LORAWAN_TxDone
 22704 ;;		_LORAWAN_ReceiveWindow2Callback
 22705 ;;		_LORAWAN_RxDone
 22706 ;;		_SetReceptionNotOkState
 22707 ;; This function uses a non-reentrant model
 22708 ;;
 22709                           
 22710                           	psect	text114
 22711  0063EC                     __ptext114:
 22712                           	opt stack 0
 22713  0063EC                     _LORAWAN_EnterContinuousReceive:
 22714                           	opt stack 13
 22715                           
 22716                           ; BSR set to: 2
 22717                           ;lorawan.c: 917: RADIO_ReceiveStop();
 22718                           
 22719                           ; BSR set to: 1
 22720                           ;incstack = 0
 22721  0063EC  ECC5  F03A         	call	_RADIO_ReceiveStop	;wreg free
 22722                           
 22723                           ; BSR set to: 1
 22724                           ;lorawan.c: 918: RADIO_ReleaseData();
 22725  0063F0  ECA5  F03C         	call	_RADIO_ReleaseData	;wreg free
 22726                           
 22727                           ; BSR set to: 1
 22728                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 22729  0063F4  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
 22730  0063F8  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
 22731  0063FC  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
 22732  006400  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
 22733  006404  0102               	movlb	2	; () banked
 22734  006406  511C               	movf	(_loRa+28)& (0+255),w,b
 22735  006408  ECD7  F039         	call	_ConfigureRadioRx
 22736                           
 22737                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 22738  00640C  0100               	movlb	0	; () banked
 22739  00640E  6B95               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 22740  006410  6B94               	clrf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 22741  006412  EC02  F016         	call	_RADIO_ReceiveStart	;wreg free
 22742  006416  5194               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 22743  006418  1195               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 22744  00641A  B4D8               	btfsc	status,2,c
 22745  00641C  0012               	return	
 22746                           
 22747                           ; BSR set to: 0
 22748                           ;lorawan.c: 923: {
 22749                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 22750  00641E  EC15  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
 22751                           
 22752                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 22753  006422  EC0E  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 22754                           
 22755                           ; BSR set to: 2
 22756                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 22757  006426  0EF0               	movlw	-16
 22758  006428  1702               	andwf	(_loRa+2)& (0+255),f,b
 22759                           
 22760                           ; BSR set to: 2
 22761                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 22762  00642A  0101               	movlb	1	; () banked
 22763  00642C  5172               	movf	_rxPayload& (0+255),w,b
 22764  00642E  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 22765  006430  B4D8               	btfsc	status,2,c
 22766  006432  0012               	return	
 22767                           
 22768                           ; BSR set to: 1
 22769                           ;lorawan.c: 928: {
 22770                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 22771  006434  0E00               	movlw	0
 22772  006436  0100               	movlb	0	; () banked
 22773  006438  6F64               	movwf	RxDataDone@pData& (0+255),b
 22774  00643A  6F65               	movwf	(RxDataDone@pData+1)& (0+255),b
 22775  00643C  6F66               	movwf	RxDataDone@dataLength& (0+255),b
 22776  00643E  6F67               	movwf	RxDataDone@status& (0+255),b
 22777  006440  0005               	push	
 22778  006442  0101               	movlb	1	; () banked
 22779  006444  6EFA               	movwf	pclath,c
 22780  006446  5172               	movf	_rxPayload& (0+255),w,b
 22781  006448  6EFD               	movwf	tosl,c
 22782  00644A  5173               	movf	(_rxPayload+1)& (0+255),w,b
 22783  00644C  6EFE               	movwf	tosh,c
 22784  00644E  50F8               	movf	tblptru,w,c
 22785  006450  6EFF               	movwf	tosu,c
 22786  006452  50FA               	movf	pclath,w,c
 22787  006454  0012               	return		;indir
 22788  006456                     __end_of_LORAWAN_EnterContinuousReceive:
 22789                           	opt stack 0
 22790                           tosu	equ	0xFFF
 22791                           tosh	equ	0xFFE
 22792                           tosl	equ	0xFFD
 22793                           pclath	equ	0xFFA
 22794                           tblptru	equ	0xFF8
 22795                           tblptrh	equ	0xFF7
 22796                           tblptrl	equ	0xFF6
 22797                           tablat	equ	0xFF5
 22798                           prodh	equ	0xFF4
 22799                           prodl	equ	0xFF3
 22800                           intcon	equ	0xFF2
 22801                           indf0	equ	0xFEF
 22802                           postinc0	equ	0xFEE
 22803                           fsr0h	equ	0xFEA
 22804                           fsr0l	equ	0xFE9
 22805                           wreg	equ	0xFE8
 22806                           postinc1	equ	0xFE6
 22807                           postdec1	equ	0xFE5
 22808                           plusw1	equ	0xFE3
 22809                           fsr1h	equ	0xFE2
 22810                           fsr1l	equ	0xFE1
 22811                           indf2	equ	0xFDF
 22812                           postinc2	equ	0xFDE
 22813                           postdec2	equ	0xFDD
 22814                           plusw2	equ	0xFDB
 22815                           fsr2h	equ	0xFDA
 22816                           fsr2l	equ	0xFD9
 22817                           status	equ	0xFD8
 22818                           
 22819 ;; *************** function _RxDataDone *****************
 22820 ;; Defined at:
 22821 ;;		line 145 in file "main.c"
 22822 ;; Parameters:    Size  Location     Type
 22823 ;;  pData           2    4[BANK0 ] PTR unsigned char 
 22824 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 22825 ;;  dataLength      1    6[BANK0 ] unsigned char 
 22826 ;;  status          1    7[BANK0 ] enum E17261
 22827 ;; Auto vars:     Size  Location     Type
 22828 ;;		None
 22829 ;; Return value:  Size  Location     Type
 22830 ;;                  1    wreg      void 
 22831 ;; Registers used:
 22832 ;;		None
 22833 ;; Tracked objects:
 22834 ;;		On entry : F/1
 22835 ;;		On exit  : F/1
 22836 ;;		Unchanged: F/0
 22837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22838 ;;      Params:         0       4       0       0       0       0       0       0       0
 22839 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22840 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22841 ;;      Totals:         0       4       0       0       0       0       0       0       0
 22842 ;;Total ram usage:        4 bytes
 22843 ;; Hardware stack levels used:    1
 22844 ;; Hardware stack levels required when called:    7
 22845 ;; This function calls:
 22846 ;;		Nothing
 22847 ;; This function is called by:
 22848 ;;		_main
 22849 ;;		_LORAWAN_EnterContinuousReceive
 22850 ;;		_LORAWAN_ReceiveWindow2Callback
 22851 ;;		_SetReceptionNotOkState
 22852 ;;		_LORAWAN_RxDone
 22853 ;;		_LORAWAN_RxTimeout
 22854 ;;		_LORAWAN_TxDone
 22855 ;;		_AckRetransmissionCallback
 22856 ;;		_UnconfirmedTransmissionCallback
 22857 ;; This function uses a non-reentrant model
 22858 ;;
 22859                           
 22860                           	psect	text115
 22861  007986                     __ptext115:
 22862                           	opt stack 0
 22863  007986                     _RxDataDone:
 22864                           	opt stack 20
 22865                           
 22866                           ; BSR set to: 1
 22867                           
 22868                           ;incstack = 0
 22869  007986  0012               	return		;funcret
 22870  007988                     __end_of_RxDataDone:
 22871                           	opt stack 0
 22872                           tosu	equ	0xFFF
 22873                           tosh	equ	0xFFE
 22874                           tosl	equ	0xFFD
 22875                           pclath	equ	0xFFA
 22876                           tblptru	equ	0xFF8
 22877                           tblptrh	equ	0xFF7
 22878                           tblptrl	equ	0xFF6
 22879                           tablat	equ	0xFF5
 22880                           prodh	equ	0xFF4
 22881                           prodl	equ	0xFF3
 22882                           intcon	equ	0xFF2
 22883                           indf0	equ	0xFEF
 22884                           postinc0	equ	0xFEE
 22885                           fsr0h	equ	0xFEA
 22886                           fsr0l	equ	0xFE9
 22887                           wreg	equ	0xFE8
 22888                           postinc1	equ	0xFE6
 22889                           postdec1	equ	0xFE5
 22890                           plusw1	equ	0xFE3
 22891                           fsr1h	equ	0xFE2
 22892                           fsr1l	equ	0xFE1
 22893                           indf2	equ	0xFDF
 22894                           postinc2	equ	0xFDE
 22895                           postdec2	equ	0xFDD
 22896                           plusw2	equ	0xFDB
 22897                           fsr2h	equ	0xFDA
 22898                           fsr2l	equ	0xFD9
 22899                           status	equ	0xFD8
 22900                           
 22901 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 22902 ;; Defined at:
 22903 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22904 ;; Parameters:    Size  Location     Type
 22905 ;;		None
 22906 ;; Auto vars:     Size  Location     Type
 22907 ;;		None
 22908 ;; Return value:  Size  Location     Type
 22909 ;;                  1    wreg      void 
 22910 ;; Registers used:
 22911 ;;		wreg, status,2
 22912 ;; Tracked objects:
 22913 ;;		On entry : D/0
 22914 ;;		On exit  : F/2
 22915 ;;		Unchanged: 0/0
 22916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22917 ;;      Params:         0       0       0       0       0       0       0       0       0
 22918 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22919 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22920 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22921 ;;Total ram usage:        0 bytes
 22922 ;; Hardware stack levels used:    1
 22923 ;; Hardware stack levels required when called:    7
 22924 ;; This function calls:
 22925 ;;		Nothing
 22926 ;; This function is called by:
 22927 ;;		_LORAWAN_RxTimeout
 22928 ;;		_LORAWAN_ReceiveWindow2Callback
 22929 ;;		_LORAWAN_EnterContinuousReceive
 22930 ;;		_UnconfirmedTransmissionCallback
 22931 ;; This function uses a non-reentrant model
 22932 ;;
 22933                           
 22934                           	psect	text116
 22935  00781C                     __ptext116:
 22936                           	opt stack 0
 22937  00781C                     _ResetParametersForUnconfirmedTransmission:
 22938                           	opt stack 20
 22939                           
 22940                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 22941                           
 22942                           ; BSR set to: 1
 22943                           ;incstack = 0
 22944  00781C  0EF0               	movlw	-16
 22945  00781E  0102               	movlb	2	; () banked
 22946  007820  1702               	andwf	(_loRa+2)& (0+255),f,b
 22947                           
 22948                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 22949  007822  0E01               	movlw	1
 22950  007824  6FD8               	movwf	(_loRa+216)& (0+255),b
 22951                           
 22952                           ; BSR set to: 2
 22953                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 22954  007826  6BA7               	clrf	(_loRa+167)& (0+255),b
 22955                           
 22956                           ; BSR set to: 2
 22957  007828  0012               	return		;funcret
 22958  00782A                     __end_of_ResetParametersForUnconfirmedTransmission:
 22959                           	opt stack 0
 22960                           tosu	equ	0xFFF
 22961                           tosh	equ	0xFFE
 22962                           tosl	equ	0xFFD
 22963                           pclath	equ	0xFFA
 22964                           tblptru	equ	0xFF8
 22965                           tblptrh	equ	0xFF7
 22966                           tblptrl	equ	0xFF6
 22967                           tablat	equ	0xFF5
 22968                           prodh	equ	0xFF4
 22969                           prodl	equ	0xFF3
 22970                           intcon	equ	0xFF2
 22971                           indf0	equ	0xFEF
 22972                           postinc0	equ	0xFEE
 22973                           fsr0h	equ	0xFEA
 22974                           fsr0l	equ	0xFE9
 22975                           wreg	equ	0xFE8
 22976                           postinc1	equ	0xFE6
 22977                           postdec1	equ	0xFE5
 22978                           plusw1	equ	0xFE3
 22979                           fsr1h	equ	0xFE2
 22980                           fsr1l	equ	0xFE1
 22981                           indf2	equ	0xFDF
 22982                           postinc2	equ	0xFDE
 22983                           postdec2	equ	0xFDD
 22984                           plusw2	equ	0xFDB
 22985                           fsr2h	equ	0xFDA
 22986                           fsr2l	equ	0xFD9
 22987                           status	equ	0xFD8
 22988                           
 22989 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 22990 ;; Defined at:
 22991 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22992 ;; Parameters:    Size  Location     Type
 22993 ;;		None
 22994 ;; Auto vars:     Size  Location     Type
 22995 ;;		None
 22996 ;; Return value:  Size  Location     Type
 22997 ;;                  1    wreg      void 
 22998 ;; Registers used:
 22999 ;;		wreg, status,2
 23000 ;; Tracked objects:
 23001 ;;		On entry : D/2
 23002 ;;		On exit  : F/2
 23003 ;;		Unchanged: 0/0
 23004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23005 ;;      Params:         0       0       0       0       0       0       0       0       0
 23006 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23007 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23008 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23009 ;;Total ram usage:        0 bytes
 23010 ;; Hardware stack levels used:    1
 23011 ;; Hardware stack levels required when called:    7
 23012 ;; This function calls:
 23013 ;;		Nothing
 23014 ;; This function is called by:
 23015 ;;		_LORAWAN_RxTimeout
 23016 ;;		_LORAWAN_ReceiveWindow2Callback
 23017 ;;		_LORAWAN_EnterContinuousReceive
 23018 ;;		_AckRetransmissionCallback
 23019 ;; This function uses a non-reentrant model
 23020 ;;
 23021                           
 23022                           	psect	text117
 23023  00782A                     __ptext117:
 23024                           	opt stack 0
 23025  00782A                     _ResetParametersForConfirmedTransmission:
 23026                           	opt stack 18
 23027                           
 23028                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 23029                           
 23030                           ; BSR set to: 2
 23031                           ;incstack = 0
 23032  00782A  0EF0               	movlw	-16
 23033  00782C  0102               	movlb	2	; () banked
 23034  00782E  1702               	andwf	(_loRa+2)& (0+255),f,b
 23035                           
 23036                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 23037  007830  0E01               	movlw	1
 23038  007832  6FD9               	movwf	(_loRa+217)& (0+255),b
 23039                           
 23040                           ; BSR set to: 2
 23041                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 23042  007834  9100               	bcf	_loRa& (0+255),0,b
 23043                           
 23044                           ; BSR set to: 2
 23045  007836  0C01               	retlw	1	;funcret
 23046  007838                     __end_of_ResetParametersForConfirmedTransmission:
 23047                           	opt stack 0
 23048                           tosu	equ	0xFFF
 23049                           tosh	equ	0xFFE
 23050                           tosl	equ	0xFFD
 23051                           pclath	equ	0xFFA
 23052                           tblptru	equ	0xFF8
 23053                           tblptrh	equ	0xFF7
 23054                           tblptrl	equ	0xFF6
 23055                           tablat	equ	0xFF5
 23056                           prodh	equ	0xFF4
 23057                           prodl	equ	0xFF3
 23058                           intcon	equ	0xFF2
 23059                           indf0	equ	0xFEF
 23060                           postinc0	equ	0xFEE
 23061                           fsr0h	equ	0xFEA
 23062                           fsr0l	equ	0xFE9
 23063                           wreg	equ	0xFE8
 23064                           postinc1	equ	0xFE6
 23065                           postdec1	equ	0xFE5
 23066                           plusw1	equ	0xFE3
 23067                           fsr1h	equ	0xFE2
 23068                           fsr1l	equ	0xFE1
 23069                           indf2	equ	0xFDF
 23070                           postinc2	equ	0xFDE
 23071                           postdec2	equ	0xFDD
 23072                           plusw2	equ	0xFDB
 23073                           fsr2h	equ	0xFDA
 23074                           fsr2l	equ	0xFD9
 23075                           status	equ	0xFD8
 23076                           
 23077 ;; *************** function _RADIO_ReleaseData *****************
 23078 ;; Defined at:
 23079 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23080 ;; Parameters:    Size  Location     Type
 23081 ;;		None
 23082 ;; Auto vars:     Size  Location     Type
 23083 ;;		None
 23084 ;; Return value:  Size  Location     Type
 23085 ;;                  1    wreg      void 
 23086 ;; Registers used:
 23087 ;;		status,2, status,0
 23088 ;; Tracked objects:
 23089 ;;		On entry : C/2
 23090 ;;		On exit  : F/1
 23091 ;;		Unchanged: 0/0
 23092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23093 ;;      Params:         0       0       0       0       0       0       0       0       0
 23094 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23095 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23096 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23097 ;;Total ram usage:        0 bytes
 23098 ;; Hardware stack levels used:    1
 23099 ;; Hardware stack levels required when called:    7
 23100 ;; This function calls:
 23101 ;;		Nothing
 23102 ;; This function is called by:
 23103 ;;		_LORAWAN_ReceiveWindow1Callback
 23104 ;;		_LORAWAN_ReceiveWindow2Callback
 23105 ;;		_LORAWAN_EnterContinuousReceive
 23106 ;;		_LORAWAN_RxDone
 23107 ;; This function uses a non-reentrant model
 23108 ;;
 23109                           
 23110                           	psect	text118
 23111  00794A                     __ptext118:
 23112                           	opt stack 0
 23113  00794A                     _RADIO_ReleaseData:
 23114                           	opt stack 18
 23115                           
 23116                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 23117                           
 23118                           ; BSR set to: 2
 23119                           ;incstack = 0
 23120  00794A  0101               	movlb	1	; () banked
 23121  00794C  959C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 23122                           
 23123                           ; BSR set to: 1
 23124  00794E  0012               	return		;funcret
 23125  007950                     __end_of_RADIO_ReleaseData:
 23126                           	opt stack 0
 23127                           tosu	equ	0xFFF
 23128                           tosh	equ	0xFFE
 23129                           tosl	equ	0xFFD
 23130                           pclath	equ	0xFFA
 23131                           tblptru	equ	0xFF8
 23132                           tblptrh	equ	0xFF7
 23133                           tblptrl	equ	0xFF6
 23134                           tablat	equ	0xFF5
 23135                           prodh	equ	0xFF4
 23136                           prodl	equ	0xFF3
 23137                           intcon	equ	0xFF2
 23138                           indf0	equ	0xFEF
 23139                           postinc0	equ	0xFEE
 23140                           fsr0h	equ	0xFEA
 23141                           fsr0l	equ	0xFE9
 23142                           wreg	equ	0xFE8
 23143                           postinc1	equ	0xFE6
 23144                           postdec1	equ	0xFE5
 23145                           plusw1	equ	0xFE3
 23146                           fsr1h	equ	0xFE2
 23147                           fsr1l	equ	0xFE1
 23148                           indf2	equ	0xFDF
 23149                           postinc2	equ	0xFDE
 23150                           postdec2	equ	0xFDD
 23151                           plusw2	equ	0xFDB
 23152                           fsr2h	equ	0xFDA
 23153                           fsr2l	equ	0xFD9
 23154                           status	equ	0xFD8
 23155                           
 23156 ;; *************** function _RADIO_ReceiveStop *****************
 23157 ;; Defined at:
 23158 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23159 ;; Parameters:    Size  Location     Type
 23160 ;;		None
 23161 ;; Auto vars:     Size  Location     Type
 23162 ;;		None
 23163 ;; Return value:  Size  Location     Type
 23164 ;;                  1    wreg      void 
 23165 ;; Registers used:
 23166 ;;		wreg, status,2, status,0, cstack
 23167 ;; Tracked objects:
 23168 ;;		On entry : D/0
 23169 ;;		On exit  : F/1
 23170 ;;		Unchanged: 0/0
 23171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23172 ;;      Params:         0       0       0       0       0       0       0       0       0
 23173 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23174 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23175 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23176 ;;Total ram usage:        0 bytes
 23177 ;; Hardware stack levels used:    1
 23178 ;; Hardware stack levels required when called:   11
 23179 ;; This function calls:
 23180 ;;		_RADIO_WriteMode
 23181 ;; This function is called by:
 23182 ;;		_LORAWAN_Send
 23183 ;;		_LORAWAN_SetClass
 23184 ;;		_LORAWAN_ReceiveWindow1Callback
 23185 ;;		_LORAWAN_ReceiveWindow2Callback
 23186 ;;		_LORAWAN_EnterContinuousReceive
 23187 ;; This function uses a non-reentrant model
 23188 ;;
 23189                           
 23190                           	psect	text119
 23191  00758A                     __ptext119:
 23192                           	opt stack 0
 23193  00758A                     _RADIO_ReceiveStop:
 23194                           	opt stack 17
 23195                           
 23196                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 23197                           
 23198                           ; BSR set to: 1
 23199                           ;incstack = 0
 23200  00758A  0E02               	movlw	2
 23201  00758C  0101               	movlb	1	; () banked
 23202  00758E  199C               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 23203  007590  A4D8               	btfss	status,2,c
 23204  007592  0012               	return	
 23205                           
 23206                           ; BSR set to: 1
 23207                           ;radio_driver_SX1276.c: 954: {
 23208                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 23209  007594  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23210  007598  0E00               	movlw	0
 23211  00759A  0100               	movlb	0	; () banked
 23212  00759C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23213  00759E  ECFE  F028         	call	_RADIO_WriteMode
 23214                           
 23215                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 23216  0075A2  0101               	movlb	1	; () banked
 23217  0075A4  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23218                           
 23219                           ; BSR set to: 1
 23220  0075A6  0012               	return		;funcret
 23221  0075A8                     __end_of_RADIO_ReceiveStop:
 23222                           	opt stack 0
 23223                           tosu	equ	0xFFF
 23224                           tosh	equ	0xFFE
 23225                           tosl	equ	0xFFD
 23226                           pclath	equ	0xFFA
 23227                           tblptru	equ	0xFF8
 23228                           tblptrh	equ	0xFF7
 23229                           tblptrl	equ	0xFF6
 23230                           tablat	equ	0xFF5
 23231                           prodh	equ	0xFF4
 23232                           prodl	equ	0xFF3
 23233                           intcon	equ	0xFF2
 23234                           indf0	equ	0xFEF
 23235                           postinc0	equ	0xFEE
 23236                           fsr0h	equ	0xFEA
 23237                           fsr0l	equ	0xFE9
 23238                           wreg	equ	0xFE8
 23239                           postinc1	equ	0xFE6
 23240                           postdec1	equ	0xFE5
 23241                           plusw1	equ	0xFE3
 23242                           fsr1h	equ	0xFE2
 23243                           fsr1l	equ	0xFE1
 23244                           indf2	equ	0xFDF
 23245                           postinc2	equ	0xFDE
 23246                           postdec2	equ	0xFDD
 23247                           plusw2	equ	0xFDB
 23248                           fsr2h	equ	0xFDA
 23249                           fsr2l	equ	0xFD9
 23250                           status	equ	0xFD8
 23251                           
 23252 ;; *************** function _RADIO_ReceiveStart *****************
 23253 ;; Defined at:
 23254 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23255 ;; Parameters:    Size  Location     Type
 23256 ;;  rxWindowSize    2   52[BANK0 ] unsigned int 
 23257 ;; Auto vars:     Size  Location     Type
 23258 ;;		None
 23259 ;; Return value:  Size  Location     Type
 23260 ;;                  2   52[BANK0 ] enum E16979
 23261 ;; Registers used:
 23262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23263 ;; Tracked objects:
 23264 ;;		On entry : F/0
 23265 ;;		On exit  : F/0
 23266 ;;		Unchanged: 0/0
 23267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23268 ;;      Params:         0       2       0       0       0       0       0       0       0
 23269 ;;      Locals:         0       4       0       0       0       0       0       0       0
 23270 ;;      Temps:          0       4       0       0       0       0       0       0       0
 23271 ;;      Totals:         0      10       0       0       0       0       0       0       0
 23272 ;;Total ram usage:       10 bytes
 23273 ;; Hardware stack levels used:    1
 23274 ;; Hardware stack levels required when called:   12
 23275 ;; This function calls:
 23276 ;;		_RADIO_RegisterWrite
 23277 ;;		_RADIO_WriteConfiguration
 23278 ;;		_RADIO_WriteMode
 23279 ;;		_SwTimerSetTimeout
 23280 ;;		_SwTimerStart
 23281 ;;		___lldiv
 23282 ;; This function is called by:
 23283 ;;		_LORAWAN_ReceiveWindow1Callback
 23284 ;;		_LORAWAN_ReceiveWindow2Callback
 23285 ;;		_LORAWAN_EnterContinuousReceive
 23286 ;; This function uses a non-reentrant model
 23287 ;;
 23288                           
 23289                           	psect	text120
 23290  002C04                     __ptext120:
 23291                           	opt stack 0
 23292  002C04                     _RADIO_ReceiveStart:
 23293                           	opt stack 13
 23294                           
 23295                           ; BSR set to: 0
 23296                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 23297                           
 23298                           ; BSR set to: 1
 23299                           ;incstack = 0
 23300  002C04  0101               	movlb	1	; () banked
 23301  002C06  A59C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 23302  002C08  D006               	goto	l12781
 23303                           
 23304                           ; BSR set to: 1
 23305                           ;radio_driver_SX1276.c: 878: {
 23306                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 23307  002C0A  0E80               	movlw	128
 23308  002C0C  0100               	movlb	0	; () banked
 23309  002C0E  6F95               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23310  002C10  0E03               	movlw	3
 23311  002C12  6F94               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23312  002C14  0C03               	retlw	3
 23313  002C16                     l12781:
 23314                           
 23315                           ; BSR set to: 1
 23316                           ;radio_driver_SX1276.c: 880: }
 23317                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 23318  002C16  C19C  F096         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 23319  002C1A  0E03               	movlw	3
 23320  002C1C  0100               	movlb	0	; () banked
 23321  002C1E  1796               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 23322  002C20  E005               	bz	l12787
 23323                           
 23324                           ; BSR set to: 0
 23325                           ;radio_driver_SX1276.c: 883: {
 23326                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 23327  002C22  0E80               	movlw	128
 23328  002C24  6F95               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23329  002C26  0E04               	movlw	4
 23330  002C28  6F94               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23331  002C2A  0C04               	retlw	4
 23332  002C2C                     l12787:
 23333                           
 23334                           ; BSR set to: 0
 23335                           ;radio_driver_SX1276.c: 885: }
 23336                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 23337  002C2C  5194               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23338  002C2E  1195               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23339  002C30  E107               	bnz	l12791
 23340                           
 23341                           ; BSR set to: 0
 23342                           ;radio_driver_SX1276.c: 888: {
 23343                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 23344  002C32  0E00               	movlw	0
 23345  002C34  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 23346  002C36  0E04               	movlw	4
 23347  002C38  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 23348  002C3A  ECDA  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23349                           
 23350                           ;radio_driver_SX1276.c: 890: }
 23351  002C3E  D006               	goto	l12793
 23352  002C40                     l12791:
 23353                           
 23354                           ; BSR set to: 0
 23355                           ;radio_driver_SX1276.c: 891: else
 23356                           ;radio_driver_SX1276.c: 892: {
 23357                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 23358  002C40  C094  F07D         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 23359  002C44  C095  F07E         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 23360  002C48  ECDA  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23361  002C4C                     l12793:
 23362                           
 23363                           ;radio_driver_SX1276.c: 894: }
 23364                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 23365  002C4C  0101               	movlb	1	; () banked
 23366  002C4E  0591               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23367  002C50  E111               	bnz	l12797
 23368                           
 23369                           ; BSR set to: 1
 23370                           ;radio_driver_SX1276.c: 897: {
 23371                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 23372  002C52  0E01               	movlw	1
 23373  002C54  0100               	movlb	0	; () banked
 23374  002C56  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23375  002C58  0E22               	movlw	34
 23376  002C5A  ECD4  F03A         	call	_RADIO_RegisterWrite
 23377                           
 23378                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 23379  002C5E  0100               	movlb	0	; () banked
 23380  002C60  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23381  002C62  0E40               	movlw	64
 23382  002C64  ECD4  F03A         	call	_RADIO_RegisterWrite
 23383                           
 23384                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 23385  002C68  0100               	movlb	0	; () banked
 23386  002C6A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23387  002C6C  0E41               	movlw	65
 23388  002C6E  ECD4  F03A         	call	_RADIO_RegisterWrite
 23389                           
 23390                           ;radio_driver_SX1276.c: 908: }
 23391  002C72  D014               	goto	l12799
 23392  002C74                     l12797:
 23393                           
 23394                           ; BSR set to: 1
 23395                           ;radio_driver_SX1276.c: 909: else
 23396                           ;radio_driver_SX1276.c: 910: {
 23397                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 23398  002C74  C1AD  F066         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 23399  002C78  0E12               	movlw	18
 23400  002C7A  ECD4  F03A         	call	_RADIO_RegisterWrite
 23401                           
 23402                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 23403  002C7E  C1AE  F066         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 23404  002C82  0E13               	movlw	19
 23405  002C84  ECD4  F03A         	call	_RADIO_RegisterWrite
 23406                           
 23407                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 23408  002C88  0100               	movlb	0	; () banked
 23409  002C8A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23410  002C8C  0E40               	movlw	64
 23411  002C8E  ECD4  F03A         	call	_RADIO_RegisterWrite
 23412                           
 23413                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 23414  002C92  0100               	movlb	0	; () banked
 23415  002C94  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23416  002C96  0E41               	movlw	65
 23417  002C98  ECD4  F03A         	call	_RADIO_RegisterWrite
 23418  002C9C                     l12799:
 23419                           
 23420                           ;radio_driver_SX1276.c: 917: }
 23421                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 23422  002C9C  0101               	movlb	1	; () banked
 23423  002C9E  839C               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 23424                           
 23425                           ; BSR set to: 1
 23426                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 23427  002CA0  0EE7               	movlw	231
 23428  002CA2  179C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 23429                           
 23430                           ; BSR set to: 1
 23431                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 23432  002CA4  0100               	movlb	0	; () banked
 23433  002CA6  5194               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23434  002CA8  1195               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23435  002CAA  E108               	bnz	l12807
 23436                           
 23437                           ; BSR set to: 0
 23438                           ;radio_driver_SX1276.c: 925: {
 23439                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 23440  002CAC  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23441  002CB0  0E00               	movlw	0
 23442  002CB2  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23443  002CB4  0E05               	movlw	5
 23444  002CB6  ECFE  F028         	call	_RADIO_WriteMode
 23445                           
 23446                           ;radio_driver_SX1276.c: 927: }
 23447  002CBA  D041               	goto	l12817
 23448  002CBC                     l12807:
 23449                           
 23450                           ; BSR set to: 0
 23451                           ;radio_driver_SX1276.c: 928: else
 23452                           ;radio_driver_SX1276.c: 929: {
 23453                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 23454  002CBC  0101               	movlb	1	; () banked
 23455  002CBE  0591               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23456  002CC0  E109               	bnz	l12811
 23457                           
 23458                           ; BSR set to: 1
 23459                           ;radio_driver_SX1276.c: 931: {
 23460                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 23461  002CC2  0E01               	movlw	1
 23462  002CC4  0100               	movlb	0	; () banked
 23463  002CC6  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23464  002CC8  0E00               	movlw	0
 23465  002CCA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23466  002CCC  0E06               	movlw	6
 23467  002CCE  ECFE  F028         	call	_RADIO_WriteMode
 23468                           
 23469                           ;radio_driver_SX1276.c: 933: }
 23470  002CD2  D035               	goto	l12817
 23471  002CD4                     l12811:
 23472                           
 23473                           ; BSR set to: 1
 23474                           ;radio_driver_SX1276.c: 934: else
 23475                           ;radio_driver_SX1276.c: 935: {
 23476                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 23477  002CD4  0E00               	movlw	0
 23478  002CD6  0100               	movlb	0	; () banked
 23479  002CD8  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23480  002CDA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23481  002CDC  0E05               	movlw	5
 23482  002CDE  ECFE  F028         	call	_RADIO_WriteMode
 23483                           
 23484                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 23485  002CE2  0100               	movlb	0	; () banked
 23486  002CE4  5194               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23487  002CE6  6F96               	movwf	??_RADIO_ReceiveStart& (0+255),b
 23488  002CE8  5195               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23489  002CEA  6F97               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 23490  002CEC  6B98               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 23491  002CEE  6B99               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 23492  002CF0  0E0C               	movlw	12
 23493  002CF2                     u13905:
 23494  002CF2  90D8               	bcf	status,0,c
 23495  002CF4  3796               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23496  002CF6  3797               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23497  002CF8  3798               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23498  002CFA  3799               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23499  002CFC  2EE8               	decfsz	wreg,f,c
 23500  002CFE  D7F9               	goto	u13905
 23501  002D00  C096  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23502  002D04  C097  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23503  002D08  C098  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23504  002D0C  C099  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23505  002D10  0E7D               	movlw	125
 23506  002D12  6F68               	movwf	___lldiv@divisor& (0+255),b
 23507  002D14  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23508  002D16  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23509  002D18  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23510  002D1A  ECAA  F030         	call	___lldiv	;wreg free
 23511  002D1E  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23512  002D22  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23513  002D26  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23514  002D2A  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23515  002D2E  0101               	movlb	1	; () banked
 23516  002D30  51A1               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23517  002D32  ECE5  F036         	call	_SwTimerSetTimeout
 23518                           
 23519                           ; BSR set to: 0
 23520                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 23521  002D36  0101               	movlb	1	; () banked
 23522  002D38  51A1               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23523  002D3A  ECAA  F02E         	call	_SwTimerStart
 23524  002D3E                     l12817:
 23525                           
 23526                           ;radio_driver_SX1276.c: 939: }
 23527                           ;radio_driver_SX1276.c: 940: }
 23528                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 23529  002D3E  0101               	movlb	1	; () banked
 23530  002D40  51A3               	movf	(_RadioConfiguration+42)& (0+255),w,b
 23531  002D42  11A4               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 23532  002D44  11A5               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 23533  002D46  11A6               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 23534  002D48  E059               	bz	l12829
 23535                           
 23536                           ; BSR set to: 1
 23537                           ;radio_driver_SX1276.c: 943: {
 23538                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 23539  002D4A  51A6               	movf	(_RadioConfiguration+45)& (0+255),w,b
 23540  002D4C  E106               	bnz	u13920
 23541  002D4E  29A3               	incf	(_RadioConfiguration+42)& (0+255),w,b
 23542  002D50  0EFF               	movlw	255
 23543  002D52  59A4               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 23544  002D54  0E0F               	movlw	15
 23545  002D56  59A5               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 23546  002D58  E319               	bnc	l12823
 23547  002D5A                     u13920:
 23548                           
 23549                           ; BSR set to: 1
 23550  002D5A  C1A3  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 23551  002D5E  C1A4  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 23552  002D62  C1A5  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 23553  002D66  C1A6  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 23554  002D6A  0E7D               	movlw	125
 23555  002D6C  0100               	movlb	0	; () banked
 23556  002D6E  6F68               	movwf	___lldiv@divisor& (0+255),b
 23557  002D70  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23558  002D72  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23559  002D74  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23560  002D76  ECAA  F030         	call	___lldiv	;wreg free
 23561  002D7A  0E0C               	movlw	12
 23562  002D7C                     u13935:
 23563  002D7C  90D8               	bcf	status,0,c
 23564  002D7E  3764               	rlcf	?___lldiv& (0+255),f,b
 23565  002D80  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 23566  002D82  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 23567  002D84  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 23568  002D86  2EE8               	decfsz	wreg,f,c
 23569  002D88  D7F9               	goto	u13935
 23570  002D8A  D020               	goto	L14
 23571  002D8C                     l12823:
 23572                           
 23573                           ; BSR set to: 1
 23574  002D8C  C1A3  F096         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 23575  002D90  C1A4  F097         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 23576  002D94  C1A5  F098         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 23577  002D98  C1A6  F099         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 23578  002D9C  0E0C               	movlw	12
 23579  002D9E                     u13945:
 23580  002D9E  90D8               	bcf	status,0,c
 23581  002DA0  0100               	movlb	0	; () banked
 23582  002DA2  3796               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23583  002DA4  3797               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23584  002DA6  3798               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23585  002DA8  3799               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23586  002DAA  2EE8               	decfsz	wreg,f,c
 23587  002DAC  D7F8               	goto	u13945
 23588  002DAE  C096  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23589  002DB2  C097  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23590  002DB6  C098  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23591  002DBA  C099  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23592  002DBE  0E7D               	movlw	125
 23593  002DC0  6F68               	movwf	___lldiv@divisor& (0+255),b
 23594  002DC2  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23595  002DC4  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23596  002DC6  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23597  002DC8  ECAA  F030         	call	___lldiv	;wreg free
 23598  002DCC                     L14:
 23599  002DCC  C064  F09A         	movff	?___lldiv,_RADIO_ReceiveStart$1055
 23600  002DD0  C065  F09B         	movff	?___lldiv+1,_RADIO_ReceiveStart$1055+1
 23601  002DD4  C066  F09C         	movff	?___lldiv+2,_RADIO_ReceiveStart$1055+2
 23602  002DD8  C067  F09D         	movff	?___lldiv+3,_RADIO_ReceiveStart$1055+3
 23603                           
 23604                           ; BSR set to: 0
 23605  002DDC  C09A  F071         	movff	_RADIO_ReceiveStart$1055,SwTimerSetTimeout@timeout
 23606  002DE0  C09B  F072         	movff	_RADIO_ReceiveStart$1055+1,SwTimerSetTimeout@timeout+1
 23607  002DE4  C09C  F073         	movff	_RADIO_ReceiveStart$1055+2,SwTimerSetTimeout@timeout+2
 23608  002DE8  C09D  F074         	movff	_RADIO_ReceiveStart$1055+3,SwTimerSetTimeout@timeout+3
 23609  002DEC  0101               	movlb	1	; () banked
 23610  002DEE  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23611  002DF0  ECE5  F036         	call	_SwTimerSetTimeout
 23612                           
 23613                           ; BSR set to: 0
 23614                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 23615  002DF4  0101               	movlb	1	; () banked
 23616  002DF6  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23617  002DF8  ECAA  F02E         	call	_SwTimerStart
 23618  002DFC                     l12829:
 23619                           
 23620                           ;radio_driver_SX1276.c: 946: }
 23621                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 23622  002DFC  0100               	movlb	0	; () banked
 23623  002DFE  6B94               	clrf	?_RADIO_ReceiveStart& (0+255),b
 23624  002E00  6B95               	clrf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23625                           
 23626                           ; BSR set to: 0
 23627  002E02  0012               	return		;funcret
 23628  002E04                     __end_of_RADIO_ReceiveStart:
 23629                           	opt stack 0
 23630                           tosu	equ	0xFFF
 23631                           tosh	equ	0xFFE
 23632                           tosl	equ	0xFFD
 23633                           pclath	equ	0xFFA
 23634                           tblptru	equ	0xFF8
 23635                           tblptrh	equ	0xFF7
 23636                           tblptrl	equ	0xFF6
 23637                           tablat	equ	0xFF5
 23638                           prodh	equ	0xFF4
 23639                           prodl	equ	0xFF3
 23640                           intcon	equ	0xFF2
 23641                           indf0	equ	0xFEF
 23642                           postinc0	equ	0xFEE
 23643                           fsr0h	equ	0xFEA
 23644                           fsr0l	equ	0xFE9
 23645                           wreg	equ	0xFE8
 23646                           postinc1	equ	0xFE6
 23647                           postdec1	equ	0xFE5
 23648                           plusw1	equ	0xFE3
 23649                           fsr1h	equ	0xFE2
 23650                           fsr1l	equ	0xFE1
 23651                           indf2	equ	0xFDF
 23652                           postinc2	equ	0xFDE
 23653                           postdec2	equ	0xFDD
 23654                           plusw2	equ	0xFDB
 23655                           fsr2h	equ	0xFDA
 23656                           fsr2l	equ	0xFD9
 23657                           status	equ	0xFD8
 23658                           
 23659 ;; *************** function _ConfigureRadioRx *****************
 23660 ;; Defined at:
 23661 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23662 ;; Parameters:    Size  Location     Type
 23663 ;;  dataRate        1    wreg     unsigned char 
 23664 ;;  freq            4   22[BANK0 ] unsigned long 
 23665 ;; Auto vars:     Size  Location     Type
 23666 ;;  dataRate        1   26[BANK0 ] unsigned char 
 23667 ;; Return value:  Size  Location     Type
 23668 ;;                  1    wreg      void 
 23669 ;; Registers used:
 23670 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23671 ;; Tracked objects:
 23672 ;;		On entry : F/2
 23673 ;;		On exit  : 0/0
 23674 ;;		Unchanged: 0/0
 23675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23676 ;;      Params:         0       4       0       0       0       0       0       0       0
 23677 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23678 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23679 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23680 ;;Total ram usage:        5 bytes
 23681 ;; Hardware stack levels used:    1
 23682 ;; Hardware stack levels required when called:   10
 23683 ;; This function calls:
 23684 ;;		_ConfigureRadio
 23685 ;;		_RADIO_SetCRC
 23686 ;;		_RADIO_SetIQInverted
 23687 ;; This function is called by:
 23688 ;;		_LORAWAN_ReceiveWindow1Callback
 23689 ;;		_LORAWAN_ReceiveWindow2Callback
 23690 ;;		_LORAWAN_EnterContinuousReceive
 23691 ;; This function uses a non-reentrant model
 23692 ;;
 23693                           
 23694                           	psect	text121
 23695  0073AE                     __ptext121:
 23696                           	opt stack 0
 23697  0073AE                     _ConfigureRadioRx:
 23698                           	opt stack 15
 23699                           
 23700                           ; BSR set to: 0
 23701                           ;incstack = 0
 23702                           ;ConfigureRadioRx@dataRate stored from wreg
 23703  0073AE  0100               	movlb	0	; () banked
 23704  0073B0  6F7A               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 23705                           
 23706                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 23707  0073B2  C076  F071         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 23708  0073B6  C077  F072         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 23709  0073BA  C078  F073         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 23710  0073BE  C079  F074         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 23711  0073C2  517A               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 23712  0073C4  EC2E  F030         	call	_ConfigureRadio
 23713                           
 23714                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 23715  0073C8  0E00               	movlw	0
 23716  0073CA  EC59  F03C         	call	_RADIO_SetCRC
 23717                           
 23718                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 23719  0073CE  0E01               	movlw	1
 23720  0073D0  EF54  F03C         	goto	_RADIO_SetIQInverted
 23721  0073D4                     __end_of_ConfigureRadioRx:
 23722                           	opt stack 0
 23723                           tosu	equ	0xFFF
 23724                           tosh	equ	0xFFE
 23725                           tosl	equ	0xFFD
 23726                           pclath	equ	0xFFA
 23727                           tblptru	equ	0xFF8
 23728                           tblptrh	equ	0xFF7
 23729                           tblptrl	equ	0xFF6
 23730                           tablat	equ	0xFF5
 23731                           prodh	equ	0xFF4
 23732                           prodl	equ	0xFF3
 23733                           intcon	equ	0xFF2
 23734                           indf0	equ	0xFEF
 23735                           postinc0	equ	0xFEE
 23736                           fsr0h	equ	0xFEA
 23737                           fsr0l	equ	0xFE9
 23738                           wreg	equ	0xFE8
 23739                           postinc1	equ	0xFE6
 23740                           postdec1	equ	0xFE5
 23741                           plusw1	equ	0xFE3
 23742                           fsr1h	equ	0xFE2
 23743                           fsr1l	equ	0xFE1
 23744                           indf2	equ	0xFDF
 23745                           postinc2	equ	0xFDE
 23746                           postdec2	equ	0xFDD
 23747                           plusw2	equ	0xFDB
 23748                           fsr2h	equ	0xFDA
 23749                           fsr2l	equ	0xFD9
 23750                           status	equ	0xFD8
 23751                           
 23752 ;; *************** function _INTERRUPT_GetDioStatus *****************
 23753 ;; Defined at:
 23754 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 23755 ;; Parameters:    Size  Location     Type
 23756 ;;		None
 23757 ;; Auto vars:     Size  Location     Type
 23758 ;;  a               1    4[BANK0 ] unsigned char 
 23759 ;; Return value:  Size  Location     Type
 23760 ;;                  1    wreg      unsigned char 
 23761 ;; Registers used:
 23762 ;;		wreg, status,2
 23763 ;; Tracked objects:
 23764 ;;		On entry : F/0
 23765 ;;		On exit  : F/0
 23766 ;;		Unchanged: 0/0
 23767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23768 ;;      Params:         0       0       0       0       0       0       0       0       0
 23769 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23770 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23771 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23772 ;;Total ram usage:        1 bytes
 23773 ;; Hardware stack levels used:    1
 23774 ;; Hardware stack levels required when called:    7
 23775 ;; This function calls:
 23776 ;;		Nothing
 23777 ;; This function is called by:
 23778 ;;		_LORAWAN_Mainloop
 23779 ;; This function uses a non-reentrant model
 23780 ;;
 23781                           
 23782                           	psect	text122
 23783  007838                     __ptext122:
 23784                           	opt stack 0
 23785  007838                     _INTERRUPT_GetDioStatus:
 23786                           	opt stack 22
 23787                           
 23788                           ; BSR set to: 0
 23789                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 23790                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 23791                           
 23792                           ;incstack = 0
 23793  007838  9EF2               	bcf	intcon,7,c	;volatile
 23794                           
 23795                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 23796  00783A  C048  F064         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 23797                           
 23798                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 23799  00783E  6A48               	clrf	_dioStatus,c	;volatile
 23800                           
 23801                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 23802  007840  8EF2               	bsf	intcon,7,c	;volatile
 23803                           
 23804                           ; BSR set to: 0
 23805                           ;interrupt_manager_lora_addons.c: 55: return a;
 23806  007842  5164               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 23807                           
 23808                           ; BSR set to: 0
 23809  007844  0012               	return		;funcret
 23810  007846                     __end_of_INTERRUPT_GetDioStatus:
 23811                           	opt stack 0
 23812                           tosu	equ	0xFFF
 23813                           tosh	equ	0xFFE
 23814                           tosl	equ	0xFFD
 23815                           pclath	equ	0xFFA
 23816                           tblptru	equ	0xFF8
 23817                           tblptrh	equ	0xFF7
 23818                           tblptrl	equ	0xFF6
 23819                           tablat	equ	0xFF5
 23820                           prodh	equ	0xFF4
 23821                           prodl	equ	0xFF3
 23822                           intcon	equ	0xFF2
 23823                           indf0	equ	0xFEF
 23824                           postinc0	equ	0xFEE
 23825                           fsr0h	equ	0xFEA
 23826                           fsr0l	equ	0xFE9
 23827                           wreg	equ	0xFE8
 23828                           postinc1	equ	0xFE6
 23829                           postdec1	equ	0xFE5
 23830                           plusw1	equ	0xFE3
 23831                           fsr1h	equ	0xFE2
 23832                           fsr1l	equ	0xFE1
 23833                           indf2	equ	0xFDF
 23834                           postinc2	equ	0xFDE
 23835                           postdec2	equ	0xFDD
 23836                           plusw2	equ	0xFDB
 23837                           fsr2h	equ	0xFDA
 23838                           fsr2l	equ	0xFD9
 23839                           status	equ	0xFD8
 23840                           
 23841 ;; *************** function _LORAWAN_Join *****************
 23842 ;; Defined at:
 23843 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23844 ;; Parameters:    Size  Location     Type
 23845 ;;  activationTy    1    wreg     enum E17154
 23846 ;; Auto vars:     Size  Location     Type
 23847 ;;  activationTy    1  142[BANK0 ] enum E17154
 23848 ;;  result          1  141[BANK0 ] enum E17131
 23849 ;;  bufferIndex     1  140[BANK0 ] unsigned char 
 23850 ;; Return value:  Size  Location     Type
 23851 ;;                  1    wreg      enum E17131
 23852 ;; Registers used:
 23853 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23854 ;; Tracked objects:
 23855 ;;		On entry : F/2
 23856 ;;		On exit  : D/0
 23857 ;;		Unchanged: 0/0
 23858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23859 ;;      Params:         0       0       0       0       0       0       0       0       0
 23860 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23861 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23862 ;;      Totals:         0       3       0       0       0       0       0       0       0
 23863 ;;Total ram usage:        3 bytes
 23864 ;; Hardware stack levels used:    1
 23865 ;; Hardware stack levels required when called:   14
 23866 ;; This function calls:
 23867 ;;		_PrepareJoinRequestFrame
 23868 ;;		_RADIO_Transmit
 23869 ;;		_SelectChannelForTransmission
 23870 ;;		_SwTimerSetTimeout
 23871 ;;		_SwTimerStart
 23872 ;;		_UpdateJoinInProgress
 23873 ;; This function is called by:
 23874 ;;		_main
 23875 ;; This function uses a non-reentrant model
 23876 ;;
 23877                           
 23878                           	psect	text123
 23879  005CC8                     __ptext123:
 23880                           	opt stack 0
 23881  005CC8                     _LORAWAN_Join:
 23882                           	opt stack 16
 23883                           
 23884                           ; BSR set to: 0
 23885                           ;incstack = 0
 23886                           ;LORAWAN_Join@activationTypeNew stored from wreg
 23887  005CC8  0100               	movlb	0	; () banked
 23888  005CCA  6FEE               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 23889                           
 23890                           ;lorawan.c: 117: uint8_t bufferIndex;
 23891                           ;lorawan.c: 118: LorawanError_t result;
 23892                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 23893  005CCC  0102               	movlb	2	; () banked
 23894  005CCE  A103               	btfss	(_loRa+3)& (0+255),0,b
 23895                           
 23896                           ; BSR set to: 2
 23897                           ;lorawan.c: 123: }
 23898                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 23899  005CD0  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 23900  005CD2  0012               	return	
 23901                           
 23902                           ; BSR set to: 2
 23903                           ;lorawan.c: 128: }
 23904                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 23905  005CD4  5102               	movf	(_loRa+2)& (0+255),w,b
 23906  005CD6  0B0F               	andlw	15
 23907  005CD8  E001               	bz	l1738
 23908  005CDA  0012               	return	
 23909  005CDC                     l1738:
 23910                           
 23911                           ; BSR set to: 2
 23912                           ;lorawan.c: 133: }
 23913                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 23914  005CDC  C0EE  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 23915                           
 23916                           ; BSR set to: 2
 23917                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 23918  005CE0  0100               	movlb	0	; () banked
 23919  005CE2  51EE               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 23920  005CE4  E11F               	bnz	l1739
 23921                           
 23922                           ; BSR set to: 0
 23923                           ;lorawan.c: 138: {
 23924                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 23925  005CE6  0102               	movlb	2	; () banked
 23926  005CE8  B1A5               	btfsc	(_loRa+165)& (0+255),0,b
 23927                           
 23928                           ; BSR set to: 2
 23929  005CEA  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 23930  005CEC  0012               	return	
 23931                           
 23932                           ; BSR set to: 2
 23933  005CEE  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 23934  005CF0  0012               	return	
 23935                           
 23936                           ; BSR set to: 2
 23937                           ;lorawan.c: 144: else
 23938                           ;lorawan.c: 145: {
 23939                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 23940  005CF2  EC43  F023         	call	_PrepareJoinRequestFrame	;wreg free
 23941  005CF6  6FEC               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 23942                           
 23943                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 23944  005CF8  0E00               	movlw	0
 23945  005CFA  EC57  F033         	call	_SelectChannelForTransmission
 23946  005CFE  6FED               	movwf	LORAWAN_Join@result& (0+255),b
 23947                           
 23948                           ; BSR set to: 0
 23949                           ;lorawan.c: 149: if (result == OK)
 23950  005D00  51ED               	movf	LORAWAN_Join@result& (0+255),w,b
 23951  005D02  A4D8               	btfss	status,2,c
 23952  005D04  0012               	return	
 23953                           
 23954                           ; BSR set to: 0
 23955                           ;lorawan.c: 150: {
 23956                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 23957  005D06  0EE0               	movlw	low _macBuffer
 23958  005D08  6F94               	movwf	RADIO_Transmit@buffer& (0+255),b
 23959  005D0A  0E04               	movlw	high _macBuffer
 23960  005D0C  6F95               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 23961  005D0E  C0EC  F096         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 23962  005D12  ECFA  F017         	call	_RADIO_Transmit	;wreg free
 23963  005D16  5194               	movf	?_RADIO_Transmit& (0+255),w,b
 23964  005D18  1195               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 23965  005D1A  A4D8               	btfss	status,2,c
 23966  005D1C  0012               	return	
 23967                           
 23968                           ; BSR set to: 0
 23969                           ;lorawan.c: 152: {
 23970                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 23971  005D1E  0E01               	movlw	1
 23972  005D20  EF64  F03B         	goto	_UpdateJoinInProgress
 23973  005D24                     l1739:
 23974                           
 23975                           ; BSR set to: 0
 23976                           ;lorawan.c: 167: else
 23977                           ;lorawan.c: 168: {
 23978                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 23979  005D24  0102               	movlb	2	; () banked
 23980  005D26  BBA5               	btfsc	(_loRa+165)& (0+255),5,b
 23981                           
 23982                           ; BSR set to: 2
 23983  005D28  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 23984  005D2A  0012               	return	
 23985                           
 23986                           ; BSR set to: 2
 23987  005D2C  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 23988  005D2E  0012               	return	
 23989                           
 23990                           ; BSR set to: 2
 23991                           ;lorawan.c: 174: else
 23992                           ;lorawan.c: 175: {
 23993                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 23994  005D30  0E07               	movlw	7
 23995  005D32  EC64  F03B         	call	_UpdateJoinInProgress
 23996                           
 23997                           ; BSR set to: 2
 23998                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 23999  005D36  0E8F               	movlw	143
 24000  005D38  0100               	movlb	0	; () banked
 24001  005D3A  6F71               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 24002  005D3C  0E02               	movlw	2
 24003  005D3E  6F72               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 24004  005D40  6B73               	clrf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 24005  005D42  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 24006  005D44  0102               	movlb	2	; () banked
 24007  005D46  51F3               	movf	(_loRa+243)& (0+255),w,b
 24008  005D48  ECE5  F036         	call	_SwTimerSetTimeout
 24009                           
 24010                           ; BSR set to: 0
 24011                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 24012  005D4C  0102               	movlb	2	; () banked
 24013  005D4E  51F3               	movf	(_loRa+243)& (0+255),w,b
 24014  005D50  EFAA  F02E         	goto	_SwTimerStart
 24015  005D54                     __end_of_LORAWAN_Join:
 24016                           	opt stack 0
 24017                           tosu	equ	0xFFF
 24018                           tosh	equ	0xFFE
 24019                           tosl	equ	0xFFD
 24020                           pclath	equ	0xFFA
 24021                           tblptru	equ	0xFF8
 24022                           tblptrh	equ	0xFF7
 24023                           tblptrl	equ	0xFF6
 24024                           tablat	equ	0xFF5
 24025                           prodh	equ	0xFF4
 24026                           prodl	equ	0xFF3
 24027                           intcon	equ	0xFF2
 24028                           indf0	equ	0xFEF
 24029                           postinc0	equ	0xFEE
 24030                           fsr0h	equ	0xFEA
 24031                           fsr0l	equ	0xFE9
 24032                           wreg	equ	0xFE8
 24033                           postinc1	equ	0xFE6
 24034                           postdec1	equ	0xFE5
 24035                           plusw1	equ	0xFE3
 24036                           fsr1h	equ	0xFE2
 24037                           fsr1l	equ	0xFE1
 24038                           indf2	equ	0xFDF
 24039                           postinc2	equ	0xFDE
 24040                           postdec2	equ	0xFDD
 24041                           plusw2	equ	0xFDB
 24042                           fsr2h	equ	0xFDA
 24043                           fsr2l	equ	0xFD9
 24044                           status	equ	0xFD8
 24045                           
 24046 ;; *************** function _UpdateJoinInProgress *****************
 24047 ;; Defined at:
 24048 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24049 ;; Parameters:    Size  Location     Type
 24050 ;;  state           1    wreg     unsigned char 
 24051 ;; Auto vars:     Size  Location     Type
 24052 ;;  state           1    4[BANK0 ] unsigned char 
 24053 ;; Return value:  Size  Location     Type
 24054 ;;                  1    wreg      void 
 24055 ;; Registers used:
 24056 ;;		wreg, status,2, status,0
 24057 ;; Tracked objects:
 24058 ;;		On entry : D/0
 24059 ;;		On exit  : F/2
 24060 ;;		Unchanged: 0/0
 24061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24062 ;;      Params:         0       0       0       0       0       0       0       0       0
 24063 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24064 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24065 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24066 ;;Total ram usage:        1 bytes
 24067 ;; Hardware stack levels used:    1
 24068 ;; Hardware stack levels required when called:    7
 24069 ;; This function calls:
 24070 ;;		Nothing
 24071 ;; This function is called by:
 24072 ;;		_LORAWAN_Join
 24073 ;; This function uses a non-reentrant model
 24074 ;;
 24075                           
 24076                           	psect	text124
 24077  0076C8                     __ptext124:
 24078                           	opt stack 0
 24079  0076C8                     _UpdateJoinInProgress:
 24080                           	opt stack 22
 24081                           
 24082                           ;incstack = 0
 24083                           ;UpdateJoinInProgress@state stored from wreg
 24084  0076C8  0100               	movlb	0	; () banked
 24085  0076CA  6F64               	movwf	UpdateJoinInProgress@state& (0+255),b
 24086                           
 24087                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 24088  0076CC  0102               	movlb	2	; () banked
 24089  0076CE  9902               	bcf	(_loRa+2)& (0+255),4,b
 24090                           
 24091                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 24092  0076D0  8500               	bsf	_loRa& (0+255),2,b
 24093                           
 24094                           ; BSR set to: 2
 24095                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 24096  0076D2  5102               	movf	(_loRa+2)& (0+255),w,b
 24097  0076D4  0100               	movlb	0	; () banked
 24098  0076D6  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24099  0076D8  0BF0               	andlw	-16
 24100  0076DA  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24101  0076DC  0102               	movlb	2	; () banked
 24102  0076DE  6F02               	movwf	(_loRa+2)& (0+255),b
 24103                           
 24104                           ; BSR set to: 2
 24105  0076E0  0012               	return		;funcret
 24106  0076E2                     __end_of_UpdateJoinInProgress:
 24107                           	opt stack 0
 24108                           tosu	equ	0xFFF
 24109                           tosh	equ	0xFFE
 24110                           tosl	equ	0xFFD
 24111                           pclath	equ	0xFFA
 24112                           tblptru	equ	0xFF8
 24113                           tblptrh	equ	0xFF7
 24114                           tblptrl	equ	0xFF6
 24115                           tablat	equ	0xFF5
 24116                           prodh	equ	0xFF4
 24117                           prodl	equ	0xFF3
 24118                           intcon	equ	0xFF2
 24119                           indf0	equ	0xFEF
 24120                           postinc0	equ	0xFEE
 24121                           fsr0h	equ	0xFEA
 24122                           fsr0l	equ	0xFE9
 24123                           wreg	equ	0xFE8
 24124                           postinc1	equ	0xFE6
 24125                           postdec1	equ	0xFE5
 24126                           plusw1	equ	0xFE3
 24127                           fsr1h	equ	0xFE2
 24128                           fsr1l	equ	0xFE1
 24129                           indf2	equ	0xFDF
 24130                           postinc2	equ	0xFDE
 24131                           postdec2	equ	0xFDD
 24132                           plusw2	equ	0xFDB
 24133                           fsr2h	equ	0xFDA
 24134                           fsr2l	equ	0xFD9
 24135                           status	equ	0xFD8
 24136                           
 24137 ;; *************** function _SelectChannelForTransmission *****************
 24138 ;; Defined at:
 24139 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24140 ;; Parameters:    Size  Location     Type
 24141 ;;  transmission    1    wreg     unsigned char 
 24142 ;; Auto vars:     Size  Location     Type
 24143 ;;  transmission    1   37[BANK0 ] unsigned char 
 24144 ;;  channelIndex    1   39[BANK0 ] unsigned char 
 24145 ;;  result          1   38[BANK0 ] enum E17190
 24146 ;; Return value:  Size  Location     Type
 24147 ;;                  1    wreg      enum E17190
 24148 ;; Registers used:
 24149 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24150 ;; Tracked objects:
 24151 ;;		On entry : 0/0
 24152 ;;		On exit  : F/0
 24153 ;;		Unchanged: 0/0
 24154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24155 ;;      Params:         0       0       0       0       0       0       0       0       0
 24156 ;;      Locals:         0       3       0       0       0       0       0       0       0
 24157 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24158 ;;      Totals:         0       3       0       0       0       0       0       0       0
 24159 ;;Total ram usage:        3 bytes
 24160 ;; Hardware stack levels used:    1
 24161 ;; Hardware stack levels required when called:   11
 24162 ;; This function calls:
 24163 ;;		_ConfigureRadioTx
 24164 ;;		_SearchAvailableChannel
 24165 ;; This function is called by:
 24166 ;;		_LORAWAN_RxTimeout
 24167 ;;		_LORAWAN_Join
 24168 ;;		_LORAWAN_Send
 24169 ;;		_AckRetransmissionCallback
 24170 ;;		_UnconfirmedTransmissionCallback
 24171 ;; This function uses a non-reentrant model
 24172 ;;
 24173                           
 24174                           	psect	text125
 24175  0066AE                     __ptext125:
 24176                           	opt stack 0
 24177  0066AE                     _SelectChannelForTransmission:
 24178                           	opt stack 17
 24179                           
 24180                           ; BSR set to: 2
 24181                           ;incstack = 0
 24182                           ;SelectChannelForTransmission@transmissionType stored from wreg
 24183  0066AE  0100               	movlb	0	; () banked
 24184  0066B0  6F85               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 24185                           
 24186                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 24187                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 24188  0066B2  C085  F079         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 24189  0066B6  0E87               	movlw	low SelectChannelForTransmission@channelIndex
 24190  0066B8  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 24191  0066BA  6B7B               	clrf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 24192  0066BC  0E10               	movlw	16
 24193  0066BE  ECB2  F027         	call	_SearchAvailableChannel
 24194  0066C2  6F86               	movwf	SelectChannelForTransmission@result& (0+255),b
 24195                           
 24196                           ; BSR set to: 0
 24197                           ;lorawan_eu.c: 926: if (result == OK)
 24198  0066C4  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24199  0066C6  E120               	bnz	l13477
 24200                           
 24201                           ; BSR set to: 0
 24202                           ;lorawan_eu.c: 927: {
 24203                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 24204  0066C8  C087  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 24205                           
 24206                           ; BSR set to: 0
 24207                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 24208  0066CC  5187               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 24209  0066CE  0D0E               	mullw	14
 24210  0066D0  0E00               	movlw	low _Channels
 24211  0066D2  24F3               	addwf	prodl,w,c
 24212  0066D4  6ED9               	movwf	fsr2l,c
 24213  0066D6  0E04               	movlw	high _Channels
 24214  0066D8  20F4               	addwfc	prodh,w,c
 24215  0066DA  6EDA               	movwf	fsr2h,c
 24216  0066DC  CFDE F213          	movff	postinc2,_loRa+19
 24217  0066E0  CFDE F214          	movff	postinc2,_loRa+20
 24218  0066E4  CFDE F215          	movff	postinc2,_loRa+21
 24219  0066E8  CFDE F216          	movff	postinc2,_loRa+22
 24220                           
 24221                           ; BSR set to: 0
 24222                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 24223  0066EC  C2DF  F217         	movff	_loRa+223,_loRa+23
 24224                           
 24225                           ; BSR set to: 0
 24226                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 24227  0066F0  C213  F076         	movff	_loRa+19,ConfigureRadioTx@freq
 24228  0066F4  C214  F077         	movff	_loRa+20,ConfigureRadioTx@freq+1
 24229  0066F8  C215  F078         	movff	_loRa+21,ConfigureRadioTx@freq+2
 24230  0066FC  C216  F079         	movff	_loRa+22,ConfigureRadioTx@freq+3
 24231  006700  0102               	movlb	2	; () banked
 24232  006702  5117               	movf	(_loRa+23)& (0+255),w,b
 24233  006704  ECC4  F036         	call	_ConfigureRadioTx
 24234  006708                     l13477:
 24235                           
 24236                           ;lorawan_eu.c: 933: }
 24237                           ;lorawan_eu.c: 934: return result;
 24238  006708  0100               	movlb	0	; () banked
 24239  00670A  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24240                           
 24241                           ; BSR set to: 0
 24242  00670C  0012               	return		;funcret
 24243  00670E                     __end_of_SelectChannelForTransmission:
 24244                           	opt stack 0
 24245                           tosu	equ	0xFFF
 24246                           tosh	equ	0xFFE
 24247                           tosl	equ	0xFFD
 24248                           pclath	equ	0xFFA
 24249                           tblptru	equ	0xFF8
 24250                           tblptrh	equ	0xFF7
 24251                           tblptrl	equ	0xFF6
 24252                           tablat	equ	0xFF5
 24253                           prodh	equ	0xFF4
 24254                           prodl	equ	0xFF3
 24255                           intcon	equ	0xFF2
 24256                           indf0	equ	0xFEF
 24257                           postinc0	equ	0xFEE
 24258                           fsr0h	equ	0xFEA
 24259                           fsr0l	equ	0xFE9
 24260                           wreg	equ	0xFE8
 24261                           postinc1	equ	0xFE6
 24262                           postdec1	equ	0xFE5
 24263                           plusw1	equ	0xFE3
 24264                           fsr1h	equ	0xFE2
 24265                           fsr1l	equ	0xFE1
 24266                           indf2	equ	0xFDF
 24267                           postinc2	equ	0xFDE
 24268                           postdec2	equ	0xFDD
 24269                           plusw2	equ	0xFDB
 24270                           fsr2h	equ	0xFDA
 24271                           fsr2l	equ	0xFD9
 24272                           status	equ	0xFD8
 24273                           
 24274 ;; *************** function _SearchAvailableChannel *****************
 24275 ;; Defined at:
 24276 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24277 ;; Parameters:    Size  Location     Type
 24278 ;;  maxChannels     1    wreg     unsigned char 
 24279 ;;  transmission    1   25[BANK0 ] unsigned char 
 24280 ;;  channelIndex    2   26[BANK0 ] PTR unsigned char 
 24281 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 24282 ;; Auto vars:     Size  Location     Type
 24283 ;;  maxChannels     1   34[BANK0 ] unsigned char 
 24284 ;;  i               1   36[BANK0 ] unsigned char 
 24285 ;;  randomNumber    1   35[BANK0 ] unsigned char 
 24286 ;;  result          1   33[BANK0 ] enum E17190
 24287 ;;  randomNumber    1   32[BANK0 ] unsigned char 
 24288 ;; Return value:  Size  Location     Type
 24289 ;;                  1    wreg      enum E17190
 24290 ;; Registers used:
 24291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24292 ;; Tracked objects:
 24293 ;;		On entry : D/2
 24294 ;;		On exit  : F/0
 24295 ;;		Unchanged: 0/0
 24296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24297 ;;      Params:         0       3       0       0       0       0       0       0       0
 24298 ;;      Locals:         0       5       0       0       0       0       0       0       0
 24299 ;;      Temps:          0       4       0       0       0       0       0       0       0
 24300 ;;      Totals:         0      12       0       0       0       0       0       0       0
 24301 ;;Total ram usage:       12 bytes
 24302 ;; Hardware stack levels used:    1
 24303 ;; Hardware stack levels required when called:   10
 24304 ;; This function calls:
 24305 ;;		_Random
 24306 ;; This function is called by:
 24307 ;;		_SelectChannelForTransmission
 24308 ;;		_LORAWAN_RxDone
 24309 ;; This function uses a non-reentrant model
 24310 ;;
 24311                           
 24312                           	psect	text126
 24313  004F64                     __ptext126:
 24314                           	opt stack 0
 24315  004F64                     _SearchAvailableChannel:
 24316                           	opt stack 17
 24317                           
 24318                           ; BSR set to: 0
 24319                           ;incstack = 0
 24320                           ;SearchAvailableChannel@maxChannels stored from wreg
 24321  004F64  0100               	movlb	0	; () banked
 24322  004F66  6F82               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 24323                           
 24324                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 24325                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 24326  004F68  6B81               	clrf	SearchAvailableChannel@result& (0+255),b
 24327                           
 24328                           ; BSR set to: 0
 24329                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 24330  004F6A  C082  F077         	movff	SearchAvailableChannel@maxChannels,Random@max
 24331  004F6E  6B78               	clrf	(Random@max+1)& (0+255),b
 24332  004F70  EC56  F03A         	call	_Random	;wreg free
 24333  004F74  2977               	incf	?_Random& (0+255),w,b
 24334  004F76  6F83               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 24335                           
 24336                           ; BSR set to: 0
 24337                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 24338  004F78  C083  F080         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 24339                           
 24340                           ;lorawan_eu.c: 786: while (randomNumber)
 24341  004F7C  D054               	goto	l13031
 24342  004F7E                     l1152:
 24343                           
 24344                           ; BSR set to: 0
 24345                           ;lorawan_eu.c: 787: {
 24346                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 24347  004F7E  6B84               	clrf	SearchAvailableChannel@i& (0+255),b
 24348  004F80  D047               	goto	l13023
 24349  004F82                     l13007:
 24350                           
 24351                           ; BSR set to: 0
 24352                           ;lorawan_eu.c: 789: {
 24353                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 24354  004F82  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24355  004F84  0D0E               	mullw	14
 24356  004F86  0E04               	movlw	low (_Channels+4)
 24357  004F88  24F3               	addwf	prodl,w,c
 24358  004F8A  6ED9               	movwf	fsr2l,c
 24359  004F8C  0E04               	movlw	high (_Channels+4)
 24360  004F8E  20F4               	addwfc	prodh,w,c
 24361  004F90  6EDA               	movwf	fsr2h,c
 24362  004F92  04DE               	decf	postinc2,w,c
 24363  004F94  E13B               	bnz	l1155
 24364                           
 24365                           ; BSR set to: 0
 24366  004F96  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24367  004F98  0D0E               	mullw	14
 24368  004F9A  0E08               	movlw	low (_Channels+8)
 24369  004F9C  24F3               	addwf	prodl,w,c
 24370  004F9E  6ED9               	movwf	fsr2l,c
 24371  004FA0  0E04               	movlw	high (_Channels+8)
 24372  004FA2  20F4               	addwfc	prodh,w,c
 24373  004FA4  6EDA               	movwf	fsr2h,c
 24374  004FA6  50DE               	movf	postinc2,w,c
 24375  004FA8  10DE               	iorwf	postinc2,w,c
 24376  004FAA  10DE               	iorwf	postinc2,w,c
 24377  004FAC  10DE               	iorwf	postinc2,w,c
 24378  004FAE  E12E               	bnz	l1155
 24379                           
 24380                           ; BSR set to: 0
 24381  004FB0  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24382  004FB2  0D0E               	mullw	14
 24383  004FB4  0E05               	movlw	low (_Channels+5)
 24384  004FB6  24F3               	addwf	prodl,w,c
 24385  004FB8  6ED9               	movwf	fsr2l,c
 24386  004FBA  0E04               	movlw	high (_Channels+5)
 24387  004FBC  20F4               	addwfc	prodh,w,c
 24388  004FBE  6EDA               	movwf	fsr2h,c
 24389  004FC0  50DF               	movf	223,w,c
 24390  004FC2  0B0F               	andlw	15
 24391  004FC4  0100               	movlb	0	; () banked
 24392  004FC6  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24393  004FC8  517C               	movf	??_SearchAvailableChannel& (0+255),w,b
 24394  004FCA  0102               	movlb	2	; () banked
 24395  004FCC  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 24396  004FCE  E31E               	bnc	l1155
 24397                           
 24398                           ; BSR set to: 2
 24399  004FD0  0100               	movlb	0	; () banked
 24400  004FD2  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24401  004FD4  0D0E               	mullw	14
 24402  004FD6  0E05               	movlw	low (_Channels+5)
 24403  004FD8  24F3               	addwf	prodl,w,c
 24404  004FDA  6ED9               	movwf	fsr2l,c
 24405  004FDC  0E04               	movlw	high (_Channels+5)
 24406  004FDE  20F4               	addwfc	prodh,w,c
 24407  004FE0  6EDA               	movwf	fsr2h,c
 24408  004FE2  38DF               	swapf	223,w,c
 24409  004FE4  0B0F               	andlw	15
 24410  004FE6  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24411  004FE8  0102               	movlb	2	; () banked
 24412  004FEA  51DF               	movf	(_loRa+223)& (0+255),w,b
 24413  004FEC  0100               	movlb	0	; () banked
 24414  004FEE  5D7C               	subwf	??_SearchAvailableChannel& (0+255),w,b
 24415  004FF0  E30D               	bnc	l1155
 24416                           
 24417                           ; BSR set to: 0
 24418                           ;lorawan_eu.c: 791: {
 24419                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 24420  004FF2  5179               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 24421  004FF4  E10A               	bnz	l13019
 24422                           
 24423                           ; BSR set to: 0
 24424                           ;lorawan_eu.c: 793: {
 24425                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 24426  004FF6  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24427  004FF8  0D0E               	mullw	14
 24428  004FFA  0E0C               	movlw	low (_Channels+12)
 24429  004FFC  24F3               	addwf	prodl,w,c
 24430  004FFE  6ED9               	movwf	fsr2l,c
 24431  005000  0E04               	movlw	high (_Channels+12)
 24432  005002  20F4               	addwfc	prodh,w,c
 24433  005004  6EDA               	movwf	fsr2h,c
 24434  005006  04DE               	decf	postinc2,w,c
 24435  005008  E101               	bnz	l1155
 24436  00500A                     l13019:
 24437                           
 24438                           ; BSR set to: 0
 24439                           ;lorawan_eu.c: 795: {
 24440                           ;lorawan_eu.c: 796: randomNumber --;
 24441  00500A  0783               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 24442  00500C                     l1155:
 24443  00500C  0100               	movlb	0	; () banked
 24444  00500E  2B84               	incf	SearchAvailableChannel@i& (0+255),f,b
 24445  005010                     l13023:
 24446                           
 24447                           ; BSR set to: 0
 24448  005010  5182               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 24449  005012  5D84               	subwf	SearchAvailableChannel@i& (0+255),w,b
 24450  005014  E202               	bc	l13027
 24451                           
 24452                           ; BSR set to: 0
 24453  005016  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24454  005018  E1B4               	bnz	l13007
 24455  00501A                     l13027:
 24456                           
 24457                           ; BSR set to: 0
 24458                           ;lorawan_eu.c: 802: }
 24459                           ;lorawan_eu.c: 803: }
 24460                           ;lorawan_eu.c: 804: }
 24461                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 24462  00501A  5180               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 24463  00501C  1983               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24464  00501E  E103               	bnz	l13031
 24465                           
 24466                           ; BSR set to: 0
 24467                           ;lorawan_eu.c: 807: {
 24468                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 24469  005020  0E09               	movlw	9
 24470  005022  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24471                           
 24472                           ;lorawan_eu.c: 809: break;
 24473  005024  D002               	goto	l13033
 24474  005026                     l13031:
 24475                           
 24476                           ; BSR set to: 0
 24477  005026  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24478  005028  E1AA               	bnz	l1152
 24479  00502A                     l13033:
 24480                           
 24481                           ; BSR set to: 0
 24482                           ;lorawan_eu.c: 810: }
 24483                           ;lorawan_eu.c: 811: }
 24484                           ;lorawan_eu.c: 813: if ( i != 0)
 24485  00502A  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24486  00502C  E007               	bz	l13037
 24487                           
 24488                           ; BSR set to: 0
 24489                           ;lorawan_eu.c: 814: {
 24490                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 24491  00502E  0584               	decf	SearchAvailableChannel@i& (0+255),w,b
 24492  005030  C07A  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 24493  005034  C07B  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 24494  005038  6EDF               	movwf	indf2,c
 24495                           
 24496                           ;lorawan_eu.c: 816: }
 24497  00503A  D002               	goto	l1165
 24498  00503C                     l13037:
 24499                           
 24500                           ; BSR set to: 0
 24501                           ;lorawan_eu.c: 817: else
 24502                           ;lorawan_eu.c: 818: {
 24503                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 24504  00503C  0E09               	movlw	9
 24505  00503E  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24506  005040                     l1165:
 24507                           
 24508                           ; BSR set to: 0
 24509                           ;lorawan_eu.c: 820: }
 24510                           ;lorawan_eu.c: 821: return result;
 24511  005040  5181               	movf	SearchAvailableChannel@result& (0+255),w,b
 24512                           
 24513                           ; BSR set to: 0
 24514  005042  0012               	return		;funcret
 24515  005044                     __end_of_SearchAvailableChannel:
 24516                           	opt stack 0
 24517                           tosu	equ	0xFFF
 24518                           tosh	equ	0xFFE
 24519                           tosl	equ	0xFFD
 24520                           pclath	equ	0xFFA
 24521                           tblptru	equ	0xFF8
 24522                           tblptrh	equ	0xFF7
 24523                           tblptrl	equ	0xFF6
 24524                           tablat	equ	0xFF5
 24525                           prodh	equ	0xFF4
 24526                           prodl	equ	0xFF3
 24527                           intcon	equ	0xFF2
 24528                           indf0	equ	0xFEF
 24529                           postinc0	equ	0xFEE
 24530                           fsr0h	equ	0xFEA
 24531                           fsr0l	equ	0xFE9
 24532                           wreg	equ	0xFE8
 24533                           postinc1	equ	0xFE6
 24534                           postdec1	equ	0xFE5
 24535                           plusw1	equ	0xFE3
 24536                           fsr1h	equ	0xFE2
 24537                           fsr1l	equ	0xFE1
 24538                           indf2	equ	0xFDF
 24539                           postinc2	equ	0xFDE
 24540                           postdec2	equ	0xFDD
 24541                           plusw2	equ	0xFDB
 24542                           fsr2h	equ	0xFDA
 24543                           fsr2l	equ	0xFD9
 24544                           status	equ	0xFD8
 24545                           
 24546 ;; *************** function _ConfigureRadioTx *****************
 24547 ;; Defined at:
 24548 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24549 ;; Parameters:    Size  Location     Type
 24550 ;;  dataRate        1    wreg     unsigned char 
 24551 ;;  freq            4   22[BANK0 ] unsigned long 
 24552 ;; Auto vars:     Size  Location     Type
 24553 ;;  dataRate        1   26[BANK0 ] unsigned char 
 24554 ;;  txPower         1   27[BANK0 ] char 
 24555 ;; Return value:  Size  Location     Type
 24556 ;;                  1    wreg      void 
 24557 ;; Registers used:
 24558 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24559 ;; Tracked objects:
 24560 ;;		On entry : F/2
 24561 ;;		On exit  : 0/0
 24562 ;;		Unchanged: 0/0
 24563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24564 ;;      Params:         0       4       0       0       0       0       0       0       0
 24565 ;;      Locals:         0       2       0       0       0       0       0       0       0
 24566 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24567 ;;      Totals:         0       6       0       0       0       0       0       0       0
 24568 ;;Total ram usage:        6 bytes
 24569 ;; Hardware stack levels used:    1
 24570 ;; Hardware stack levels required when called:   10
 24571 ;; This function calls:
 24572 ;;		_ConfigureRadio
 24573 ;;		_RADIO_SetCRC
 24574 ;;		_RADIO_SetIQInverted
 24575 ;;		_RADIO_SetOutputPower
 24576 ;; This function is called by:
 24577 ;;		_SelectChannelForTransmission
 24578 ;; This function uses a non-reentrant model
 24579 ;;
 24580                           
 24581                           	psect	text127
 24582  006D88                     __ptext127:
 24583                           	opt stack 0
 24584  006D88                     _ConfigureRadioTx:
 24585                           	opt stack 17
 24586                           
 24587                           ; BSR set to: 0
 24588                           ;incstack = 0
 24589                           ;ConfigureRadioTx@dataRate stored from wreg
 24590  006D88  0100               	movlb	0	; () banked
 24591  006D8A  6F7A               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 24592                           
 24593                           ;lorawan_eu.c: 1257: int8_t txPower;
 24594                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 24595  006D8C  C076  F071         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 24596  006D90  C077  F072         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 24597  006D94  C078  F073         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 24598  006D98  C079  F074         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 24599  006D9C  517A               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 24600  006D9E  EC2E  F030         	call	_ConfigureRadio
 24601                           
 24602                           ;lorawan_eu.c: 1262: {
 24603                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 24604  006DA2  0EA2               	movlw	low _txPower868
 24605  006DA4  0102               	movlb	2	; () banked
 24606  006DA6  25E1               	addwf	(_loRa+225)& (0+255),w,b
 24607  006DA8  6EF6               	movwf	tblptrl,c
 24608  006DAA  6AF7               	clrf	tblptrh,c
 24609  006DAC  0E7F               	movlw	high _txPower868
 24610  006DAE  22F7               	addwfc	tblptrh,f,c
 24611  006DB0                     	if	0	;There are less than 3 active tblptr bytes
 24612  006DB0                     	endif
 24613  006DB0  0008               	tblrd		*
 24614  006DB2  CFF5 F07B          	movff	tablat,ConfigureRadioTx@txPower
 24615                           
 24616                           ; BSR set to: 2
 24617                           ;lorawan_eu.c: 1268: }
 24618                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 24619                           
 24620                           ;lorawan_eu.c: 1264: }
 24621  006DB6  0100               	movlb	0	; () banked
 24622  006DB8  517B               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 24623  006DBA  EC79  F03C         	call	_RADIO_SetOutputPower
 24624                           
 24625                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 24626  006DBE  0E01               	movlw	1
 24627  006DC0  EC59  F03C         	call	_RADIO_SetCRC
 24628                           
 24629                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 24630  006DC4  0E00               	movlw	0
 24631  006DC6  EF54  F03C         	goto	_RADIO_SetIQInverted
 24632  006DCA                     __end_of_ConfigureRadioTx:
 24633                           	opt stack 0
 24634                           tosu	equ	0xFFF
 24635                           tosh	equ	0xFFE
 24636                           tosl	equ	0xFFD
 24637                           pclath	equ	0xFFA
 24638                           tblptru	equ	0xFF8
 24639                           tblptrh	equ	0xFF7
 24640                           tblptrl	equ	0xFF6
 24641                           tablat	equ	0xFF5
 24642                           prodh	equ	0xFF4
 24643                           prodl	equ	0xFF3
 24644                           intcon	equ	0xFF2
 24645                           indf0	equ	0xFEF
 24646                           postinc0	equ	0xFEE
 24647                           fsr0h	equ	0xFEA
 24648                           fsr0l	equ	0xFE9
 24649                           wreg	equ	0xFE8
 24650                           postinc1	equ	0xFE6
 24651                           postdec1	equ	0xFE5
 24652                           plusw1	equ	0xFE3
 24653                           fsr1h	equ	0xFE2
 24654                           fsr1l	equ	0xFE1
 24655                           indf2	equ	0xFDF
 24656                           postinc2	equ	0xFDE
 24657                           postdec2	equ	0xFDD
 24658                           plusw2	equ	0xFDB
 24659                           fsr2h	equ	0xFDA
 24660                           fsr2l	equ	0xFD9
 24661                           status	equ	0xFD8
 24662                           
 24663 ;; *************** function _RADIO_SetOutputPower *****************
 24664 ;; Defined at:
 24665 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24666 ;; Parameters:    Size  Location     Type
 24667 ;;  power           1    wreg     char 
 24668 ;; Auto vars:     Size  Location     Type
 24669 ;;  power           1    4[BANK0 ] char 
 24670 ;; Return value:  Size  Location     Type
 24671 ;;                  1    wreg      void 
 24672 ;; Registers used:
 24673 ;;		wreg
 24674 ;; Tracked objects:
 24675 ;;		On entry : F/0
 24676 ;;		On exit  : 0/0
 24677 ;;		Unchanged: 0/0
 24678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24679 ;;      Params:         0       0       0       0       0       0       0       0       0
 24680 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24681 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24682 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24683 ;;Total ram usage:        1 bytes
 24684 ;; Hardware stack levels used:    1
 24685 ;; Hardware stack levels required when called:    7
 24686 ;; This function calls:
 24687 ;;		Nothing
 24688 ;; This function is called by:
 24689 ;;		_ConfigureRadioTx
 24690 ;; This function uses a non-reentrant model
 24691 ;;
 24692                           
 24693                           	psect	text128
 24694  0078F2                     __ptext128:
 24695                           	opt stack 0
 24696  0078F2                     _RADIO_SetOutputPower:
 24697                           	opt stack 19
 24698                           
 24699                           ;incstack = 0
 24700                           ;RADIO_SetOutputPower@power stored from wreg
 24701  0078F2  6F64               	movwf	RADIO_SetOutputPower@power& (0+255),b
 24702                           
 24703                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 24704  0078F4  C064  F194         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 24705  0078F8  0012               	return		;funcret
 24706  0078FA                     __end_of_RADIO_SetOutputPower:
 24707                           	opt stack 0
 24708                           tosu	equ	0xFFF
 24709                           tosh	equ	0xFFE
 24710                           tosl	equ	0xFFD
 24711                           pclath	equ	0xFFA
 24712                           tblptru	equ	0xFF8
 24713                           tblptrh	equ	0xFF7
 24714                           tblptrl	equ	0xFF6
 24715                           tablat	equ	0xFF5
 24716                           prodh	equ	0xFF4
 24717                           prodl	equ	0xFF3
 24718                           intcon	equ	0xFF2
 24719                           indf0	equ	0xFEF
 24720                           postinc0	equ	0xFEE
 24721                           fsr0h	equ	0xFEA
 24722                           fsr0l	equ	0xFE9
 24723                           wreg	equ	0xFE8
 24724                           postinc1	equ	0xFE6
 24725                           postdec1	equ	0xFE5
 24726                           plusw1	equ	0xFE3
 24727                           fsr1h	equ	0xFE2
 24728                           fsr1l	equ	0xFE1
 24729                           indf2	equ	0xFDF
 24730                           postinc2	equ	0xFDE
 24731                           postdec2	equ	0xFDD
 24732                           plusw2	equ	0xFDB
 24733                           fsr2h	equ	0xFDA
 24734                           fsr2l	equ	0xFD9
 24735                           status	equ	0xFD8
 24736                           
 24737 ;; *************** function _RADIO_SetIQInverted *****************
 24738 ;; Defined at:
 24739 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24740 ;; Parameters:    Size  Location     Type
 24741 ;;  iqInverted      1    wreg     unsigned char 
 24742 ;; Auto vars:     Size  Location     Type
 24743 ;;  iqInverted      1    4[BANK0 ] unsigned char 
 24744 ;; Return value:  Size  Location     Type
 24745 ;;                  1    wreg      void 
 24746 ;; Registers used:
 24747 ;;		wreg
 24748 ;; Tracked objects:
 24749 ;;		On entry : 0/0
 24750 ;;		On exit  : 0/0
 24751 ;;		Unchanged: 0/0
 24752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24753 ;;      Params:         0       0       0       0       0       0       0       0       0
 24754 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24755 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24756 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24757 ;;Total ram usage:        1 bytes
 24758 ;; Hardware stack levels used:    1
 24759 ;; Hardware stack levels required when called:    7
 24760 ;; This function calls:
 24761 ;;		Nothing
 24762 ;; This function is called by:
 24763 ;;		_ConfigureRadioTx
 24764 ;;		_ConfigureRadioRx
 24765 ;; This function uses a non-reentrant model
 24766 ;;
 24767                           
 24768                           	psect	text129
 24769  0078A8                     __ptext129:
 24770                           	opt stack 0
 24771  0078A8                     _RADIO_SetIQInverted:
 24772                           	opt stack 19
 24773                           
 24774                           ;incstack = 0
 24775                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 24776  0078A8  0100               	movlb	0	; () banked
 24777  0078AA  6F64               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 24778                           
 24779                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 24780  0078AC  C064  F199         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 24781  0078B0  0012               	return		;funcret
 24782  0078B2                     __end_of_RADIO_SetIQInverted:
 24783                           	opt stack 0
 24784                           tosu	equ	0xFFF
 24785                           tosh	equ	0xFFE
 24786                           tosl	equ	0xFFD
 24787                           pclath	equ	0xFFA
 24788                           tblptru	equ	0xFF8
 24789                           tblptrh	equ	0xFF7
 24790                           tblptrl	equ	0xFF6
 24791                           tablat	equ	0xFF5
 24792                           prodh	equ	0xFF4
 24793                           prodl	equ	0xFF3
 24794                           intcon	equ	0xFF2
 24795                           indf0	equ	0xFEF
 24796                           postinc0	equ	0xFEE
 24797                           fsr0h	equ	0xFEA
 24798                           fsr0l	equ	0xFE9
 24799                           wreg	equ	0xFE8
 24800                           postinc1	equ	0xFE6
 24801                           postdec1	equ	0xFE5
 24802                           plusw1	equ	0xFE3
 24803                           fsr1h	equ	0xFE2
 24804                           fsr1l	equ	0xFE1
 24805                           indf2	equ	0xFDF
 24806                           postinc2	equ	0xFDE
 24807                           postdec2	equ	0xFDD
 24808                           plusw2	equ	0xFDB
 24809                           fsr2h	equ	0xFDA
 24810                           fsr2l	equ	0xFD9
 24811                           status	equ	0xFD8
 24812                           
 24813 ;; *************** function _RADIO_SetCRC *****************
 24814 ;; Defined at:
 24815 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24816 ;; Parameters:    Size  Location     Type
 24817 ;;  crc             1    wreg     unsigned char 
 24818 ;; Auto vars:     Size  Location     Type
 24819 ;;  crc             1    4[BANK0 ] unsigned char 
 24820 ;; Return value:  Size  Location     Type
 24821 ;;                  1    wreg      void 
 24822 ;; Registers used:
 24823 ;;		wreg
 24824 ;; Tracked objects:
 24825 ;;		On entry : 0/0
 24826 ;;		On exit  : 0/0
 24827 ;;		Unchanged: 0/0
 24828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24829 ;;      Params:         0       0       0       0       0       0       0       0       0
 24830 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24831 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24832 ;;      Totals:         0       1       0       0       0       0       0       0       0
 24833 ;;Total ram usage:        1 bytes
 24834 ;; Hardware stack levels used:    1
 24835 ;; Hardware stack levels required when called:    7
 24836 ;; This function calls:
 24837 ;;		Nothing
 24838 ;; This function is called by:
 24839 ;;		_ConfigureRadioTx
 24840 ;;		_ConfigureRadioRx
 24841 ;; This function uses a non-reentrant model
 24842 ;;
 24843                           
 24844                           	psect	text130
 24845  0078B2                     __ptext130:
 24846                           	opt stack 0
 24847  0078B2                     _RADIO_SetCRC:
 24848                           	opt stack 19
 24849                           
 24850                           ;incstack = 0
 24851                           ;RADIO_SetCRC@crc stored from wreg
 24852  0078B2  0100               	movlb	0	; () banked
 24853  0078B4  6F64               	movwf	RADIO_SetCRC@crc& (0+255),b
 24854                           
 24855                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 24856  0078B6  C064  F195         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 24857  0078BA  0012               	return		;funcret
 24858  0078BC                     __end_of_RADIO_SetCRC:
 24859                           	opt stack 0
 24860                           tosu	equ	0xFFF
 24861                           tosh	equ	0xFFE
 24862                           tosl	equ	0xFFD
 24863                           pclath	equ	0xFFA
 24864                           tblptru	equ	0xFF8
 24865                           tblptrh	equ	0xFF7
 24866                           tblptrl	equ	0xFF6
 24867                           tablat	equ	0xFF5
 24868                           prodh	equ	0xFF4
 24869                           prodl	equ	0xFF3
 24870                           intcon	equ	0xFF2
 24871                           indf0	equ	0xFEF
 24872                           postinc0	equ	0xFEE
 24873                           fsr0h	equ	0xFEA
 24874                           fsr0l	equ	0xFE9
 24875                           wreg	equ	0xFE8
 24876                           postinc1	equ	0xFE6
 24877                           postdec1	equ	0xFE5
 24878                           plusw1	equ	0xFE3
 24879                           fsr1h	equ	0xFE2
 24880                           fsr1l	equ	0xFE1
 24881                           indf2	equ	0xFDF
 24882                           postinc2	equ	0xFDE
 24883                           postdec2	equ	0xFDD
 24884                           plusw2	equ	0xFDB
 24885                           fsr2h	equ	0xFDA
 24886                           fsr2l	equ	0xFD9
 24887                           status	equ	0xFD8
 24888                           
 24889 ;; *************** function _ConfigureRadio *****************
 24890 ;; Defined at:
 24891 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24892 ;; Parameters:    Size  Location     Type
 24893 ;;  dataRate        1    wreg     unsigned char 
 24894 ;;  freq            4   17[BANK0 ] unsigned long 
 24895 ;; Auto vars:     Size  Location     Type
 24896 ;;  dataRate        1   21[BANK0 ] unsigned char 
 24897 ;; Return value:  Size  Location     Type
 24898 ;;                  1    wreg      void 
 24899 ;; Registers used:
 24900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24901 ;; Tracked objects:
 24902 ;;		On entry : F/0
 24903 ;;		On exit  : 0/0
 24904 ;;		Unchanged: 0/0
 24905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24906 ;;      Params:         0       4       0       0       0       0       0       0       0
 24907 ;;      Locals:         0       1       0       0       0       0       0       0       0
 24908 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24909 ;;      Totals:         0       5       0       0       0       0       0       0       0
 24910 ;;Total ram usage:        5 bytes
 24911 ;; Hardware stack levels used:    1
 24912 ;; Hardware stack levels required when called:    9
 24913 ;; This function calls:
 24914 ;;		_RADIO_SetBandwidth
 24915 ;;		_RADIO_SetChannelFrequency
 24916 ;;		_RADIO_SetFSKSyncWord
 24917 ;;		_RADIO_SetFrequencyHopPeriod
 24918 ;;		_RADIO_SetLoRaSyncWord
 24919 ;;		_RADIO_SetModulation
 24920 ;;		_RADIO_SetSpreadingFactor
 24921 ;; This function is called by:
 24922 ;;		_ConfigureRadioTx
 24923 ;;		_ConfigureRadioRx
 24924 ;; This function uses a non-reentrant model
 24925 ;;
 24926                           
 24927                           	psect	text131
 24928  00605C                     __ptext131:
 24929                           	opt stack 0
 24930  00605C                     _ConfigureRadio:
 24931                           	opt stack 17
 24932                           
 24933                           ;incstack = 0
 24934                           ;ConfigureRadio@dataRate stored from wreg
 24935  00605C  6F75               	movwf	ConfigureRadio@dataRate& (0+255),b
 24936                           
 24937                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 24938  00605E  0E75               	movlw	low _modulation
 24939  006060  0100               	movlb	0	; () banked
 24940  006062  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 24941  006064  6EF6               	movwf	tblptrl,c
 24942  006066  6AF7               	clrf	tblptrh,c
 24943  006068  0E7F               	movlw	high _modulation
 24944  00606A  22F7               	addwfc	tblptrh,f,c
 24945  00606C                     	if	0	;There are less than 3 active tblptr bytes
 24946  00606C                     	endif
 24947  00606C  0008               	tblrd		*
 24948  00606E  50F5               	movf	tablat,w,c
 24949  006070  EC81  F03C         	call	_RADIO_SetModulation
 24950                           
 24951                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 24952  006074  C071  F064         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 24953  006078  C072  F065         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 24954  00607C  C073  F066         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 24955  006080  C074  F067         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 24956  006084  EC31  F02F         	call	_RADIO_SetChannelFrequency	;wreg free
 24957                           
 24958                           ; BSR set to: 0
 24959                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 24960  006088  0E00               	movlw	0
 24961  00608A  6B65               	clrf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 24962  00608C  6B64               	clrf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 24963  00608E  EC5E  F03C         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 24964                           
 24965                           ; BSR set to: 0
 24966                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 24967  006092  0E07               	movlw	7
 24968  006094  6175               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 24969  006096  D019               	goto	l12671
 24970                           
 24971                           ; BSR set to: 0
 24972                           ;lorawan_eu.c: 870: {
 24973                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 24974  006098  0E9B               	movlw	low _spreadingFactor
 24975  00609A  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 24976  00609C  6EF6               	movwf	tblptrl,c
 24977  00609E  6AF7               	clrf	tblptrh,c
 24978  0060A0  0E7F               	movlw	high _spreadingFactor
 24979  0060A2  22F7               	addwfc	tblptrh,f,c
 24980  0060A4                     	if	0	;There are less than 3 active tblptr bytes
 24981  0060A4                     	endif
 24982  0060A4  0008               	tblrd		*
 24983  0060A6  50F5               	movf	tablat,w,c
 24984  0060A8  EC7D  F03C         	call	_RADIO_SetSpreadingFactor
 24985                           
 24986                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 24987  0060AC  0E8D               	movlw	low _bandwidth
 24988  0060AE  0100               	movlb	0	; () banked
 24989  0060B0  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 24990  0060B2  6EF6               	movwf	tblptrl,c
 24991  0060B4  6AF7               	clrf	tblptrh,c
 24992  0060B6  0E7F               	movlw	high _bandwidth
 24993  0060B8  22F7               	addwfc	tblptrh,f,c
 24994  0060BA                     	if	0	;There are less than 3 active tblptr bytes
 24995  0060BA                     	endif
 24996  0060BA  0008               	tblrd		*
 24997  0060BC  50F5               	movf	tablat,w,c
 24998  0060BE  EC85  F03C         	call	_RADIO_SetBandwidth
 24999                           
 25000                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 25001  0060C2  0102               	movlb	2	; () banked
 25002  0060C4  51F4               	movf	(_loRa+244)& (0+255),w,b
 25003  0060C6  EF63  F03C         	goto	_RADIO_SetLoRaSyncWord
 25004  0060CA                     l12671:
 25005                           
 25006                           ; BSR set to: 0
 25007                           ;lorawan_eu.c: 876: else
 25008                           ;lorawan_eu.c: 877: {
 25009                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 25010  0060CA  0EFC               	movlw	low _FskSyncWordBuff
 25011  0060CC  6F6E               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 25012  0060CE  0E7F               	movlw	high _FskSyncWordBuff
 25013  0060D0  6F6F               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 25014  0060D2  0E03               	movlw	3
 25015  0060D4  EF30  F039         	goto	_RADIO_SetFSKSyncWord
 25016  0060D8                     __end_of_ConfigureRadio:
 25017                           	opt stack 0
 25018                           tosu	equ	0xFFF
 25019                           tosh	equ	0xFFE
 25020                           tosl	equ	0xFFD
 25021                           pclath	equ	0xFFA
 25022                           tblptru	equ	0xFF8
 25023                           tblptrh	equ	0xFF7
 25024                           tblptrl	equ	0xFF6
 25025                           tablat	equ	0xFF5
 25026                           prodh	equ	0xFF4
 25027                           prodl	equ	0xFF3
 25028                           intcon	equ	0xFF2
 25029                           indf0	equ	0xFEF
 25030                           postinc0	equ	0xFEE
 25031                           fsr0h	equ	0xFEA
 25032                           fsr0l	equ	0xFE9
 25033                           wreg	equ	0xFE8
 25034                           postinc1	equ	0xFE6
 25035                           postdec1	equ	0xFE5
 25036                           plusw1	equ	0xFE3
 25037                           fsr1h	equ	0xFE2
 25038                           fsr1l	equ	0xFE1
 25039                           indf2	equ	0xFDF
 25040                           postinc2	equ	0xFDE
 25041                           postdec2	equ	0xFDD
 25042                           plusw2	equ	0xFDB
 25043                           fsr2h	equ	0xFDA
 25044                           fsr2l	equ	0xFD9
 25045                           status	equ	0xFD8
 25046                           
 25047 ;; *************** function _RADIO_SetSpreadingFactor *****************
 25048 ;; Defined at:
 25049 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25050 ;; Parameters:    Size  Location     Type
 25051 ;;  spreadingFac    1    wreg     enum E16935
 25052 ;; Auto vars:     Size  Location     Type
 25053 ;;  spreadingFac    1    4[BANK0 ] enum E16935
 25054 ;; Return value:  Size  Location     Type
 25055 ;;                  1    wreg      void 
 25056 ;; Registers used:
 25057 ;;		wreg
 25058 ;; Tracked objects:
 25059 ;;		On entry : F/0
 25060 ;;		On exit  : 0/0
 25061 ;;		Unchanged: 0/0
 25062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25063 ;;      Params:         0       0       0       0       0       0       0       0       0
 25064 ;;      Locals:         0       1       0       0       0       0       0       0       0
 25065 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25066 ;;      Totals:         0       1       0       0       0       0       0       0       0
 25067 ;;Total ram usage:        1 bytes
 25068 ;; Hardware stack levels used:    1
 25069 ;; Hardware stack levels required when called:    7
 25070 ;; This function calls:
 25071 ;;		Nothing
 25072 ;; This function is called by:
 25073 ;;		_ConfigureRadio
 25074 ;; This function uses a non-reentrant model
 25075 ;;
 25076                           
 25077                           	psect	text132
 25078  0078FA                     __ptext132:
 25079                           	opt stack 0
 25080  0078FA                     _RADIO_SetSpreadingFactor:
 25081                           	opt stack 18
 25082                           
 25083                           ;incstack = 0
 25084                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 25085  0078FA  6F64               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 25086                           
 25087                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 25088  0078FC  C064  F192         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 25089  007900  0012               	return		;funcret
 25090  007902                     __end_of_RADIO_SetSpreadingFactor:
 25091                           	opt stack 0
 25092                           tosu	equ	0xFFF
 25093                           tosh	equ	0xFFE
 25094                           tosl	equ	0xFFD
 25095                           pclath	equ	0xFFA
 25096                           tblptru	equ	0xFF8
 25097                           tblptrh	equ	0xFF7
 25098                           tblptrl	equ	0xFF6
 25099                           tablat	equ	0xFF5
 25100                           prodh	equ	0xFF4
 25101                           prodl	equ	0xFF3
 25102                           intcon	equ	0xFF2
 25103                           indf0	equ	0xFEF
 25104                           postinc0	equ	0xFEE
 25105                           fsr0h	equ	0xFEA
 25106                           fsr0l	equ	0xFE9
 25107                           wreg	equ	0xFE8
 25108                           postinc1	equ	0xFE6
 25109                           postdec1	equ	0xFE5
 25110                           plusw1	equ	0xFE3
 25111                           fsr1h	equ	0xFE2
 25112                           fsr1l	equ	0xFE1
 25113                           indf2	equ	0xFDF
 25114                           postinc2	equ	0xFDE
 25115                           postdec2	equ	0xFDD
 25116                           plusw2	equ	0xFDB
 25117                           fsr2h	equ	0xFDA
 25118                           fsr2l	equ	0xFD9
 25119                           status	equ	0xFD8
 25120                           
 25121 ;; *************** function _RADIO_SetModulation *****************
 25122 ;; Defined at:
 25123 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25124 ;; Parameters:    Size  Location     Type
 25125 ;;  modulation      1    wreg     enum E16925
 25126 ;; Auto vars:     Size  Location     Type
 25127 ;;  modulation      1    4[BANK0 ] enum E16925
 25128 ;; Return value:  Size  Location     Type
 25129 ;;                  1    wreg      void 
 25130 ;; Registers used:
 25131 ;;		wreg
 25132 ;; Tracked objects:
 25133 ;;		On entry : F/0
 25134 ;;		On exit  : 0/0
 25135 ;;		Unchanged: 0/0
 25136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25137 ;;      Params:         0       0       0       0       0       0       0       0       0
 25138 ;;      Locals:         0       1       0       0       0       0       0       0       0
 25139 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25140 ;;      Totals:         0       1       0       0       0       0       0       0       0
 25141 ;;Total ram usage:        1 bytes
 25142 ;; Hardware stack levels used:    1
 25143 ;; Hardware stack levels required when called:    7
 25144 ;; This function calls:
 25145 ;;		Nothing
 25146 ;; This function is called by:
 25147 ;;		_ConfigureRadio
 25148 ;; This function uses a non-reentrant model
 25149 ;;
 25150                           
 25151                           	psect	text133
 25152  007902                     __ptext133:
 25153                           	opt stack 0
 25154  007902                     _RADIO_SetModulation:
 25155                           	opt stack 18
 25156                           
 25157                           ;incstack = 0
 25158                           ;RADIO_SetModulation@modulation stored from wreg
 25159  007902  6F64               	movwf	RADIO_SetModulation@modulation& (0+255),b
 25160                           
 25161                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 25162  007904  C064  F191         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 25163  007908  0012               	return		;funcret
 25164  00790A                     __end_of_RADIO_SetModulation:
 25165                           	opt stack 0
 25166                           tosu	equ	0xFFF
 25167                           tosh	equ	0xFFE
 25168                           tosl	equ	0xFFD
 25169                           pclath	equ	0xFFA
 25170                           tblptru	equ	0xFF8
 25171                           tblptrh	equ	0xFF7
 25172                           tblptrl	equ	0xFF6
 25173                           tablat	equ	0xFF5
 25174                           prodh	equ	0xFF4
 25175                           prodl	equ	0xFF3
 25176                           intcon	equ	0xFF2
 25177                           indf0	equ	0xFEF
 25178                           postinc0	equ	0xFEE
 25179                           fsr0h	equ	0xFEA
 25180                           fsr0l	equ	0xFE9
 25181                           wreg	equ	0xFE8
 25182                           postinc1	equ	0xFE6
 25183                           postdec1	equ	0xFE5
 25184                           plusw1	equ	0xFE3
 25185                           fsr1h	equ	0xFE2
 25186                           fsr1l	equ	0xFE1
 25187                           indf2	equ	0xFDF
 25188                           postinc2	equ	0xFDE
 25189                           postdec2	equ	0xFDD
 25190                           plusw2	equ	0xFDB
 25191                           fsr2h	equ	0xFDA
 25192                           fsr2l	equ	0xFD9
 25193                           status	equ	0xFD8
 25194                           
 25195 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 25196 ;; Defined at:
 25197 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25198 ;; Parameters:    Size  Location     Type
 25199 ;;  frequencyHop    2    4[BANK0 ] unsigned int 
 25200 ;; Auto vars:     Size  Location     Type
 25201 ;;		None
 25202 ;; Return value:  Size  Location     Type
 25203 ;;                  1    wreg      void 
 25204 ;; Registers used:
 25205 ;;		None
 25206 ;; Tracked objects:
 25207 ;;		On entry : F/0
 25208 ;;		On exit  : F/0
 25209 ;;		Unchanged: F/0
 25210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25211 ;;      Params:         0       2       0       0       0       0       0       0       0
 25212 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25213 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25214 ;;      Totals:         0       2       0       0       0       0       0       0       0
 25215 ;;Total ram usage:        2 bytes
 25216 ;; Hardware stack levels used:    1
 25217 ;; Hardware stack levels required when called:    7
 25218 ;; This function calls:
 25219 ;;		Nothing
 25220 ;; This function is called by:
 25221 ;;		_ConfigureRadio
 25222 ;; This function uses a non-reentrant model
 25223 ;;
 25224                           
 25225                           	psect	text134
 25226  0078BC                     __ptext134:
 25227                           	opt stack 0
 25228  0078BC                     _RADIO_SetFrequencyHopPeriod:
 25229                           	opt stack 18
 25230                           
 25231                           ; BSR set to: 0
 25232                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 25233                           
 25234                           ;incstack = 0
 25235  0078BC  C064  F197         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 25236  0078C0  C065  F198         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 25237                           
 25238                           ; BSR set to: 0
 25239  0078C4  0012               	return		;funcret
 25240  0078C6                     __end_of_RADIO_SetFrequencyHopPeriod:
 25241                           	opt stack 0
 25242                           tosu	equ	0xFFF
 25243                           tosh	equ	0xFFE
 25244                           tosl	equ	0xFFD
 25245                           pclath	equ	0xFFA
 25246                           tblptru	equ	0xFF8
 25247                           tblptrh	equ	0xFF7
 25248                           tblptrl	equ	0xFF6
 25249                           tablat	equ	0xFF5
 25250                           prodh	equ	0xFF4
 25251                           prodl	equ	0xFF3
 25252                           intcon	equ	0xFF2
 25253                           indf0	equ	0xFEF
 25254                           postinc0	equ	0xFEE
 25255                           fsr0h	equ	0xFEA
 25256                           fsr0l	equ	0xFE9
 25257                           wreg	equ	0xFE8
 25258                           postinc1	equ	0xFE6
 25259                           postdec1	equ	0xFE5
 25260                           plusw1	equ	0xFE3
 25261                           fsr1h	equ	0xFE2
 25262                           fsr1l	equ	0xFE1
 25263                           indf2	equ	0xFDF
 25264                           postinc2	equ	0xFDE
 25265                           postdec2	equ	0xFDD
 25266                           plusw2	equ	0xFDB
 25267                           fsr2h	equ	0xFDA
 25268                           fsr2l	equ	0xFD9
 25269                           status	equ	0xFD8
 25270                           
 25271 ;; *************** function _RADIO_SetFSKSyncWord *****************
 25272 ;; Defined at:
 25273 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25274 ;; Parameters:    Size  Location     Type
 25275 ;;  syncWordLen     1    wreg     unsigned char 
 25276 ;;  syncWord        2   14[BANK0 ] PTR unsigned char 
 25277 ;;		 -> FskSyncWordBuff(3), 
 25278 ;; Auto vars:     Size  Location     Type
 25279 ;;  syncWordLen     1   16[BANK0 ] unsigned char 
 25280 ;; Return value:  Size  Location     Type
 25281 ;;                  1    wreg      void 
 25282 ;; Registers used:
 25283 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25284 ;; Tracked objects:
 25285 ;;		On entry : F/0
 25286 ;;		On exit  : F/0
 25287 ;;		Unchanged: 0/0
 25288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25289 ;;      Params:         0       2       0       0       0       0       0       0       0
 25290 ;;      Locals:         0       1       0       0       0       0       0       0       0
 25291 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25292 ;;      Totals:         0       3       0       0       0       0       0       0       0
 25293 ;;Total ram usage:        3 bytes
 25294 ;; Hardware stack levels used:    1
 25295 ;; Hardware stack levels required when called:    8
 25296 ;; This function calls:
 25297 ;;		_memcpy
 25298 ;; This function is called by:
 25299 ;;		_ConfigureRadio
 25300 ;; This function uses a non-reentrant model
 25301 ;;
 25302                           
 25303                           	psect	text135
 25304  007260                     __ptext135:
 25305                           	opt stack 0
 25306  007260                     _RADIO_SetFSKSyncWord:
 25307                           	opt stack 17
 25308                           
 25309                           ; BSR set to: 0
 25310                           ;incstack = 0
 25311                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 25312  007260  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25313                           
 25314                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 25315  007262  0E08               	movlw	8
 25316  007264  0100               	movlb	0	; () banked
 25317  007266  6570               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25318  007268  D001               	goto	l12377
 25319                           
 25320                           ; BSR set to: 0
 25321                           ;radio_driver_SX1276.c: 1627: {
 25322                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 25323  00726A  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25324  00726C                     l12377:
 25325                           
 25326                           ; BSR set to: 0
 25327                           ;radio_driver_SX1276.c: 1629: }
 25328                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 25329  00726C  0E88               	movlw	low (_RadioConfiguration+15)
 25330  00726E  6F64               	movwf	memcpy@d1& (0+255),b
 25331  007270  0E01               	movlw	high (_RadioConfiguration+15)
 25332  007272  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 25333  007274  C06E  F066         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 25334  007278  C06F  F067         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 25335  00727C  C070  F068         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 25336  007280  6B69               	clrf	(memcpy@n+1)& (0+255),b
 25337  007282  EC6A  F034         	call	_memcpy	;wreg free
 25338                           
 25339                           ; BSR set to: 0
 25340                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 25341  007286  C070  F190         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 25342                           
 25343                           ; BSR set to: 0
 25344  00728A  0012               	return		;funcret
 25345  00728C                     __end_of_RADIO_SetFSKSyncWord:
 25346                           	opt stack 0
 25347                           tosu	equ	0xFFF
 25348                           tosh	equ	0xFFE
 25349                           tosl	equ	0xFFD
 25350                           pclath	equ	0xFFA
 25351                           tblptru	equ	0xFF8
 25352                           tblptrh	equ	0xFF7
 25353                           tblptrl	equ	0xFF6
 25354                           tablat	equ	0xFF5
 25355                           prodh	equ	0xFF4
 25356                           prodl	equ	0xFF3
 25357                           intcon	equ	0xFF2
 25358                           indf0	equ	0xFEF
 25359                           postinc0	equ	0xFEE
 25360                           fsr0h	equ	0xFEA
 25361                           fsr0l	equ	0xFE9
 25362                           wreg	equ	0xFE8
 25363                           postinc1	equ	0xFE6
 25364                           postdec1	equ	0xFE5
 25365                           plusw1	equ	0xFE3
 25366                           fsr1h	equ	0xFE2
 25367                           fsr1l	equ	0xFE1
 25368                           indf2	equ	0xFDF
 25369                           postinc2	equ	0xFDE
 25370                           postdec2	equ	0xFDD
 25371                           plusw2	equ	0xFDB
 25372                           fsr2h	equ	0xFDA
 25373                           fsr2l	equ	0xFD9
 25374                           status	equ	0xFD8
 25375                           
 25376 ;; *************** function _RADIO_SetChannelFrequency *****************
 25377 ;; Defined at:
 25378 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25379 ;; Parameters:    Size  Location     Type
 25380 ;;  frequency       4    4[BANK0 ] unsigned long 
 25381 ;; Auto vars:     Size  Location     Type
 25382 ;;		None
 25383 ;; Return value:  Size  Location     Type
 25384 ;;                  2    4[BANK0 ] enum E16979
 25385 ;; Registers used:
 25386 ;;		wreg, status,2, status,0
 25387 ;; Tracked objects:
 25388 ;;		On entry : 0/0
 25389 ;;		On exit  : F/0
 25390 ;;		Unchanged: 0/0
 25391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25392 ;;      Params:         0       4       0       0       0       0       0       0       0
 25393 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25394 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25395 ;;      Totals:         0       4       0       0       0       0       0       0       0
 25396 ;;Total ram usage:        4 bytes
 25397 ;; Hardware stack levels used:    1
 25398 ;; Hardware stack levels required when called:    7
 25399 ;; This function calls:
 25400 ;;		Nothing
 25401 ;; This function is called by:
 25402 ;;		_ConfigureRadio
 25403 ;; This function uses a non-reentrant model
 25404 ;;
 25405                           
 25406                           	psect	text136
 25407  005E62                     __ptext136:
 25408                           	opt stack 0
 25409  005E62                     _RADIO_SetChannelFrequency:
 25410                           	opt stack 18
 25411                           
 25412                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 25413                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 25414                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 25415                           
 25416                           ; BSR set to: 0
 25417                           ;incstack = 0
 25418  005E62  0E40               	movlw	64
 25419  005E64  0100               	movlb	0	; () banked
 25420  005E66  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25421  005E68  0E74               	movlw	116
 25422  005E6A  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25423  005E6C  0E2A               	movlw	42
 25424  005E6E  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25425  005E70  0E08               	movlw	8
 25426  005E72  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25427  005E74  E309               	bnc	l12357
 25428                           
 25429                           ; BSR set to: 0
 25430  005E76  0EC1               	movlw	193
 25431  005E78  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25432  005E7A  0E49               	movlw	73
 25433  005E7C  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25434  005E7E  0E6E               	movlw	110
 25435  005E80  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25436  005E82  0E0A               	movlw	10
 25437  005E84  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25438  005E86  E325               	bnc	l709
 25439  005E88                     l12357:
 25440                           
 25441                           ; BSR set to: 0
 25442  005E88  0E80               	movlw	128
 25443  005E8A  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25444  005E8C  0E1A               	movlw	26
 25445  005E8E  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25446  005E90  0E70               	movlw	112
 25447  005E92  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25448  005E94  0E18               	movlw	24
 25449  005E96  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25450  005E98  E309               	bnc	l12361
 25451                           
 25452                           ; BSR set to: 0
 25453  005E9A  0E41               	movlw	65
 25454  005E9C  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25455  005E9E  0EDD               	movlw	221
 25456  005EA0  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25457  005EA2  0E4A               	movlw	74
 25458  005EA4  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25459  005EA6  0E1F               	movlw	31
 25460  005EA8  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25461  005EAA  E313               	bnc	l709
 25462  005EAC                     l12361:
 25463                           
 25464                           ; BSR set to: 0
 25465  005EAC  0E80               	movlw	128
 25466  005EAE  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25467  005EB0  0E13               	movlw	19
 25468  005EB2  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25469  005EB4  0E61               	movlw	97
 25470  005EB6  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25471  005EB8  0E33               	movlw	51
 25472  005EBA  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25473  005EBC  A0D8               	btfss	status,0,c
 25474  005EBE  0012               	return	
 25475                           
 25476                           ; BSR set to: 0
 25477  005EC0  0564               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25478  005EC2  0EF7               	movlw	247
 25479  005EC4  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25480  005EC6  0ECB               	movlw	203
 25481  005EC8  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25482  005ECA  0E3C               	movlw	60
 25483  005ECC  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25484  005ECE  B0D8               	btfsc	status,0,c
 25485  005ED0  0012               	return	
 25486  005ED2                     l709:
 25487                           
 25488                           ; BSR set to: 0
 25489                           ;radio_driver_SX1276.c: 1449: {
 25490                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 25491  005ED2  C064  F179         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 25492  005ED6  C065  F17A         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 25493  005EDA  C066  F17B         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 25494  005EDE  C067  F17C         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 25495                           
 25496                           ; BSR set to: 0
 25497                           
 25498                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 25499                           ;	Return value of _RADIO_SetChannelFrequency is never used
 25500  005EE2  0012               	return		;funcret
 25501  005EE4                     __end_of_RADIO_SetChannelFrequency:
 25502                           	opt stack 0
 25503                           tosu	equ	0xFFF
 25504                           tosh	equ	0xFFE
 25505                           tosl	equ	0xFFD
 25506                           pclath	equ	0xFFA
 25507                           tblptru	equ	0xFF8
 25508                           tblptrh	equ	0xFF7
 25509                           tblptrl	equ	0xFF6
 25510                           tablat	equ	0xFF5
 25511                           prodh	equ	0xFF4
 25512                           prodl	equ	0xFF3
 25513                           intcon	equ	0xFF2
 25514                           indf0	equ	0xFEF
 25515                           postinc0	equ	0xFEE
 25516                           fsr0h	equ	0xFEA
 25517                           fsr0l	equ	0xFE9
 25518                           wreg	equ	0xFE8
 25519                           postinc1	equ	0xFE6
 25520                           postdec1	equ	0xFE5
 25521                           plusw1	equ	0xFE3
 25522                           fsr1h	equ	0xFE2
 25523                           fsr1l	equ	0xFE1
 25524                           indf2	equ	0xFDF
 25525                           postinc2	equ	0xFDE
 25526                           postdec2	equ	0xFDD
 25527                           plusw2	equ	0xFDB
 25528                           fsr2h	equ	0xFDA
 25529                           fsr2l	equ	0xFD9
 25530                           status	equ	0xFD8
 25531                           
 25532 ;; *************** function _RADIO_SetBandwidth *****************
 25533 ;; Defined at:
 25534 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25535 ;; Parameters:    Size  Location     Type
 25536 ;;  bandwidth       1    wreg     enum E16943
 25537 ;; Auto vars:     Size  Location     Type
 25538 ;;  bandwidth       1    4[BANK0 ] enum E16943
 25539 ;; Return value:  Size  Location     Type
 25540 ;;                  1    wreg      void 
 25541 ;; Registers used:
 25542 ;;		wreg
 25543 ;; Tracked objects:
 25544 ;;		On entry : F/0
 25545 ;;		On exit  : 0/0
 25546 ;;		Unchanged: 0/0
 25547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25548 ;;      Params:         0       0       0       0       0       0       0       0       0
 25549 ;;      Locals:         0       1       0       0       0       0       0       0       0
 25550 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25551 ;;      Totals:         0       1       0       0       0       0       0       0       0
 25552 ;;Total ram usage:        1 bytes
 25553 ;; Hardware stack levels used:    1
 25554 ;; Hardware stack levels required when called:    7
 25555 ;; This function calls:
 25556 ;;		Nothing
 25557 ;; This function is called by:
 25558 ;;		_ConfigureRadio
 25559 ;; This function uses a non-reentrant model
 25560 ;;
 25561                           
 25562                           	psect	text137
 25563  00790A                     __ptext137:
 25564                           	opt stack 0
 25565  00790A                     _RADIO_SetBandwidth:
 25566                           	opt stack 18
 25567                           
 25568                           ; BSR set to: 0
 25569                           ;incstack = 0
 25570                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 25571  00790A  6F64               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 25572                           
 25573                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 25574  00790C  C064  F193         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 25575  007910  0012               	return		;funcret
 25576  007912                     __end_of_RADIO_SetBandwidth:
 25577                           	opt stack 0
 25578                           tosu	equ	0xFFF
 25579                           tosh	equ	0xFFE
 25580                           tosl	equ	0xFFD
 25581                           pclath	equ	0xFFA
 25582                           tblptru	equ	0xFF8
 25583                           tblptrh	equ	0xFF7
 25584                           tblptrl	equ	0xFF6
 25585                           tablat	equ	0xFF5
 25586                           prodh	equ	0xFF4
 25587                           prodl	equ	0xFF3
 25588                           intcon	equ	0xFF2
 25589                           indf0	equ	0xFEF
 25590                           postinc0	equ	0xFEE
 25591                           fsr0h	equ	0xFEA
 25592                           fsr0l	equ	0xFE9
 25593                           wreg	equ	0xFE8
 25594                           postinc1	equ	0xFE6
 25595                           postdec1	equ	0xFE5
 25596                           plusw1	equ	0xFE3
 25597                           fsr1h	equ	0xFE2
 25598                           fsr1l	equ	0xFE1
 25599                           indf2	equ	0xFDF
 25600                           postinc2	equ	0xFDE
 25601                           postdec2	equ	0xFDD
 25602                           plusw2	equ	0xFDB
 25603                           fsr2h	equ	0xFDA
 25604                           fsr2l	equ	0xFD9
 25605                           status	equ	0xFD8
 25606                           
 25607 ;; *************** function _RADIO_Transmit *****************
 25608 ;; Defined at:
 25609 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25610 ;; Parameters:    Size  Location     Type
 25611 ;;  buffer          2   52[BANK0 ] PTR unsigned char 
 25612 ;;		 -> macBuffer(271), 
 25613 ;;  bufferLen       1   54[BANK0 ] unsigned char 
 25614 ;; Auto vars:     Size  Location     Type
 25615 ;;  i               1   68[BANK0 ] unsigned char 
 25616 ;;  regValue        1   67[BANK0 ] unsigned char 
 25617 ;; Return value:  Size  Location     Type
 25618 ;;                  2   52[BANK0 ] enum E16979
 25619 ;; Registers used:
 25620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25621 ;; Tracked objects:
 25622 ;;		On entry : F/0
 25623 ;;		On exit  : F/0
 25624 ;;		Unchanged: 0/0
 25625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25626 ;;      Params:         0       3       0       0       0       0       0       0       0
 25627 ;;      Locals:         0      10       0       0       0       0       0       0       0
 25628 ;;      Temps:          0       4       0       0       0       0       0       0       0
 25629 ;;      Totals:         0      17       0       0       0       0       0       0       0
 25630 ;;Total ram usage:       17 bytes
 25631 ;; Hardware stack levels used:    1
 25632 ;; Hardware stack levels required when called:   12
 25633 ;; This function calls:
 25634 ;;		_HALSPICSAssert
 25635 ;;		_HALSPICSDeassert
 25636 ;;		_HALSPISend
 25637 ;;		_RADIO_RegisterRead
 25638 ;;		_RADIO_RegisterWrite
 25639 ;;		_RADIO_WriteConfiguration
 25640 ;;		_RADIO_WriteMode
 25641 ;;		_SwTimerSetTimeout
 25642 ;;		_SwTimerStart
 25643 ;;		_SwTimerStop
 25644 ;;		___lldiv
 25645 ;; This function is called by:
 25646 ;;		_LORAWAN_RxTimeout
 25647 ;;		_LORAWAN_Join
 25648 ;;		_LORAWAN_Send
 25649 ;;		_AckRetransmissionCallback
 25650 ;;		_UnconfirmedTransmissionCallback
 25651 ;; This function uses a non-reentrant model
 25652 ;;
 25653                           
 25654                           	psect	text138
 25655  002FF4                     __ptext138:
 25656                           	opt stack 0
 25657  002FF4                     _RADIO_Transmit:
 25658                           	opt stack 16
 25659                           
 25660                           ; BSR set to: 0
 25661                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 25662                           ;radio_driver_SX1276.c: 789: uint8_t i;
 25663                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 25664                           
 25665                           ;incstack = 0
 25666  002FF4  0101               	movlb	1	; () banked
 25667  002FF6  A59C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 25668  002FF8  D006               	goto	l13361
 25669                           
 25670                           ; BSR set to: 1
 25671                           ;radio_driver_SX1276.c: 792: {
 25672                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 25673  002FFA  0E80               	movlw	128
 25674  002FFC  0100               	movlb	0	; () banked
 25675  002FFE  6F95               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25676  003000  0E03               	movlw	3
 25677  003002  6F94               	movwf	?_RADIO_Transmit& (0+255),b
 25678  003004  0C03               	retlw	3
 25679  003006                     l13361:
 25680                           
 25681                           ; BSR set to: 1
 25682                           ;radio_driver_SX1276.c: 794: }
 25683                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 25684  003006  C19C  F097         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 25685  00300A  0E03               	movlw	3
 25686  00300C  0100               	movlb	0	; () banked
 25687  00300E  1797               	andwf	??_RADIO_Transmit& (0+255),f,b
 25688  003010  E005               	bz	l13367
 25689                           
 25690                           ; BSR set to: 0
 25691                           ;radio_driver_SX1276.c: 797: {
 25692                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 25693  003012  0E80               	movlw	128
 25694  003014  6F95               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25695  003016  0E04               	movlw	4
 25696  003018  6F94               	movwf	?_RADIO_Transmit& (0+255),b
 25697  00301A  0C04               	retlw	4
 25698  00301C                     l13367:
 25699                           
 25700                           ; BSR set to: 0
 25701                           ;radio_driver_SX1276.c: 799: }
 25702                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 25703  00301C  0101               	movlb	1	; () banked
 25704  00301E  5191               	movf	(_RadioConfiguration+24)& (0+255),w,b
 25705  003020  E109               	bnz	l13375
 25706                           
 25707                           ; BSR set to: 1
 25708  003022  0E40               	movlw	64
 25709  003024  0100               	movlb	0	; () banked
 25710  003026  6596               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 25711  003028  D005               	goto	l13375
 25712                           
 25713                           ; BSR set to: 0
 25714                           ;radio_driver_SX1276.c: 802: {
 25715                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 25716  00302A  0E80               	movlw	128
 25717  00302C  6F95               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 25718  00302E  0E02               	movlw	2
 25719  003030  6F94               	movwf	?_RADIO_Transmit& (0+255),b
 25720  003032  0C02               	retlw	2
 25721  003034                     l13375:
 25722                           
 25723                           ;radio_driver_SX1276.c: 804: }
 25724                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 25725  003034  0101               	movlb	1	; () banked
 25726  003036  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25727  003038  EC2D  F03B         	call	_SwTimerStop
 25728                           
 25729                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 25730  00303C  0E00               	movlw	0
 25731  00303E  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 25732  003040  0E04               	movlw	4
 25733  003042  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 25734  003044  ECDA  F009         	call	_RADIO_WriteConfiguration	;wreg free
 25735                           
 25736                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 25737  003048  0101               	movlb	1	; () banked
 25738  00304A  0591               	decf	(_RadioConfiguration+24)& (0+255),w,b
 25739  00304C  E123               	bnz	l13393
 25740                           
 25741                           ; BSR set to: 1
 25742                           ;radio_driver_SX1276.c: 813: {
 25743                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 25744  00304E  C096  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 25745  003052  0E22               	movlw	34
 25746  003054  ECD4  F03A         	call	_RADIO_RegisterWrite
 25747                           
 25748                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 25749  003058  0E0A               	movlw	10
 25750  00305A  ECEA  F039         	call	_RADIO_RegisterRead
 25751  00305E  6FA3               	movwf	RADIO_Transmit@regValue& (0+255),b
 25752                           
 25753                           ; BSR set to: 0
 25754                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 25755  003060  0EF0               	movlw	240
 25756  003062  17A3               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 25757                           
 25758                           ; BSR set to: 0
 25759                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 25760  003064  87A3               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 25761                           
 25762                           ; BSR set to: 0
 25763                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 25764  003066  C0A3  F066         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 25765  00306A  0E0A               	movlw	10
 25766  00306C  ECD4  F03A         	call	_RADIO_RegisterWrite
 25767                           
 25768                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 25769  003070  0E40               	movlw	64
 25770  003072  0100               	movlb	0	; () banked
 25771  003074  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 25772  003076  ECD4  F03A         	call	_RADIO_RegisterWrite
 25773                           
 25774                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 25775  00307A  0100               	movlb	0	; () banked
 25776  00307C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 25777  00307E  0E41               	movlw	65
 25778  003080  ECD4  F03A         	call	_RADIO_RegisterWrite
 25779                           
 25780                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 25781  003084  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25782  003088  0E01               	movlw	1
 25783  00308A  0100               	movlb	0	; () banked
 25784  00308C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25785  00308E  ECFE  F028         	call	_RADIO_WriteMode
 25786                           
 25787                           ;radio_driver_SX1276.c: 828: }
 25788  003092  D00A               	goto	l13395
 25789  003094                     l13393:
 25790                           
 25791                           ; BSR set to: 1
 25792                           ;radio_driver_SX1276.c: 829: else
 25793                           ;radio_driver_SX1276.c: 830: {
 25794                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 25795  003094  0100               	movlb	0	; () banked
 25796  003096  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 25797  003098  0E40               	movlw	64
 25798  00309A  ECD4  F03A         	call	_RADIO_RegisterWrite
 25799                           
 25800                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 25801  00309E  0100               	movlb	0	; () banked
 25802  0030A0  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 25803  0030A2  0E41               	movlw	65
 25804  0030A4  ECD4  F03A         	call	_RADIO_RegisterWrite
 25805  0030A8                     l13395:
 25806                           
 25807                           ;radio_driver_SX1276.c: 834: }
 25808                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 25809  0030A8  0101               	movlb	1	; () banked
 25810  0030AA  5191               	movf	(_RadioConfiguration+24)& (0+255),w,b
 25811  0030AC  E105               	bnz	l13399
 25812                           
 25813                           ; BSR set to: 1
 25814                           ;radio_driver_SX1276.c: 837: {
 25815                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 25816  0030AE  C096  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 25817  0030B2  0E00               	movlw	0
 25818  0030B4  ECD4  F03A         	call	_RADIO_RegisterWrite
 25819  0030B8                     l13399:
 25820                           
 25821                           ;radio_driver_SX1276.c: 840: }
 25822                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 25823  0030B8  ECBA  F03C         	call	_HALSPICSAssert	;wreg free
 25824                           
 25825                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 25826  0030BC  0E80               	movlw	128
 25827  0030BE  EC68  F03C         	call	_HALSPISend
 25828                           
 25829                           ; BSR set to: 14
 25830                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 25831  0030C2  0100               	movlb	0	; () banked
 25832  0030C4  6BA4               	clrf	RADIO_Transmit@i& (0+255),b
 25833  0030C6  D00B               	goto	l13409
 25834  0030C8                     l13405:
 25835                           
 25836                           ; BSR set to: 0
 25837                           ;radio_driver_SX1276.c: 846: {
 25838                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 25839  0030C8  51A4               	movf	RADIO_Transmit@i& (0+255),w,b
 25840  0030CA  2594               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 25841  0030CC  6ED9               	movwf	fsr2l,c
 25842  0030CE  0E00               	movlw	0
 25843  0030D0  2195               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 25844  0030D2  6EDA               	movwf	fsr2h,c
 25845  0030D4  50DF               	movf	indf2,w,c
 25846  0030D6  EC68  F03C         	call	_HALSPISend
 25847                           
 25848                           ; BSR set to: 14
 25849  0030DA  0100               	movlb	0	; () banked
 25850  0030DC  2BA4               	incf	RADIO_Transmit@i& (0+255),f,b
 25851  0030DE                     l13409:
 25852                           
 25853                           ; BSR set to: 0
 25854  0030DE  5196               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 25855  0030E0  5DA4               	subwf	RADIO_Transmit@i& (0+255),w,b
 25856  0030E2  E3F2               	bnc	l13405
 25857                           
 25858                           ; BSR set to: 0
 25859                           ;radio_driver_SX1276.c: 848: }
 25860                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 25861  0030E4  ECB8  F03C         	call	_HALSPICSDeassert	;wreg free
 25862                           
 25863                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 25864  0030E8  0101               	movlb	1	; () banked
 25865  0030EA  819C               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 25866                           
 25867                           ; BSR set to: 1
 25868                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 25869  0030EC  0EE7               	movlw	231
 25870  0030EE  179C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 25871                           
 25872                           ; BSR set to: 1
 25873                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 25874  0030F0  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 25875  0030F4  0E00               	movlw	0
 25876  0030F6  0100               	movlb	0	; () banked
 25877  0030F8  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 25878  0030FA  0E03               	movlw	3
 25879  0030FC  ECFE  F028         	call	_RADIO_WriteMode
 25880                           
 25881                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 25882  003100  0100               	movlb	0	; () banked
 25883  003102  6B71               	clrf	SwTimerSetTimeout@timeout& (0+255),b
 25884  003104  6B72               	clrf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 25885  003106  0E0A               	movlw	10
 25886  003108  6F73               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 25887  00310A  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 25888  00310C  0101               	movlb	1	; () banked
 25889  00310E  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25890  003110  ECE5  F036         	call	_SwTimerSetTimeout
 25891                           
 25892                           ; BSR set to: 0
 25893                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 25894  003114  0101               	movlb	1	; () banked
 25895  003116  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25896  003118  ECAA  F02E         	call	_SwTimerStart
 25897                           
 25898                           ; BSR set to: 0
 25899                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 25900  00311C  0101               	movlb	1	; () banked
 25901  00311E  51A3               	movf	(_RadioConfiguration+42)& (0+255),w,b
 25902  003120  11A4               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 25903  003122  11A5               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 25904  003124  11A6               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 25905  003126  E059               	bz	l13439
 25906                           
 25907                           ; BSR set to: 1
 25908                           ;radio_driver_SX1276.c: 866: {
 25909                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 25910  003128  51A6               	movf	(_RadioConfiguration+45)& (0+255),w,b
 25911  00312A  E106               	bnz	u14870
 25912  00312C  29A3               	incf	(_RadioConfiguration+42)& (0+255),w,b
 25913  00312E  0EFF               	movlw	255
 25914  003130  59A4               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 25915  003132  0E0F               	movlw	15
 25916  003134  59A5               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 25917  003136  E319               	bnc	l13433
 25918  003138                     u14870:
 25919                           
 25920                           ; BSR set to: 1
 25921  003138  C1A3  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 25922  00313C  C1A4  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 25923  003140  C1A5  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 25924  003144  C1A6  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 25925  003148  0E7D               	movlw	125
 25926  00314A  0100               	movlb	0	; () banked
 25927  00314C  6F68               	movwf	___lldiv@divisor& (0+255),b
 25928  00314E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 25929  003150  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 25930  003152  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 25931  003154  ECAA  F030         	call	___lldiv	;wreg free
 25932  003158  0E0C               	movlw	12
 25933  00315A                     u14885:
 25934  00315A  90D8               	bcf	status,0,c
 25935  00315C  3764               	rlcf	?___lldiv& (0+255),f,b
 25936  00315E  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 25937  003160  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 25938  003162  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 25939  003164  2EE8               	decfsz	wreg,f,c
 25940  003166  D7F9               	goto	u14885
 25941  003168  D020               	goto	L15
 25942  00316A                     l13433:
 25943                           
 25944                           ; BSR set to: 1
 25945  00316A  C1A3  F097         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 25946  00316E  C1A4  F098         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 25947  003172  C1A5  F099         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 25948  003176  C1A6  F09A         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 25949  00317A  0E0C               	movlw	12
 25950  00317C                     u14895:
 25951  00317C  90D8               	bcf	status,0,c
 25952  00317E  0100               	movlb	0	; () banked
 25953  003180  3797               	rlcf	??_RADIO_Transmit& (0+255),f,b
 25954  003182  3798               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 25955  003184  3799               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 25956  003186  379A               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 25957  003188  2EE8               	decfsz	wreg,f,c
 25958  00318A  D7F8               	goto	u14895
 25959  00318C  C097  F064         	movff	??_RADIO_Transmit,___lldiv@dividend
 25960  003190  C098  F065         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 25961  003194  C099  F066         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 25962  003198  C09A  F067         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 25963  00319C  0E7D               	movlw	125
 25964  00319E  6F68               	movwf	___lldiv@divisor& (0+255),b
 25965  0031A0  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 25966  0031A2  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 25967  0031A4  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 25968  0031A6  ECAA  F030         	call	___lldiv	;wreg free
 25969  0031AA                     L15:
 25970  0031AA  C064  F09F         	movff	?___lldiv,_RADIO_Transmit$1052
 25971  0031AE  C065  F0A0         	movff	?___lldiv+1,_RADIO_Transmit$1052+1
 25972  0031B2  C066  F0A1         	movff	?___lldiv+2,_RADIO_Transmit$1052+2
 25973  0031B6  C067  F0A2         	movff	?___lldiv+3,_RADIO_Transmit$1052+3
 25974                           
 25975                           ; BSR set to: 0
 25976  0031BA  C09F  F071         	movff	_RADIO_Transmit$1052,SwTimerSetTimeout@timeout
 25977  0031BE  C0A0  F072         	movff	_RADIO_Transmit$1052+1,SwTimerSetTimeout@timeout+1
 25978  0031C2  C0A1  F073         	movff	_RADIO_Transmit$1052+2,SwTimerSetTimeout@timeout+2
 25979  0031C6  C0A2  F074         	movff	_RADIO_Transmit$1052+3,SwTimerSetTimeout@timeout+3
 25980  0031CA  0101               	movlb	1	; () banked
 25981  0031CC  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25982  0031CE  ECE5  F036         	call	_SwTimerSetTimeout
 25983                           
 25984                           ; BSR set to: 0
 25985                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 25986  0031D2  0101               	movlb	1	; () banked
 25987  0031D4  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25988  0031D6  ECAA  F02E         	call	_SwTimerStart
 25989  0031DA                     l13439:
 25990                           
 25991                           ;radio_driver_SX1276.c: 869: }
 25992                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 25993  0031DA  0100               	movlb	0	; () banked
 25994  0031DC  6B94               	clrf	?_RADIO_Transmit& (0+255),b
 25995  0031DE  6B95               	clrf	(?_RADIO_Transmit+1)& (0+255),b
 25996                           
 25997                           ; BSR set to: 0
 25998  0031E0  0012               	return		;funcret
 25999  0031E2                     __end_of_RADIO_Transmit:
 26000                           	opt stack 0
 26001                           tosu	equ	0xFFF
 26002                           tosh	equ	0xFFE
 26003                           tosl	equ	0xFFD
 26004                           pclath	equ	0xFFA
 26005                           tblptru	equ	0xFF8
 26006                           tblptrh	equ	0xFF7
 26007                           tblptrl	equ	0xFF6
 26008                           tablat	equ	0xFF5
 26009                           prodh	equ	0xFF4
 26010                           prodl	equ	0xFF3
 26011                           intcon	equ	0xFF2
 26012                           indf0	equ	0xFEF
 26013                           postinc0	equ	0xFEE
 26014                           fsr0h	equ	0xFEA
 26015                           fsr0l	equ	0xFE9
 26016                           wreg	equ	0xFE8
 26017                           postinc1	equ	0xFE6
 26018                           postdec1	equ	0xFE5
 26019                           plusw1	equ	0xFE3
 26020                           fsr1h	equ	0xFE2
 26021                           fsr1l	equ	0xFE1
 26022                           indf2	equ	0xFDF
 26023                           postinc2	equ	0xFDE
 26024                           postdec2	equ	0xFDD
 26025                           plusw2	equ	0xFDB
 26026                           fsr2h	equ	0xFDA
 26027                           fsr2l	equ	0xFD9
 26028                           status	equ	0xFD8
 26029                           
 26030 ;; *************** function _RADIO_WriteConfiguration *****************
 26031 ;; Defined at:
 26032 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26033 ;; Parameters:    Size  Location     Type
 26034 ;;  symbolTimeou    2   29[BANK0 ] unsigned int 
 26035 ;; Auto vars:     Size  Location     Type
 26036 ;;  tempValue       4   34[BANK0 ] unsigned long 
 26037 ;;  regValue        1   38[BANK0 ] unsigned char 
 26038 ;;  i               1   33[BANK0 ] unsigned char 
 26039 ;; Return value:  Size  Location     Type
 26040 ;;                  1    wreg      void 
 26041 ;; Registers used:
 26042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26043 ;; Tracked objects:
 26044 ;;		On entry : F/0
 26045 ;;		On exit  : 1/0
 26046 ;;		Unchanged: 0/0
 26047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26048 ;;      Params:         0       2       0       0       0       0       0       0       0
 26049 ;;      Locals:         0       6       0       0       0       0       0       0       0
 26050 ;;      Temps:          0       2       0       0       0       0       0       0       0
 26051 ;;      Totals:         0      10       0       0       0       0       0       0       0
 26052 ;;Total ram usage:       10 bytes
 26053 ;; Hardware stack levels used:    1
 26054 ;; Hardware stack levels required when called:   11
 26055 ;; This function calls:
 26056 ;;		_RADIO_RegisterRead
 26057 ;;		_RADIO_RegisterWrite
 26058 ;;		_RADIO_WriteFSKBitRate
 26059 ;;		_RADIO_WriteFSKFrequencyDeviation
 26060 ;;		_RADIO_WriteFrequency
 26061 ;;		_RADIO_WriteMode
 26062 ;;		_RADIO_WritePower
 26063 ;;		___lmul
 26064 ;; This function is called by:
 26065 ;;		_RADIO_Transmit
 26066 ;;		_RADIO_ReceiveStart
 26067 ;; This function uses a non-reentrant model
 26068 ;;
 26069                           
 26070                           	psect	text139
 26071  0013B4                     __ptext139:
 26072                           	opt stack 0
 26073  0013B4                     _RADIO_WriteConfiguration:
 26074                           	opt stack 16
 26075                           
 26076                           ; BSR set to: 0
 26077                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 26078                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 26079                           ;radio_driver_SX1276.c: 537: uint8_t i;
 26080                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 26081                           
 26082                           ; BSR set to: 0
 26083                           ;incstack = 0
 26084  0013B4  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26085  0013B8  0E00               	movlw	0
 26086  0013BA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26087  0013BC  ECFE  F028         	call	_RADIO_WriteMode
 26088                           
 26089                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 26090  0013C0  C179  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 26091  0013C4  C17A  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 26092  0013C8  C17B  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 26093  0013CC  C17C  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 26094  0013D0  EC90  F028         	call	_RADIO_WriteFrequency	;wreg free
 26095                           
 26096                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 26097  0013D4  0101               	movlb	1	; () banked
 26098  0013D6  5194               	movf	(_RadioConfiguration+27)& (0+255),w,b
 26099  0013D8  ECD2  F029         	call	_RADIO_WritePower
 26100                           
 26101                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 26102  0013DC  0101               	movlb	1	; () banked
 26103  0013DE  0591               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26104  0013E0  E001 D1B6          	bnz	l12597
 26105                           
 26106                           ; BSR set to: 1
 26107                           ;radio_driver_SX1276.c: 545: {
 26108                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 26109  0013E4  C187  F066         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 26110  0013E8  0E39               	movlw	57
 26111  0013EA  ECD4  F03A         	call	_RADIO_RegisterWrite
 26112                           
 26113                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 26114                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 26115                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 26116                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 26117  0013EE  C19B  F07F         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 26118  0013F2  0E01               	movlw	1
 26119  0013F4  0100               	movlb	0	; () banked
 26120  0013F6  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26121  0013F8  0101               	movlb	1	; () banked
 26122  0013FA  90D8               	bcf	status,0,c
 26123  0013FC  359A               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 26124  0013FE  0100               	movlb	0	; () banked
 26125  001400  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26126  001402  0101               	movlb	1	; () banked
 26127  001404  3993               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 26128  001406  0BF0               	andlw	240
 26129  001408  0100               	movlb	0	; () banked
 26130  00140A  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26131  00140C  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26132  00140E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26133  001410  0E1D               	movlw	29
 26134  001412  ECD4  F03A         	call	_RADIO_RegisterWrite
 26135                           
 26136                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 26137                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 26138                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 26139                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 26140  001416  C07E  F07F         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration
 26141  00141A  0E03               	movlw	3
 26142  00141C  0100               	movlb	0	; () banked
 26143  00141E  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26144  001420  C195  F080         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+1
 26145  001424  0E01               	movlw	1
 26146  001426  1780               	andwf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26147  001428  90D8               	bcf	status,0,c
 26148  00142A  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26149  00142C  90D8               	bcf	status,0,c
 26150  00142E  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26151  001430  0101               	movlb	1	; () banked
 26152  001432  3992               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 26153  001434  0BF0               	andlw	240
 26154  001436  0100               	movlb	0	; () banked
 26155  001438  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26156  00143A  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26157  00143C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26158  00143E  0E1E               	movlw	30
 26159  001440  ECD4  F03A         	call	_RADIO_RegisterWrite
 26160                           
 26161                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 26162  001444  0101               	movlb	1	; () banked
 26163  001446  5197               	movf	(_RadioConfiguration+30)& (0+255),w,b
 26164  001448  1198               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 26165  00144A  E060               	bz	l466
 26166                           
 26167                           ; BSR set to: 1
 26168                           ;radio_driver_SX1276.c: 561: {
 26169                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 26170  00144C  C197  F082         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 26171  001450  C198  F083         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 26172  001454  0100               	movlb	0	; () banked
 26173  001456  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26174  001458  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26175                           
 26176                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 26177  00145A  D042               	goto	l12489
 26178  00145C                     l12481:
 26179                           
 26180                           ; BSR set to: 1
 26181                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 26182  00145C  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26183  001460  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26184  001464  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26185  001468  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26186  00146C  0E7D               	movlw	125
 26187  00146E  0100               	movlb	0	; () banked
 26188  001470  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26189  001472  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26190  001474  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26191  001476  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26192  001478  ECEE  F02E         	call	___lmul	;wreg free
 26193  00147C  D022               	goto	L17
 26194  00147E                     l12483:
 26195                           
 26196                           ; BSR set to: 1
 26197                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 26198  00147E  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26199  001482  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26200  001486  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26201  00148A  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26202  00148E  0EFA               	movlw	250
 26203  001490  0100               	movlb	0	; () banked
 26204  001492  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26205  001494  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26206  001496  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26207  001498  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26208  00149A  ECEE  F02E         	call	___lmul	;wreg free
 26209  00149E  D011               	goto	L17
 26210  0014A0                     l12485:
 26211                           
 26212                           ; BSR set to: 1
 26213                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 26214  0014A0  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26215  0014A4  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26216  0014A8  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26217  0014AC  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26218  0014B0  0EF4               	movlw	244
 26219  0014B2  0100               	movlb	0	; () banked
 26220  0014B4  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26221  0014B6  0E01               	movlw	1
 26222  0014B8  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26223  0014BA  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26224  0014BC  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26225  0014BE  ECEE  F02E         	call	___lmul	;wreg free
 26226  0014C2                     L17:
 26227  0014C2  C064  F082         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 26228  0014C6  C065  F083         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 26229  0014CA  C066  F084         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 26230  0014CE  C067  F085         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 26231                           
 26232                           ;radio_driver_SX1276.c: 574: break;
 26233  0014D2  D00F               	goto	l12491
 26234  0014D4                     l472:
 26235                           
 26236                           ; BSR set to: 1
 26237                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 26238  0014D4  0100               	movlb	0	; () banked
 26239  0014D6  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26240  0014D8  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26241  0014DA  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26242  0014DC  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26243                           
 26244                           ;radio_driver_SX1276.c: 578: break;
 26245  0014DE  D009               	goto	l12491
 26246  0014E0                     l12489:
 26247                           
 26248                           ; BSR set to: 0
 26249  0014E0  0101               	movlb	1	; () banked
 26250  0014E2  5193               	movf	(_RadioConfiguration+26)& (0+255),w,b
 26251                           
 26252                           ; Switch size 1, requested type "speed"
 26253                           ; Number of cases is 3, Range of values is 7 to 9
 26254                           ; switch strategies available:
 26255                           ; Name         Instructions Cycles
 26256                           ; simple_byte           10     6 (average)
 26257                           ;	Chosen strategy is simple_byte
 26258  0014E4  0A07               	xorlw	7	; case 7
 26259  0014E6  E0BA               	bz	l12481
 26260  0014E8  0A0F               	xorlw	15	; case 8
 26261  0014EA  E0C9               	bz	l12483
 26262  0014EC  0A01               	xorlw	1	; case 9
 26263  0014EE  E0D8               	bz	l12485
 26264  0014F0  D7F1               	goto	l472
 26265  0014F2                     l12491:
 26266                           
 26267                           ; BSR set to: 0
 26268                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 26269  0014F2  0101               	movlb	1	; () banked
 26270  0014F4  2992               	incf	(_RadioConfiguration+25)& (0+255),w,b
 26271  0014F6  0100               	movlb	0	; () banked
 26272  0014F8  6F7F               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 26273  0014FA  D005               	goto	u13450
 26274  0014FC                     u13455:
 26275  0014FC  90D8               	bcf	status,0,c
 26276  0014FE  3385               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 26277  001500  3384               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 26278  001502  3383               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 26279  001504  3382               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 26280  001506                     u13450:
 26281  001506  2F7F               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 26282  001508  D7F9               	goto	u13455
 26283                           
 26284                           ;radio_driver_SX1276.c: 582: }
 26285  00150A  D005               	goto	l12493
 26286  00150C                     l466:
 26287                           
 26288                           ; BSR set to: 1
 26289                           ;radio_driver_SX1276.c: 583: else
 26290                           ;radio_driver_SX1276.c: 584: {
 26291                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 26292  00150C  0100               	movlb	0	; () banked
 26293  00150E  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26294  001510  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26295  001512  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26296  001514  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26297  001516                     l12493:
 26298                           
 26299                           ;radio_driver_SX1276.c: 586: }
 26300                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 26301  001516  C082  F066         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 26302  00151A  0E24               	movlw	36
 26303  00151C  ECD4  F03A         	call	_RADIO_RegisterWrite
 26304                           
 26305                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 26306  001520  C07D  F066         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 26307  001524  0E1F               	movlw	31
 26308  001526  ECD4  F03A         	call	_RADIO_RegisterWrite
 26309                           
 26310                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 26311  00152A  0E26               	movlw	38
 26312  00152C  ECEA  F039         	call	_RADIO_RegisterRead
 26313  001530  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26314                           
 26315                           ; BSR set to: 0
 26316                           ;radio_driver_SX1276.c: 596: if (
 26317                           ;radio_driver_SX1276.c: 597: (
 26318                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 26319                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 26320                           ;radio_driver_SX1276.c: 600: ) ||
 26321                           ;radio_driver_SX1276.c: 601: (
 26322                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 26323                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 26324                           ;radio_driver_SX1276.c: 604: )
 26325                           ;radio_driver_SX1276.c: 605: )
 26326  001532  0E0C               	movlw	12
 26327  001534  0101               	movlb	1	; () banked
 26328  001536  1992               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26329  001538  E106               	bnz	l12501
 26330                           
 26331                           ; BSR set to: 1
 26332  00153A  0E07               	movlw	7
 26333  00153C  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26334  00153E  E009               	bz	l12505
 26335                           
 26336                           ; BSR set to: 1
 26337  001540  0E08               	movlw	8
 26338  001542  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26339  001544  E006               	bz	l12505
 26340  001546                     l12501:
 26341                           
 26342                           ; BSR set to: 1
 26343  001546  0E0B               	movlw	11
 26344  001548  1992               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26345  00154A  E106               	bnz	l12507
 26346                           
 26347                           ; BSR set to: 1
 26348  00154C  0E07               	movlw	7
 26349  00154E  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26350  001550  E103               	bnz	l12507
 26351  001552                     l12505:
 26352                           
 26353                           ; BSR set to: 1
 26354                           ;radio_driver_SX1276.c: 606: {
 26355                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 26356  001552  0100               	movlb	0	; () banked
 26357  001554  8786               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26358                           
 26359                           ;radio_driver_SX1276.c: 608: }
 26360  001556  D002               	goto	l479
 26361  001558                     l12507:
 26362                           
 26363                           ; BSR set to: 1
 26364                           ;radio_driver_SX1276.c: 609: else
 26365                           ;radio_driver_SX1276.c: 610: {
 26366                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 26367  001558  0100               	movlb	0	; () banked
 26368  00155A  9786               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26369  00155C                     l479:
 26370                           
 26371                           ; BSR set to: 0
 26372                           ;radio_driver_SX1276.c: 612: }
 26373                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 26374  00155C  8586               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 26375                           
 26376                           ; BSR set to: 0
 26377                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 26378  00155E  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26379  001562  0E26               	movlw	38
 26380  001564  ECD4  F03A         	call	_RADIO_RegisterWrite
 26381                           
 26382                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 26383  001568  0E31               	movlw	49
 26384  00156A  ECEA  F039         	call	_RADIO_RegisterRead
 26385  00156E  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26386                           
 26387                           ; BSR set to: 0
 26388                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 26389  001570  0EF8               	movlw	248
 26390  001572  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26391                           
 26392                           ; BSR set to: 0
 26393                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 26394  001574  0E03               	movlw	3
 26395  001576  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26396                           
 26397                           ; BSR set to: 0
 26398                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 26399  001578  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26400  00157C  0E31               	movlw	49
 26401  00157E  ECD4  F03A         	call	_RADIO_RegisterWrite
 26402                           
 26403                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 26404  001582  0E0A               	movlw	10
 26405  001584  0100               	movlb	0	; () banked
 26406  001586  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26407  001588  0E37               	movlw	55
 26408  00158A  ECD4  F03A         	call	_RADIO_RegisterWrite
 26409                           
 26410                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 26411  00158E  0E12               	movlw	18
 26412  001590  0101               	movlb	1	; () banked
 26413  001592  19AA               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26414  001594  E129               	bnz	l12545
 26415                           
 26416                           ; BSR set to: 1
 26417                           ;radio_driver_SX1276.c: 626: {
 26418                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 26419                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 26420  001596  0E07               	movlw	7
 26421  001598  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26422  00159A  E003               	bz	l12527
 26423                           
 26424                           ; BSR set to: 1
 26425  00159C  0E08               	movlw	8
 26426  00159E  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26427  0015A0  E115               	bnz	l12537
 26428  0015A2                     l12527:
 26429                           
 26430                           ; BSR set to: 1
 26431                           ;radio_driver_SX1276.c: 631: {
 26432                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 26433  0015A2  0E31               	movlw	49
 26434  0015A4  ECEA  F039         	call	_RADIO_RegisterRead
 26435  0015A8  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26436                           
 26437                           ; BSR set to: 0
 26438                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 26439  0015AA  9F86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26440                           
 26441                           ; BSR set to: 0
 26442                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 26443  0015AC  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26444  0015B0  0E31               	movlw	49
 26445  0015B2  ECD4  F03A         	call	_RADIO_RegisterWrite
 26446                           
 26447                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 26448  0015B6  0E40               	movlw	64
 26449  0015B8  0100               	movlb	0	; () banked
 26450  0015BA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26451  0015BC  0E2F               	movlw	47
 26452  0015BE  ECD4  F03A         	call	_RADIO_RegisterWrite
 26453                           
 26454                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 26455  0015C2  0100               	movlb	0	; () banked
 26456  0015C4  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26457  0015C6  0E30               	movlw	48
 26458  0015C8  ECD4  F03A         	call	_RADIO_RegisterWrite
 26459  0015CC                     l12537:
 26460                           
 26461                           ;radio_driver_SX1276.c: 637: }
 26462                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 26463  0015CC  0E09               	movlw	9
 26464  0015CE  0101               	movlb	1	; () banked
 26465  0015D0  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26466  0015D2  E10A               	bnz	l12545
 26467                           
 26468                           ; BSR set to: 1
 26469                           ;radio_driver_SX1276.c: 640: {
 26470                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 26471  0015D4  0E31               	movlw	49
 26472  0015D6  ECEA  F039         	call	_RADIO_RegisterRead
 26473  0015DA  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26474                           
 26475                           ; BSR set to: 0
 26476                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 26477  0015DC  8F86               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26478                           
 26479                           ; BSR set to: 0
 26480                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 26481  0015DE  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26482  0015E2  0E31               	movlw	49
 26483  0015E4  ECD4  F03A         	call	_RADIO_RegisterWrite
 26484  0015E8                     l12545:
 26485                           
 26486                           ;radio_driver_SX1276.c: 644: }
 26487                           ;radio_driver_SX1276.c: 645: }
 26488                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 26489  0015E8  0E33               	movlw	51
 26490  0015EA  ECEA  F039         	call	_RADIO_RegisterRead
 26491  0015EE  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26492                           
 26493                           ; BSR set to: 0
 26494                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 26495  0015F0  9D86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 26496                           
 26497                           ; BSR set to: 0
 26498                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 26499  0015F2  8186               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 26500                           
 26501                           ; BSR set to: 0
 26502                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 26503  0015F4  C199  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26504  0015F8  0E01               	movlw	1
 26505  0015FA  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26506  0015FC  0E06               	movlw	6
 26507  0015FE  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26508  001600                     u13555:
 26509  001600  90D8               	bcf	status,0,c
 26510  001602  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26511  001604  2F80               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26512  001606  D7FC               	goto	u13555
 26513  001608  517F               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 26514  00160A  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26515                           
 26516                           ; BSR set to: 0
 26517                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 26518  00160C  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26519  001610  0E33               	movlw	51
 26520  001612  ECD4  F03A         	call	_RADIO_RegisterWrite
 26521                           
 26522                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 26523  001616  C199  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26524  00161A  0E01               	movlw	1
 26525  00161C  0100               	movlb	0	; () banked
 26526  00161E  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26527  001620  90D8               	bcf	status,0,c
 26528  001622  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26529  001624  90D8               	bcf	status,0,c
 26530  001626  357F               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 26531  001628  0AFF               	xorlw	255
 26532  00162A  0B1D               	andlw	29
 26533  00162C  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26534                           
 26535                           ; BSR set to: 0
 26536                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 26537  00162E  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26538  001632  0E3B               	movlw	59
 26539  001634  ECD4  F03A         	call	_RADIO_RegisterWrite
 26540                           
 26541                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 26542  001638  0101               	movlb	1	; () banked
 26543  00163A  5186               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26544  00163C  0100               	movlb	0	; () banked
 26545  00163E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26546  001640  0E20               	movlw	32
 26547  001642  ECD4  F03A         	call	_RADIO_RegisterWrite
 26548                           
 26549                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26550  001646  C185  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26551  00164A  0E21               	movlw	33
 26552  00164C  ECD4  F03A         	call	_RADIO_RegisterWrite
 26553                           
 26554                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 26555  001650  0100               	movlb	0	; () banked
 26556  001652  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26557  001654  0E0D               	movlw	13
 26558  001656  ECD4  F03A         	call	_RADIO_RegisterWrite
 26559                           
 26560                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 26561  00165A  0100               	movlb	0	; () banked
 26562  00165C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26563  00165E  0E0E               	movlw	14
 26564  001660  ECD4  F03A         	call	_RADIO_RegisterWrite
 26565                           
 26566                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 26567  001664  0100               	movlb	0	; () banked
 26568  001666  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26569  001668  0E0F               	movlw	15
 26570  00166A  ECD4  F03A         	call	_RADIO_RegisterWrite
 26571                           
 26572                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 26573  00166E  0E12               	movlw	18
 26574  001670  0101               	movlb	1	; () banked
 26575  001672  19AA               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26576  001674  E168               	bnz	l485
 26577                           
 26578                           ; BSR set to: 1
 26579                           ;radio_driver_SX1276.c: 665: {
 26580                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26581                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 26582                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 26583                           ;radio_driver_SX1276.c: 669: )
 26584  001676  0E09               	movlw	9
 26585  001678  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26586  00167A  E11E               	bnz	l12579
 26587                           
 26588                           ; BSR set to: 1
 26589  00167C  0E80               	movlw	128
 26590  00167E  5D79               	subwf	_RadioConfiguration& (0+255),w,b
 26591  001680  0E13               	movlw	19
 26592  001682  597A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26593  001684  0E61               	movlw	97
 26594  001686  597B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26595  001688  0E33               	movlw	51
 26596  00168A  597C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26597  00168C  E315               	bnc	l12579
 26598                           
 26599                           ; BSR set to: 1
 26600  00168E  0579               	decf	_RadioConfiguration& (0+255),w,b
 26601  001690  0EF7               	movlw	247
 26602  001692  597A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26603  001694  0ECB               	movlw	203
 26604  001696  597B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26605  001698  0E3C               	movlw	60
 26606  00169A  597C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26607  00169C  E20D               	bc	l12579
 26608                           
 26609                           ; BSR set to: 1
 26610                           ;radio_driver_SX1276.c: 670: {
 26611                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 26612  00169E  0E02               	movlw	2
 26613  0016A0  0100               	movlb	0	; () banked
 26614  0016A2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26615  0016A4  0E36               	movlw	54
 26616  0016A6  ECD4  F03A         	call	_RADIO_RegisterWrite
 26617                           
 26618                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 26619  0016AA  0E64               	movlw	100
 26620  0016AC  0100               	movlb	0	; () banked
 26621  0016AE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26622  0016B0  0E3A               	movlw	58
 26623  0016B2  ECD4  F03A         	call	_RADIO_RegisterWrite
 26624                           
 26625                           ;radio_driver_SX1276.c: 673: }
 26626  0016B6  D028               	goto	l12589
 26627  0016B8                     l12579:
 26628                           
 26629                           ; BSR set to: 1
 26630                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26631                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 26632                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 26633                           ;radio_driver_SX1276.c: 677: )
 26634  0016B8  0E09               	movlw	9
 26635  0016BA  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26636  0016BC  E11F               	bnz	l12587
 26637                           
 26638                           ; BSR set to: 1
 26639  0016BE  0E80               	movlw	128
 26640  0016C0  5D79               	subwf	_RadioConfiguration& (0+255),w,b
 26641  0016C2  0E1A               	movlw	26
 26642  0016C4  597A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26643  0016C6  0E70               	movlw	112
 26644  0016C8  597B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26645  0016CA  0E18               	movlw	24
 26646  0016CC  597C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26647  0016CE  E316               	bnc	l12587
 26648                           
 26649                           ; BSR set to: 1
 26650  0016D0  0E41               	movlw	65
 26651  0016D2  5D79               	subwf	_RadioConfiguration& (0+255),w,b
 26652  0016D4  0EDD               	movlw	221
 26653  0016D6  597A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26654  0016D8  0E4A               	movlw	74
 26655  0016DA  597B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26656  0016DC  0E1F               	movlw	31
 26657  0016DE  597C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26658  0016E0  E20D               	bc	l12587
 26659                           
 26660                           ; BSR set to: 1
 26661                           ;radio_driver_SX1276.c: 678: {
 26662                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 26663  0016E2  0E02               	movlw	2
 26664  0016E4  0100               	movlb	0	; () banked
 26665  0016E6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26666  0016E8  0E36               	movlw	54
 26667  0016EA  ECD4  F03A         	call	_RADIO_RegisterWrite
 26668                           
 26669                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 26670  0016EE  0E7F               	movlw	127
 26671  0016F0  0100               	movlb	0	; () banked
 26672  0016F2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26673  0016F4  0E3A               	movlw	58
 26674  0016F6  ECD4  F03A         	call	_RADIO_RegisterWrite
 26675                           
 26676                           ;radio_driver_SX1276.c: 681: }
 26677  0016FA  D006               	goto	l12589
 26678  0016FC                     l12587:
 26679                           
 26680                           ; BSR set to: 1
 26681                           ;radio_driver_SX1276.c: 682: else
 26682                           ;radio_driver_SX1276.c: 683: {
 26683                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 26684  0016FC  0E03               	movlw	3
 26685  0016FE  0100               	movlb	0	; () banked
 26686  001700  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26687  001702  0E36               	movlw	54
 26688  001704  ECD4  F03A         	call	_RADIO_RegisterWrite
 26689  001708                     l12589:
 26690                           
 26691                           ;radio_driver_SX1276.c: 685: }
 26692                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 26693  001708  0E09               	movlw	9
 26694  00170A  0101               	movlb	1	; () banked
 26695  00170C  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26696  00170E  E10F               	bnz	l12595
 26697                           
 26698                           ; BSR set to: 1
 26699  001710  0599               	decf	(_RadioConfiguration+32)& (0+255),w,b
 26700  001712  E10D               	bnz	l12595
 26701                           
 26702                           ; BSR set to: 1
 26703                           ;radio_driver_SX1276.c: 689: {
 26704                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 26705  001714  0E65               	movlw	101
 26706  001716  0100               	movlb	0	; () banked
 26707  001718  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26708  00171A  0E3A               	movlw	58
 26709  00171C  ECD4  F03A         	call	_RADIO_RegisterWrite
 26710                           
 26711                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 26712  001720  0E19               	movlw	25
 26713  001722  0100               	movlb	0	; () banked
 26714  001724  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26715  001726  0E3B               	movlw	59
 26716  001728  ECD4  F03A         	call	_RADIO_RegisterWrite
 26717                           
 26718                           ;radio_driver_SX1276.c: 692: }
 26719  00172C  D00C               	goto	l485
 26720  00172E                     l12595:
 26721                           
 26722                           ; BSR set to: 1
 26723                           ;radio_driver_SX1276.c: 693: else
 26724                           ;radio_driver_SX1276.c: 694: {
 26725                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 26726  00172E  0E65               	movlw	101
 26727  001730  0100               	movlb	0	; () banked
 26728  001732  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26729  001734  0E3A               	movlw	58
 26730  001736  ECD4  F03A         	call	_RADIO_RegisterWrite
 26731                           
 26732                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 26733  00173A  0E1D               	movlw	29
 26734  00173C  0100               	movlb	0	; () banked
 26735  00173E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26736  001740  0E3B               	movlw	59
 26737  001742  ECD4  F03A         	call	_RADIO_RegisterWrite
 26738  001746                     l485:
 26739                           
 26740                           ;radio_driver_SX1276.c: 697: }
 26741                           ;radio_driver_SX1276.c: 698: }
 26742                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 26743  001746  0100               	movlb	0	; () banked
 26744  001748  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 26745  00174A  0E12               	movlw	18
 26746  00174C  EFD4  F03A         	goto	_RADIO_RegisterWrite
 26747  001750                     l12597:
 26748                           
 26749                           ; BSR set to: 1
 26750                           ;radio_driver_SX1276.c: 703: else
 26751                           ;radio_driver_SX1276.c: 704: {
 26752                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 26753  001750  C17D  F071         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 26754  001754  C17E  F072         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 26755  001758  C17F  F073         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 26756  00175C  C180  F074         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 26757  001760  ECC3  F032         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 26758                           
 26759                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 26760  001764  C181  F071         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 26761  001768  C182  F072         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 26762  00176C  C183  F073         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 26763  001770  C184  F074         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 26764  001774  ECF5  F032         	call	_RADIO_WriteFSKBitRate	;wreg free
 26765                           
 26766                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 26767  001778  0101               	movlb	1	; () banked
 26768  00177A  5186               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26769  00177C  0100               	movlb	0	; () banked
 26770  00177E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26771  001780  0E25               	movlw	37
 26772  001782  ECD4  F03A         	call	_RADIO_RegisterWrite
 26773                           
 26774                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26775  001786  C185  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26776  00178A  0E26               	movlw	38
 26777  00178C  ECD4  F03A         	call	_RADIO_RegisterWrite
 26778                           
 26779                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 26780  001790  0E0A               	movlw	10
 26781  001792  ECEA  F039         	call	_RADIO_RegisterRead
 26782  001796  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26783                           
 26784                           ; BSR set to: 0
 26785                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 26786  001798  0E9F               	movlw	159
 26787  00179A  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26788                           
 26789                           ; BSR set to: 0
 26790                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 26791  00179C  0101               	movlb	1	; () banked
 26792  00179E  39AC               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 26793  0017A0  46E8               	rlncf	wreg,f,c
 26794  0017A2  0BE0               	andlw	224
 26795  0017A4  0100               	movlb	0	; () banked
 26796  0017A6  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26797                           
 26798                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 26799  0017A8  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26800  0017AC  0E0A               	movlw	10
 26801  0017AE  ECD4  F03A         	call	_RADIO_RegisterWrite
 26802                           
 26803                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 26804  0017B2  0EC8               	movlw	200
 26805  0017B4  0100               	movlb	0	; () banked
 26806  0017B6  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26807                           
 26808                           ; BSR set to: 0
 26809                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 26810  0017B8  0101               	movlb	1	; () banked
 26811  0017BA  5195               	movf	(_RadioConfiguration+28)& (0+255),w,b
 26812  0017BC  E002               	bz	l12609
 26813                           
 26814                           ; BSR set to: 1
 26815                           ;radio_driver_SX1276.c: 722: {
 26816                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 26817  0017BE  0100               	movlb	0	; () banked
 26818  0017C0  8986               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 26819  0017C2                     l12609:
 26820                           
 26821                           ;radio_driver_SX1276.c: 724: }
 26822                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 26823  0017C2  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26824  0017C6  0E30               	movlw	48
 26825  0017C8  ECD4  F03A         	call	_RADIO_RegisterWrite
 26826                           
 26827                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 26828  0017CC  0100               	movlb	0	; () banked
 26829  0017CE  6B81               	clrf	RADIO_WriteConfiguration@i& (0+255),b
 26830  0017D0  D00E               	goto	l12617
 26831  0017D2                     l12613:
 26832                           
 26833                           ; BSR set to: 0
 26834                           ;radio_driver_SX1276.c: 729: {
 26835                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 26836  0017D2  0E88               	movlw	low (_RadioConfiguration+15)
 26837  0017D4  2581               	addwf	RADIO_WriteConfiguration@i& (0+255),w,b
 26838  0017D6  6ED9               	movwf	fsr2l,c
 26839  0017D8  6ADA               	clrf	fsr2h,c
 26840  0017DA  0E01               	movlw	high (_RadioConfiguration+15)
 26841  0017DC  22DA               	addwfc	fsr2h,f,c
 26842  0017DE  50DF               	movf	indf2,w,c
 26843  0017E0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26844  0017E2  5181               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 26845  0017E4  0F28               	addlw	40
 26846  0017E6  ECD4  F03A         	call	_RADIO_RegisterWrite
 26847  0017EA  0100               	movlb	0	; () banked
 26848  0017EC  2B81               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 26849  0017EE                     l12617:
 26850                           
 26851                           ; BSR set to: 0
 26852  0017EE  0101               	movlb	1	; () banked
 26853  0017F0  5190               	movf	(_RadioConfiguration+23)& (0+255),w,b
 26854  0017F2  0100               	movlb	0	; () banked
 26855  0017F4  5D81               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 26856  0017F6  E3ED               	bnc	l12613
 26857                           
 26858                           ; BSR set to: 0
 26859                           ;radio_driver_SX1276.c: 733: }
 26860                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 26861  0017F8  0101               	movlb	1	; () banked
 26862  0017FA  5190               	movf	(_RadioConfiguration+23)& (0+255),w,b
 26863  0017FC  E008               	bz	l12623
 26864                           
 26865                           ; BSR set to: 1
 26866                           ;radio_driver_SX1276.c: 737: {
 26867                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 26868  0017FE  0590               	decf	(_RadioConfiguration+23)& (0+255),w,b
 26869  001800  0910               	iorlw	16
 26870  001802  0100               	movlb	0	; () banked
 26871  001804  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26872  001806  0E27               	movlw	39
 26873  001808  ECD4  F03A         	call	_RADIO_RegisterWrite
 26874                           
 26875                           ;radio_driver_SX1276.c: 739: }
 26876  00180C  D005               	goto	l498
 26877  00180E                     l12623:
 26878                           
 26879                           ; BSR set to: 1
 26880                           ;radio_driver_SX1276.c: 740: else
 26881                           ;radio_driver_SX1276.c: 741: {
 26882                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 26883  00180E  0100               	movlb	0	; () banked
 26884  001810  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26885  001812  0E27               	movlw	39
 26886  001814  ECD4  F03A         	call	_RADIO_RegisterWrite
 26887  001818                     l498:
 26888                           
 26889                           ;radio_driver_SX1276.c: 743: }
 26890                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 26891  001818  0100               	movlb	0	; () banked
 26892  00181A  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 26893  00181C  0E3E               	movlw	62
 26894  00181E  ECD4  F03A         	call	_RADIO_RegisterWrite
 26895                           
 26896                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 26897  001822  0100               	movlb	0	; () banked
 26898  001824  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 26899  001826  0E3F               	movlw	63
 26900  001828  EFD4  F03A         	goto	_RADIO_RegisterWrite
 26901  00182C                     __end_of_RADIO_WriteConfiguration:
 26902                           	opt stack 0
 26903                           tosu	equ	0xFFF
 26904                           tosh	equ	0xFFE
 26905                           tosl	equ	0xFFD
 26906                           pclath	equ	0xFFA
 26907                           tblptru	equ	0xFF8
 26908                           tblptrh	equ	0xFF7
 26909                           tblptrl	equ	0xFF6
 26910                           tablat	equ	0xFF5
 26911                           prodh	equ	0xFF4
 26912                           prodl	equ	0xFF3
 26913                           intcon	equ	0xFF2
 26914                           indf0	equ	0xFEF
 26915                           postinc0	equ	0xFEE
 26916                           fsr0h	equ	0xFEA
 26917                           fsr0l	equ	0xFE9
 26918                           wreg	equ	0xFE8
 26919                           postinc1	equ	0xFE6
 26920                           postdec1	equ	0xFE5
 26921                           plusw1	equ	0xFE3
 26922                           fsr1h	equ	0xFE2
 26923                           fsr1l	equ	0xFE1
 26924                           indf2	equ	0xFDF
 26925                           postinc2	equ	0xFDE
 26926                           postdec2	equ	0xFDD
 26927                           plusw2	equ	0xFDB
 26928                           fsr2h	equ	0xFDA
 26929                           fsr2l	equ	0xFD9
 26930                           status	equ	0xFD8
 26931                           
 26932 ;; *************** function _RADIO_WritePower *****************
 26933 ;; Defined at:
 26934 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26935 ;; Parameters:    Size  Location     Type
 26936 ;;  power           1    wreg     char 
 26937 ;; Auto vars:     Size  Location     Type
 26938 ;;  power           1   10[BANK0 ] char 
 26939 ;;  paDac           1    9[BANK0 ] unsigned char 
 26940 ;;  ocp             1    8[BANK0 ] unsigned char 
 26941 ;; Return value:  Size  Location     Type
 26942 ;;                  1    wreg      void 
 26943 ;; Registers used:
 26944 ;;		wreg, status,2, status,0, cstack
 26945 ;; Tracked objects:
 26946 ;;		On entry : F/1
 26947 ;;		On exit  : 1/0
 26948 ;;		Unchanged: 0/0
 26949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26950 ;;      Params:         0       0       0       0       0       0       0       0       0
 26951 ;;      Locals:         0       3       0       0       0       0       0       0       0
 26952 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26953 ;;      Totals:         0       3       0       0       0       0       0       0       0
 26954 ;;Total ram usage:        3 bytes
 26955 ;; Hardware stack levels used:    1
 26956 ;; Hardware stack levels required when called:   10
 26957 ;; This function calls:
 26958 ;;		_RADIO_RegisterRead
 26959 ;;		_RADIO_RegisterWrite
 26960 ;; This function is called by:
 26961 ;;		_RADIO_WriteConfiguration
 26962 ;; This function uses a non-reentrant model
 26963 ;;
 26964                           
 26965                           	psect	text140
 26966  0053A4                     __ptext140:
 26967                           	opt stack 0
 26968  0053A4                     _RADIO_WritePower:
 26969                           	opt stack 16
 26970                           
 26971                           ;incstack = 0
 26972                           ;RADIO_WritePower@power stored from wreg
 26973  0053A4  0100               	movlb	0	; () banked
 26974  0053A6  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 26975                           
 26976                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 26977                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 26978                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 26979  0053A8  0101               	movlb	1	; () banked
 26980  0053AA  5196               	movf	(_RadioConfiguration+29)& (0+255),w,b
 26981  0053AC  E127               	bnz	l12311
 26982                           
 26983                           ; BSR set to: 1
 26984                           ;radio_driver_SX1276.c: 348: {
 26985                           ;radio_driver_SX1276.c: 350: if (power < -3)
 26986  0053AE  0100               	movlb	0	; () banked
 26987  0053B0  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 26988  0053B2  0A80               	xorlw	128
 26989  0053B4  0F83               	addlw	131
 26990  0053B6  E202               	bc	l12291
 26991                           
 26992                           ; BSR set to: 0
 26993                           ;radio_driver_SX1276.c: 351: {
 26994                           ;radio_driver_SX1276.c: 352: power = -3;
 26995  0053B8  0EFD               	movlw	253
 26996  0053BA  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 26997  0053BC                     l12291:
 26998                           
 26999                           ; BSR set to: 0
 27000                           ;radio_driver_SX1276.c: 353: }
 27001                           ;radio_driver_SX1276.c: 354: if (power > 15)
 27002  0053BC  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27003  0053BE  0A80               	xorlw	128
 27004  0053C0  0F70               	addlw	-144
 27005  0053C2  E302               	bnc	l12295
 27006                           
 27007                           ; BSR set to: 0
 27008                           ;radio_driver_SX1276.c: 355: {
 27009                           ;radio_driver_SX1276.c: 356: power = 15;
 27010  0053C4  0E0F               	movlw	15
 27011  0053C6  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27012  0053C8                     l12295:
 27013                           
 27014                           ; BSR set to: 0
 27015                           ;radio_driver_SX1276.c: 357: }
 27016                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 27017  0053C8  0E4D               	movlw	77
 27018  0053CA  ECEA  F039         	call	_RADIO_RegisterRead
 27019  0053CE  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27020                           
 27021                           ; BSR set to: 0
 27022                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 27023  0053D0  0EF8               	movlw	248
 27024  0053D2  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27025                           
 27026                           ; BSR set to: 0
 27027                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 27028  0053D4  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27029                           
 27030                           ; BSR set to: 0
 27031                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 27032  0053D6  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27033  0053DA  0E4D               	movlw	77
 27034  0053DC  ECD4  F03A         	call	_RADIO_RegisterWrite
 27035                           
 27036                           ;radio_driver_SX1276.c: 364: if (power < 0)
 27037  0053E0  0100               	movlb	0	; () banked
 27038  0053E2  AF6A               	btfss	RADIO_WritePower@power& (0+255),7,b
 27039  0053E4  D005               	goto	l12309
 27040                           
 27041                           ; BSR set to: 0
 27042                           ;radio_driver_SX1276.c: 365: {
 27043                           ;radio_driver_SX1276.c: 369: power += 3;
 27044  0053E6  0E03               	movlw	3
 27045  0053E8  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27046                           
 27047                           ; BSR set to: 0
 27048                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 27049  0053EA  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27050  0053EC  0920               	iorlw	32
 27051  0053EE  D002               	goto	L19
 27052  0053F0                     l12309:
 27053                           
 27054                           ; BSR set to: 0
 27055                           ;radio_driver_SX1276.c: 372: else
 27056                           ;radio_driver_SX1276.c: 373: {
 27057                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 27058  0053F0  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27059  0053F2  0970               	iorlw	112
 27060  0053F4                     L19:
 27061  0053F4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27062  0053F6  0E09               	movlw	9
 27063  0053F8  EFD4  F03A         	goto	_RADIO_RegisterWrite
 27064  0053FC                     l12311:
 27065                           
 27066                           ; BSR set to: 1
 27067                           ;radio_driver_SX1276.c: 380: else
 27068                           ;radio_driver_SX1276.c: 381: {
 27069                           ;radio_driver_SX1276.c: 385: if (power < 2)
 27070  0053FC  0100               	movlb	0	; () banked
 27071  0053FE  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27072  005400  0A80               	xorlw	128
 27073  005402  0F7E               	addlw	-130
 27074  005404  E202               	bc	l12315
 27075                           
 27076                           ; BSR set to: 0
 27077                           ;radio_driver_SX1276.c: 386: {
 27078                           ;radio_driver_SX1276.c: 387: power = 2;
 27079  005406  0E02               	movlw	2
 27080  005408  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27081  00540A                     l12315:
 27082                           
 27083                           ; BSR set to: 0
 27084                           ;radio_driver_SX1276.c: 388: }
 27085                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 27086  00540A  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27087  00540C  0A80               	xorlw	128
 27088  00540E  0F6C               	addlw	-148
 27089  005410  E302               	bnc	l12319
 27090                           
 27091                           ; BSR set to: 0
 27092                           ;radio_driver_SX1276.c: 392: {
 27093                           ;radio_driver_SX1276.c: 393: power = 20;
 27094  005412  0E14               	movlw	20
 27095  005414  D005               	goto	L18
 27096  005416                     l12319:
 27097                           
 27098                           ; BSR set to: 0
 27099                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 27100  005416  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27101  005418  0A80               	xorlw	128
 27102  00541A  0F6E               	addlw	-146
 27103  00541C  E302               	bnc	l12323
 27104                           
 27105                           ; BSR set to: 0
 27106                           ;radio_driver_SX1276.c: 396: {
 27107                           ;radio_driver_SX1276.c: 397: power = 17;
 27108  00541E  0E11               	movlw	17
 27109  005420                     L18:
 27110  005420  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27111  005422                     l12323:
 27112                           
 27113                           ; BSR set to: 0
 27114                           ;radio_driver_SX1276.c: 398: }
 27115                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 27116  005422  0E0B               	movlw	11
 27117  005424  ECEA  F039         	call	_RADIO_RegisterRead
 27118  005428  6F68               	movwf	RADIO_WritePower@ocp& (0+255),b
 27119                           
 27120                           ; BSR set to: 0
 27121                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 27122  00542A  0E4D               	movlw	77
 27123  00542C  ECEA  F039         	call	_RADIO_RegisterRead
 27124  005430  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27125                           
 27126                           ; BSR set to: 0
 27127                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 27128  005432  0EF8               	movlw	248
 27129  005434  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27130                           
 27131                           ; BSR set to: 0
 27132                           ;radio_driver_SX1276.c: 403: if (power == 20)
 27133  005436  0E14               	movlw	20
 27134  005438  196A               	xorwf	RADIO_WritePower@power& (0+255),w,b
 27135  00543A  E106               	bnz	l12337
 27136                           
 27137                           ; BSR set to: 0
 27138                           ;radio_driver_SX1276.c: 404: {
 27139                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 27140  00543C  0E07               	movlw	7
 27141  00543E  1369               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 27142                           
 27143                           ; BSR set to: 0
 27144                           ;radio_driver_SX1276.c: 406: power = 15;
 27145  005440  0E0F               	movlw	15
 27146  005442  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27147                           
 27148                           ; BSR set to: 0
 27149                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 27150  005444  9B68               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 27151                           
 27152                           ;radio_driver_SX1276.c: 408: }
 27153  005446  D004               	goto	l12343
 27154  005448                     l12337:
 27155                           
 27156                           ; BSR set to: 0
 27157                           ;radio_driver_SX1276.c: 409: else
 27158                           ;radio_driver_SX1276.c: 410: {
 27159                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 27160  005448  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27161                           
 27162                           ; BSR set to: 0
 27163                           ;radio_driver_SX1276.c: 412: power -= 2;
 27164  00544A  0EFE               	movlw	254
 27165  00544C  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27166                           
 27167                           ; BSR set to: 0
 27168                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 27169  00544E  8B68               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 27170  005450                     l12343:
 27171                           
 27172                           ; BSR set to: 0
 27173                           ;radio_driver_SX1276.c: 414: }
 27174                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 27175  005450  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27176  005454  0E4D               	movlw	77
 27177  005456  ECD4  F03A         	call	_RADIO_RegisterWrite
 27178                           
 27179                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 27180  00545A  0100               	movlb	0	; () banked
 27181  00545C  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27182  00545E  0980               	iorlw	128
 27183  005460  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27184  005462  0E09               	movlw	9
 27185  005464  ECD4  F03A         	call	_RADIO_RegisterWrite
 27186                           
 27187                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 27188  005468  C068  F066         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 27189  00546C  0E0B               	movlw	11
 27190  00546E  EFD4  F03A         	goto	_RADIO_RegisterWrite
 27191  005472                     __end_of_RADIO_WritePower:
 27192                           	opt stack 0
 27193                           tosu	equ	0xFFF
 27194                           tosh	equ	0xFFE
 27195                           tosl	equ	0xFFD
 27196                           pclath	equ	0xFFA
 27197                           tblptru	equ	0xFF8
 27198                           tblptrh	equ	0xFF7
 27199                           tblptrl	equ	0xFF6
 27200                           tablat	equ	0xFF5
 27201                           prodh	equ	0xFF4
 27202                           prodl	equ	0xFF3
 27203                           intcon	equ	0xFF2
 27204                           indf0	equ	0xFEF
 27205                           postinc0	equ	0xFEE
 27206                           fsr0h	equ	0xFEA
 27207                           fsr0l	equ	0xFE9
 27208                           wreg	equ	0xFE8
 27209                           postinc1	equ	0xFE6
 27210                           postdec1	equ	0xFE5
 27211                           plusw1	equ	0xFE3
 27212                           fsr1h	equ	0xFE2
 27213                           fsr1l	equ	0xFE1
 27214                           indf2	equ	0xFDF
 27215                           postinc2	equ	0xFDE
 27216                           postdec2	equ	0xFDD
 27217                           plusw2	equ	0xFDB
 27218                           fsr2h	equ	0xFDA
 27219                           fsr2l	equ	0xFD9
 27220                           status	equ	0xFD8
 27221                           
 27222 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 27223 ;; Defined at:
 27224 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27225 ;; Parameters:    Size  Location     Type
 27226 ;;  frequencyDev    4   17[BANK0 ] unsigned long 
 27227 ;; Auto vars:     Size  Location     Type
 27228 ;;  num             4   21[BANK0 ] unsigned long 
 27229 ;; Return value:  Size  Location     Type
 27230 ;;                  1    wreg      void 
 27231 ;; Registers used:
 27232 ;;		wreg, status,2, status,0, cstack
 27233 ;; Tracked objects:
 27234 ;;		On entry : F/1
 27235 ;;		On exit  : 1/0
 27236 ;;		Unchanged: 0/0
 27237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27238 ;;      Params:         0       4       0       0       0       0       0       0       0
 27239 ;;      Locals:         0       4       0       0       0       0       0       0       0
 27240 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27241 ;;      Totals:         0       8       0       0       0       0       0       0       0
 27242 ;;Total ram usage:        8 bytes
 27243 ;; Hardware stack levels used:    1
 27244 ;; Hardware stack levels required when called:   10
 27245 ;; This function calls:
 27246 ;;		_RADIO_RegisterWrite
 27247 ;;		___lldiv
 27248 ;; This function is called by:
 27249 ;;		_RADIO_WriteConfiguration
 27250 ;; This function uses a non-reentrant model
 27251 ;;
 27252                           
 27253                           	psect	text141
 27254  006586                     __ptext141:
 27255                           	opt stack 0
 27256  006586                     _RADIO_WriteFSKFrequencyDeviation:
 27257                           	opt stack 16
 27258                           
 27259                           ; BSR set to: 1
 27260                           ;radio_driver_SX1276.c: 296: uint32_t num;
 27261                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 27262                           
 27263                           ;incstack = 0
 27264  006586  C071  F075         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 27265  00658A  C072  F076         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 27266  00658E  C073  F077         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 27267  006592  C074  F078         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 27268                           
 27269                           ; BSR set to: 1
 27270                           ;radio_driver_SX1276.c: 304: num <<= (8);
 27271  006596  C077  F078         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 27272  00659A  C076  F077         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 27273  00659E  C075  F076         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 27274  0065A2  0100               	movlb	0	; () banked
 27275  0065A4  6B75               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 27276                           
 27277                           ; BSR set to: 0
 27278                           ;radio_driver_SX1276.c: 305: num /= 15625;
 27279  0065A6  C075  F064         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 27280  0065AA  C076  F065         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 27281  0065AE  C077  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 27282  0065B2  C078  F067         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 27283  0065B6  0E09               	movlw	9
 27284  0065B8  6F68               	movwf	___lldiv@divisor& (0+255),b
 27285  0065BA  0E3D               	movlw	61
 27286  0065BC  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27287  0065BE  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 27288  0065C0  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 27289  0065C2  ECAA  F030         	call	___lldiv	;wreg free
 27290  0065C6  C064  F075         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 27291  0065CA  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 27292  0065CE  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 27293  0065D2  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 27294                           
 27295                           ; BSR set to: 0
 27296                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 27297  0065D6  C076  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 27298  0065DA  0E04               	movlw	4
 27299  0065DC  ECD4  F03A         	call	_RADIO_RegisterWrite
 27300                           
 27301                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 27302  0065E0  C075  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 27303  0065E4  0E05               	movlw	5
 27304  0065E6  EFD4  F03A         	goto	_RADIO_RegisterWrite
 27305  0065EA                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 27306                           	opt stack 0
 27307                           tosu	equ	0xFFF
 27308                           tosh	equ	0xFFE
 27309                           tosl	equ	0xFFD
 27310                           pclath	equ	0xFFA
 27311                           tblptru	equ	0xFF8
 27312                           tblptrh	equ	0xFF7
 27313                           tblptrl	equ	0xFF6
 27314                           tablat	equ	0xFF5
 27315                           prodh	equ	0xFF4
 27316                           prodl	equ	0xFF3
 27317                           intcon	equ	0xFF2
 27318                           indf0	equ	0xFEF
 27319                           postinc0	equ	0xFEE
 27320                           fsr0h	equ	0xFEA
 27321                           fsr0l	equ	0xFE9
 27322                           wreg	equ	0xFE8
 27323                           postinc1	equ	0xFE6
 27324                           postdec1	equ	0xFE5
 27325                           plusw1	equ	0xFE3
 27326                           fsr1h	equ	0xFE2
 27327                           fsr1l	equ	0xFE1
 27328                           indf2	equ	0xFDF
 27329                           postinc2	equ	0xFDE
 27330                           postdec2	equ	0xFDD
 27331                           plusw2	equ	0xFDB
 27332                           fsr2h	equ	0xFDA
 27333                           fsr2l	equ	0xFD9
 27334                           status	equ	0xFD8
 27335                           
 27336 ;; *************** function _RADIO_WriteFSKBitRate *****************
 27337 ;; Defined at:
 27338 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27339 ;; Parameters:    Size  Location     Type
 27340 ;;  bitRate         4   17[BANK0 ] unsigned long 
 27341 ;; Auto vars:     Size  Location     Type
 27342 ;;  num             4   21[BANK0 ] unsigned long 
 27343 ;; Return value:  Size  Location     Type
 27344 ;;                  1    wreg      void 
 27345 ;; Registers used:
 27346 ;;		wreg, status,2, status,0, cstack
 27347 ;; Tracked objects:
 27348 ;;		On entry : 1/0
 27349 ;;		On exit  : 1/0
 27350 ;;		Unchanged: 0/0
 27351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27352 ;;      Params:         0       4       0       0       0       0       0       0       0
 27353 ;;      Locals:         0       4       0       0       0       0       0       0       0
 27354 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27355 ;;      Totals:         0       8       0       0       0       0       0       0       0
 27356 ;;Total ram usage:        8 bytes
 27357 ;; Hardware stack levels used:    1
 27358 ;; Hardware stack levels required when called:   10
 27359 ;; This function calls:
 27360 ;;		_RADIO_RegisterWrite
 27361 ;;		___lldiv
 27362 ;; This function is called by:
 27363 ;;		_RADIO_WriteConfiguration
 27364 ;; This function uses a non-reentrant model
 27365 ;;
 27366                           
 27367                           	psect	text142
 27368  0065EA                     __ptext142:
 27369                           	opt stack 0
 27370  0065EA                     _RADIO_WriteFSKBitRate:
 27371                           	opt stack 16
 27372                           
 27373                           ;radio_driver_SX1276.c: 318: uint32_t num;
 27374                           ;radio_driver_SX1276.c: 320: num = 32000000;
 27375                           
 27376                           ;incstack = 0
 27377  0065EA  0100               	movlb	0	; () banked
 27378  0065EC  6B75               	clrf	RADIO_WriteFSKBitRate@num& (0+255),b
 27379  0065EE  0E48               	movlw	72
 27380  0065F0  6F76               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 27381  0065F2  0EE8               	movlw	232
 27382  0065F4  6F77               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 27383  0065F6  0E01               	movlw	1
 27384  0065F8  6F78               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 27385                           
 27386                           ; BSR set to: 0
 27387                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 27388  0065FA  C075  F064         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 27389  0065FE  C076  F065         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 27390  006602  C077  F066         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 27391  006606  C078  F067         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 27392  00660A  C071  F068         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 27393  00660E  C072  F069         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 27394  006612  C073  F06A         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 27395  006616  C074  F06B         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 27396  00661A  ECAA  F030         	call	___lldiv	;wreg free
 27397  00661E  C064  F075         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 27398  006622  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 27399  006626  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 27400  00662A  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 27401                           
 27402                           ; BSR set to: 0
 27403                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 27404  00662E  C076  F066         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 27405  006632  0E02               	movlw	2
 27406  006634  ECD4  F03A         	call	_RADIO_RegisterWrite
 27407                           
 27408                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 27409  006638  C075  F066         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 27410  00663C  0E03               	movlw	3
 27411  00663E  ECD4  F03A         	call	_RADIO_RegisterWrite
 27412                           
 27413                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 27414  006642  0100               	movlb	0	; () banked
 27415  006644  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27416  006646  0E5D               	movlw	93
 27417  006648  EFD4  F03A         	goto	_RADIO_RegisterWrite
 27418  00664C                     __end_of_RADIO_WriteFSKBitRate:
 27419                           	opt stack 0
 27420                           tosu	equ	0xFFF
 27421                           tosh	equ	0xFFE
 27422                           tosl	equ	0xFFD
 27423                           pclath	equ	0xFFA
 27424                           tblptru	equ	0xFF8
 27425                           tblptrh	equ	0xFF7
 27426                           tblptrl	equ	0xFF6
 27427                           tablat	equ	0xFF5
 27428                           prodh	equ	0xFF4
 27429                           prodl	equ	0xFF3
 27430                           intcon	equ	0xFF2
 27431                           indf0	equ	0xFEF
 27432                           postinc0	equ	0xFEE
 27433                           fsr0h	equ	0xFEA
 27434                           fsr0l	equ	0xFE9
 27435                           wreg	equ	0xFE8
 27436                           postinc1	equ	0xFE6
 27437                           postdec1	equ	0xFE5
 27438                           plusw1	equ	0xFE3
 27439                           fsr1h	equ	0xFE2
 27440                           fsr1l	equ	0xFE1
 27441                           indf2	equ	0xFDF
 27442                           postinc2	equ	0xFDE
 27443                           postdec2	equ	0xFDD
 27444                           plusw2	equ	0xFDB
 27445                           fsr2h	equ	0xFDA
 27446                           fsr2l	equ	0xFD9
 27447                           status	equ	0xFD8
 27448                           
 27449 ;; *************** function _PrepareJoinRequestFrame *****************
 27450 ;; Defined at:
 27451 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27452 ;; Parameters:    Size  Location     Type
 27453 ;;		None
 27454 ;; Auto vars:     Size  Location     Type
 27455 ;;  mic             4  133[BANK0 ] unsigned long 
 27456 ;;  iCtr            1  139[BANK0 ] unsigned char 
 27457 ;;  bufferIndex     1  138[BANK0 ] unsigned char 
 27458 ;;  mhdr            1  137[BANK0 ] struct .
 27459 ;; Return value:  Size  Location     Type
 27460 ;;                  1    wreg      unsigned char 
 27461 ;; Registers used:
 27462 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27463 ;; Tracked objects:
 27464 ;;		On entry : F/2
 27465 ;;		On exit  : F/0
 27466 ;;		Unchanged: 0/0
 27467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27468 ;;      Params:         0       0       0       0       0       0       0       0       0
 27469 ;;      Locals:         0       7       0       0       0       0       0       0       0
 27470 ;;      Temps:          0       2       0       0       0       0       0       0       0
 27471 ;;      Totals:         0       9       0       0       0       0       0       0       0
 27472 ;;Total ram usage:        9 bytes
 27473 ;; Hardware stack levels used:    1
 27474 ;; Hardware stack levels required when called:   13
 27475 ;; This function calls:
 27476 ;;		_ComputeMic
 27477 ;;		_Random
 27478 ;;		_memcpy
 27479 ;;		_memset
 27480 ;; This function is called by:
 27481 ;;		_LORAWAN_Join
 27482 ;; This function uses a non-reentrant model
 27483 ;;
 27484                           
 27485                           	psect	text143
 27486  004686                     __ptext143:
 27487                           	opt stack 0
 27488  004686                     _PrepareJoinRequestFrame:
 27489                           	opt stack 16
 27490                           
 27491                           ; BSR set to: 2
 27492                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 27493                           
 27494                           ;incstack = 0
 27495  004686  0100               	movlb	0	; () banked
 27496  004688  6BEA               	clrf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27497                           
 27498                           ; BSR set to: 0
 27499                           ;lorawan.c: 1809: Mhdr_t mhdr;
 27500                           ;lorawan.c: 1810: uint32_t mic;
 27501                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 27502  00468A  0EE0               	movlw	low _macBuffer
 27503  00468C  6F64               	movwf	memset@p1& (0+255),b
 27504  00468E  0E04               	movlw	high _macBuffer
 27505  004690  6F65               	movwf	(memset@p1+1)& (0+255),b
 27506  004692  6B67               	clrf	(memset@c+1)& (0+255),b
 27507  004694  6B66               	clrf	memset@c& (0+255),b
 27508  004696  0E01               	movlw	1
 27509  004698  6F69               	movwf	(memset@n+1)& (0+255),b
 27510  00469A  0E0F               	movlw	15
 27511  00469C  6F68               	movwf	memset@n& (0+255),b
 27512  00469E  EC9A  F039         	call	_memset	;wreg free
 27513                           
 27514                           ; BSR set to: 0
 27515                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 27516  0046A2  0E1F               	movlw	-225
 27517  0046A4  17E9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27518                           
 27519                           ; BSR set to: 0
 27520                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 27521  0046A6  0EFC               	movlw	-4
 27522  0046A8  17E9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27523                           
 27524                           ; BSR set to: 0
 27525                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 27526  0046AA  0EE3               	movlw	-29
 27527  0046AC  17E9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27528                           
 27529                           ; BSR set to: 0
 27530                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 27531  0046AE  EE24  F0E0         	lfsr	2,_macBuffer
 27532  0046B2  C0E9  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 27533                           
 27534                           ; BSR set to: 0
 27535  0046B6  2BEA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27536                           
 27537                           ; BSR set to: 0
 27538                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 27539  0046B8  6BEB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27540  0046BA                     l15743:
 27541                           
 27542                           ; BSR set to: 0
 27543                           ;lorawan.c: 1821: {
 27544                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 27545  0046BA  51EB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27546  0046BC  0859               	sublw	low (_loRa+89)
 27547  0046BE  6ED9               	movwf	fsr2l,c
 27548  0046C0  0E00               	movlw	0
 27549  0046C2  A0D8               	btfss	status,0,c
 27550  0046C4  2AE8               	incf	wreg,f,c
 27551  0046C6  0802               	sublw	high (_loRa+89)
 27552  0046C8  6EDA               	movwf	fsr2h,c
 27553  0046CA  0EE0               	movlw	low _macBuffer
 27554  0046CC  6FE3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27555  0046CE  0E04               	movlw	high _macBuffer
 27556  0046D0  6FE4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27557  0046D2  51EA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27558  0046D4  27E3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27559  0046D6  0E00               	movlw	0
 27560  0046D8  23E4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27561  0046DA  51EB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27562  0046DC  25E3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27563  0046DE  6EE9               	movwf	fsr0l,c
 27564  0046E0  0E00               	movlw	0
 27565  0046E2  21E4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27566  0046E4  6EEA               	movwf	fsr0h,c
 27567  0046E6  CFDF FFEF          	movff	indf2,indf0
 27568                           
 27569                           ; BSR set to: 0
 27570  0046EA  2BEB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27571                           
 27572                           ; BSR set to: 0
 27573  0046EC  0E07               	movlw	7
 27574  0046EE  65EB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27575  0046F0  D7E4               	goto	l15743
 27576                           
 27577                           ; BSR set to: 0
 27578                           ;lorawan.c: 1823: }
 27579                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 27580  0046F2  0E08               	movlw	8
 27581  0046F4  27EA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27582                           
 27583                           ; BSR set to: 0
 27584                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 27585  0046F6  6BEB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27586  0046F8                     l15755:
 27587                           
 27588                           ; BSR set to: 0
 27589                           ;lorawan.c: 1828: {
 27590                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 27591  0046F8  51EB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27592  0046FA  0861               	sublw	low (_loRa+97)
 27593  0046FC  6ED9               	movwf	fsr2l,c
 27594  0046FE  0E00               	movlw	0
 27595  004700  A0D8               	btfss	status,0,c
 27596  004702  2AE8               	incf	wreg,f,c
 27597  004704  0802               	sublw	high (_loRa+97)
 27598  004706  6EDA               	movwf	fsr2h,c
 27599  004708  0EE0               	movlw	low _macBuffer
 27600  00470A  6FE3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27601  00470C  0E04               	movlw	high _macBuffer
 27602  00470E  6FE4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27603  004710  51EA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27604  004712  27E3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27605  004714  0E00               	movlw	0
 27606  004716  23E4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27607  004718  51EB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27608  00471A  25E3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27609  00471C  6EE9               	movwf	fsr0l,c
 27610  00471E  0E00               	movlw	0
 27611  004720  21E4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27612  004722  6EEA               	movwf	fsr0h,c
 27613  004724  CFDF FFEF          	movff	indf2,indf0
 27614                           
 27615                           ; BSR set to: 0
 27616  004728  2BEB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27617                           
 27618                           ; BSR set to: 0
 27619  00472A  0E07               	movlw	7
 27620  00472C  65EB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27621  00472E  D7E4               	goto	l15755
 27622                           
 27623                           ; BSR set to: 0
 27624                           ;lorawan.c: 1830: }
 27625                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 27626  004730  0E08               	movlw	8
 27627  004732  27EA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27628                           
 27629                           ; BSR set to: 0
 27630                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 27631  004734  6978               	setf	(Random@max+1)& (0+255),b
 27632  004736  6977               	setf	Random@max& (0+255),b
 27633  004738  EC56  F03A         	call	_Random	;wreg free
 27634  00473C  C077  F2D2         	movff	?_Random,_loRa+210
 27635  004740  C078  F2D3         	movff	?_Random+1,_loRa+211
 27636                           
 27637                           ; BSR set to: 0
 27638                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 27639  004744  0EE0               	movlw	low _macBuffer
 27640  004746  25EA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27641  004748  6F64               	movwf	memcpy@d1& (0+255),b
 27642  00474A  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 27643  00474C  0E04               	movlw	high _macBuffer
 27644  00474E  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 27645  004750  0ED2               	movlw	low (_loRa+210)
 27646  004752  6F66               	movwf	memcpy@s1& (0+255),b
 27647  004754  0E02               	movlw	high (_loRa+210)
 27648  004756  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 27649  004758  6B69               	clrf	(memcpy@n+1)& (0+255),b
 27650  00475A  0E02               	movlw	2
 27651  00475C  6F68               	movwf	memcpy@n& (0+255),b
 27652  00475E  EC6A  F034         	call	_memcpy	;wreg free
 27653                           
 27654                           ; BSR set to: 0
 27655                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 27656  004762  0E02               	movlw	2
 27657  004764  27EA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27658                           
 27659                           ; BSR set to: 0
 27660                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 27661  004766  0E42               	movlw	low (_loRa+66)
 27662  004768  6FDA               	movwf	ComputeMic@key& (0+255),b
 27663  00476A  0E02               	movlw	high (_loRa+66)
 27664  00476C  6FDB               	movwf	(ComputeMic@key+1)& (0+255),b
 27665  00476E  0EE0               	movlw	low _macBuffer
 27666  004770  6FDC               	movwf	ComputeMic@buffer& (0+255),b
 27667  004772  0E04               	movlw	high _macBuffer
 27668  004774  6FDD               	movwf	(ComputeMic@buffer+1)& (0+255),b
 27669  004776  C0EA  F0DE         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 27670  00477A  ECBE  F034         	call	_ComputeMic	;wreg free
 27671  00477E  C0DA  F0E5         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 27672  004782  C0DB  F0E6         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 27673  004786  C0DC  F0E7         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 27674  00478A  C0DD  F0E8         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 27675                           
 27676                           ; BSR set to: 0
 27677                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 27678  00478E  0EE0               	movlw	low _macBuffer
 27679  004790  25EA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27680  004792  6F64               	movwf	memcpy@d1& (0+255),b
 27681  004794  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 27682  004796  0E04               	movlw	high _macBuffer
 27683  004798  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 27684  00479A  0EE5               	movlw	low PrepareJoinRequestFrame@mic
 27685  00479C  6F66               	movwf	memcpy@s1& (0+255),b
 27686  00479E  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 27687  0047A0  6B69               	clrf	(memcpy@n+1)& (0+255),b
 27688  0047A2  0E04               	movlw	4
 27689  0047A4  6F68               	movwf	memcpy@n& (0+255),b
 27690  0047A6  EC6A  F034         	call	_memcpy	;wreg free
 27691                           
 27692                           ; BSR set to: 0
 27693                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 27694  0047AA  0E04               	movlw	4
 27695  0047AC  27EA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27696                           
 27697                           ; BSR set to: 0
 27698                           ;lorawan.c: 1842: return bufferIndex;
 27699  0047AE  51EA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27700                           
 27701                           ; BSR set to: 0
 27702  0047B0  0012               	return		;funcret
 27703  0047B2                     __end_of_PrepareJoinRequestFrame:
 27704                           	opt stack 0
 27705                           tosu	equ	0xFFF
 27706                           tosh	equ	0xFFE
 27707                           tosl	equ	0xFFD
 27708                           pclath	equ	0xFFA
 27709                           tblptru	equ	0xFF8
 27710                           tblptrh	equ	0xFF7
 27711                           tblptrl	equ	0xFF6
 27712                           tablat	equ	0xFF5
 27713                           prodh	equ	0xFF4
 27714                           prodl	equ	0xFF3
 27715                           intcon	equ	0xFF2
 27716                           indf0	equ	0xFEF
 27717                           postinc0	equ	0xFEE
 27718                           fsr0h	equ	0xFEA
 27719                           fsr0l	equ	0xFE9
 27720                           wreg	equ	0xFE8
 27721                           postinc1	equ	0xFE6
 27722                           postdec1	equ	0xFE5
 27723                           plusw1	equ	0xFE3
 27724                           fsr1h	equ	0xFE2
 27725                           fsr1l	equ	0xFE1
 27726                           indf2	equ	0xFDF
 27727                           postinc2	equ	0xFDE
 27728                           postdec2	equ	0xFDD
 27729                           plusw2	equ	0xFDB
 27730                           fsr2h	equ	0xFDA
 27731                           fsr2l	equ	0xFD9
 27732                           status	equ	0xFD8
 27733                           
 27734 ;; *************** function _Random *****************
 27735 ;; Defined at:
 27736 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27737 ;; Parameters:    Size  Location     Type
 27738 ;;  max             2   23[BANK0 ] unsigned int 
 27739 ;; Auto vars:     Size  Location     Type
 27740 ;;		None
 27741 ;; Return value:  Size  Location     Type
 27742 ;;                  2   23[BANK0 ] unsigned int 
 27743 ;; Registers used:
 27744 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27745 ;; Tracked objects:
 27746 ;;		On entry : F/0
 27747 ;;		On exit  : F/0
 27748 ;;		Unchanged: 0/0
 27749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27750 ;;      Params:         0       2       0       0       0       0       0       0       0
 27751 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27752 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27753 ;;      Totals:         0       2       0       0       0       0       0       0       0
 27754 ;;Total ram usage:        2 bytes
 27755 ;; Hardware stack levels used:    1
 27756 ;; Hardware stack levels required when called:    9
 27757 ;; This function calls:
 27758 ;;		___lwmod
 27759 ;;		_rand
 27760 ;; This function is called by:
 27761 ;;		_SearchAvailableChannel
 27762 ;;		_PrepareJoinRequestFrame
 27763 ;; This function uses a non-reentrant model
 27764 ;;
 27765                           
 27766                           	psect	text144
 27767  0074AC                     __ptext144:
 27768                           	opt stack 0
 27769  0074AC                     _Random:
 27770                           	opt stack 17
 27771                           
 27772                           ; BSR set to: 0
 27773                           ;lorawan.c: 1118: return (rand () % max);
 27774                           
 27775                           ; BSR set to: 0
 27776                           ;incstack = 0
 27777  0074AC  EC37  F035         	call	_rand	;wreg free
 27778  0074B0  C070  F072         	movff	?_rand,___lwmod@dividend
 27779  0074B4  C071  F073         	movff	?_rand+1,___lwmod@dividend+1
 27780  0074B8  C077  F074         	movff	Random@max,___lwmod@divisor
 27781  0074BC  C078  F075         	movff	Random@max+1,___lwmod@divisor+1
 27782  0074C0  EC45  F037         	call	___lwmod	;wreg free
 27783  0074C4  C072  F077         	movff	?___lwmod,?_Random
 27784  0074C8  C073  F078         	movff	?___lwmod+1,?_Random+1
 27785                           
 27786                           ; BSR set to: 0
 27787  0074CC  0012               	return		;funcret
 27788  0074CE                     __end_of_Random:
 27789                           	opt stack 0
 27790                           tosu	equ	0xFFF
 27791                           tosh	equ	0xFFE
 27792                           tosl	equ	0xFFD
 27793                           pclath	equ	0xFFA
 27794                           tblptru	equ	0xFF8
 27795                           tblptrh	equ	0xFF7
 27796                           tblptrl	equ	0xFF6
 27797                           tablat	equ	0xFF5
 27798                           prodh	equ	0xFF4
 27799                           prodl	equ	0xFF3
 27800                           intcon	equ	0xFF2
 27801                           indf0	equ	0xFEF
 27802                           postinc0	equ	0xFEE
 27803                           fsr0h	equ	0xFEA
 27804                           fsr0l	equ	0xFE9
 27805                           wreg	equ	0xFE8
 27806                           postinc1	equ	0xFE6
 27807                           postdec1	equ	0xFE5
 27808                           plusw1	equ	0xFE3
 27809                           fsr1h	equ	0xFE2
 27810                           fsr1l	equ	0xFE1
 27811                           indf2	equ	0xFDF
 27812                           postinc2	equ	0xFDE
 27813                           postdec2	equ	0xFDD
 27814                           plusw2	equ	0xFDB
 27815                           fsr2h	equ	0xFDA
 27816                           fsr2l	equ	0xFD9
 27817                           status	equ	0xFD8
 27818                           
 27819 ;; *************** function _rand *****************
 27820 ;; Defined at:
 27821 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 27822 ;; Parameters:    Size  Location     Type
 27823 ;;		None
 27824 ;; Auto vars:     Size  Location     Type
 27825 ;;		None
 27826 ;; Return value:  Size  Location     Type
 27827 ;;                  2   16[BANK0 ] int 
 27828 ;; Registers used:
 27829 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 27830 ;; Tracked objects:
 27831 ;;		On entry : F/0
 27832 ;;		On exit  : F/0
 27833 ;;		Unchanged: 0/0
 27834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27835 ;;      Params:         0       2       0       0       0       0       0       0       0
 27836 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27837 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27838 ;;      Totals:         0       2       0       0       0       0       0       0       0
 27839 ;;Total ram usage:        2 bytes
 27840 ;; Hardware stack levels used:    1
 27841 ;; Hardware stack levels required when called:    8
 27842 ;; This function calls:
 27843 ;;		___lmul
 27844 ;; This function is called by:
 27845 ;;		_Random
 27846 ;; This function uses a non-reentrant model
 27847 ;;
 27848                           
 27849                           	psect	text145
 27850  006A6E                     __ptext145:
 27851                           	opt stack 0
 27852  006A6E                     _rand:
 27853                           	opt stack 17
 27854                           
 27855                           ; BSR set to: 0
 27856                           
 27857                           ; BSR set to: 0
 27858                           ;incstack = 0
 27859  006A6E  C056  F064         	movff	_randx,___lmul@multiplier
 27860  006A72  C057  F065         	movff	_randx+1,___lmul@multiplier+1
 27861  006A76  C058  F066         	movff	_randx+2,___lmul@multiplier+2
 27862  006A7A  C059  F067         	movff	_randx+3,___lmul@multiplier+3
 27863  006A7E  0E6D               	movlw	109
 27864  006A80  6F68               	movwf	___lmul@multiplicand& (0+255),b
 27865  006A82  0E4E               	movlw	78
 27866  006A84  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27867  006A86  0EC6               	movlw	198
 27868  006A88  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27869  006A8A  0E41               	movlw	65
 27870  006A8C  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27871  006A8E  ECEE  F02E         	call	___lmul	;wreg free
 27872  006A92  C064  F056         	movff	?___lmul,_randx
 27873  006A96  C065  F057         	movff	?___lmul+1,_randx+1
 27874  006A9A  C066  F058         	movff	?___lmul+2,_randx+2
 27875  006A9E  C067  F059         	movff	?___lmul+3,_randx+3
 27876                           
 27877                           ; BSR set to: 0
 27878  006AA2  0E39               	movlw	57
 27879  006AA4  2656               	addwf	_randx,f,c
 27880  006AA6  0E30               	movlw	48
 27881  006AA8  2257               	addwfc	_randx+1,f,c
 27882  006AAA  0E00               	movlw	0
 27883  006AAC  2258               	addwfc	_randx+2,f,c
 27884  006AAE  2259               	addwfc	_randx+3,f,c
 27885                           
 27886                           ; BSR set to: 0
 27887  006AB0  5058               	movf	_randx+2,w,c
 27888  006AB2  6F70               	movwf	?_rand& (0+255),b
 27889  006AB4  0E7F               	movlw	127
 27890  006AB6  1459               	andwf	_randx+3,w,c
 27891  006AB8  6F71               	movwf	(?_rand+1)& (0+255),b
 27892                           
 27893                           ; BSR set to: 0
 27894  006ABA  0012               	return		;funcret
 27895  006ABC                     __end_of_rand:
 27896                           	opt stack 0
 27897                           tosu	equ	0xFFF
 27898                           tosh	equ	0xFFE
 27899                           tosl	equ	0xFFD
 27900                           pclath	equ	0xFFA
 27901                           tblptru	equ	0xFF8
 27902                           tblptrh	equ	0xFF7
 27903                           tblptrl	equ	0xFF6
 27904                           tablat	equ	0xFF5
 27905                           prodh	equ	0xFF4
 27906                           prodl	equ	0xFF3
 27907                           intcon	equ	0xFF2
 27908                           indf0	equ	0xFEF
 27909                           postinc0	equ	0xFEE
 27910                           fsr0h	equ	0xFEA
 27911                           fsr0l	equ	0xFE9
 27912                           wreg	equ	0xFE8
 27913                           postinc1	equ	0xFE6
 27914                           postdec1	equ	0xFE5
 27915                           plusw1	equ	0xFE3
 27916                           fsr1h	equ	0xFE2
 27917                           fsr1l	equ	0xFE1
 27918                           indf2	equ	0xFDF
 27919                           postinc2	equ	0xFDE
 27920                           postdec2	equ	0xFDD
 27921                           plusw2	equ	0xFDB
 27922                           fsr2h	equ	0xFDA
 27923                           fsr2l	equ	0xFD9
 27924                           status	equ	0xFD8
 27925                           
 27926 ;; *************** function ___lmul *****************
 27927 ;; Defined at:
 27928 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 27929 ;; Parameters:    Size  Location     Type
 27930 ;;  multiplier      4    4[BANK0 ] unsigned long 
 27931 ;;  multiplicand    4    8[BANK0 ] unsigned long 
 27932 ;; Auto vars:     Size  Location     Type
 27933 ;;  product         4   12[BANK0 ] unsigned long 
 27934 ;; Return value:  Size  Location     Type
 27935 ;;                  4    4[BANK0 ] unsigned long 
 27936 ;; Registers used:
 27937 ;;		wreg, status,2, status,0, prodl, prodh
 27938 ;; Tracked objects:
 27939 ;;		On entry : F/0
 27940 ;;		On exit  : F/0
 27941 ;;		Unchanged: 0/0
 27942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27943 ;;      Params:         0       8       0       0       0       0       0       0       0
 27944 ;;      Locals:         0       4       0       0       0       0       0       0       0
 27945 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27946 ;;      Totals:         0      12       0       0       0       0       0       0       0
 27947 ;;Total ram usage:       12 bytes
 27948 ;; Hardware stack levels used:    1
 27949 ;; Hardware stack levels required when called:    7
 27950 ;; This function calls:
 27951 ;;		Nothing
 27952 ;; This function is called by:
 27953 ;;		_RADIO_WriteConfiguration
 27954 ;;		_ExecuteNewChannel
 27955 ;;		_ExecuteRxParamSetupReq
 27956 ;;		_UpdateCfList
 27957 ;;		_rand
 27958 ;; This function uses a non-reentrant model
 27959 ;;
 27960                           
 27961                           	psect	text146
 27962  005DDC                     __ptext146:
 27963                           	opt stack 0
 27964  005DDC                     ___lmul:
 27965                           	opt stack 17
 27966                           
 27967                           ; BSR set to: 0
 27968                           
 27969                           ; BSR set to: 0
 27970                           ;incstack = 0
 27971  005DDC  5164               	movf	___lmul@multiplier& (0+255),w,b
 27972  005DDE  0368               	mulwf	___lmul@multiplicand& (0+255),b
 27973  005DE0  CFF3 F06C          	movff	prodl,___lmul@product
 27974  005DE4  CFF4 F06D          	movff	prodh,___lmul@product+1
 27975  005DE8  6B6E               	clrf	(___lmul@product+2)& (0+255),b
 27976  005DEA  6B6F               	clrf	(___lmul@product+3)& (0+255),b
 27977  005DEC  5164               	movf	___lmul@multiplier& (0+255),w,b
 27978  005DEE  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 27979  005DF0  50F3               	movf	prodl,w,c
 27980  005DF2  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 27981  005DF4  50F4               	movf	prodh,w,c
 27982  005DF6  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 27983  005DF8  0E00               	movlw	0
 27984  005DFA  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 27985  005DFC  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 27986  005DFE  0368               	mulwf	___lmul@multiplicand& (0+255),b
 27987  005E00  50F3               	movf	prodl,w,c
 27988  005E02  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 27989  005E04  50F4               	movf	prodh,w,c
 27990  005E06  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 27991  005E08  0E00               	movlw	0
 27992  005E0A  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 27993  005E0C  5164               	movf	___lmul@multiplier& (0+255),w,b
 27994  005E0E  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 27995  005E10  50F3               	movf	prodl,w,c
 27996  005E12  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 27997  005E14  50F4               	movf	prodh,w,c
 27998  005E16  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 27999  005E18  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28000  005E1A  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28001  005E1C  50F3               	movf	prodl,w,c
 28002  005E1E  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28003  005E20  50F4               	movf	prodh,w,c
 28004  005E22  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28005  005E24  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28006  005E26  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28007  005E28  50F3               	movf	prodl,w,c
 28008  005E2A  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28009  005E2C  50F4               	movf	prodh,w,c
 28010  005E2E  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28011  005E30  516B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28012  005E32  0364               	mulwf	___lmul@multiplier& (0+255),b
 28013  005E34  50F3               	movf	prodl,w,c
 28014  005E36  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28015  005E38  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28016  005E3A  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28017  005E3C  50F3               	movf	prodl,w,c
 28018  005E3E  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28019  005E40  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28020  005E42  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28021  005E44  50F3               	movf	prodl,w,c
 28022  005E46  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28023  005E48  5167               	movf	(___lmul@multiplier+3)& (0+255),w,b
 28024  005E4A  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28025  005E4C  50F3               	movf	prodl,w,c
 28026  005E4E  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28027                           
 28028                           ; BSR set to: 0
 28029  005E50  C06C  F064         	movff	___lmul@product,?___lmul
 28030  005E54  C06D  F065         	movff	___lmul@product+1,?___lmul+1
 28031  005E58  C06E  F066         	movff	___lmul@product+2,?___lmul+2
 28032  005E5C  C06F  F067         	movff	___lmul@product+3,?___lmul+3
 28033                           
 28034                           ; BSR set to: 0
 28035  005E60  0012               	return		;funcret
 28036  005E62                     __end_of___lmul:
 28037                           	opt stack 0
 28038                           tosu	equ	0xFFF
 28039                           tosh	equ	0xFFE
 28040                           tosl	equ	0xFFD
 28041                           pclath	equ	0xFFA
 28042                           tblptru	equ	0xFF8
 28043                           tblptrh	equ	0xFF7
 28044                           tblptrl	equ	0xFF6
 28045                           tablat	equ	0xFF5
 28046                           prodh	equ	0xFF4
 28047                           prodl	equ	0xFF3
 28048                           intcon	equ	0xFF2
 28049                           indf0	equ	0xFEF
 28050                           postinc0	equ	0xFEE
 28051                           fsr0h	equ	0xFEA
 28052                           fsr0l	equ	0xFE9
 28053                           wreg	equ	0xFE8
 28054                           postinc1	equ	0xFE6
 28055                           postdec1	equ	0xFE5
 28056                           plusw1	equ	0xFE3
 28057                           fsr1h	equ	0xFE2
 28058                           fsr1l	equ	0xFE1
 28059                           indf2	equ	0xFDF
 28060                           postinc2	equ	0xFDE
 28061                           postdec2	equ	0xFDD
 28062                           plusw2	equ	0xFDB
 28063                           fsr2h	equ	0xFDA
 28064                           fsr2l	equ	0xFD9
 28065                           status	equ	0xFD8
 28066                           
 28067 ;; *************** function ___lwmod *****************
 28068 ;; Defined at:
 28069 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 28070 ;; Parameters:    Size  Location     Type
 28071 ;;  dividend        2   18[BANK0 ] unsigned int 
 28072 ;;  divisor         2   20[BANK0 ] unsigned int 
 28073 ;; Auto vars:     Size  Location     Type
 28074 ;;  counter         1   22[BANK0 ] unsigned char 
 28075 ;; Return value:  Size  Location     Type
 28076 ;;                  2   18[BANK0 ] unsigned int 
 28077 ;; Registers used:
 28078 ;;		wreg, status,2, status,0
 28079 ;; Tracked objects:
 28080 ;;		On entry : F/0
 28081 ;;		On exit  : F/0
 28082 ;;		Unchanged: 0/0
 28083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28084 ;;      Params:         0       4       0       0       0       0       0       0       0
 28085 ;;      Locals:         0       1       0       0       0       0       0       0       0
 28086 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28087 ;;      Totals:         0       5       0       0       0       0       0       0       0
 28088 ;;Total ram usage:        5 bytes
 28089 ;; Hardware stack levels used:    1
 28090 ;; Hardware stack levels required when called:    7
 28091 ;; This function calls:
 28092 ;;		Nothing
 28093 ;; This function is called by:
 28094 ;;		_Random
 28095 ;; This function uses a non-reentrant model
 28096 ;;
 28097                           
 28098                           	psect	text147
 28099  006E8A                     __ptext147:
 28100                           	opt stack 0
 28101  006E8A                     ___lwmod:
 28102                           	opt stack 18
 28103                           
 28104                           ; BSR set to: 0
 28105                           
 28106                           ; BSR set to: 0
 28107                           ;incstack = 0
 28108  006E8A  5174               	movf	___lwmod@divisor& (0+255),w,b
 28109  006E8C  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28110  006E8E  E017               	bz	l3056
 28111                           
 28112                           ; BSR set to: 0
 28113  006E90  0E01               	movlw	1
 28114  006E92  6F76               	movwf	___lwmod@counter& (0+255),b
 28115  006E94  D004               	goto	l12441
 28116  006E96                     l12439:
 28117                           
 28118                           ; BSR set to: 0
 28119  006E96  90D8               	bcf	status,0,c
 28120  006E98  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 28121  006E9A  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28122  006E9C  2B76               	incf	___lwmod@counter& (0+255),f,b
 28123  006E9E                     l12441:
 28124                           
 28125                           ; BSR set to: 0
 28126  006E9E  AF75               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28127  006EA0  D7FA               	goto	l12439
 28128  006EA2                     l12443:
 28129                           
 28130                           ; BSR set to: 0
 28131  006EA2  5174               	movf	___lwmod@divisor& (0+255),w,b
 28132  006EA4  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 28133  006EA6  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28134  006EA8  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28135  006EAA  E304               	bnc	l12447
 28136                           
 28137                           ; BSR set to: 0
 28138  006EAC  5174               	movf	___lwmod@divisor& (0+255),w,b
 28139  006EAE  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 28140  006EB0  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28141  006EB2  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28142  006EB4                     l12447:
 28143                           
 28144                           ; BSR set to: 0
 28145  006EB4  90D8               	bcf	status,0,c
 28146  006EB6  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28147  006EB8  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 28148                           
 28149                           ; BSR set to: 0
 28150  006EBA  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 28151  006EBC  D7F2               	goto	l12443
 28152  006EBE                     l3056:
 28153                           
 28154                           ; BSR set to: 0
 28155  006EBE  C072  F072         	movff	___lwmod@dividend,?___lwmod
 28156  006EC2  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 28157                           
 28158                           ; BSR set to: 0
 28159  006EC6  0012               	return		;funcret
 28160  006EC8                     __end_of___lwmod:
 28161                           	opt stack 0
 28162                           tosu	equ	0xFFF
 28163                           tosh	equ	0xFFE
 28164                           tosl	equ	0xFFD
 28165                           pclath	equ	0xFFA
 28166                           tblptru	equ	0xFF8
 28167                           tblptrh	equ	0xFF7
 28168                           tblptrl	equ	0xFF6
 28169                           tablat	equ	0xFF5
 28170                           prodh	equ	0xFF4
 28171                           prodl	equ	0xFF3
 28172                           intcon	equ	0xFF2
 28173                           indf0	equ	0xFEF
 28174                           postinc0	equ	0xFEE
 28175                           fsr0h	equ	0xFEA
 28176                           fsr0l	equ	0xFE9
 28177                           wreg	equ	0xFE8
 28178                           postinc1	equ	0xFE6
 28179                           postdec1	equ	0xFE5
 28180                           plusw1	equ	0xFE3
 28181                           fsr1h	equ	0xFE2
 28182                           fsr1l	equ	0xFE1
 28183                           indf2	equ	0xFDF
 28184                           postinc2	equ	0xFDE
 28185                           postdec2	equ	0xFDD
 28186                           plusw2	equ	0xFDB
 28187                           fsr2h	equ	0xFDA
 28188                           fsr2l	equ	0xFD9
 28189                           status	equ	0xFD8
 28190                           
 28191 ;; *************** function _ComputeMic *****************
 28192 ;; Defined at:
 28193 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28194 ;; Parameters:    Size  Location     Type
 28195 ;;  key             2  122[BANK0 ] PTR unsigned char 
 28196 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28197 ;;  buffer          2  124[BANK0 ] PTR unsigned char 
 28198 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28199 ;;  bufferLength    1  126[BANK0 ] unsigned char 
 28200 ;; Auto vars:     Size  Location     Type
 28201 ;;  mic             4  127[BANK0 ] unsigned long 
 28202 ;; Return value:  Size  Location     Type
 28203 ;;                  4  122[BANK0 ] unsigned long 
 28204 ;; Registers used:
 28205 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28206 ;; Tracked objects:
 28207 ;;		On entry : F/0
 28208 ;;		On exit  : F/0
 28209 ;;		Unchanged: 0/0
 28210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28211 ;;      Params:         0       5       0       0       0       0       0       0       0
 28212 ;;      Locals:         0       4       0       0       0       0       0       0       0
 28213 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28214 ;;      Totals:         0       9       0       0       0       0       0       0       0
 28215 ;;Total ram usage:        9 bytes
 28216 ;; Hardware stack levels used:    1
 28217 ;; Hardware stack levels required when called:   12
 28218 ;; This function calls:
 28219 ;;		_AESCmac
 28220 ;;		_memcpy
 28221 ;; This function is called by:
 28222 ;;		_LORAWAN_RxDone
 28223 ;;		_PrepareJoinRequestFrame
 28224 ;; This function uses a non-reentrant model
 28225 ;;
 28226                           
 28227                           	psect	text148
 28228  00697C                     __ptext148:
 28229                           	opt stack 0
 28230  00697C                     _ComputeMic:
 28231                           	opt stack 14
 28232                           
 28233                           ; BSR set to: 0
 28234                           ;lorawan.c: 2196: uint32_t mic = 0;
 28235                           
 28236                           ; BSR set to: 0
 28237                           ;incstack = 0
 28238  00697C  6BDF               	clrf	ComputeMic@mic& (0+255),b
 28239  00697E  6BE0               	clrf	(ComputeMic@mic+1)& (0+255),b
 28240  006980  6BE1               	clrf	(ComputeMic@mic+2)& (0+255),b
 28241  006982  6BE2               	clrf	(ComputeMic@mic+3)& (0+255),b
 28242                           
 28243                           ; BSR set to: 0
 28244                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 28245  006984  C0DA  F0CC         	movff	ComputeMic@key,AESCmac@key
 28246  006988  C0DB  F0CD         	movff	ComputeMic@key+1,AESCmac@key+1
 28247  00698C  0EAF               	movlw	low _aesBuffer
 28248  00698E  6FCE               	movwf	AESCmac@output& (0+255),b
 28249  006990  0E01               	movlw	high _aesBuffer
 28250  006992  6FCF               	movwf	(AESCmac@output+1)& (0+255),b
 28251  006994  C0DC  F0D0         	movff	ComputeMic@buffer,AESCmac@input
 28252  006998  C0DD  F0D1         	movff	ComputeMic@buffer+1,AESCmac@input+1
 28253  00699C  C0DE  F0D2         	movff	ComputeMic@bufferLength,AESCmac@size
 28254  0069A0  EC16  F00C         	call	_AESCmac	;wreg free
 28255                           
 28256                           ; BSR set to: 0
 28257                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 28258  0069A4  0EDF               	movlw	low ComputeMic@mic
 28259  0069A6  6F64               	movwf	memcpy@d1& (0+255),b
 28260  0069A8  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28261  0069AA  0EAF               	movlw	low _aesBuffer
 28262  0069AC  6F66               	movwf	memcpy@s1& (0+255),b
 28263  0069AE  0E01               	movlw	high _aesBuffer
 28264  0069B0  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28265  0069B2  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28266  0069B4  0E04               	movlw	4
 28267  0069B6  6F68               	movwf	memcpy@n& (0+255),b
 28268  0069B8  EC6A  F034         	call	_memcpy	;wreg free
 28269                           
 28270                           ; BSR set to: 0
 28271                           ;lorawan.c: 2202: return mic;
 28272  0069BC  C0DF  F0DA         	movff	ComputeMic@mic,?_ComputeMic
 28273  0069C0  C0E0  F0DB         	movff	ComputeMic@mic+1,?_ComputeMic+1
 28274  0069C4  C0E1  F0DC         	movff	ComputeMic@mic+2,?_ComputeMic+2
 28275  0069C8  C0E2  F0DD         	movff	ComputeMic@mic+3,?_ComputeMic+3
 28276                           
 28277                           ; BSR set to: 0
 28278  0069CC  0012               	return		;funcret
 28279  0069CE                     __end_of_ComputeMic:
 28280                           	opt stack 0
 28281                           tosu	equ	0xFFF
 28282                           tosh	equ	0xFFE
 28283                           tosl	equ	0xFFD
 28284                           pclath	equ	0xFFA
 28285                           tblptru	equ	0xFF8
 28286                           tblptrh	equ	0xFF7
 28287                           tblptrl	equ	0xFF6
 28288                           tablat	equ	0xFF5
 28289                           prodh	equ	0xFF4
 28290                           prodl	equ	0xFF3
 28291                           intcon	equ	0xFF2
 28292                           indf0	equ	0xFEF
 28293                           postinc0	equ	0xFEE
 28294                           fsr0h	equ	0xFEA
 28295                           fsr0l	equ	0xFE9
 28296                           wreg	equ	0xFE8
 28297                           postinc1	equ	0xFE6
 28298                           postdec1	equ	0xFE5
 28299                           plusw1	equ	0xFE3
 28300                           fsr1h	equ	0xFE2
 28301                           fsr1l	equ	0xFE1
 28302                           indf2	equ	0xFDF
 28303                           postinc2	equ	0xFDE
 28304                           postdec2	equ	0xFDD
 28305                           plusw2	equ	0xFDB
 28306                           fsr2h	equ	0xFDA
 28307                           fsr2l	equ	0xFD9
 28308                           status	equ	0xFD8
 28309                           
 28310 ;; *************** function _AESCmac *****************
 28311 ;; Defined at:
 28312 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 28313 ;; Parameters:    Size  Location     Type
 28314 ;;  key             2  108[BANK0 ] PTR unsigned char 
 28315 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28316 ;;  output          2  110[BANK0 ] PTR unsigned char 
 28317 ;;		 -> aesBuffer(16), 
 28318 ;;  input           2  112[BANK0 ] PTR unsigned char 
 28319 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28320 ;;  size            1  114[BANK0 ] unsigned char 
 28321 ;; Auto vars:     Size  Location     Type
 28322 ;;  x              16   80[BANK1 ] unsigned char [16]
 28323 ;;  y              16   64[BANK1 ] unsigned char [16]
 28324 ;;  padded         16   48[BANK1 ] unsigned char [16]
 28325 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 28326 ;;  k1             16   16[BANK1 ] unsigned char [16]
 28327 ;;  k2             16    0[BANK1 ] unsigned char [16]
 28328 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 28329 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 28330 ;;  i               1  101[BANK1 ] unsigned char 
 28331 ;;  j               1  100[BANK1 ] unsigned char 
 28332 ;;  n               1   99[BANK1 ] unsigned char 
 28333 ;;  flag            1   98[BANK1 ] unsigned char 
 28334 ;; Return value:  Size  Location     Type
 28335 ;;                  1    wreg      void 
 28336 ;; Registers used:
 28337 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28338 ;; Tracked objects:
 28339 ;;		On entry : F/0
 28340 ;;		On exit  : F/0
 28341 ;;		Unchanged: 0/0
 28342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28343 ;;      Params:         0       7       0       0       0       0       0       0       0
 28344 ;;      Locals:         0       0     102       0       0       0       0       0       0
 28345 ;;      Temps:          0       7       0       0       0       0       0       0       0
 28346 ;;      Totals:         0      14     102       0       0       0       0       0       0
 28347 ;;Total ram usage:      116 bytes
 28348 ;; Hardware stack levels used:    1
 28349 ;; Hardware stack levels required when called:   11
 28350 ;; This function calls:
 28351 ;;		_AESEncodeLoRa
 28352 ;;		_GenerateSubkey
 28353 ;;		_memcpy
 28354 ;;		_memset
 28355 ;; This function is called by:
 28356 ;;		_LORAWAN_RxDone
 28357 ;;		_AssemblePacket
 28358 ;;		_ComputeMic
 28359 ;; This function uses a non-reentrant model
 28360 ;;
 28361                           
 28362                           	psect	text149
 28363  00182C                     __ptext149:
 28364                           	opt stack 0
 28365  00182C                     _AESCmac:
 28366                           	opt stack 16
 28367                           
 28368                           ; BSR set to: 0
 28369                           
 28370                           ; BSR set to: 0
 28371                           ;incstack = 0
 28372  00182C  0101               	movlb	1	; () banked
 28373  00182E  6B65               	clrf	AESCmac@i& (0+255),b
 28374  001830  6B64               	clrf	AESCmac@j& (0+255),b
 28375                           
 28376                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 28377  001832  6B62               	clrf	AESCmac@flag& (0+255),b
 28378                           
 28379                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 28380                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 28381                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 28382  001834  6B60               	clrf	AESCmac@ptr& (0+255),b
 28383  001836  6B61               	clrf	(AESCmac@ptr+1)& (0+255),b
 28384                           
 28385                           ; BSR set to: 1
 28386                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 28387  001838  C0CC  F0A4         	movff	AESCmac@key,GenerateSubkey@key
 28388  00183C  C0CD  F0A5         	movff	AESCmac@key+1,GenerateSubkey@key+1
 28389  001840  0E10               	movlw	low AESCmac@k1
 28390  001842  0100               	movlb	0	; () banked
 28391  001844  6FA6               	movwf	GenerateSubkey@k1& (0+255),b
 28392  001846  0E01               	movlw	high AESCmac@k1
 28393  001848  6FA7               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 28394  00184A  0E00               	movlw	low AESCmac@k2
 28395  00184C  6FA8               	movwf	GenerateSubkey@k2& (0+255),b
 28396  00184E  0E01               	movlw	high AESCmac@k2
 28397  001850  6FA9               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 28398  001852  EC5C  F024         	call	_GenerateSubkey	;wreg free
 28399                           
 28400                           ; BSR set to: 0
 28401                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 28402  001856  51D2               	movf	AESCmac@size& (0+255),w,b
 28403  001858  6FD3               	movwf	??_AESCmac& (0+255),b
 28404  00185A  6BD4               	clrf	(??_AESCmac+1)& (0+255),b
 28405  00185C  0E0F               	movlw	15
 28406  00185E  27D3               	addwf	??_AESCmac& (0+255),f,b
 28407  001860  0E00               	movlw	0
 28408  001862  23D4               	addwfc	(??_AESCmac+1)& (0+255),f,b
 28409  001864  0E04               	movlw	4
 28410  001866  6FD5               	movwf	(??_AESCmac+2)& (0+255),b
 28411  001868                     u14345:
 28412  001868  35D4               	rlcf	(??_AESCmac+1)& (0+255),w,b
 28413  00186A  33D4               	rrcf	(??_AESCmac+1)& (0+255),f,b
 28414  00186C  33D3               	rrcf	??_AESCmac& (0+255),f,b
 28415  00186E  2FD5               	decfsz	(??_AESCmac+2)& (0+255),f,b
 28416  001870  D7FB               	goto	u14345
 28417  001872  51D3               	movf	??_AESCmac& (0+255),w,b
 28418  001874  0101               	movlb	1	; () banked
 28419  001876  6F63               	movwf	AESCmac@n& (0+255),b
 28420                           
 28421                           ; BSR set to: 1
 28422                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 28423  001878  5163               	movf	AESCmac@n& (0+255),w,b
 28424  00187A  E104               	bnz	l13067
 28425                           
 28426                           ; BSR set to: 1
 28427                           ;lorawan_aes_cmac.c: 53: {
 28428                           ;lorawan_aes_cmac.c: 54: n = 1;
 28429  00187C  0E01               	movlw	1
 28430  00187E  6F63               	movwf	AESCmac@n& (0+255),b
 28431                           
 28432                           ; BSR set to: 1
 28433                           ;lorawan_aes_cmac.c: 55: flag = 0;
 28434  001880  6B62               	clrf	AESCmac@flag& (0+255),b
 28435                           
 28436                           ;lorawan_aes_cmac.c: 56: }
 28437  001882  D00A               	goto	l1409
 28438  001884                     l13067:
 28439                           
 28440                           ; BSR set to: 1
 28441                           ;lorawan_aes_cmac.c: 57: else
 28442                           ;lorawan_aes_cmac.c: 58: {
 28443                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 28444  001884  C0D2  F0D3         	movff	AESCmac@size,??_AESCmac
 28445  001888  0E0F               	movlw	15
 28446  00188A  0100               	movlb	0	; () banked
 28447  00188C  17D3               	andwf	??_AESCmac& (0+255),f,b
 28448  00188E  0E01               	movlw	1
 28449  001890  A4D8               	btfss	status,2,c
 28450  001892  0E00               	movlw	0
 28451  001894  0101               	movlb	1	; () banked
 28452  001896  6F62               	movwf	AESCmac@flag& (0+255),b
 28453  001898                     l1409:
 28454                           
 28455                           ; BSR set to: 1
 28456                           ;lorawan_aes_cmac.c: 60: }
 28457                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 28458  001898  0562               	decf	AESCmac@flag& (0+255),w,b
 28459  00189A  E141               	bnz	l13081
 28460                           
 28461                           ; BSR set to: 1
 28462                           ;lorawan_aes_cmac.c: 63: {
 28463                           ;lorawan_aes_cmac.c: 64: j = 0;
 28464  00189C  6B64               	clrf	AESCmac@j& (0+255),b
 28465                           
 28466                           ; BSR set to: 1
 28467                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 28468  00189E  5163               	movf	AESCmac@n& (0+255),w,b
 28469  0018A0  0D10               	mullw	16
 28470  0018A2  50F3               	movf	prodl,w,c
 28471  0018A4  0FF0               	addlw	240
 28472  0018A6  6F65               	movwf	AESCmac@i& (0+255),b
 28473  0018A8  D01E               	goto	l13079
 28474  0018AA                     l13073:
 28475                           
 28476                           ; BSR set to: 0
 28477                           ;lorawan_aes_cmac.c: 66: {
 28478                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 28479  0018AA  0E20               	movlw	low AESCmac@mLast
 28480  0018AC  0101               	movlb	1	; () banked
 28481  0018AE  2564               	addwf	AESCmac@j& (0+255),w,b
 28482  0018B0  6ED9               	movwf	fsr2l,c
 28483  0018B2  6ADA               	clrf	fsr2h,c
 28484  0018B4  0E01               	movlw	high AESCmac@mLast
 28485  0018B6  22DA               	addwfc	fsr2h,f,c
 28486  0018B8  0E10               	movlw	low AESCmac@k1
 28487  0018BA  2564               	addwf	AESCmac@j& (0+255),w,b
 28488  0018BC  6EE9               	movwf	fsr0l,c
 28489  0018BE  6AEA               	clrf	fsr0h,c
 28490  0018C0  0E01               	movlw	high AESCmac@k1
 28491  0018C2  22EA               	addwfc	fsr0h,f,c
 28492  0018C4  50EF               	movf	indf0,w,c
 28493  0018C6  0100               	movlb	0	; () banked
 28494  0018C8  6FD3               	movwf	??_AESCmac& (0+255),b
 28495  0018CA  0101               	movlb	1	; () banked
 28496  0018CC  5165               	movf	AESCmac@i& (0+255),w,b
 28497  0018CE  0100               	movlb	0	; () banked
 28498  0018D0  25D0               	addwf	AESCmac@input& (0+255),w,b
 28499  0018D2  6EE9               	movwf	fsr0l,c
 28500  0018D4  0E00               	movlw	0
 28501  0018D6  21D1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28502  0018D8  6EEA               	movwf	fsr0h,c
 28503  0018DA  50EF               	movf	indf0,w,c
 28504  0018DC  19D3               	xorwf	??_AESCmac& (0+255),w,b
 28505  0018DE  6EDF               	movwf	indf2,c
 28506                           
 28507                           ; BSR set to: 0
 28508                           ;lorawan_aes_cmac.c: 68: j++;
 28509  0018E0  0101               	movlb	1	; () banked
 28510  0018E2  2B64               	incf	AESCmac@j& (0+255),f,b
 28511                           
 28512                           ; BSR set to: 1
 28513  0018E4  2B65               	incf	AESCmac@i& (0+255),f,b
 28514  0018E6                     l13079:
 28515                           
 28516                           ; BSR set to: 1
 28517  0018E6  5163               	movf	AESCmac@n& (0+255),w,b
 28518  0018E8  0100               	movlb	0	; () banked
 28519  0018EA  6FD3               	movwf	??_AESCmac& (0+255),b
 28520  0018EC  6BD4               	clrf	(??_AESCmac+1)& (0+255),b
 28521  0018EE  3BD3               	swapf	??_AESCmac& (0+255),f,b
 28522  0018F0  3BD4               	swapf	(??_AESCmac+1)& (0+255),f,b
 28523  0018F2  0EF0               	movlw	240
 28524  0018F4  17D4               	andwf	(??_AESCmac+1)& (0+255),f,b
 28525  0018F6  51D3               	movf	??_AESCmac& (0+255),w,b
 28526  0018F8  0B0F               	andlw	15
 28527  0018FA  13D4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28528  0018FC  0EF0               	movlw	240
 28529  0018FE  17D3               	andwf	??_AESCmac& (0+255),f,b
 28530  001900  0101               	movlb	1	; () banked
 28531  001902  5165               	movf	AESCmac@i& (0+255),w,b
 28532  001904  0100               	movlb	0	; () banked
 28533  001906  6FD5               	movwf	(??_AESCmac+2)& (0+255),b
 28534  001908  6BD6               	clrf	(??_AESCmac+3)& (0+255),b
 28535  00190A  51D3               	movf	??_AESCmac& (0+255),w,b
 28536  00190C  5DD5               	subwf	(??_AESCmac+2)& (0+255),w,b
 28537  00190E  51D6               	movf	(??_AESCmac+3)& (0+255),w,b
 28538  001910  0A80               	xorlw	128
 28539  001912  6FD7               	movwf	(??_AESCmac+4)& (0+255),b
 28540  001914  51D4               	movf	(??_AESCmac+1)& (0+255),w,b
 28541  001916  0A80               	xorlw	128
 28542  001918  59D7               	subwfb	(??_AESCmac+4)& (0+255),w,b
 28543  00191A  E263               	bc	l13111
 28544  00191C  D7C6               	goto	l13073
 28545  00191E                     l13081:
 28546                           
 28547                           ; BSR set to: 1
 28548                           ;lorawan_aes_cmac.c: 71: else
 28549                           ;lorawan_aes_cmac.c: 72: {
 28550                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 28551  00191E  0100               	movlb	0	; () banked
 28552  001920  51D2               	movf	AESCmac@size& (0+255),w,b
 28553  001922  25D0               	addwf	AESCmac@input& (0+255),w,b
 28554  001924  6FD3               	movwf	??_AESCmac& (0+255),b
 28555  001926  0E00               	movlw	0
 28556  001928  21D1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28557  00192A  6FD4               	movwf	(??_AESCmac+1)& (0+255),b
 28558  00192C  51D2               	movf	AESCmac@size& (0+255),w,b
 28559  00192E  0B0F               	andlw	15
 28560  001930  5DD3               	subwf	??_AESCmac& (0+255),w,b
 28561  001932  0101               	movlb	1	; () banked
 28562  001934  6F60               	movwf	AESCmac@ptr& (0+255),b
 28563  001936  0100               	movlb	0	; () banked
 28564  001938  51D4               	movf	(??_AESCmac+1)& (0+255),w,b
 28565  00193A  A0D8               	btfss	status,0,c
 28566  00193C  05D4               	decf	(??_AESCmac+1)& (0+255),w,b
 28567  00193E  0101               	movlb	1	; () banked
 28568  001940  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 28569                           
 28570                           ; BSR set to: 1
 28571                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 28572  001942  6B65               	clrf	AESCmac@i& (0+255),b
 28573  001944                     l13087:
 28574                           
 28575                           ; BSR set to: 1
 28576                           ;lorawan_aes_cmac.c: 76: {
 28577                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 28578  001944  0100               	movlb	0	; () banked
 28579  001946  51D2               	movf	AESCmac@size& (0+255),w,b
 28580  001948  0B0F               	andlw	15
 28581  00194A  0101               	movlb	1	; () banked
 28582  00194C  6165               	cpfslt	AESCmac@i& (0+255),b
 28583  00194E  D00F               	goto	l13091
 28584                           
 28585                           ; BSR set to: 1
 28586                           ;lorawan_aes_cmac.c: 78: {
 28587                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 28588  001950  5165               	movf	AESCmac@i& (0+255),w,b
 28589  001952  2560               	addwf	AESCmac@ptr& (0+255),w,b
 28590  001954  6ED9               	movwf	fsr2l,c
 28591  001956  0E00               	movlw	0
 28592  001958  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 28593  00195A  6EDA               	movwf	fsr2h,c
 28594  00195C  0E30               	movlw	low AESCmac@padded
 28595  00195E  2565               	addwf	AESCmac@i& (0+255),w,b
 28596  001960  6EE9               	movwf	fsr0l,c
 28597  001962  6AEA               	clrf	fsr0h,c
 28598  001964  0E01               	movlw	high AESCmac@padded
 28599  001966  22EA               	addwfc	fsr0h,f,c
 28600  001968  CFDF FFEF          	movff	indf2,indf0
 28601                           
 28602                           ;lorawan_aes_cmac.c: 80: }
 28603  00196C  D016               	goto	l13097
 28604  00196E                     l13091:
 28605                           
 28606                           ; BSR set to: 1
 28607                           ;lorawan_aes_cmac.c: 81: else
 28608                           ;lorawan_aes_cmac.c: 82: {
 28609                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 28610  00196E  0100               	movlb	0	; () banked
 28611  001970  51D2               	movf	AESCmac@size& (0+255),w,b
 28612  001972  0B0F               	andlw	15
 28613  001974  0101               	movlb	1	; () banked
 28614  001976  1965               	xorwf	AESCmac@i& (0+255),w,b
 28615  001978  E109               	bnz	l13095
 28616                           
 28617                           ; BSR set to: 1
 28618                           ;lorawan_aes_cmac.c: 84: {
 28619                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 28620  00197A  0E30               	movlw	low AESCmac@padded
 28621  00197C  2565               	addwf	AESCmac@i& (0+255),w,b
 28622  00197E  6ED9               	movwf	fsr2l,c
 28623  001980  6ADA               	clrf	fsr2h,c
 28624  001982  0E01               	movlw	high AESCmac@padded
 28625  001984  22DA               	addwfc	fsr2h,f,c
 28626  001986  0E80               	movlw	128
 28627  001988  6EDF               	movwf	indf2,c
 28628                           
 28629                           ;lorawan_aes_cmac.c: 86: }
 28630  00198A  D007               	goto	l13097
 28631  00198C                     l13095:
 28632                           
 28633                           ; BSR set to: 1
 28634                           ;lorawan_aes_cmac.c: 87: else
 28635                           ;lorawan_aes_cmac.c: 88: {
 28636                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 28637  00198C  0E30               	movlw	low AESCmac@padded
 28638  00198E  2565               	addwf	AESCmac@i& (0+255),w,b
 28639  001990  6ED9               	movwf	fsr2l,c
 28640  001992  6ADA               	clrf	fsr2h,c
 28641  001994  0E01               	movlw	high AESCmac@padded
 28642  001996  22DA               	addwfc	fsr2h,f,c
 28643  001998  6ADF               	clrf	indf2,c
 28644  00199A                     l13097:
 28645                           
 28646                           ; BSR set to: 1
 28647  00199A  2B65               	incf	AESCmac@i& (0+255),f,b
 28648                           
 28649                           ; BSR set to: 1
 28650  00199C  0E0F               	movlw	15
 28651  00199E  6565               	cpfsgt	AESCmac@i& (0+255),b
 28652  0019A0  D7D1               	goto	l13087
 28653                           
 28654                           ; BSR set to: 1
 28655                           ;lorawan_aes_cmac.c: 90: }
 28656                           ;lorawan_aes_cmac.c: 91: }
 28657                           ;lorawan_aes_cmac.c: 92: }
 28658                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 28659  0019A2  6B65               	clrf	AESCmac@i& (0+255),b
 28660  0019A4                     l13105:
 28661                           
 28662                           ; BSR set to: 1
 28663                           ;lorawan_aes_cmac.c: 96: {
 28664                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 28665  0019A4  0E20               	movlw	low AESCmac@mLast
 28666  0019A6  2565               	addwf	AESCmac@i& (0+255),w,b
 28667  0019A8  6ED9               	movwf	fsr2l,c
 28668  0019AA  6ADA               	clrf	fsr2h,c
 28669  0019AC  0E01               	movlw	high AESCmac@mLast
 28670  0019AE  22DA               	addwfc	fsr2h,f,c
 28671  0019B0  0E00               	movlw	low AESCmac@k2
 28672  0019B2  2565               	addwf	AESCmac@i& (0+255),w,b
 28673  0019B4  6EE9               	movwf	fsr0l,c
 28674  0019B6  6AEA               	clrf	fsr0h,c
 28675  0019B8  0E01               	movlw	high AESCmac@k2
 28676  0019BA  22EA               	addwfc	fsr0h,f,c
 28677  0019BC  50EF               	movf	indf0,w,c
 28678  0019BE  0100               	movlb	0	; () banked
 28679  0019C0  6FD3               	movwf	??_AESCmac& (0+255),b
 28680  0019C2  0E30               	movlw	low AESCmac@padded
 28681  0019C4  0101               	movlb	1	; () banked
 28682  0019C6  2565               	addwf	AESCmac@i& (0+255),w,b
 28683  0019C8  6EE9               	movwf	fsr0l,c
 28684  0019CA  6AEA               	clrf	fsr0h,c
 28685  0019CC  0E01               	movlw	high AESCmac@padded
 28686  0019CE  22EA               	addwfc	fsr0h,f,c
 28687  0019D0  50EF               	movf	indf0,w,c
 28688  0019D2  0100               	movlb	0	; () banked
 28689  0019D4  19D3               	xorwf	??_AESCmac& (0+255),w,b
 28690  0019D6  6EDF               	movwf	indf2,c
 28691                           
 28692                           ; BSR set to: 0
 28693  0019D8  0101               	movlb	1	; () banked
 28694  0019DA  2B65               	incf	AESCmac@i& (0+255),f,b
 28695                           
 28696                           ; BSR set to: 1
 28697  0019DC  0E0F               	movlw	15
 28698  0019DE  6565               	cpfsgt	AESCmac@i& (0+255),b
 28699  0019E0  D7E1               	goto	l13105
 28700  0019E2                     l13111:
 28701                           
 28702                           ;lorawan_aes_cmac.c: 98: }
 28703                           ;lorawan_aes_cmac.c: 99: }
 28704                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 28705  0019E2  0E50               	movlw	low AESCmac@x
 28706  0019E4  0100               	movlb	0	; () banked
 28707  0019E6  6F64               	movwf	memset@p1& (0+255),b
 28708  0019E8  0E01               	movlw	high AESCmac@x
 28709  0019EA  6F65               	movwf	(memset@p1+1)& (0+255),b
 28710  0019EC  6B67               	clrf	(memset@c+1)& (0+255),b
 28711  0019EE  6B66               	clrf	memset@c& (0+255),b
 28712  0019F0  6B69               	clrf	(memset@n+1)& (0+255),b
 28713  0019F2  0E10               	movlw	16
 28714  0019F4  6F68               	movwf	memset@n& (0+255),b
 28715  0019F6  EC9A  F039         	call	_memset	;wreg free
 28716                           
 28717                           ; BSR set to: 0
 28718                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 28719  0019FA  0101               	movlb	1	; () banked
 28720  0019FC  6B65               	clrf	AESCmac@i& (0+255),b
 28721  0019FE  D051               	goto	l13129
 28722  001A00                     l1424:
 28723                           
 28724                           ; BSR set to: 0
 28725                           ;lorawan_aes_cmac.c: 104: {
 28726                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 28727  001A00  0101               	movlb	1	; () banked
 28728  001A02  6B64               	clrf	AESCmac@j& (0+255),b
 28729  001A04                     l13119:
 28730                           
 28731                           ; BSR set to: 1
 28732                           ;lorawan_aes_cmac.c: 106: {
 28733                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 28734  001A04  0E40               	movlw	low AESCmac@y
 28735  001A06  2564               	addwf	AESCmac@j& (0+255),w,b
 28736  001A08  6ED9               	movwf	fsr2l,c
 28737  001A0A  6ADA               	clrf	fsr2h,c
 28738  001A0C  0E01               	movlw	high AESCmac@y
 28739  001A0E  22DA               	addwfc	fsr2h,f,c
 28740  001A10  5165               	movf	AESCmac@i& (0+255),w,b
 28741  001A12  0100               	movlb	0	; () banked
 28742  001A14  6FD3               	movwf	??_AESCmac& (0+255),b
 28743  001A16  6BD4               	clrf	(??_AESCmac+1)& (0+255),b
 28744  001A18  3BD3               	swapf	??_AESCmac& (0+255),f,b
 28745  001A1A  3BD4               	swapf	(??_AESCmac+1)& (0+255),f,b
 28746  001A1C  0EF0               	movlw	240
 28747  001A1E  17D4               	andwf	(??_AESCmac+1)& (0+255),f,b
 28748  001A20  51D3               	movf	??_AESCmac& (0+255),w,b
 28749  001A22  0B0F               	andlw	15
 28750  001A24  13D4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28751  001A26  0EF0               	movlw	240
 28752  001A28  17D3               	andwf	??_AESCmac& (0+255),f,b
 28753  001A2A  C0D0  F0D5         	movff	AESCmac@input,??_AESCmac+2
 28754  001A2E  C0D1  F0D6         	movff	AESCmac@input+1,??_AESCmac+3
 28755  001A32  51D3               	movf	??_AESCmac& (0+255),w,b
 28756  001A34  27D5               	addwf	(??_AESCmac+2)& (0+255),f,b
 28757  001A36  51D4               	movf	(??_AESCmac+1)& (0+255),w,b
 28758  001A38  23D6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 28759  001A3A  0101               	movlb	1	; () banked
 28760  001A3C  5164               	movf	AESCmac@j& (0+255),w,b
 28761  001A3E  0100               	movlb	0	; () banked
 28762  001A40  25D5               	addwf	(??_AESCmac+2)& (0+255),w,b
 28763  001A42  6EE9               	movwf	fsr0l,c
 28764  001A44  0E00               	movlw	0
 28765  001A46  21D6               	addwfc	(??_AESCmac+3)& (0+255),w,b
 28766  001A48  6EEA               	movwf	fsr0h,c
 28767  001A4A  50EF               	movf	indf0,w,c
 28768  001A4C  6FD7               	movwf	(??_AESCmac+4)& (0+255),b
 28769  001A4E  0E50               	movlw	low AESCmac@x
 28770  001A50  0101               	movlb	1	; () banked
 28771  001A52  2564               	addwf	AESCmac@j& (0+255),w,b
 28772  001A54  6EE9               	movwf	fsr0l,c
 28773  001A56  6AEA               	clrf	fsr0h,c
 28774  001A58  0E01               	movlw	high AESCmac@x
 28775  001A5A  22EA               	addwfc	fsr0h,f,c
 28776  001A5C  50EF               	movf	indf0,w,c
 28777  001A5E  0100               	movlb	0	; () banked
 28778  001A60  19D7               	xorwf	(??_AESCmac+4)& (0+255),w,b
 28779  001A62  6EDF               	movwf	indf2,c
 28780                           
 28781                           ; BSR set to: 0
 28782  001A64  0101               	movlb	1	; () banked
 28783  001A66  2B64               	incf	AESCmac@j& (0+255),f,b
 28784                           
 28785                           ; BSR set to: 1
 28786  001A68  0E0F               	movlw	15
 28787  001A6A  6564               	cpfsgt	AESCmac@j& (0+255),b
 28788  001A6C  D7CB               	goto	l13119
 28789                           
 28790                           ; BSR set to: 1
 28791                           ;lorawan_aes_cmac.c: 108: }
 28792                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 28793  001A6E  0E50               	movlw	low AESCmac@x
 28794  001A70  0100               	movlb	0	; () banked
 28795  001A72  6F64               	movwf	memcpy@d1& (0+255),b
 28796  001A74  0E01               	movlw	high AESCmac@x
 28797  001A76  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 28798  001A78  0E40               	movlw	low AESCmac@y
 28799  001A7A  6F66               	movwf	memcpy@s1& (0+255),b
 28800  001A7C  0E01               	movlw	high AESCmac@y
 28801  001A7E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28802  001A80  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28803  001A82  0E10               	movlw	16
 28804  001A84  6F68               	movwf	memcpy@n& (0+255),b
 28805  001A86  EC6A  F034         	call	_memcpy	;wreg free
 28806                           
 28807                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 28808  001A8A  0E50               	movlw	low AESCmac@x
 28809  001A8C  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 28810  001A8E  0E01               	movlw	high AESCmac@x
 28811  001A90  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 28812  001A92  C0CC  F092         	movff	AESCmac@key,AESEncodeLoRa@key
 28813  001A96  C0CD  F093         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 28814  001A9A  ECC3  F039         	call	_AESEncodeLoRa	;wreg free
 28815                           
 28816                           ; BSR set to: 0
 28817  001A9E  0101               	movlb	1	; () banked
 28818  001AA0  2B65               	incf	AESCmac@i& (0+255),f,b
 28819  001AA2                     l13129:
 28820                           
 28821                           ; BSR set to: 1
 28822  001AA2  0100               	movlb	0	; () banked
 28823  001AA4  69D3               	setf	??_AESCmac& (0+255),b
 28824  001AA6  69D4               	setf	(??_AESCmac+1)& (0+255),b
 28825  001AA8  0101               	movlb	1	; () banked
 28826  001AAA  5163               	movf	AESCmac@n& (0+255),w,b
 28827  001AAC  0100               	movlb	0	; () banked
 28828  001AAE  6FD5               	movwf	(??_AESCmac+2)& (0+255),b
 28829  001AB0  6BD6               	clrf	(??_AESCmac+3)& (0+255),b
 28830  001AB2  51D3               	movf	??_AESCmac& (0+255),w,b
 28831  001AB4  27D5               	addwf	(??_AESCmac+2)& (0+255),f,b
 28832  001AB6  51D4               	movf	(??_AESCmac+1)& (0+255),w,b
 28833  001AB8  23D6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 28834  001ABA  0101               	movlb	1	; () banked
 28835  001ABC  5165               	movf	AESCmac@i& (0+255),w,b
 28836  001ABE  0100               	movlb	0	; () banked
 28837  001AC0  6FD7               	movwf	(??_AESCmac+4)& (0+255),b
 28838  001AC2  6BD8               	clrf	(??_AESCmac+5)& (0+255),b
 28839  001AC4  51D5               	movf	(??_AESCmac+2)& (0+255),w,b
 28840  001AC6  5DD7               	subwf	(??_AESCmac+4)& (0+255),w,b
 28841  001AC8  51D8               	movf	(??_AESCmac+5)& (0+255),w,b
 28842  001ACA  0A80               	xorlw	128
 28843  001ACC  6FD9               	movwf	(??_AESCmac+6)& (0+255),b
 28844  001ACE  51D6               	movf	(??_AESCmac+3)& (0+255),w,b
 28845  001AD0  0A80               	xorlw	128
 28846  001AD2  59D9               	subwfb	(??_AESCmac+6)& (0+255),w,b
 28847  001AD4  E395               	bnc	l1424
 28848                           
 28849                           ; BSR set to: 0
 28850                           ;lorawan_aes_cmac.c: 111: }
 28851                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 28852  001AD6  0101               	movlb	1	; () banked
 28853  001AD8  6B65               	clrf	AESCmac@i& (0+255),b
 28854  001ADA                     l13135:
 28855                           
 28856                           ; BSR set to: 1
 28857                           ;lorawan_aes_cmac.c: 114: {
 28858                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 28859  001ADA  0E40               	movlw	low AESCmac@y
 28860  001ADC  2565               	addwf	AESCmac@i& (0+255),w,b
 28861  001ADE  6ED9               	movwf	fsr2l,c
 28862  001AE0  6ADA               	clrf	fsr2h,c
 28863  001AE2  0E01               	movlw	high AESCmac@y
 28864  001AE4  22DA               	addwfc	fsr2h,f,c
 28865  001AE6  0E20               	movlw	low AESCmac@mLast
 28866  001AE8  2565               	addwf	AESCmac@i& (0+255),w,b
 28867  001AEA  6EE9               	movwf	fsr0l,c
 28868  001AEC  6AEA               	clrf	fsr0h,c
 28869  001AEE  0E01               	movlw	high AESCmac@mLast
 28870  001AF0  22EA               	addwfc	fsr0h,f,c
 28871  001AF2  50EF               	movf	indf0,w,c
 28872  001AF4  0100               	movlb	0	; () banked
 28873  001AF6  6FD3               	movwf	??_AESCmac& (0+255),b
 28874  001AF8  0E50               	movlw	low AESCmac@x
 28875  001AFA  0101               	movlb	1	; () banked
 28876  001AFC  2565               	addwf	AESCmac@i& (0+255),w,b
 28877  001AFE  6EE9               	movwf	fsr0l,c
 28878  001B00  6AEA               	clrf	fsr0h,c
 28879  001B02  0E01               	movlw	high AESCmac@x
 28880  001B04  22EA               	addwfc	fsr0h,f,c
 28881  001B06  50EF               	movf	indf0,w,c
 28882  001B08  0100               	movlb	0	; () banked
 28883  001B0A  19D3               	xorwf	??_AESCmac& (0+255),w,b
 28884  001B0C  6EDF               	movwf	indf2,c
 28885                           
 28886                           ; BSR set to: 0
 28887  001B0E  0101               	movlb	1	; () banked
 28888  001B10  2B65               	incf	AESCmac@i& (0+255),f,b
 28889                           
 28890                           ; BSR set to: 1
 28891  001B12  0E0F               	movlw	15
 28892  001B14  6565               	cpfsgt	AESCmac@i& (0+255),b
 28893  001B16  D7E1               	goto	l13135
 28894                           
 28895                           ; BSR set to: 1
 28896                           ;lorawan_aes_cmac.c: 116: }
 28897                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 28898  001B18  0E40               	movlw	low AESCmac@y
 28899  001B1A  0100               	movlb	0	; () banked
 28900  001B1C  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 28901  001B1E  0E01               	movlw	high AESCmac@y
 28902  001B20  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 28903  001B22  C0CC  F092         	movff	AESCmac@key,AESEncodeLoRa@key
 28904  001B26  C0CD  F093         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 28905  001B2A  ECC3  F039         	call	_AESEncodeLoRa	;wreg free
 28906                           
 28907                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 28908  001B2E  C0CE  F064         	movff	AESCmac@output,memcpy@d1
 28909  001B32  C0CF  F065         	movff	AESCmac@output+1,memcpy@d1+1
 28910  001B36  0E40               	movlw	low AESCmac@y
 28911  001B38  6F66               	movwf	memcpy@s1& (0+255),b
 28912  001B3A  0E01               	movlw	high AESCmac@y
 28913  001B3C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28914  001B3E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28915  001B40  0E10               	movlw	16
 28916  001B42  6F68               	movwf	memcpy@n& (0+255),b
 28917  001B44  EF6A  F034         	goto	_memcpy	;wreg free
 28918  001B48                     __end_of_AESCmac:
 28919                           	opt stack 0
 28920                           tosu	equ	0xFFF
 28921                           tosh	equ	0xFFE
 28922                           tosl	equ	0xFFD
 28923                           pclath	equ	0xFFA
 28924                           tblptru	equ	0xFF8
 28925                           tblptrh	equ	0xFF7
 28926                           tblptrl	equ	0xFF6
 28927                           tablat	equ	0xFF5
 28928                           prodh	equ	0xFF4
 28929                           prodl	equ	0xFF3
 28930                           intcon	equ	0xFF2
 28931                           indf0	equ	0xFEF
 28932                           postinc0	equ	0xFEE
 28933                           fsr0h	equ	0xFEA
 28934                           fsr0l	equ	0xFE9
 28935                           wreg	equ	0xFE8
 28936                           postinc1	equ	0xFE6
 28937                           postdec1	equ	0xFE5
 28938                           plusw1	equ	0xFE3
 28939                           fsr1h	equ	0xFE2
 28940                           fsr1l	equ	0xFE1
 28941                           indf2	equ	0xFDF
 28942                           postinc2	equ	0xFDE
 28943                           postdec2	equ	0xFDD
 28944                           plusw2	equ	0xFDB
 28945                           fsr2h	equ	0xFDA
 28946                           fsr2l	equ	0xFD9
 28947                           status	equ	0xFD8
 28948                           
 28949 ;; *************** function _GenerateSubkey *****************
 28950 ;; Defined at:
 28951 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 28952 ;; Parameters:    Size  Location     Type
 28953 ;;  key             2   68[BANK0 ] PTR unsigned char 
 28954 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28955 ;;  k1              2   70[BANK0 ] PTR unsigned char 
 28956 ;;		 -> AESCmac@k1(16), 
 28957 ;;  k2              2   72[BANK0 ] PTR unsigned char 
 28958 ;;		 -> AESCmac@k2(16), 
 28959 ;; Auto vars:     Size  Location     Type
 28960 ;;  l              16   91[BANK0 ] unsigned char [16]
 28961 ;;  const_Rb       16   75[BANK0 ] unsigned char [16]
 28962 ;;  i               1  107[BANK0 ] unsigned char 
 28963 ;; Return value:  Size  Location     Type
 28964 ;;                  1    wreg      void 
 28965 ;; Registers used:
 28966 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28967 ;; Tracked objects:
 28968 ;;		On entry : F/0
 28969 ;;		On exit  : F/0
 28970 ;;		Unchanged: 0/0
 28971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28972 ;;      Params:         0       6       0       0       0       0       0       0       0
 28973 ;;      Locals:         0      33       0       0       0       0       0       0       0
 28974 ;;      Temps:          0       1       0       0       0       0       0       0       0
 28975 ;;      Totals:         0      40       0       0       0       0       0       0       0
 28976 ;;Total ram usage:       40 bytes
 28977 ;; Hardware stack levels used:    1
 28978 ;; Hardware stack levels required when called:   10
 28979 ;; This function calls:
 28980 ;;		_AESEncodeLoRa
 28981 ;;		_FillSubKey
 28982 ;;		_memset
 28983 ;; This function is called by:
 28984 ;;		_AESCmac
 28985 ;; This function uses a non-reentrant model
 28986 ;;
 28987                           
 28988                           	psect	text150
 28989  0048B8                     __ptext150:
 28990                           	opt stack 0
 28991  0048B8                     _GenerateSubkey:
 28992                           	opt stack 16
 28993                           
 28994                           ; BSR set to: 0
 28995                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 28996                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 28997                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 28998                           
 28999                           ; BSR set to: 0
 29000                           
 29001                           ; BSR set to: 0
 29002                           ;incstack = 0
 29003  0048B8  EE21  F0C1         	lfsr	2,GenerateSubkey@F17044
 29004  0048BC  EE00  F0AB         	lfsr	0,GenerateSubkey@const_Rb
 29005  0048C0  0E0F               	movlw	15
 29006  0048C2                     u13781:
 29007  0048C2  CFDB FFEB          	movff	plusw2,plusw0
 29008  0048C6  06E8               	decf	wreg,f,c
 29009  0048C8  E2FC               	bc	u13781
 29010                           
 29011                           ; BSR set to: 0
 29012                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 29013  0048CA  0EBB               	movlw	low GenerateSubkey@l
 29014  0048CC  6F64               	movwf	memset@p1& (0+255),b
 29015  0048CE  6B65               	clrf	(memset@p1+1)& (0+255),b
 29016  0048D0  6B67               	clrf	(memset@c+1)& (0+255),b
 29017  0048D2  6B66               	clrf	memset@c& (0+255),b
 29018  0048D4  6B69               	clrf	(memset@n+1)& (0+255),b
 29019  0048D6  0E10               	movlw	16
 29020  0048D8  6F68               	movwf	memset@n& (0+255),b
 29021  0048DA  EC9A  F039         	call	_memset	;wreg free
 29022                           
 29023                           ; BSR set to: 0
 29024                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 29025  0048DE  0EBB               	movlw	low GenerateSubkey@l
 29026  0048E0  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 29027  0048E2  6B91               	clrf	(AESEncodeLoRa@block+1)& (0+255),b
 29028  0048E4  C0A4  F092         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 29029  0048E8  C0A5  F093         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 29030  0048EC  ECC3  F039         	call	_AESEncodeLoRa	;wreg free
 29031                           
 29032                           ; BSR set to: 0
 29033                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 29034  0048F0  BFBB               	btfsc	GenerateSubkey@l& (0+255),7,b
 29035  0048F2  D00C               	goto	l12709
 29036                           
 29037                           ; BSR set to: 0
 29038                           ;lorawan_aes_cmac.c: 138: {
 29039                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 29040  0048F4  0EBB               	movlw	low GenerateSubkey@l
 29041  0048F6  6F64               	movwf	FillSubKey@source& (0+255),b
 29042  0048F8  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29043  0048FA  C0A6  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29044  0048FE  C0A7  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29045  004902  0E10               	movlw	16
 29046  004904  6F68               	movwf	FillSubKey@size& (0+255),b
 29047  004906  ECF5  F035         	call	_FillSubKey	;wreg free
 29048                           
 29049                           ;lorawan_aes_cmac.c: 140: }
 29050  00490A  D01E               	goto	l12723
 29051  00490C                     l12709:
 29052                           
 29053                           ; BSR set to: 0
 29054                           ;lorawan_aes_cmac.c: 141: else
 29055                           ;lorawan_aes_cmac.c: 142: {
 29056                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 29057  00490C  0EBB               	movlw	low GenerateSubkey@l
 29058  00490E  6F64               	movwf	FillSubKey@source& (0+255),b
 29059  004910  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29060  004912  C0A6  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29061  004916  C0A7  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29062  00491A  0E10               	movlw	16
 29063  00491C  6F68               	movwf	FillSubKey@size& (0+255),b
 29064  00491E  ECF5  F035         	call	_FillSubKey	;wreg free
 29065                           
 29066                           ; BSR set to: 0
 29067                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 29068  004922  6BCB               	clrf	GenerateSubkey@i& (0+255),b
 29069  004924                     l12717:
 29070                           
 29071                           ; BSR set to: 0
 29072                           ;lorawan_aes_cmac.c: 146: {
 29073                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 29074  004924  51CB               	movf	GenerateSubkey@i& (0+255),w,b
 29075  004926  0FAB               	addlw	low GenerateSubkey@const_Rb
 29076  004928  6ED9               	movwf	fsr2l,c
 29077  00492A  6ADA               	clrf	fsr2h,c
 29078  00492C  50DF               	movf	indf2,w,c
 29079  00492E  6FAA               	movwf	??_GenerateSubkey& (0+255),b
 29080  004930  51CB               	movf	GenerateSubkey@i& (0+255),w,b
 29081  004932  25A6               	addwf	GenerateSubkey@k1& (0+255),w,b
 29082  004934  6ED9               	movwf	fsr2l,c
 29083  004936  0E00               	movlw	0
 29084  004938  21A7               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 29085  00493A  6EDA               	movwf	fsr2h,c
 29086  00493C  51AA               	movf	??_GenerateSubkey& (0+255),w,b
 29087  00493E  1ADF               	xorwf	indf2,f,c
 29088                           
 29089                           ; BSR set to: 0
 29090  004940  2BCB               	incf	GenerateSubkey@i& (0+255),f,b
 29091                           
 29092                           ; BSR set to: 0
 29093  004942  0E0F               	movlw	15
 29094  004944  65CB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29095  004946  D7EE               	goto	l12717
 29096  004948                     l12723:
 29097                           
 29098                           ; BSR set to: 0
 29099                           ;lorawan_aes_cmac.c: 148: }
 29100                           ;lorawan_aes_cmac.c: 149: }
 29101                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 29102  004948  C0A6  FFD9         	movff	GenerateSubkey@k1,fsr2l
 29103  00494C  C0A7  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 29104  004950  BEDF               	btfsc	indf2,7,c
 29105  004952  D00C               	goto	l12727
 29106                           
 29107                           ; BSR set to: 0
 29108                           ;lorawan_aes_cmac.c: 153: {
 29109                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 29110  004954  C0A6  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29111  004958  C0A7  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29112  00495C  C0A8  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29113  004960  C0A9  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29114  004964  0E10               	movlw	16
 29115  004966  6F68               	movwf	FillSubKey@size& (0+255),b
 29116  004968  EFF5  F035         	goto	_FillSubKey	;wreg free
 29117  00496C                     l12727:
 29118                           
 29119                           ; BSR set to: 0
 29120                           ;lorawan_aes_cmac.c: 156: else
 29121                           ;lorawan_aes_cmac.c: 157: {
 29122                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 29123  00496C  C0A6  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29124  004970  C0A7  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29125  004974  C0A8  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29126  004978  C0A9  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29127  00497C  0E10               	movlw	16
 29128  00497E  6F68               	movwf	FillSubKey@size& (0+255),b
 29129  004980  ECF5  F035         	call	_FillSubKey	;wreg free
 29130                           
 29131                           ; BSR set to: 0
 29132                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 29133  004984  6BCB               	clrf	GenerateSubkey@i& (0+255),b
 29134  004986                     l12735:
 29135                           
 29136                           ; BSR set to: 0
 29137                           ;lorawan_aes_cmac.c: 161: {
 29138                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 29139  004986  51CB               	movf	GenerateSubkey@i& (0+255),w,b
 29140  004988  25A8               	addwf	GenerateSubkey@k2& (0+255),w,b
 29141  00498A  6ED9               	movwf	fsr2l,c
 29142  00498C  0E00               	movlw	0
 29143  00498E  21A9               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29144  004990  6EDA               	movwf	fsr2h,c
 29145  004992  51CB               	movf	GenerateSubkey@i& (0+255),w,b
 29146  004994  0FAB               	addlw	low GenerateSubkey@const_Rb
 29147  004996  6EE9               	movwf	fsr0l,c
 29148  004998  6AEA               	clrf	fsr0h,c
 29149  00499A  50EF               	movf	indf0,w,c
 29150  00499C  6FAA               	movwf	??_GenerateSubkey& (0+255),b
 29151  00499E  51CB               	movf	GenerateSubkey@i& (0+255),w,b
 29152  0049A0  25A8               	addwf	GenerateSubkey@k2& (0+255),w,b
 29153  0049A2  6EE9               	movwf	fsr0l,c
 29154  0049A4  0E00               	movlw	0
 29155  0049A6  21A9               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29156  0049A8  6EEA               	movwf	fsr0h,c
 29157  0049AA  50EF               	movf	indf0,w,c
 29158  0049AC  19AA               	xorwf	??_GenerateSubkey& (0+255),w,b
 29159  0049AE  6EDF               	movwf	indf2,c
 29160                           
 29161                           ; BSR set to: 0
 29162  0049B0  2BCB               	incf	GenerateSubkey@i& (0+255),f,b
 29163                           
 29164                           ; BSR set to: 0
 29165  0049B2  0E0F               	movlw	15
 29166  0049B4  65CB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29167  0049B6  D7E7               	goto	l12735
 29168  0049B8  0C0F               	retlw	15
 29169  0049BA                     __end_of_GenerateSubkey:
 29170                           	opt stack 0
 29171                           tosu	equ	0xFFF
 29172                           tosh	equ	0xFFE
 29173                           tosl	equ	0xFFD
 29174                           pclath	equ	0xFFA
 29175                           tblptru	equ	0xFF8
 29176                           tblptrh	equ	0xFF7
 29177                           tblptrl	equ	0xFF6
 29178                           tablat	equ	0xFF5
 29179                           prodh	equ	0xFF4
 29180                           prodl	equ	0xFF3
 29181                           intcon	equ	0xFF2
 29182                           indf0	equ	0xFEF
 29183                           postinc0	equ	0xFEE
 29184                           plusw0	equ	0xFEB
 29185                           fsr0h	equ	0xFEA
 29186                           fsr0l	equ	0xFE9
 29187                           wreg	equ	0xFE8
 29188                           postinc1	equ	0xFE6
 29189                           postdec1	equ	0xFE5
 29190                           plusw1	equ	0xFE3
 29191                           fsr1h	equ	0xFE2
 29192                           fsr1l	equ	0xFE1
 29193                           indf2	equ	0xFDF
 29194                           postinc2	equ	0xFDE
 29195                           postdec2	equ	0xFDD
 29196                           plusw2	equ	0xFDB
 29197                           fsr2h	equ	0xFDA
 29198                           fsr2l	equ	0xFD9
 29199                           status	equ	0xFD8
 29200                           
 29201 ;; *************** function _FillSubKey *****************
 29202 ;; Defined at:
 29203 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29204 ;; Parameters:    Size  Location     Type
 29205 ;;  source          2    4[BANK0 ] PTR unsigned char 
 29206 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 29207 ;;  key             2    6[BANK0 ] PTR unsigned char 
 29208 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 29209 ;;  size            1    8[BANK0 ] unsigned char 
 29210 ;; Auto vars:     Size  Location     Type
 29211 ;;  i               1   11[BANK0 ] unsigned char 
 29212 ;;  carry           1   10[BANK0 ] unsigned char 
 29213 ;; Return value:  Size  Location     Type
 29214 ;;                  1    wreg      void 
 29215 ;; Registers used:
 29216 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 29217 ;; Tracked objects:
 29218 ;;		On entry : F/0
 29219 ;;		On exit  : F/0
 29220 ;;		Unchanged: 0/0
 29221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29222 ;;      Params:         0       5       0       0       0       0       0       0       0
 29223 ;;      Locals:         0       2       0       0       0       0       0       0       0
 29224 ;;      Temps:          0       1       0       0       0       0       0       0       0
 29225 ;;      Totals:         0       8       0       0       0       0       0       0       0
 29226 ;;Total ram usage:        8 bytes
 29227 ;; Hardware stack levels used:    1
 29228 ;; Hardware stack levels required when called:    7
 29229 ;; This function calls:
 29230 ;;		Nothing
 29231 ;; This function is called by:
 29232 ;;		_GenerateSubkey
 29233 ;; This function uses a non-reentrant model
 29234 ;;
 29235                           
 29236                           	psect	text151
 29237  006BEA                     __ptext151:
 29238                           	opt stack 0
 29239  006BEA                     _FillSubKey:
 29240                           	opt stack 18
 29241                           
 29242                           ; BSR set to: 0
 29243                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 29244                           
 29245                           ; BSR set to: 0
 29246                           ;incstack = 0
 29247  006BEA  6B6B               	clrf	FillSubKey@i& (0+255),b
 29248                           
 29249                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 29250  006BEC  6B6A               	clrf	FillSubKey@carry& (0+255),b
 29251                           
 29252                           ;lorawan_aes_cmac.c: 172: i=size;
 29253  006BEE  C068  F06B         	movff	FillSubKey@size,FillSubKey@i
 29254                           
 29255                           ;lorawan_aes_cmac.c: 174: while(i--)
 29256  006BF2  D01C               	goto	l12425
 29257  006BF4                     l12421:
 29258                           
 29259                           ; BSR set to: 0
 29260                           ;lorawan_aes_cmac.c: 175: {
 29261                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 29262  006BF4  516B               	movf	FillSubKey@i& (0+255),w,b
 29263  006BF6  2566               	addwf	FillSubKey@key& (0+255),w,b
 29264  006BF8  6ED9               	movwf	fsr2l,c
 29265  006BFA  0E00               	movlw	0
 29266  006BFC  2167               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 29267  006BFE  6EDA               	movwf	fsr2h,c
 29268  006C00  516B               	movf	FillSubKey@i& (0+255),w,b
 29269  006C02  2564               	addwf	FillSubKey@source& (0+255),w,b
 29270  006C04  6EE9               	movwf	fsr0l,c
 29271  006C06  0E00               	movlw	0
 29272  006C08  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29273  006C0A  6EEA               	movwf	fsr0h,c
 29274  006C0C  50EF               	movf	indf0,w,c
 29275  006C0E  6F69               	movwf	??_FillSubKey& (0+255),b
 29276  006C10  90D8               	bcf	status,0,c
 29277  006C12  3569               	rlcf	??_FillSubKey& (0+255),w,b
 29278  006C14  116A               	iorwf	FillSubKey@carry& (0+255),w,b
 29279  006C16  6EDF               	movwf	indf2,c
 29280                           
 29281                           ; BSR set to: 0
 29282                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 29283  006C18  516B               	movf	FillSubKey@i& (0+255),w,b
 29284  006C1A  2564               	addwf	FillSubKey@source& (0+255),w,b
 29285  006C1C  6ED9               	movwf	fsr2l,c
 29286  006C1E  0E00               	movlw	0
 29287  006C20  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29288  006C22  6EDA               	movwf	fsr2h,c
 29289  006C24  0E01               	movlw	1
 29290  006C26  AEDF               	btfss	indf2,7,c
 29291  006C28  0E00               	movlw	0
 29292  006C2A  6F6A               	movwf	FillSubKey@carry& (0+255),b
 29293  006C2C                     l12425:
 29294                           
 29295                           ; BSR set to: 0
 29296  006C2C  076B               	decf	FillSubKey@i& (0+255),f,b
 29297  006C2E  296B               	incf	FillSubKey@i& (0+255),w,b
 29298  006C30  E1E1               	bnz	l12421
 29299                           
 29300                           ; BSR set to: 0
 29301  006C32  0012               	return		;funcret
 29302  006C34                     __end_of_FillSubKey:
 29303                           	opt stack 0
 29304                           tosu	equ	0xFFF
 29305                           tosh	equ	0xFFE
 29306                           tosl	equ	0xFFD
 29307                           pclath	equ	0xFFA
 29308                           tblptru	equ	0xFF8
 29309                           tblptrh	equ	0xFF7
 29310                           tblptrl	equ	0xFF6
 29311                           tablat	equ	0xFF5
 29312                           prodh	equ	0xFF4
 29313                           prodl	equ	0xFF3
 29314                           intcon	equ	0xFF2
 29315                           indf0	equ	0xFEF
 29316                           postinc0	equ	0xFEE
 29317                           plusw0	equ	0xFEB
 29318                           fsr0h	equ	0xFEA
 29319                           fsr0l	equ	0xFE9
 29320                           wreg	equ	0xFE8
 29321                           postinc1	equ	0xFE6
 29322                           postdec1	equ	0xFE5
 29323                           plusw1	equ	0xFE3
 29324                           fsr1h	equ	0xFE2
 29325                           fsr1l	equ	0xFE1
 29326                           indf2	equ	0xFDF
 29327                           postinc2	equ	0xFDE
 29328                           postdec2	equ	0xFDD
 29329                           plusw2	equ	0xFDB
 29330                           fsr2h	equ	0xFDA
 29331                           fsr2l	equ	0xFD9
 29332                           status	equ	0xFD8
 29333                           
 29334 ;; *************** function _AESEncodeLoRa *****************
 29335 ;; Defined at:
 29336 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 29337 ;; Parameters:    Size  Location     Type
 29338 ;;  block           2   48[BANK0 ] PTR unsigned char 
 29339 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29340 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29341 ;;  key             2   50[BANK0 ] PTR unsigned char 
 29342 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29343 ;; Auto vars:     Size  Location     Type
 29344 ;;  useKey         16   52[BANK0 ] unsigned char [16]
 29345 ;; Return value:  Size  Location     Type
 29346 ;;                  1    wreg      void 
 29347 ;; Registers used:
 29348 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29349 ;; Tracked objects:
 29350 ;;		On entry : F/0
 29351 ;;		On exit  : F/0
 29352 ;;		Unchanged: 0/0
 29353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29354 ;;      Params:         0       4       0       0       0       0       0       0       0
 29355 ;;      Locals:         0      16       0       0       0       0       0       0       0
 29356 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29357 ;;      Totals:         0      20       0       0       0       0       0       0       0
 29358 ;;Total ram usage:       20 bytes
 29359 ;; Hardware stack levels used:    1
 29360 ;; Hardware stack levels required when called:    9
 29361 ;; This function calls:
 29362 ;;		_AESEncode
 29363 ;;		_memcpy
 29364 ;; This function is called by:
 29365 ;;		_AESCmac
 29366 ;;		_GenerateSubkey
 29367 ;;		_LORAWAN_RxDone
 29368 ;;		_ComputeSessionKeys
 29369 ;;		_EncryptFRMPayload
 29370 ;; This function uses a non-reentrant model
 29371 ;;
 29372                           
 29373                           	psect	text152
 29374  007386                     __ptext152:
 29375                           	opt stack 0
 29376  007386                     _AESEncodeLoRa:
 29377                           	opt stack 17
 29378                           
 29379                           ; BSR set to: 0
 29380                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 29381                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 29382                           
 29383                           ; BSR set to: 0
 29384                           ;incstack = 0
 29385  007386  0E94               	movlw	low AESEncodeLoRa@useKey
 29386  007388  6F64               	movwf	memcpy@d1& (0+255),b
 29387  00738A  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 29388  00738C  C092  F066         	movff	AESEncodeLoRa@key,memcpy@s1
 29389  007390  C093  F067         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 29390  007394  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29391  007396  0E10               	movlw	16
 29392  007398  6F68               	movwf	memcpy@n& (0+255),b
 29393  00739A  EC6A  F034         	call	_memcpy	;wreg free
 29394                           
 29395                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 29396  00739E  C090  F06A         	movff	AESEncodeLoRa@block,AESEncode@block
 29397  0073A2  C091  F06B         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 29398  0073A6  0E94               	movlw	low AESEncodeLoRa@useKey
 29399  0073A8  6F6C               	movwf	AESEncode@masterKey& (0+255),b
 29400  0073AA  EF9C  F010         	goto	_AESEncode	;wreg free
 29401  0073AE                     __end_of_AESEncodeLoRa:
 29402                           	opt stack 0
 29403                           tosu	equ	0xFFF
 29404                           tosh	equ	0xFFE
 29405                           tosl	equ	0xFFD
 29406                           pclath	equ	0xFFA
 29407                           tblptru	equ	0xFF8
 29408                           tblptrh	equ	0xFF7
 29409                           tblptrl	equ	0xFF6
 29410                           tablat	equ	0xFF5
 29411                           prodh	equ	0xFF4
 29412                           prodl	equ	0xFF3
 29413                           intcon	equ	0xFF2
 29414                           indf0	equ	0xFEF
 29415                           postinc0	equ	0xFEE
 29416                           plusw0	equ	0xFEB
 29417                           fsr0h	equ	0xFEA
 29418                           fsr0l	equ	0xFE9
 29419                           wreg	equ	0xFE8
 29420                           postinc1	equ	0xFE6
 29421                           postdec1	equ	0xFE5
 29422                           plusw1	equ	0xFE3
 29423                           fsr1h	equ	0xFE2
 29424                           fsr1l	equ	0xFE1
 29425                           indf2	equ	0xFDF
 29426                           postinc2	equ	0xFDE
 29427                           postdec2	equ	0xFDD
 29428                           plusw2	equ	0xFDB
 29429                           fsr2h	equ	0xFDA
 29430                           fsr2l	equ	0xFD9
 29431                           status	equ	0xFD8
 29432                           
 29433 ;; *************** function _AESEncode *****************
 29434 ;; Defined at:
 29435 ;;		line 236 in file "mcc_generated_files/LoRaWAN/AES.c"
 29436 ;; Parameters:    Size  Location     Type
 29437 ;;  block           2   10[BANK0 ] PTR unsigned char 
 29438 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29439 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29440 ;;  masterKey       1   12[BANK0 ] PTR unsigned char 
 29441 ;;		 -> AESEncodeLoRa@useKey(16), 
 29442 ;; Auto vars:     Size  Location     Type
 29443 ;;  aux3            1   46[BANK0 ] unsigned char 
 29444 ;;  aux1            1   45[BANK0 ] unsigned char 
 29445 ;;  aux2            1   44[BANK0 ] unsigned char 
 29446 ;;  aux             1   43[BANK0 ] unsigned char 
 29447 ;;  key            16   21[BANK0 ] unsigned char [16]
 29448 ;;  i               1   47[BANK0 ] unsigned char 
 29449 ;; Return value:  Size  Location     Type
 29450 ;;                  1    wreg      void 
 29451 ;; Registers used:
 29452 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29453 ;; Tracked objects:
 29454 ;;		On entry : F/0
 29455 ;;		On exit  : F/0
 29456 ;;		Unchanged: 0/0
 29457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29458 ;;      Params:         0       3       0       0       0       0       0       0       0
 29459 ;;      Locals:         0      27       0       0       0       0       0       0       0
 29460 ;;      Temps:          0       8       0       0       0       0       0       0       0
 29461 ;;      Totals:         0      38       0       0       0       0       0       0       0
 29462 ;;Total ram usage:       38 bytes
 29463 ;; Hardware stack levels used:    1
 29464 ;; Hardware stack levels required when called:    8
 29465 ;; This function calls:
 29466 ;;		_EncKeySchedule
 29467 ;;		_EncodeShiftRow
 29468 ;; This function is called by:
 29469 ;;		_AESEncodeLoRa
 29470 ;; This function uses a non-reentrant model
 29471 ;;
 29472                           
 29473                           	psect	text153
 29474  002138                     __ptext153:
 29475                           	opt stack 0
 29476  002138                     _AESEncode:
 29477                           	opt stack 17
 29478                           
 29479                           ; BSR set to: 0
 29480                           ;AES.c: 238: unsigned char i;
 29481                           ;AES.c: 240: unsigned char key[16];
 29482                           ;AES.c: 242: for (i = 0; i < 16; i++)
 29483                           
 29484                           ; BSR set to: 0
 29485                           ;incstack = 0
 29486  002138  6B8F               	clrf	AESEncode@i& (0+255),b
 29487  00213A                     l12025:
 29488                           
 29489                           ; BSR set to: 0
 29490                           ;AES.c: 243: {
 29491                           ;AES.c: 244: key[i] = masterKey[i];
 29492  00213A  516C               	movf	AESEncode@masterKey& (0+255),w,b
 29493  00213C  258F               	addwf	AESEncode@i& (0+255),w,b
 29494  00213E  6ED9               	movwf	fsr2l,c
 29495  002140  6ADA               	clrf	fsr2h,c
 29496  002142  518F               	movf	AESEncode@i& (0+255),w,b
 29497  002144  0F75               	addlw	low AESEncode@key
 29498  002146  6EE9               	movwf	fsr0l,c
 29499  002148  6AEA               	clrf	fsr0h,c
 29500  00214A  CFDF FFEF          	movff	indf2,indf0
 29501                           
 29502                           ; BSR set to: 0
 29503  00214E  2B8F               	incf	AESEncode@i& (0+255),f,b
 29504                           
 29505                           ; BSR set to: 0
 29506  002150  0E0F               	movlw	15
 29507  002152  658F               	cpfsgt	AESEncode@i& (0+255),b
 29508  002154  D7F2               	goto	l12025
 29509                           
 29510                           ; BSR set to: 0
 29511                           ;AES.c: 245: }
 29512                           ;AES.c: 248: _roundCounter = 10;
 29513  002156  0E0A               	movlw	10
 29514  002158  6E47               	movwf	__roundCounter,c
 29515                           
 29516                           ;AES.c: 250: _rcon = 0x01;
 29517  00215A  0E01               	movlw	1
 29518  00215C  6E46               	movwf	__rcon,c
 29519                           
 29520                           ; BSR set to: 0
 29521                           ;AES.c: 253: for(i=0;i<16;i++)
 29522  00215E  6B8F               	clrf	AESEncode@i& (0+255),b
 29523  002160                     l12039:
 29524                           
 29525                           ; BSR set to: 0
 29526                           ;AES.c: 254: {
 29527                           ;AES.c: 255: block[i] ^= key[i];
 29528  002160  518F               	movf	AESEncode@i& (0+255),w,b
 29529  002162  0F75               	addlw	low AESEncode@key
 29530  002164  6ED9               	movwf	fsr2l,c
 29531  002166  6ADA               	clrf	fsr2h,c
 29532  002168  50DF               	movf	indf2,w,c
 29533  00216A  6F6D               	movwf	??_AESEncode& (0+255),b
 29534  00216C  518F               	movf	AESEncode@i& (0+255),w,b
 29535  00216E  256A               	addwf	AESEncode@block& (0+255),w,b
 29536  002170  6ED9               	movwf	fsr2l,c
 29537  002172  0E00               	movlw	0
 29538  002174  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29539  002176  6EDA               	movwf	fsr2h,c
 29540  002178  516D               	movf	??_AESEncode& (0+255),w,b
 29541  00217A  1ADF               	xorwf	indf2,f,c
 29542                           
 29543                           ; BSR set to: 0
 29544  00217C  2B8F               	incf	AESEncode@i& (0+255),f,b
 29545                           
 29546                           ; BSR set to: 0
 29547  00217E  0E0F               	movlw	15
 29548  002180  658F               	cpfsgt	AESEncode@i& (0+255),b
 29549  002182  D7EE               	goto	l12039
 29550  002184                     l2541:
 29551                           
 29552                           ; BSR set to: 0
 29553                           ;AES.c: 259: {
 29554                           ;AES.c: 261: for(i=0;i<16;i++)
 29555  002184  6B8F               	clrf	AESEncode@i& (0+255),b
 29556  002186                     l12049:
 29557                           
 29558                           ; BSR set to: 0
 29559                           ;AES.c: 262: {
 29560                           ;AES.c: 263: block[i]=STable[block[i]];
 29561  002186  518F               	movf	AESEncode@i& (0+255),w,b
 29562  002188  256A               	addwf	AESEncode@block& (0+255),w,b
 29563  00218A  6ED9               	movwf	fsr2l,c
 29564  00218C  0E00               	movlw	0
 29565  00218E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29566  002190  6EDA               	movwf	fsr2h,c
 29567  002192  50DF               	movf	indf2,w,c
 29568  002194  6F6D               	movwf	??_AESEncode& (0+255),b
 29569  002196  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29570  002198  0E6D               	movlw	low _STable
 29571  00219A  256D               	addwf	??_AESEncode& (0+255),w,b
 29572  00219C  6EF6               	movwf	tblptrl,c
 29573  00219E  0E7E               	movlw	high _STable
 29574  0021A0  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29575  0021A2  6EF7               	movwf	tblptrh,c
 29576  0021A4                     	if	0	;There are less than 3 active tblptr bytes
 29577  0021A4                     	endif
 29578  0021A4  518F               	movf	AESEncode@i& (0+255),w,b
 29579  0021A6  256A               	addwf	AESEncode@block& (0+255),w,b
 29580  0021A8  6ED9               	movwf	fsr2l,c
 29581  0021AA  0E00               	movlw	0
 29582  0021AC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29583  0021AE  6EDA               	movwf	fsr2h,c
 29584  0021B0  0008               	tblrd		*
 29585  0021B2  CFF5 FFDF          	movff	tablat,indf2
 29586                           
 29587                           ; BSR set to: 0
 29588  0021B6  2B8F               	incf	AESEncode@i& (0+255),f,b
 29589                           
 29590                           ; BSR set to: 0
 29591  0021B8  0E0F               	movlw	15
 29592  0021BA  658F               	cpfsgt	AESEncode@i& (0+255),b
 29593  0021BC  D7E4               	goto	l12049
 29594                           
 29595                           ; BSR set to: 0
 29596                           ;AES.c: 264: }
 29597                           ;AES.c: 267: EncodeShiftRow(block);
 29598  0021BE  C06A  F064         	movff	AESEncode@block,EncodeShiftRow@stateTable
 29599  0021C2  C06B  F065         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 29600  0021C6  ECB6  F01E         	call	_EncodeShiftRow	;wreg free
 29601                           
 29602                           ; BSR set to: 0
 29603                           ;AES.c: 270: if(_roundCounter != 1)
 29604  0021CA  0447               	decf	__roundCounter,w,c
 29605  0021CC  E101 D111          	bz	l12097
 29606                           
 29607                           ; BSR set to: 0
 29608                           ;AES.c: 271: {
 29609                           ;AES.c: 272: unsigned char aux,aux1,aux2,aux3;
 29610                           ;AES.c: 274: for(i=0;i<16;i+=4)
 29611  0021D0  6B8F               	clrf	AESEncode@i& (0+255),b
 29612  0021D2                     l12065:
 29613                           
 29614                           ; BSR set to: 0
 29615                           ;AES.c: 275: {
 29616                           ;AES.c: 276: aux1= block[i+0] ^ block[i+1];
 29617  0021D2  518F               	movf	AESEncode@i& (0+255),w,b
 29618  0021D4  256A               	addwf	AESEncode@block& (0+255),w,b
 29619  0021D6  6F6D               	movwf	??_AESEncode& (0+255),b
 29620  0021D8  0E00               	movlw	0
 29621  0021DA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29622  0021DC  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29623  0021DE  296D               	incf	??_AESEncode& (0+255),w,b
 29624  0021E0  6ED9               	movwf	fsr2l,c
 29625  0021E2  0E00               	movlw	0
 29626  0021E4  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29627  0021E6  6EDA               	movwf	fsr2h,c
 29628  0021E8  50DF               	movf	indf2,w,c
 29629  0021EA  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29630  0021EC  518F               	movf	AESEncode@i& (0+255),w,b
 29631  0021EE  256A               	addwf	AESEncode@block& (0+255),w,b
 29632  0021F0  6ED9               	movwf	fsr2l,c
 29633  0021F2  0E00               	movlw	0
 29634  0021F4  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29635  0021F6  6EDA               	movwf	fsr2h,c
 29636  0021F8  50DF               	movf	indf2,w,c
 29637  0021FA  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29638  0021FC  6F8D               	movwf	AESEncode@aux1& (0+255),b
 29639                           
 29640                           ;AES.c: 277: aux3= block[i+2]^block[i+3];
 29641  0021FE  518F               	movf	AESEncode@i& (0+255),w,b
 29642  002200  256A               	addwf	AESEncode@block& (0+255),w,b
 29643  002202  6F6D               	movwf	??_AESEncode& (0+255),b
 29644  002204  0E00               	movlw	0
 29645  002206  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29646  002208  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29647  00220A  0E03               	movlw	3
 29648  00220C  256D               	addwf	??_AESEncode& (0+255),w,b
 29649  00220E  6ED9               	movwf	fsr2l,c
 29650  002210  0E00               	movlw	0
 29651  002212  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29652  002214  6EDA               	movwf	fsr2h,c
 29653  002216  50DF               	movf	indf2,w,c
 29654  002218  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29655  00221A  518F               	movf	AESEncode@i& (0+255),w,b
 29656  00221C  256A               	addwf	AESEncode@block& (0+255),w,b
 29657  00221E  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 29658  002220  0E00               	movlw	0
 29659  002222  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29660  002224  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 29661  002226  0E02               	movlw	2
 29662  002228  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 29663  00222A  6ED9               	movwf	fsr2l,c
 29664  00222C  0E00               	movlw	0
 29665  00222E  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 29666  002230  6EDA               	movwf	fsr2h,c
 29667  002232  50DF               	movf	indf2,w,c
 29668  002234  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29669  002236  6F8E               	movwf	AESEncode@aux3& (0+255),b
 29670                           
 29671                           ; BSR set to: 0
 29672                           ;AES.c: 278: aux = aux1 ^ aux3;
 29673  002238  198D               	xorwf	AESEncode@aux1& (0+255),w,b
 29674  00223A  6F8B               	movwf	AESEncode@aux& (0+255),b
 29675                           
 29676                           ; BSR set to: 0
 29677                           ;AES.c: 279: aux2= block[i+2]^block[i+1];
 29678  00223C  518F               	movf	AESEncode@i& (0+255),w,b
 29679  00223E  256A               	addwf	AESEncode@block& (0+255),w,b
 29680  002240  6F6D               	movwf	??_AESEncode& (0+255),b
 29681  002242  0E00               	movlw	0
 29682  002244  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29683  002246  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29684  002248  296D               	incf	??_AESEncode& (0+255),w,b
 29685  00224A  6ED9               	movwf	fsr2l,c
 29686  00224C  0E00               	movlw	0
 29687  00224E  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29688  002250  6EDA               	movwf	fsr2h,c
 29689  002252  50DF               	movf	indf2,w,c
 29690  002254  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29691  002256  518F               	movf	AESEncode@i& (0+255),w,b
 29692  002258  256A               	addwf	AESEncode@block& (0+255),w,b
 29693  00225A  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 29694  00225C  0E00               	movlw	0
 29695  00225E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29696  002260  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 29697  002262  0E02               	movlw	2
 29698  002264  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 29699  002266  6ED9               	movwf	fsr2l,c
 29700  002268  0E00               	movlw	0
 29701  00226A  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 29702  00226C  6EDA               	movwf	fsr2h,c
 29703  00226E  50DF               	movf	indf2,w,c
 29704  002270  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29705  002272  6F8C               	movwf	AESEncode@aux2& (0+255),b
 29706                           
 29707                           ;AES.c: 281: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 29708  002274  0E7F               	movlw	127
 29709  002276  658D               	cpfsgt	AESEncode@aux1& (0+255),b
 29710  002278  D00C               	goto	l12073
 29711                           
 29712                           ; BSR set to: 0
 29713  00227A  0E1B               	movlw	27
 29714  00227C  C08D  F06D         	movff	AESEncode@aux1,??_AESEncode
 29715  002280  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29716  002282  90D8               	bcf	status,0,c
 29717  002284  376D               	rlcf	??_AESEncode& (0+255),f,b
 29718  002286  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 29719  002288  196D               	xorwf	??_AESEncode& (0+255),w,b
 29720  00228A  6F85               	movwf	_AESEncode$3781& (0+255),b
 29721  00228C  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 29722  00228E  6F86               	movwf	(_AESEncode$3781+1)& (0+255),b
 29723  002290  D005               	goto	l12075
 29724  002292                     l12073:
 29725                           
 29726                           ; BSR set to: 0
 29727  002292  90D8               	bcf	status,0,c
 29728  002294  358D               	rlcf	AESEncode@aux1& (0+255),w,b
 29729  002296  6F85               	movwf	_AESEncode$3781& (0+255),b
 29730  002298  6B86               	clrf	(_AESEncode$3781+1)& (0+255),b
 29731  00229A  3786               	rlcf	(_AESEncode$3781+1)& (0+255),f,b
 29732  00229C                     l12075:
 29733                           
 29734                           ; BSR set to: 0
 29735  00229C  C085  F08D         	movff	_AESEncode$3781,AESEncode@aux1
 29736                           
 29737                           ;AES.c: 282: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 29738  0022A0  0E7F               	movlw	127
 29739  0022A2  658C               	cpfsgt	AESEncode@aux2& (0+255),b
 29740  0022A4  D00C               	goto	l12079
 29741                           
 29742                           ; BSR set to: 0
 29743  0022A6  0E1B               	movlw	27
 29744  0022A8  C08C  F06D         	movff	AESEncode@aux2,??_AESEncode
 29745  0022AC  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29746  0022AE  90D8               	bcf	status,0,c
 29747  0022B0  376D               	rlcf	??_AESEncode& (0+255),f,b
 29748  0022B2  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 29749  0022B4  196D               	xorwf	??_AESEncode& (0+255),w,b
 29750  0022B6  6F87               	movwf	_AESEncode$3782& (0+255),b
 29751  0022B8  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 29752  0022BA  6F88               	movwf	(_AESEncode$3782+1)& (0+255),b
 29753  0022BC  D005               	goto	l12081
 29754  0022BE                     l12079:
 29755                           
 29756                           ; BSR set to: 0
 29757  0022BE  90D8               	bcf	status,0,c
 29758  0022C0  358C               	rlcf	AESEncode@aux2& (0+255),w,b
 29759  0022C2  6F87               	movwf	_AESEncode$3782& (0+255),b
 29760  0022C4  6B88               	clrf	(_AESEncode$3782+1)& (0+255),b
 29761  0022C6  3788               	rlcf	(_AESEncode$3782+1)& (0+255),f,b
 29762  0022C8                     l12081:
 29763                           
 29764                           ; BSR set to: 0
 29765  0022C8  C087  F08C         	movff	_AESEncode$3782,AESEncode@aux2
 29766                           
 29767                           ;AES.c: 283: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 29768  0022CC  0E7F               	movlw	127
 29769  0022CE  658E               	cpfsgt	AESEncode@aux3& (0+255),b
 29770  0022D0  D00C               	goto	l12085
 29771                           
 29772                           ; BSR set to: 0
 29773  0022D2  0E1B               	movlw	27
 29774  0022D4  C08E  F06D         	movff	AESEncode@aux3,??_AESEncode
 29775  0022D8  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29776  0022DA  90D8               	bcf	status,0,c
 29777  0022DC  376D               	rlcf	??_AESEncode& (0+255),f,b
 29778  0022DE  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 29779  0022E0  196D               	xorwf	??_AESEncode& (0+255),w,b
 29780  0022E2  6F89               	movwf	_AESEncode$3783& (0+255),b
 29781  0022E4  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 29782  0022E6  6F8A               	movwf	(_AESEncode$3783+1)& (0+255),b
 29783  0022E8  D005               	goto	l12087
 29784  0022EA                     l12085:
 29785                           
 29786                           ; BSR set to: 0
 29787  0022EA  90D8               	bcf	status,0,c
 29788  0022EC  358E               	rlcf	AESEncode@aux3& (0+255),w,b
 29789  0022EE  6F89               	movwf	_AESEncode$3783& (0+255),b
 29790  0022F0  6B8A               	clrf	(_AESEncode$3783+1)& (0+255),b
 29791  0022F2  378A               	rlcf	(_AESEncode$3783+1)& (0+255),f,b
 29792  0022F4                     l12087:
 29793                           
 29794                           ; BSR set to: 0
 29795  0022F4  C089  F08E         	movff	_AESEncode$3783,AESEncode@aux3
 29796                           
 29797                           ; BSR set to: 0
 29798                           ;AES.c: 285: block[i+0]= aux^aux1^block[i+0];
 29799  0022F8  518F               	movf	AESEncode@i& (0+255),w,b
 29800  0022FA  256A               	addwf	AESEncode@block& (0+255),w,b
 29801  0022FC  6ED9               	movwf	fsr2l,c
 29802  0022FE  0E00               	movlw	0
 29803  002300  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29804  002302  6EDA               	movwf	fsr2h,c
 29805  002304  518F               	movf	AESEncode@i& (0+255),w,b
 29806  002306  256A               	addwf	AESEncode@block& (0+255),w,b
 29807  002308  6EE9               	movwf	fsr0l,c
 29808  00230A  0E00               	movlw	0
 29809  00230C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29810  00230E  6EEA               	movwf	fsr0h,c
 29811  002310  50EF               	movf	indf0,w,c
 29812  002312  198B               	xorwf	AESEncode@aux& (0+255),w,b
 29813  002314  198D               	xorwf	AESEncode@aux1& (0+255),w,b
 29814  002316  6EDF               	movwf	indf2,c
 29815                           
 29816                           ; BSR set to: 0
 29817                           ;AES.c: 286: block[i+1]= aux^aux2^block[i+1];
 29818  002318  518F               	movf	AESEncode@i& (0+255),w,b
 29819  00231A  256A               	addwf	AESEncode@block& (0+255),w,b
 29820  00231C  6F6D               	movwf	??_AESEncode& (0+255),b
 29821  00231E  0E00               	movlw	0
 29822  002320  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29823  002322  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29824  002324  296D               	incf	??_AESEncode& (0+255),w,b
 29825  002326  6ED9               	movwf	fsr2l,c
 29826  002328  0E00               	movlw	0
 29827  00232A  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29828  00232C  6EDA               	movwf	fsr2h,c
 29829  00232E  518F               	movf	AESEncode@i& (0+255),w,b
 29830  002330  256A               	addwf	AESEncode@block& (0+255),w,b
 29831  002332  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29832  002334  0E00               	movlw	0
 29833  002336  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29834  002338  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 29835  00233A  296F               	incf	(??_AESEncode+2)& (0+255),w,b
 29836  00233C  6EE9               	movwf	fsr0l,c
 29837  00233E  0E00               	movlw	0
 29838  002340  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 29839  002342  6EEA               	movwf	fsr0h,c
 29840  002344  50EF               	movf	indf0,w,c
 29841  002346  198B               	xorwf	AESEncode@aux& (0+255),w,b
 29842  002348  198C               	xorwf	AESEncode@aux2& (0+255),w,b
 29843  00234A  6EDF               	movwf	indf2,c
 29844                           
 29845                           ; BSR set to: 0
 29846                           ;AES.c: 287: block[i+2]= aux^aux3^block[i+2];
 29847  00234C  518F               	movf	AESEncode@i& (0+255),w,b
 29848  00234E  256A               	addwf	AESEncode@block& (0+255),w,b
 29849  002350  6F6D               	movwf	??_AESEncode& (0+255),b
 29850  002352  0E00               	movlw	0
 29851  002354  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29852  002356  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29853  002358  0E02               	movlw	2
 29854  00235A  256D               	addwf	??_AESEncode& (0+255),w,b
 29855  00235C  6ED9               	movwf	fsr2l,c
 29856  00235E  0E00               	movlw	0
 29857  002360  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29858  002362  6EDA               	movwf	fsr2h,c
 29859  002364  518F               	movf	AESEncode@i& (0+255),w,b
 29860  002366  256A               	addwf	AESEncode@block& (0+255),w,b
 29861  002368  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29862  00236A  0E00               	movlw	0
 29863  00236C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29864  00236E  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 29865  002370  0E02               	movlw	2
 29866  002372  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 29867  002374  6EE9               	movwf	fsr0l,c
 29868  002376  0E00               	movlw	0
 29869  002378  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 29870  00237A  6EEA               	movwf	fsr0h,c
 29871  00237C  50EF               	movf	indf0,w,c
 29872  00237E  198B               	xorwf	AESEncode@aux& (0+255),w,b
 29873  002380  198E               	xorwf	AESEncode@aux3& (0+255),w,b
 29874  002382  6EDF               	movwf	indf2,c
 29875                           
 29876                           ; BSR set to: 0
 29877                           ;AES.c: 288: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 29878  002384  518F               	movf	AESEncode@i& (0+255),w,b
 29879  002386  256A               	addwf	AESEncode@block& (0+255),w,b
 29880  002388  6F6D               	movwf	??_AESEncode& (0+255),b
 29881  00238A  0E00               	movlw	0
 29882  00238C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29883  00238E  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29884  002390  0E03               	movlw	3
 29885  002392  256D               	addwf	??_AESEncode& (0+255),w,b
 29886  002394  6ED9               	movwf	fsr2l,c
 29887  002396  0E00               	movlw	0
 29888  002398  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29889  00239A  6EDA               	movwf	fsr2h,c
 29890  00239C  518F               	movf	AESEncode@i& (0+255),w,b
 29891  00239E  256A               	addwf	AESEncode@block& (0+255),w,b
 29892  0023A0  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29893  0023A2  0E00               	movlw	0
 29894  0023A4  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29895  0023A6  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 29896  0023A8  0E02               	movlw	2
 29897  0023AA  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 29898  0023AC  6EE9               	movwf	fsr0l,c
 29899  0023AE  0E00               	movlw	0
 29900  0023B0  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 29901  0023B2  6EEA               	movwf	fsr0h,c
 29902  0023B4  50EF               	movf	indf0,w,c
 29903  0023B6  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 29904  0023B8  518F               	movf	AESEncode@i& (0+255),w,b
 29905  0023BA  256A               	addwf	AESEncode@block& (0+255),w,b
 29906  0023BC  6F72               	movwf	(??_AESEncode+5)& (0+255),b
 29907  0023BE  0E00               	movlw	0
 29908  0023C0  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29909  0023C2  6F73               	movwf	(??_AESEncode+6)& (0+255),b
 29910  0023C4  2972               	incf	(??_AESEncode+5)& (0+255),w,b
 29911  0023C6  6EE9               	movwf	fsr0l,c
 29912  0023C8  0E00               	movlw	0
 29913  0023CA  2173               	addwfc	(??_AESEncode+6)& (0+255),w,b
 29914  0023CC  6EEA               	movwf	fsr0h,c
 29915  0023CE  50EF               	movf	indf0,w,c
 29916  0023D0  6F74               	movwf	(??_AESEncode+7)& (0+255),b
 29917  0023D2  518F               	movf	AESEncode@i& (0+255),w,b
 29918  0023D4  256A               	addwf	AESEncode@block& (0+255),w,b
 29919  0023D6  6EE9               	movwf	fsr0l,c
 29920  0023D8  0E00               	movlw	0
 29921  0023DA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29922  0023DC  6EEA               	movwf	fsr0h,c
 29923  0023DE  50EF               	movf	indf0,w,c
 29924  0023E0  1974               	xorwf	(??_AESEncode+7)& (0+255),w,b
 29925  0023E2  1971               	xorwf	(??_AESEncode+4)& (0+255),w,b
 29926  0023E4  198B               	xorwf	AESEncode@aux& (0+255),w,b
 29927  0023E6  6EDF               	movwf	indf2,c
 29928  0023E8  0E04               	movlw	4
 29929  0023EA  278F               	addwf	AESEncode@i& (0+255),f,b
 29930  0023EC  0E0F               	movlw	15
 29931  0023EE  658F               	cpfsgt	AESEncode@i& (0+255),b
 29932  0023F0  D6F0               	goto	l12065
 29933  0023F2                     l12097:
 29934                           
 29935                           ; BSR set to: 0
 29936                           ;AES.c: 289: }
 29937                           ;AES.c: 290: }
 29938                           ;AES.c: 292: EncKeySchedule(key);
 29939  0023F2  0E75               	movlw	low AESEncode@key
 29940  0023F4  6F64               	movwf	EncKeySchedule@key& (0+255),b
 29941  0023F6  ECE4  F014         	call	_EncKeySchedule	;wreg free
 29942                           
 29943                           ; BSR set to: 0
 29944                           ;AES.c: 294: for(i=0;i<16;i++)
 29945  0023FA  6B8F               	clrf	AESEncode@i& (0+255),b
 29946  0023FC                     l12105:
 29947                           
 29948                           ; BSR set to: 0
 29949                           ;AES.c: 295: {
 29950                           ;AES.c: 296: block[i] ^= key[i];
 29951  0023FC  518F               	movf	AESEncode@i& (0+255),w,b
 29952  0023FE  0F75               	addlw	low AESEncode@key
 29953  002400  6ED9               	movwf	fsr2l,c
 29954  002402  6ADA               	clrf	fsr2h,c
 29955  002404  50DF               	movf	indf2,w,c
 29956  002406  6F6D               	movwf	??_AESEncode& (0+255),b
 29957  002408  518F               	movf	AESEncode@i& (0+255),w,b
 29958  00240A  256A               	addwf	AESEncode@block& (0+255),w,b
 29959  00240C  6ED9               	movwf	fsr2l,c
 29960  00240E  0E00               	movlw	0
 29961  002410  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29962  002412  6EDA               	movwf	fsr2h,c
 29963  002414  516D               	movf	??_AESEncode& (0+255),w,b
 29964  002416  1ADF               	xorwf	indf2,f,c
 29965                           
 29966                           ; BSR set to: 0
 29967  002418  2B8F               	incf	AESEncode@i& (0+255),f,b
 29968                           
 29969                           ; BSR set to: 0
 29970  00241A  0E0F               	movlw	15
 29971  00241C  658F               	cpfsgt	AESEncode@i& (0+255),b
 29972  00241E  D7EE               	goto	l12105
 29973                           
 29974                           ; BSR set to: 0
 29975                           ;AES.c: 297: }
 29976                           ;AES.c: 299: _roundCounter--;
 29977  002420  0647               	decf	__roundCounter,f,c
 29978                           
 29979                           ; BSR set to: 0
 29980                           ;AES.c: 300: }
 29981                           ;AES.c: 301: while(_roundCounter !=0);
 29982  002422  5047               	movf	__roundCounter,w,c
 29983  002424  E001 D6AE          	bnz	l2541
 29984                           
 29985                           ; BSR set to: 0
 29986  002428  0012               	return		;funcret
 29987  00242A                     __end_of_AESEncode:
 29988                           	opt stack 0
 29989                           tosu	equ	0xFFF
 29990                           tosh	equ	0xFFE
 29991                           tosl	equ	0xFFD
 29992                           pclath	equ	0xFFA
 29993                           tblptru	equ	0xFF8
 29994                           tblptrh	equ	0xFF7
 29995                           tblptrl	equ	0xFF6
 29996                           tablat	equ	0xFF5
 29997                           prodh	equ	0xFF4
 29998                           prodl	equ	0xFF3
 29999                           intcon	equ	0xFF2
 30000                           indf0	equ	0xFEF
 30001                           postinc0	equ	0xFEE
 30002                           plusw0	equ	0xFEB
 30003                           fsr0h	equ	0xFEA
 30004                           fsr0l	equ	0xFE9
 30005                           wreg	equ	0xFE8
 30006                           postinc1	equ	0xFE6
 30007                           postdec1	equ	0xFE5
 30008                           plusw1	equ	0xFE3
 30009                           fsr1h	equ	0xFE2
 30010                           fsr1l	equ	0xFE1
 30011                           indf2	equ	0xFDF
 30012                           postinc2	equ	0xFDE
 30013                           postdec2	equ	0xFDD
 30014                           plusw2	equ	0xFDB
 30015                           fsr2h	equ	0xFDA
 30016                           fsr2l	equ	0xFD9
 30017                           status	equ	0xFD8
 30018                           
 30019 ;; *************** function _EncodeShiftRow *****************
 30020 ;; Defined at:
 30021 ;;		line 205 in file "mcc_generated_files/LoRaWAN/AES.c"
 30022 ;; Parameters:    Size  Location     Type
 30023 ;;  stateTable      2    4[BANK0 ] PTR unsigned char 
 30024 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 30025 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 30026 ;; Auto vars:     Size  Location     Type
 30027 ;;  temp            1    6[BANK0 ] unsigned char 
 30028 ;; Return value:  Size  Location     Type
 30029 ;;                  1    wreg      void 
 30030 ;; Registers used:
 30031 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 30032 ;; Tracked objects:
 30033 ;;		On entry : F/0
 30034 ;;		On exit  : F/0
 30035 ;;		Unchanged: 0/0
 30036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30037 ;;      Params:         0       2       0       0       0       0       0       0       0
 30038 ;;      Locals:         0       1       0       0       0       0       0       0       0
 30039 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30040 ;;      Totals:         0       3       0       0       0       0       0       0       0
 30041 ;;Total ram usage:        3 bytes
 30042 ;; Hardware stack levels used:    1
 30043 ;; Hardware stack levels required when called:    7
 30044 ;; This function calls:
 30045 ;;		Nothing
 30046 ;; This function is called by:
 30047 ;;		_AESEncode
 30048 ;; This function uses a non-reentrant model
 30049 ;;
 30050                           
 30051                           	psect	text154
 30052  003D6C                     __ptext154:
 30053                           	opt stack 0
 30054  003D6C                     _EncodeShiftRow:
 30055                           	opt stack 17
 30056                           
 30057                           ; BSR set to: 0
 30058                           ;AES.c: 207: unsigned char temp;
 30059                           ;AES.c: 212: temp=stateTable[1];
 30060                           
 30061                           ; BSR set to: 0
 30062                           ;incstack = 0
 30063  003D6C  EE20 F001          	lfsr	2,1
 30064  003D70  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30065  003D72  26D9               	addwf	fsr2l,f,c
 30066  003D74  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30067  003D76  22DA               	addwfc	fsr2h,f,c
 30068  003D78  50DF               	movf	indf2,w,c
 30069  003D7A  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30070                           
 30071                           ; BSR set to: 0
 30072                           ;AES.c: 213: stateTable[1]=stateTable[5];
 30073  003D7C  EE20 F005          	lfsr	2,5
 30074  003D80  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30075  003D82  26D9               	addwf	fsr2l,f,c
 30076  003D84  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30077  003D86  22DA               	addwfc	fsr2h,f,c
 30078  003D88  EE00 F001          	lfsr	0,1
 30079  003D8C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30080  003D8E  26E9               	addwf	fsr0l,f,c
 30081  003D90  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30082  003D92  22EA               	addwfc	fsr0h,f,c
 30083  003D94  CFDF FFEF          	movff	indf2,indf0
 30084                           
 30085                           ; BSR set to: 0
 30086                           ;AES.c: 214: stateTable[5]=stateTable[9];
 30087  003D98  EE20 F009          	lfsr	2,9
 30088  003D9C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30089  003D9E  26D9               	addwf	fsr2l,f,c
 30090  003DA0  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30091  003DA2  22DA               	addwfc	fsr2h,f,c
 30092  003DA4  EE00 F005          	lfsr	0,5
 30093  003DA8  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30094  003DAA  26E9               	addwf	fsr0l,f,c
 30095  003DAC  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30096  003DAE  22EA               	addwfc	fsr0h,f,c
 30097  003DB0  CFDF FFEF          	movff	indf2,indf0
 30098                           
 30099                           ; BSR set to: 0
 30100                           ;AES.c: 215: stateTable[9]=stateTable[13];
 30101  003DB4  EE20 F00D          	lfsr	2,13
 30102  003DB8  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30103  003DBA  26D9               	addwf	fsr2l,f,c
 30104  003DBC  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30105  003DBE  22DA               	addwfc	fsr2h,f,c
 30106  003DC0  EE00 F009          	lfsr	0,9
 30107  003DC4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30108  003DC6  26E9               	addwf	fsr0l,f,c
 30109  003DC8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30110  003DCA  22EA               	addwfc	fsr0h,f,c
 30111  003DCC  CFDF FFEF          	movff	indf2,indf0
 30112                           
 30113                           ; BSR set to: 0
 30114                           ;AES.c: 216: stateTable[13]=temp;
 30115  003DD0  EE20 F00D          	lfsr	2,13
 30116  003DD4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30117  003DD6  26D9               	addwf	fsr2l,f,c
 30118  003DD8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30119  003DDA  22DA               	addwfc	fsr2h,f,c
 30120  003DDC  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30121                           
 30122                           ; BSR set to: 0
 30123                           ;AES.c: 219: temp=stateTable[2];
 30124  003DE0  EE20 F002          	lfsr	2,2
 30125  003DE4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30126  003DE6  26D9               	addwf	fsr2l,f,c
 30127  003DE8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30128  003DEA  22DA               	addwfc	fsr2h,f,c
 30129  003DEC  50DF               	movf	indf2,w,c
 30130  003DEE  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30131                           
 30132                           ; BSR set to: 0
 30133                           ;AES.c: 220: stateTable[2]=stateTable[10];
 30134  003DF0  EE20 F00A          	lfsr	2,10
 30135  003DF4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30136  003DF6  26D9               	addwf	fsr2l,f,c
 30137  003DF8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30138  003DFA  22DA               	addwfc	fsr2h,f,c
 30139  003DFC  EE00 F002          	lfsr	0,2
 30140  003E00  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30141  003E02  26E9               	addwf	fsr0l,f,c
 30142  003E04  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30143  003E06  22EA               	addwfc	fsr0h,f,c
 30144  003E08  CFDF FFEF          	movff	indf2,indf0
 30145                           
 30146                           ;AES.c: 221: stateTable[10]=temp;
 30147  003E0C  EE20 F00A          	lfsr	2,10
 30148  003E10  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30149  003E12  26D9               	addwf	fsr2l,f,c
 30150  003E14  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30151  003E16  22DA               	addwfc	fsr2h,f,c
 30152  003E18  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30153                           
 30154                           ;AES.c: 222: temp=stateTable[14];
 30155  003E1C  EE20 F00E          	lfsr	2,14
 30156  003E20  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30157  003E22  26D9               	addwf	fsr2l,f,c
 30158  003E24  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30159  003E26  22DA               	addwfc	fsr2h,f,c
 30160  003E28  50DF               	movf	indf2,w,c
 30161  003E2A  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30162                           
 30163                           ; BSR set to: 0
 30164                           ;AES.c: 223: stateTable[14]=stateTable[6];
 30165  003E2C  EE20 F006          	lfsr	2,6
 30166  003E30  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30167  003E32  26D9               	addwf	fsr2l,f,c
 30168  003E34  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30169  003E36  22DA               	addwfc	fsr2h,f,c
 30170  003E38  EE00 F00E          	lfsr	0,14
 30171  003E3C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30172  003E3E  26E9               	addwf	fsr0l,f,c
 30173  003E40  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30174  003E42  22EA               	addwfc	fsr0h,f,c
 30175  003E44  CFDF FFEF          	movff	indf2,indf0
 30176                           
 30177                           ; BSR set to: 0
 30178                           ;AES.c: 224: stateTable[6]=temp;
 30179  003E48  EE20 F006          	lfsr	2,6
 30180  003E4C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30181  003E4E  26D9               	addwf	fsr2l,f,c
 30182  003E50  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30183  003E52  22DA               	addwfc	fsr2h,f,c
 30184  003E54  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30185                           
 30186                           ; BSR set to: 0
 30187                           ;AES.c: 227: temp=stateTable[3];
 30188  003E58  EE20 F003          	lfsr	2,3
 30189  003E5C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30190  003E5E  26D9               	addwf	fsr2l,f,c
 30191  003E60  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30192  003E62  22DA               	addwfc	fsr2h,f,c
 30193  003E64  50DF               	movf	indf2,w,c
 30194  003E66  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30195                           
 30196                           ; BSR set to: 0
 30197                           ;AES.c: 228: stateTable[3]=stateTable[15];
 30198  003E68  EE20 F00F          	lfsr	2,15
 30199  003E6C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30200  003E6E  26D9               	addwf	fsr2l,f,c
 30201  003E70  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30202  003E72  22DA               	addwfc	fsr2h,f,c
 30203  003E74  EE00 F003          	lfsr	0,3
 30204  003E78  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30205  003E7A  26E9               	addwf	fsr0l,f,c
 30206  003E7C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30207  003E7E  22EA               	addwfc	fsr0h,f,c
 30208  003E80  CFDF FFEF          	movff	indf2,indf0
 30209                           
 30210                           ; BSR set to: 0
 30211                           ;AES.c: 229: stateTable[15]=stateTable[11];
 30212  003E84  EE20 F00B          	lfsr	2,11
 30213  003E88  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30214  003E8A  26D9               	addwf	fsr2l,f,c
 30215  003E8C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30216  003E8E  22DA               	addwfc	fsr2h,f,c
 30217  003E90  EE00 F00F          	lfsr	0,15
 30218  003E94  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30219  003E96  26E9               	addwf	fsr0l,f,c
 30220  003E98  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30221  003E9A  22EA               	addwfc	fsr0h,f,c
 30222  003E9C  CFDF FFEF          	movff	indf2,indf0
 30223                           
 30224                           ; BSR set to: 0
 30225                           ;AES.c: 230: stateTable[11]=stateTable[7];
 30226  003EA0  EE20 F007          	lfsr	2,7
 30227  003EA4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30228  003EA6  26D9               	addwf	fsr2l,f,c
 30229  003EA8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30230  003EAA  22DA               	addwfc	fsr2h,f,c
 30231  003EAC  EE00 F00B          	lfsr	0,11
 30232  003EB0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30233  003EB2  26E9               	addwf	fsr0l,f,c
 30234  003EB4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30235  003EB6  22EA               	addwfc	fsr0h,f,c
 30236  003EB8  CFDF FFEF          	movff	indf2,indf0
 30237                           
 30238                           ;AES.c: 231: stateTable[7]=temp;
 30239  003EBC  EE20 F007          	lfsr	2,7
 30240  003EC0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30241  003EC2  26D9               	addwf	fsr2l,f,c
 30242  003EC4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30243  003EC6  22DA               	addwfc	fsr2h,f,c
 30244  003EC8  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30245                           
 30246                           ; BSR set to: 0
 30247  003ECC  0012               	return		;funcret
 30248  003ECE                     __end_of_EncodeShiftRow:
 30249                           	opt stack 0
 30250                           tosu	equ	0xFFF
 30251                           tosh	equ	0xFFE
 30252                           tosl	equ	0xFFD
 30253                           pclath	equ	0xFFA
 30254                           tblptru	equ	0xFF8
 30255                           tblptrh	equ	0xFF7
 30256                           tblptrl	equ	0xFF6
 30257                           tablat	equ	0xFF5
 30258                           prodh	equ	0xFF4
 30259                           prodl	equ	0xFF3
 30260                           intcon	equ	0xFF2
 30261                           indf0	equ	0xFEF
 30262                           postinc0	equ	0xFEE
 30263                           plusw0	equ	0xFEB
 30264                           fsr0h	equ	0xFEA
 30265                           fsr0l	equ	0xFE9
 30266                           wreg	equ	0xFE8
 30267                           postinc1	equ	0xFE6
 30268                           postdec1	equ	0xFE5
 30269                           plusw1	equ	0xFE3
 30270                           fsr1h	equ	0xFE2
 30271                           fsr1l	equ	0xFE1
 30272                           indf2	equ	0xFDF
 30273                           postinc2	equ	0xFDE
 30274                           postdec2	equ	0xFDD
 30275                           plusw2	equ	0xFDB
 30276                           fsr2h	equ	0xFDA
 30277                           fsr2l	equ	0xFD9
 30278                           status	equ	0xFD8
 30279                           
 30280 ;; *************** function _EncKeySchedule *****************
 30281 ;; Defined at:
 30282 ;;		line 160 in file "mcc_generated_files/LoRaWAN/AES.c"
 30283 ;; Parameters:    Size  Location     Type
 30284 ;;  key             1    4[BANK0 ] PTR unsigned char 
 30285 ;;		 -> AESEncode@key(16), 
 30286 ;; Auto vars:     Size  Location     Type
 30287 ;;		None
 30288 ;; Return value:  Size  Location     Type
 30289 ;;                  1    wreg      void 
 30290 ;; Registers used:
 30291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30292 ;; Tracked objects:
 30293 ;;		On entry : F/0
 30294 ;;		On exit  : F/0
 30295 ;;		Unchanged: 0/0
 30296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30297 ;;      Params:         0       1       0       0       0       0       0       0       0
 30298 ;;      Locals:         0       2       0       0       0       0       0       0       0
 30299 ;;      Temps:          0       3       0       0       0       0       0       0       0
 30300 ;;      Totals:         0       6       0       0       0       0       0       0       0
 30301 ;;Total ram usage:        6 bytes
 30302 ;; Hardware stack levels used:    1
 30303 ;; Hardware stack levels required when called:    7
 30304 ;; This function calls:
 30305 ;;		Nothing
 30306 ;; This function is called by:
 30307 ;;		_AESEncode
 30308 ;; This function uses a non-reentrant model
 30309 ;;
 30310                           
 30311                           	psect	text155
 30312  0029C8                     __ptext155:
 30313                           	opt stack 0
 30314  0029C8                     _EncKeySchedule:
 30315                           	opt stack 17
 30316                           
 30317                           ; BSR set to: 0
 30318                           ;AES.c: 163: key[0]^=STable[key[13]];
 30319                           
 30320                           ; BSR set to: 0
 30321                           ;incstack = 0
 30322  0029C8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30323  0029CA  6ED9               	movwf	fsr2l,c
 30324  0029CC  6ADA               	clrf	fsr2h,c
 30325  0029CE  0E0D               	movlw	13
 30326  0029D0  26D9               	addwf	fsr2l,f,c
 30327  0029D2  50DF               	movf	indf2,w,c
 30328  0029D4  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30329  0029D6  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30330  0029D8  0E6D               	movlw	low _STable
 30331  0029DA  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30332  0029DC  6EF6               	movwf	tblptrl,c
 30333  0029DE  0E7E               	movlw	high _STable
 30334  0029E0  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30335  0029E2  6EF7               	movwf	tblptrh,c
 30336  0029E4                     	if	0	;There are less than 3 active tblptr bytes
 30337  0029E4                     	endif
 30338  0029E4  0008               	tblrd		*
 30339  0029E6  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30340  0029EA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30341  0029EC  6ED9               	movwf	fsr2l,c
 30342  0029EE  6ADA               	clrf	fsr2h,c
 30343  0029F0  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30344  0029F2  1ADF               	xorwf	indf2,f,c
 30345                           
 30346                           ;AES.c: 164: key[1]^=STable[key[14]];
 30347  0029F4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30348  0029F6  6ED9               	movwf	fsr2l,c
 30349  0029F8  6ADA               	clrf	fsr2h,c
 30350  0029FA  0E0E               	movlw	14
 30351  0029FC  26D9               	addwf	fsr2l,f,c
 30352  0029FE  50DF               	movf	indf2,w,c
 30353  002A00  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30354  002A02  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30355  002A04  0E6D               	movlw	low _STable
 30356  002A06  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30357  002A08  6EF6               	movwf	tblptrl,c
 30358  002A0A  0E7E               	movlw	high _STable
 30359  002A0C  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30360  002A0E  6EF7               	movwf	tblptrh,c
 30361  002A10                     	if	0	;There are less than 3 active tblptr bytes
 30362  002A10                     	endif
 30363  002A10  0008               	tblrd		*
 30364  002A12  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30365  002A16  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30366  002A18  6ED9               	movwf	fsr2l,c
 30367  002A1A  6ADA               	clrf	fsr2h,c
 30368  002A1C  2AD9               	incf	fsr2l,f,c
 30369  002A1E  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30370  002A20  1ADF               	xorwf	indf2,f,c
 30371                           
 30372                           ;AES.c: 165: key[2]^=STable[key[15]];
 30373  002A22  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30374  002A24  6ED9               	movwf	fsr2l,c
 30375  002A26  6ADA               	clrf	fsr2h,c
 30376  002A28  0E0F               	movlw	15
 30377  002A2A  26D9               	addwf	fsr2l,f,c
 30378  002A2C  50DF               	movf	indf2,w,c
 30379  002A2E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30380  002A30  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30381  002A32  0E6D               	movlw	low _STable
 30382  002A34  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30383  002A36  6EF6               	movwf	tblptrl,c
 30384  002A38  0E7E               	movlw	high _STable
 30385  002A3A  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30386  002A3C  6EF7               	movwf	tblptrh,c
 30387  002A3E                     	if	0	;There are less than 3 active tblptr bytes
 30388  002A3E                     	endif
 30389  002A3E  0008               	tblrd		*
 30390  002A40  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30391  002A44  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30392  002A46  6ED9               	movwf	fsr2l,c
 30393  002A48  6ADA               	clrf	fsr2h,c
 30394  002A4A  0E02               	movlw	2
 30395  002A4C  26D9               	addwf	fsr2l,f,c
 30396  002A4E  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30397  002A50  1ADF               	xorwf	indf2,f,c
 30398                           
 30399                           ;AES.c: 166: key[3]^=STable[key[12]];
 30400  002A52  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30401  002A54  6ED9               	movwf	fsr2l,c
 30402  002A56  6ADA               	clrf	fsr2h,c
 30403  002A58  0E0C               	movlw	12
 30404  002A5A  26D9               	addwf	fsr2l,f,c
 30405  002A5C  50DF               	movf	indf2,w,c
 30406  002A5E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30407  002A60  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30408  002A62  0E6D               	movlw	low _STable
 30409  002A64  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30410  002A66  6EF6               	movwf	tblptrl,c
 30411  002A68  0E7E               	movlw	high _STable
 30412  002A6A  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30413  002A6C  6EF7               	movwf	tblptrh,c
 30414  002A6E                     	if	0	;There are less than 3 active tblptr bytes
 30415  002A6E                     	endif
 30416  002A6E  0008               	tblrd		*
 30417  002A70  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30418  002A74  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30419  002A76  6ED9               	movwf	fsr2l,c
 30420  002A78  6ADA               	clrf	fsr2h,c
 30421  002A7A  0E03               	movlw	3
 30422  002A7C  26D9               	addwf	fsr2l,f,c
 30423  002A7E  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30424  002A80  1ADF               	xorwf	indf2,f,c
 30425                           
 30426                           ; BSR set to: 0
 30427                           ;AES.c: 168: key[0]^=_rcon;
 30428  002A82  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30429  002A84  6ED9               	movwf	fsr2l,c
 30430  002A86  6ADA               	clrf	fsr2h,c
 30431  002A88  5046               	movf	__rcon,w,c
 30432  002A8A  1ADF               	xorwf	indf2,f,c
 30433                           
 30434                           ; BSR set to: 0
 30435                           ;AES.c: 169: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 30436  002A8C  0E7F               	movlw	127
 30437  002A8E  6446               	cpfsgt	__rcon,c
 30438  002A90  D00C               	goto	l11887
 30439                           
 30440                           ; BSR set to: 0
 30441  002A92  0E1B               	movlw	27
 30442  002A94  C046  F065         	movff	__rcon,??_EncKeySchedule
 30443  002A98  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30444  002A9A  90D8               	bcf	status,0,c
 30445  002A9C  3765               	rlcf	??_EncKeySchedule& (0+255),f,b
 30446  002A9E  3766               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 30447  002AA0  1965               	xorwf	??_EncKeySchedule& (0+255),w,b
 30448  002AA2  6F68               	movwf	_EncKeySchedule$3767& (0+255),b
 30449  002AA4  5166               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30450  002AA6  6F69               	movwf	(_EncKeySchedule$3767+1)& (0+255),b
 30451  002AA8  D005               	goto	l11889
 30452  002AAA                     l11887:
 30453                           
 30454                           ; BSR set to: 0
 30455  002AAA  90D8               	bcf	status,0,c
 30456  002AAC  3446               	rlcf	__rcon,w,c
 30457  002AAE  6F68               	movwf	_EncKeySchedule$3767& (0+255),b
 30458  002AB0  6B69               	clrf	(_EncKeySchedule$3767+1)& (0+255),b
 30459  002AB2  3769               	rlcf	(_EncKeySchedule$3767+1)& (0+255),f,b
 30460  002AB4                     l11889:
 30461                           
 30462                           ; BSR set to: 0
 30463  002AB4  C068  F046         	movff	_EncKeySchedule$3767,__rcon
 30464                           
 30465                           ; BSR set to: 0
 30466                           ;AES.c: 172: key[4]^=key[0];
 30467  002AB8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30468  002ABA  6ED9               	movwf	fsr2l,c
 30469  002ABC  6ADA               	clrf	fsr2h,c
 30470  002ABE  50DF               	movf	indf2,w,c
 30471  002AC0  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30472  002AC2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30473  002AC4  6ED9               	movwf	fsr2l,c
 30474  002AC6  6ADA               	clrf	fsr2h,c
 30475  002AC8  0E04               	movlw	4
 30476  002ACA  26D9               	addwf	fsr2l,f,c
 30477  002ACC  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30478  002ACE  1ADF               	xorwf	indf2,f,c
 30479                           
 30480                           ; BSR set to: 0
 30481                           ;AES.c: 173: key[5]^=key[1];
 30482  002AD0  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30483  002AD2  6ED9               	movwf	fsr2l,c
 30484  002AD4  6ADA               	clrf	fsr2h,c
 30485  002AD6  2AD9               	incf	fsr2l,f,c
 30486  002AD8  50DF               	movf	indf2,w,c
 30487  002ADA  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30488  002ADC  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30489  002ADE  6ED9               	movwf	fsr2l,c
 30490  002AE0  6ADA               	clrf	fsr2h,c
 30491  002AE2  0E05               	movlw	5
 30492  002AE4  26D9               	addwf	fsr2l,f,c
 30493  002AE6  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30494  002AE8  1ADF               	xorwf	indf2,f,c
 30495                           
 30496                           ; BSR set to: 0
 30497                           ;AES.c: 174: key[6]^=key[2];
 30498  002AEA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30499  002AEC  6ED9               	movwf	fsr2l,c
 30500  002AEE  6ADA               	clrf	fsr2h,c
 30501  002AF0  0E02               	movlw	2
 30502  002AF2  26D9               	addwf	fsr2l,f,c
 30503  002AF4  50DF               	movf	indf2,w,c
 30504  002AF6  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30505  002AF8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30506  002AFA  6ED9               	movwf	fsr2l,c
 30507  002AFC  6ADA               	clrf	fsr2h,c
 30508  002AFE  0E06               	movlw	6
 30509  002B00  26D9               	addwf	fsr2l,f,c
 30510  002B02  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30511  002B04  1ADF               	xorwf	indf2,f,c
 30512                           
 30513                           ; BSR set to: 0
 30514                           ;AES.c: 175: key[7]^=key[3];
 30515  002B06  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30516  002B08  6ED9               	movwf	fsr2l,c
 30517  002B0A  6ADA               	clrf	fsr2h,c
 30518  002B0C  0E03               	movlw	3
 30519  002B0E  26D9               	addwf	fsr2l,f,c
 30520  002B10  50DF               	movf	indf2,w,c
 30521  002B12  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30522  002B14  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30523  002B16  6ED9               	movwf	fsr2l,c
 30524  002B18  6ADA               	clrf	fsr2h,c
 30525  002B1A  0E07               	movlw	7
 30526  002B1C  26D9               	addwf	fsr2l,f,c
 30527  002B1E  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30528  002B20  1ADF               	xorwf	indf2,f,c
 30529                           
 30530                           ; BSR set to: 0
 30531                           ;AES.c: 178: key[8]^=key[4];
 30532  002B22  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30533  002B24  6ED9               	movwf	fsr2l,c
 30534  002B26  6ADA               	clrf	fsr2h,c
 30535  002B28  0E04               	movlw	4
 30536  002B2A  26D9               	addwf	fsr2l,f,c
 30537  002B2C  50DF               	movf	indf2,w,c
 30538  002B2E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30539  002B30  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30540  002B32  6ED9               	movwf	fsr2l,c
 30541  002B34  6ADA               	clrf	fsr2h,c
 30542  002B36  0E08               	movlw	8
 30543  002B38  26D9               	addwf	fsr2l,f,c
 30544  002B3A  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30545  002B3C  1ADF               	xorwf	indf2,f,c
 30546                           
 30547                           ; BSR set to: 0
 30548                           ;AES.c: 179: key[9]^=key[5];
 30549  002B3E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30550  002B40  6ED9               	movwf	fsr2l,c
 30551  002B42  6ADA               	clrf	fsr2h,c
 30552  002B44  0E05               	movlw	5
 30553  002B46  26D9               	addwf	fsr2l,f,c
 30554  002B48  50DF               	movf	indf2,w,c
 30555  002B4A  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30556  002B4C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30557  002B4E  6ED9               	movwf	fsr2l,c
 30558  002B50  6ADA               	clrf	fsr2h,c
 30559  002B52  0E09               	movlw	9
 30560  002B54  26D9               	addwf	fsr2l,f,c
 30561  002B56  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30562  002B58  1ADF               	xorwf	indf2,f,c
 30563                           
 30564                           ; BSR set to: 0
 30565                           ;AES.c: 180: key[10]^=key[6];
 30566  002B5A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30567  002B5C  6ED9               	movwf	fsr2l,c
 30568  002B5E  6ADA               	clrf	fsr2h,c
 30569  002B60  0E06               	movlw	6
 30570  002B62  26D9               	addwf	fsr2l,f,c
 30571  002B64  50DF               	movf	indf2,w,c
 30572  002B66  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30573  002B68  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30574  002B6A  6ED9               	movwf	fsr2l,c
 30575  002B6C  6ADA               	clrf	fsr2h,c
 30576  002B6E  0E0A               	movlw	10
 30577  002B70  26D9               	addwf	fsr2l,f,c
 30578  002B72  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30579  002B74  1ADF               	xorwf	indf2,f,c
 30580                           
 30581                           ; BSR set to: 0
 30582                           ;AES.c: 181: key[11]^=key[7];
 30583  002B76  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30584  002B78  6ED9               	movwf	fsr2l,c
 30585  002B7A  6ADA               	clrf	fsr2h,c
 30586  002B7C  0E07               	movlw	7
 30587  002B7E  26D9               	addwf	fsr2l,f,c
 30588  002B80  50DF               	movf	indf2,w,c
 30589  002B82  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30590  002B84  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30591  002B86  6ED9               	movwf	fsr2l,c
 30592  002B88  6ADA               	clrf	fsr2h,c
 30593  002B8A  0E0B               	movlw	11
 30594  002B8C  26D9               	addwf	fsr2l,f,c
 30595  002B8E  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30596  002B90  1ADF               	xorwf	indf2,f,c
 30597                           
 30598                           ; BSR set to: 0
 30599                           ;AES.c: 184: key[12]^=key[8];
 30600  002B92  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30601  002B94  6ED9               	movwf	fsr2l,c
 30602  002B96  6ADA               	clrf	fsr2h,c
 30603  002B98  0E08               	movlw	8
 30604  002B9A  26D9               	addwf	fsr2l,f,c
 30605  002B9C  50DF               	movf	indf2,w,c
 30606  002B9E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30607  002BA0  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30608  002BA2  6ED9               	movwf	fsr2l,c
 30609  002BA4  6ADA               	clrf	fsr2h,c
 30610  002BA6  0E0C               	movlw	12
 30611  002BA8  26D9               	addwf	fsr2l,f,c
 30612  002BAA  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30613  002BAC  1ADF               	xorwf	indf2,f,c
 30614                           
 30615                           ; BSR set to: 0
 30616                           ;AES.c: 185: key[13]^=key[9];
 30617  002BAE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30618  002BB0  6ED9               	movwf	fsr2l,c
 30619  002BB2  6ADA               	clrf	fsr2h,c
 30620  002BB4  0E09               	movlw	9
 30621  002BB6  26D9               	addwf	fsr2l,f,c
 30622  002BB8  50DF               	movf	indf2,w,c
 30623  002BBA  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30624  002BBC  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30625  002BBE  6ED9               	movwf	fsr2l,c
 30626  002BC0  6ADA               	clrf	fsr2h,c
 30627  002BC2  0E0D               	movlw	13
 30628  002BC4  26D9               	addwf	fsr2l,f,c
 30629  002BC6  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30630  002BC8  1ADF               	xorwf	indf2,f,c
 30631                           
 30632                           ; BSR set to: 0
 30633                           ;AES.c: 186: key[14]^=key[10];
 30634  002BCA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30635  002BCC  6ED9               	movwf	fsr2l,c
 30636  002BCE  6ADA               	clrf	fsr2h,c
 30637  002BD0  0E0A               	movlw	10
 30638  002BD2  26D9               	addwf	fsr2l,f,c
 30639  002BD4  50DF               	movf	indf2,w,c
 30640  002BD6  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30641  002BD8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30642  002BDA  6ED9               	movwf	fsr2l,c
 30643  002BDC  6ADA               	clrf	fsr2h,c
 30644  002BDE  0E0E               	movlw	14
 30645  002BE0  26D9               	addwf	fsr2l,f,c
 30646  002BE2  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30647  002BE4  1ADF               	xorwf	indf2,f,c
 30648                           
 30649                           ; BSR set to: 0
 30650                           ;AES.c: 187: key[15]^=key[11];
 30651  002BE6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30652  002BE8  6ED9               	movwf	fsr2l,c
 30653  002BEA  6ADA               	clrf	fsr2h,c
 30654  002BEC  0E0B               	movlw	11
 30655  002BEE  26D9               	addwf	fsr2l,f,c
 30656  002BF0  50DF               	movf	indf2,w,c
 30657  002BF2  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30658  002BF4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30659  002BF6  6ED9               	movwf	fsr2l,c
 30660  002BF8  6ADA               	clrf	fsr2h,c
 30661  002BFA  0E0F               	movlw	15
 30662  002BFC  26D9               	addwf	fsr2l,f,c
 30663  002BFE  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30664  002C00  1ADF               	xorwf	indf2,f,c
 30665                           
 30666                           ; BSR set to: 0
 30667  002C02  0012               	return		;funcret
 30668  002C04                     __end_of_EncKeySchedule:
 30669                           	opt stack 0
 30670                           tosu	equ	0xFFF
 30671                           tosh	equ	0xFFE
 30672                           tosl	equ	0xFFD
 30673                           pclath	equ	0xFFA
 30674                           tblptru	equ	0xFF8
 30675                           tblptrh	equ	0xFF7
 30676                           tblptrl	equ	0xFF6
 30677                           tablat	equ	0xFF5
 30678                           prodh	equ	0xFF4
 30679                           prodl	equ	0xFF3
 30680                           intcon	equ	0xFF2
 30681                           indf0	equ	0xFEF
 30682                           postinc0	equ	0xFEE
 30683                           plusw0	equ	0xFEB
 30684                           fsr0h	equ	0xFEA
 30685                           fsr0l	equ	0xFE9
 30686                           wreg	equ	0xFE8
 30687                           postinc1	equ	0xFE6
 30688                           postdec1	equ	0xFE5
 30689                           plusw1	equ	0xFE3
 30690                           fsr1h	equ	0xFE2
 30691                           fsr1l	equ	0xFE1
 30692                           indf2	equ	0xFDF
 30693                           postinc2	equ	0xFDE
 30694                           postdec2	equ	0xFDD
 30695                           plusw2	equ	0xFDB
 30696                           fsr2h	equ	0xFDA
 30697                           fsr2l	equ	0xFD9
 30698                           status	equ	0xFD8
 30699                           
 30700 ;; *************** function _LORAWAN_Init *****************
 30701 ;; Defined at:
 30702 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 30703 ;; Parameters:    Size  Location     Type
 30704 ;;  RxPayload       2   68[BANK0 ] PTR FTN(PTR unsigned cha
 30705 ;;		 -> RxDataDone(1), 
 30706 ;;  RxJoinRespon    2   70[BANK0 ] PTR FTN(unsigned char ,)
 30707 ;;		 -> RxJoinResponse(1), 
 30708 ;; Auto vars:     Size  Location     Type
 30709 ;;		None
 30710 ;; Return value:  Size  Location     Type
 30711 ;;                  1    wreg      void 
 30712 ;; Registers used:
 30713 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30714 ;; Tracked objects:
 30715 ;;		On entry : F/0
 30716 ;;		On exit  : D/0
 30717 ;;		Unchanged: 0/0
 30718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30719 ;;      Params:         0       4       0       0       0       0       0       0       0
 30720 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30721 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30722 ;;      Totals:         0       4       0       0       0       0       0       0       0
 30723 ;;Total ram usage:        4 bytes
 30724 ;; Hardware stack levels used:    1
 30725 ;; Hardware stack levels required when called:   13
 30726 ;; This function calls:
 30727 ;;		_CreateAllSoftwareTimers
 30728 ;;		_LORAWAN_Reset
 30729 ;;		_RADIO_Init
 30730 ;;		_RADIO_ReadRandom
 30731 ;;		_SetCallbackSoftwareTimers
 30732 ;;		_StopAllSoftwareTimers
 30733 ;;		_srand
 30734 ;; This function is called by:
 30735 ;;		_main
 30736 ;; This function uses a non-reentrant model
 30737 ;;
 30738                           
 30739                           	psect	text156
 30740  00676C                     __ptext156:
 30741                           	opt stack 0
 30742  00676C                     _LORAWAN_Init:
 30743                           	opt stack 17
 30744                           
 30745                           ; BSR set to: 0
 30746                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 30747                           
 30748                           ; BSR set to: 0
 30749                           ;incstack = 0
 30750  00676C  0102               	movlb	2	; () banked
 30751  00676E  51F0               	movf	(_loRa+240)& (0+255),w,b
 30752  006770  E108               	bnz	l15823
 30753                           
 30754                           ; BSR set to: 2
 30755                           ;lorawan_eu.c: 127: {
 30756                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 30757  006772  ECE7  F034         	call	_CreateAllSoftwareTimers	;wreg free
 30758                           
 30759                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 30760  006776  EC60  F02B         	call	_SetCallbackSoftwareTimers	;wreg free
 30761                           
 30762                           ; BSR set to: 0
 30763                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 30764  00677A  0E01               	movlw	1
 30765  00677C  0102               	movlb	2	; () banked
 30766  00677E  6FF0               	movwf	(_loRa+240)& (0+255),b
 30767                           
 30768                           ;lorawan_eu.c: 131: }
 30769  006780  D002               	goto	l15825
 30770  006782                     l15823:
 30771                           
 30772                           ; BSR set to: 2
 30773                           ;lorawan_eu.c: 132: else
 30774                           ;lorawan_eu.c: 133: {
 30775                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 30776  006782  EC5E  F035         	call	_StopAllSoftwareTimers	;wreg free
 30777  006786                     l15825:
 30778                           
 30779                           ;lorawan_eu.c: 135: }
 30780                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 30781  006786  C0A4  F172         	movff	LORAWAN_Init@RxPayload,_rxPayload
 30782  00678A  C0A5  F173         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 30783                           
 30784                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 30785  00678E  C0A6  F174         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 30786  006792  C0A7  F175         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 30787                           
 30788                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 30789  006796  0EFF               	movlw	low (_radioBuffer+16)
 30790  006798  0100               	movlb	0	; () banked
 30791  00679A  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 30792  00679C  0E05               	movlw	high (_radioBuffer+16)
 30793  00679E  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 30794  0067A0  0EA0               	movlw	160
 30795  0067A2  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 30796  0067A4  0E27               	movlw	39
 30797  0067A6  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 30798  0067A8  0EBE               	movlw	190
 30799  0067AA  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 30800  0067AC  0E33               	movlw	51
 30801  0067AE  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 30802  0067B0  EC5D  F01C         	call	_RADIO_Init	;wreg free
 30803                           
 30804                           ; BSR set to: 1
 30805                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 30806  0067B4  ECB1  F02F         	call	_RADIO_ReadRandom	;wreg free
 30807  0067B8  C070  F075         	movff	?_RADIO_ReadRandom,srand@x
 30808  0067BC  C071  F076         	movff	?_RADIO_ReadRandom+1,srand@x+1
 30809  0067C0  EC23  F03C         	call	_srand	;wreg free
 30810                           
 30811                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 30812  0067C4  0E00               	movlw	0
 30813  0067C6  EF67  F01F         	goto	_LORAWAN_Reset
 30814  0067CA                     __end_of_LORAWAN_Init:
 30815                           	opt stack 0
 30816                           tosu	equ	0xFFF
 30817                           tosh	equ	0xFFE
 30818                           tosl	equ	0xFFD
 30819                           pclath	equ	0xFFA
 30820                           tblptru	equ	0xFF8
 30821                           tblptrh	equ	0xFF7
 30822                           tblptrl	equ	0xFF6
 30823                           tablat	equ	0xFF5
 30824                           prodh	equ	0xFF4
 30825                           prodl	equ	0xFF3
 30826                           intcon	equ	0xFF2
 30827                           indf0	equ	0xFEF
 30828                           postinc0	equ	0xFEE
 30829                           plusw0	equ	0xFEB
 30830                           fsr0h	equ	0xFEA
 30831                           fsr0l	equ	0xFE9
 30832                           wreg	equ	0xFE8
 30833                           postinc1	equ	0xFE6
 30834                           postdec1	equ	0xFE5
 30835                           plusw1	equ	0xFE3
 30836                           fsr1h	equ	0xFE2
 30837                           fsr1l	equ	0xFE1
 30838                           indf2	equ	0xFDF
 30839                           postinc2	equ	0xFDE
 30840                           postdec2	equ	0xFDD
 30841                           plusw2	equ	0xFDB
 30842                           fsr2h	equ	0xFDA
 30843                           fsr2l	equ	0xFD9
 30844                           status	equ	0xFD8
 30845                           
 30846 ;; *************** function _srand *****************
 30847 ;; Defined at:
 30848 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 30849 ;; Parameters:    Size  Location     Type
 30850 ;;  x               2   21[BANK0 ] unsigned int 
 30851 ;; Auto vars:     Size  Location     Type
 30852 ;;		None
 30853 ;; Return value:  Size  Location     Type
 30854 ;;                  1    wreg      void 
 30855 ;; Registers used:
 30856 ;;		status,2
 30857 ;; Tracked objects:
 30858 ;;		On entry : 1/0
 30859 ;;		On exit  : 1/0
 30860 ;;		Unchanged: 1/0
 30861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30862 ;;      Params:         0       2       0       0       0       0       0       0       0
 30863 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30864 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30865 ;;      Totals:         0       2       0       0       0       0       0       0       0
 30866 ;;Total ram usage:        2 bytes
 30867 ;; Hardware stack levels used:    1
 30868 ;; Hardware stack levels required when called:    7
 30869 ;; This function calls:
 30870 ;;		Nothing
 30871 ;; This function is called by:
 30872 ;;		_LORAWAN_Init
 30873 ;; This function uses a non-reentrant model
 30874 ;;
 30875                           
 30876                           	psect	text157
 30877  007846                     __ptext157:
 30878                           	opt stack 0
 30879  007846                     _srand:
 30880                           	opt stack 22
 30881                           
 30882                           ;incstack = 0
 30883  007846  C075  F056         	movff	srand@x,_randx
 30884  00784A  C076  F057         	movff	srand@x+1,_randx+1
 30885  00784E  6A58               	clrf	_randx+2,c
 30886  007850  6A59               	clrf	_randx+3,c
 30887  007852  0012               	return		;funcret
 30888  007854                     __end_of_srand:
 30889                           	opt stack 0
 30890                           tosu	equ	0xFFF
 30891                           tosh	equ	0xFFE
 30892                           tosl	equ	0xFFD
 30893                           pclath	equ	0xFFA
 30894                           tblptru	equ	0xFF8
 30895                           tblptrh	equ	0xFF7
 30896                           tblptrl	equ	0xFF6
 30897                           tablat	equ	0xFF5
 30898                           prodh	equ	0xFF4
 30899                           prodl	equ	0xFF3
 30900                           intcon	equ	0xFF2
 30901                           indf0	equ	0xFEF
 30902                           postinc0	equ	0xFEE
 30903                           plusw0	equ	0xFEB
 30904                           fsr0h	equ	0xFEA
 30905                           fsr0l	equ	0xFE9
 30906                           wreg	equ	0xFE8
 30907                           postinc1	equ	0xFE6
 30908                           postdec1	equ	0xFE5
 30909                           plusw1	equ	0xFE3
 30910                           fsr1h	equ	0xFE2
 30911                           fsr1l	equ	0xFE1
 30912                           indf2	equ	0xFDF
 30913                           postinc2	equ	0xFDE
 30914                           postdec2	equ	0xFDD
 30915                           plusw2	equ	0xFDB
 30916                           fsr2h	equ	0xFDA
 30917                           fsr2l	equ	0xFD9
 30918                           status	equ	0xFD8
 30919                           
 30920 ;; *************** function _SetCallbackSoftwareTimers *****************
 30921 ;; Defined at:
 30922 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 30923 ;; Parameters:    Size  Location     Type
 30924 ;;		None
 30925 ;; Auto vars:     Size  Location     Type
 30926 ;;		None
 30927 ;; Return value:  Size  Location     Type
 30928 ;;                  1    wreg      void 
 30929 ;; Registers used:
 30930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30931 ;; Tracked objects:
 30932 ;;		On entry : F/2
 30933 ;;		On exit  : F/0
 30934 ;;		Unchanged: 0/0
 30935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30936 ;;      Params:         0       0       0       0       0       0       0       0       0
 30937 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30938 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30939 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30940 ;;Total ram usage:        0 bytes
 30941 ;; Hardware stack levels used:    1
 30942 ;; Hardware stack levels required when called:    8
 30943 ;; This function calls:
 30944 ;;		_SwTimerSetCallback
 30945 ;; This function is called by:
 30946 ;;		_LORAWAN_Init
 30947 ;; This function uses a non-reentrant model
 30948 ;;
 30949                           
 30950                           	psect	text158
 30951  0056C0                     __ptext158:
 30952                           	opt stack 0
 30953  0056C0                     _SetCallbackSoftwareTimers:
 30954                           	opt stack 21
 30955                           
 30956                           ; BSR set to: 2
 30957                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 30958                           
 30959                           ;incstack = 0
 30960  0056C0  0E3C               	movlw	low _LORAWAN_ReceiveWindow1Callback
 30961  0056C2  0100               	movlb	0	; () banked
 30962  0056C4  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 30963  0056C6  0E5A               	movlw	high _LORAWAN_ReceiveWindow1Callback
 30964  0056C8  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 30965  0056CA  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 30966  0056CC  0102               	movlb	2	; () banked
 30967  0056CE  51E2               	movf	(_loRa+226)& (0+255),w,b
 30968  0056D0  ECD1  F038         	call	_SwTimerSetCallback
 30969                           
 30970                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 30971  0056D4  0E3A               	movlw	low _LORAWAN_ReceiveWindow2Callback
 30972  0056D6  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 30973  0056D8  0E55               	movlw	high _LORAWAN_ReceiveWindow2Callback
 30974  0056DA  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 30975  0056DC  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 30976  0056DE  0102               	movlb	2	; () banked
 30977  0056E0  51E3               	movf	(_loRa+227)& (0+255),w,b
 30978  0056E2  ECD1  F038         	call	_SwTimerSetCallback
 30979                           
 30980                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 30981  0056E6  0E2C               	movlw	low _LORAWAN_LinkCheckCallback
 30982  0056E8  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 30983  0056EA  0E40               	movlw	high _LORAWAN_LinkCheckCallback
 30984  0056EC  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 30985  0056EE  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 30986  0056F0  0102               	movlb	2	; () banked
 30987  0056F2  51E7               	movf	(_loRa+231)& (0+255),w,b
 30988  0056F4  ECD1  F038         	call	_SwTimerSetCallback
 30989                           
 30990                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 30991  0056F8  0E3C               	movlw	low _LORAWAN_ReceiveWindow1Callback
 30992  0056FA  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 30993  0056FC  0E5A               	movlw	high _LORAWAN_ReceiveWindow1Callback
 30994  0056FE  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 30995  005700  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 30996  005702  0102               	movlb	2	; () banked
 30997  005704  51E4               	movf	(_loRa+228)& (0+255),w,b
 30998  005706  ECD1  F038         	call	_SwTimerSetCallback
 30999                           
 31000                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 31001  00570A  0E3A               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31002  00570C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31003  00570E  0E55               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31004  005710  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31005  005712  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31006  005714  0102               	movlb	2	; () banked
 31007  005716  51E5               	movf	(_loRa+229)& (0+255),w,b
 31008  005718  ECD1  F038         	call	_SwTimerSetCallback
 31009                           
 31010                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 31011  00571C  0EBA               	movlw	low _AckRetransmissionCallback
 31012  00571E  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31013  005720  0E49               	movlw	high _AckRetransmissionCallback
 31014  005722  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31015  005724  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31016  005726  0102               	movlb	2	; () banked
 31017  005728  51E8               	movf	(_loRa+232)& (0+255),w,b
 31018  00572A  ECD1  F038         	call	_SwTimerSetCallback
 31019                           
 31020                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 31021  00572E  0E4E               	movlw	low _AutomaticReplyCallback
 31022  005730  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31023  005732  0E75               	movlw	high _AutomaticReplyCallback
 31024  005734  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31025  005736  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31026  005738  0102               	movlb	2	; () banked
 31027  00573A  51E6               	movf	(_loRa+230)& (0+255),w,b
 31028  00573C  ECD1  F038         	call	_SwTimerSetCallback
 31029                           
 31030                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 31031  005740  0EAC               	movlw	low _UnconfirmedTransmissionCallback
 31032  005742  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31033  005744  0E62               	movlw	high _UnconfirmedTransmissionCallback
 31034  005746  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31035  005748  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31036  00574A  0102               	movlb	2	; () banked
 31037  00574C  51EA               	movf	(_loRa+234)& (0+255),w,b
 31038  00574E  ECD1  F038         	call	_SwTimerSetCallback
 31039                           
 31040                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 31041  005752  0E54               	movlw	low _UpdateJoinSuccessState
 31042  005754  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31043  005756  0E45               	movlw	high _UpdateJoinSuccessState
 31044  005758  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31045  00575A  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31046  00575C  0102               	movlb	2	; () banked
 31047  00575E  51F3               	movf	(_loRa+243)& (0+255),w,b
 31048  005760  ECD1  F038         	call	_SwTimerSetCallback
 31049                           
 31050                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 31051  005764  0E2A               	movlw	low _DutyCycleCallback
 31052  005766  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31053  005768  0E24               	movlw	high _DutyCycleCallback
 31054  00576A  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31055  00576C  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31056  00576E  0102               	movlb	2	; () banked
 31057  005770  51E9               	movf	(_loRa+233)& (0+255),w,b
 31058  005772  EFD1  F038         	goto	_SwTimerSetCallback
 31059  005776                     __end_of_SetCallbackSoftwareTimers:
 31060                           	opt stack 0
 31061                           tosu	equ	0xFFF
 31062                           tosh	equ	0xFFE
 31063                           tosl	equ	0xFFD
 31064                           pclath	equ	0xFFA
 31065                           tblptru	equ	0xFF8
 31066                           tblptrh	equ	0xFF7
 31067                           tblptrl	equ	0xFF6
 31068                           tablat	equ	0xFF5
 31069                           prodh	equ	0xFF4
 31070                           prodl	equ	0xFF3
 31071                           intcon	equ	0xFF2
 31072                           indf0	equ	0xFEF
 31073                           postinc0	equ	0xFEE
 31074                           plusw0	equ	0xFEB
 31075                           fsr0h	equ	0xFEA
 31076                           fsr0l	equ	0xFE9
 31077                           wreg	equ	0xFE8
 31078                           postinc1	equ	0xFE6
 31079                           postdec1	equ	0xFE5
 31080                           plusw1	equ	0xFE3
 31081                           fsr1h	equ	0xFE2
 31082                           fsr1l	equ	0xFE1
 31083                           indf2	equ	0xFDF
 31084                           postinc2	equ	0xFDE
 31085                           postdec2	equ	0xFDD
 31086                           plusw2	equ	0xFDB
 31087                           fsr2h	equ	0xFDA
 31088                           fsr2l	equ	0xFD9
 31089                           status	equ	0xFD8
 31090                           
 31091 ;; *************** function _RADIO_ReadRandom *****************
 31092 ;; Defined at:
 31093 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31094 ;; Parameters:    Size  Location     Type
 31095 ;;		None
 31096 ;; Auto vars:     Size  Location     Type
 31097 ;;  retVal          2   18[BANK0 ] unsigned int 
 31098 ;;  i               1   20[BANK0 ] unsigned char 
 31099 ;; Return value:  Size  Location     Type
 31100 ;;                  2   16[BANK0 ] unsigned int 
 31101 ;; Registers used:
 31102 ;;		wreg, status,2, status,0, cstack
 31103 ;; Tracked objects:
 31104 ;;		On entry : F/1
 31105 ;;		On exit  : 1/0
 31106 ;;		Unchanged: 0/0
 31107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31108 ;;      Params:         0       2       0       0       0       0       0       0       0
 31109 ;;      Locals:         0       3       0       0       0       0       0       0       0
 31110 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31111 ;;      Totals:         0       5       0       0       0       0       0       0       0
 31112 ;;Total ram usage:        5 bytes
 31113 ;; Hardware stack levels used:    1
 31114 ;; Hardware stack levels required when called:   11
 31115 ;; This function calls:
 31116 ;;		_RADIO_RegisterRead
 31117 ;;		_RADIO_RegisterWrite
 31118 ;;		_RADIO_WriteMode
 31119 ;;		_SystemBlockingWaitMs
 31120 ;; This function is called by:
 31121 ;;		_LORAWAN_Init
 31122 ;; This function uses a non-reentrant model
 31123 ;;
 31124                           
 31125                           	psect	text159
 31126  005F62                     __ptext159:
 31127                           	opt stack 0
 31128  005F62                     _RADIO_ReadRandom:
 31129                           	opt stack 18
 31130                           
 31131                           ; BSR set to: 1
 31132                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 31133                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 31134                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 31135                           
 31136                           ; BSR set to: 0
 31137                           ;incstack = 0
 31138  005F62  0100               	movlb	0	; () banked
 31139  005F64  6B72               	clrf	RADIO_ReadRandom@retVal& (0+255),b
 31140  005F66  6B73               	clrf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 31141                           
 31142                           ; BSR set to: 0
 31143                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31144  005F68  0E01               	movlw	1
 31145  005F6A  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31146  005F6C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31147  005F6E  0E00               	movlw	0
 31148  005F70  ECFE  F028         	call	_RADIO_WriteMode
 31149                           
 31150                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 31151  005F74  0100               	movlb	0	; () banked
 31152  005F76  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31153  005F78  0E11               	movlw	17
 31154  005F7A  ECD4  F03A         	call	_RADIO_RegisterWrite
 31155                           
 31156                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 31157  005F7E  0E01               	movlw	1
 31158  005F80  0100               	movlb	0	; () banked
 31159  005F82  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31160  005F84  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31161  005F86  0E05               	movlw	5
 31162  005F88  ECFE  F028         	call	_RADIO_WriteMode
 31163                           
 31164                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 31165  005F8C  0100               	movlb	0	; () banked
 31166  005F8E  6B74               	clrf	RADIO_ReadRandom@i& (0+255),b
 31167  005F90                     l15587:
 31168                           
 31169                           ; BSR set to: 0
 31170                           ;radio_driver_SX1276.c: 1377: {
 31171                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 31172  005F90  0E01               	movlw	1
 31173  005F92  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 31174  005F94  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 31175  005F96  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 31176  005F98  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 31177  005F9A  EC85  F039         	call	_SystemBlockingWaitMs	;wreg free
 31178                           
 31179                           ; BSR set to: 0
 31180                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 31181  005F9E  90D8               	bcf	status,0,c
 31182  005FA0  3772               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 31183  005FA2  3773               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 31184                           
 31185                           ; BSR set to: 0
 31186                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 31187  005FA4  0E2C               	movlw	44
 31188  005FA6  ECEA  F039         	call	_RADIO_RegisterRead
 31189  005FAA  0B01               	andlw	1
 31190  005FAC  1372               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 31191  005FAE  2B74               	incf	RADIO_ReadRandom@i& (0+255),f,b
 31192                           
 31193                           ; BSR set to: 0
 31194  005FB0  0E0F               	movlw	15
 31195  005FB2  6574               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 31196  005FB4  D7ED               	goto	l15587
 31197                           
 31198                           ; BSR set to: 0
 31199                           ;radio_driver_SX1276.c: 1381: }
 31200                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31201  005FB6  0E01               	movlw	1
 31202  005FB8  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31203  005FBA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31204  005FBC  0E00               	movlw	0
 31205  005FBE  ECFE  F028         	call	_RADIO_WriteMode
 31206                           
 31207                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 31208  005FC2  0100               	movlb	0	; () banked
 31209  005FC4  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31210  005FC6  0E12               	movlw	18
 31211  005FC8  ECD4  F03A         	call	_RADIO_RegisterWrite
 31212                           
 31213                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 31214  005FCC  0100               	movlb	0	; () banked
 31215  005FCE  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 31216  005FD0  0E11               	movlw	17
 31217  005FD2  ECD4  F03A         	call	_RADIO_RegisterWrite
 31218                           
 31219                           ;radio_driver_SX1276.c: 1389: return retVal;
 31220  005FD6  C072  F070         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 31221  005FDA  C073  F071         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 31222  005FDE  0012               	return		;funcret
 31223  005FE0                     __end_of_RADIO_ReadRandom:
 31224                           	opt stack 0
 31225                           tosu	equ	0xFFF
 31226                           tosh	equ	0xFFE
 31227                           tosl	equ	0xFFD
 31228                           pclath	equ	0xFFA
 31229                           tblptru	equ	0xFF8
 31230                           tblptrh	equ	0xFF7
 31231                           tblptrl	equ	0xFF6
 31232                           tablat	equ	0xFF5
 31233                           prodh	equ	0xFF4
 31234                           prodl	equ	0xFF3
 31235                           intcon	equ	0xFF2
 31236                           indf0	equ	0xFEF
 31237                           postinc0	equ	0xFEE
 31238                           plusw0	equ	0xFEB
 31239                           fsr0h	equ	0xFEA
 31240                           fsr0l	equ	0xFE9
 31241                           wreg	equ	0xFE8
 31242                           postinc1	equ	0xFE6
 31243                           postdec1	equ	0xFE5
 31244                           plusw1	equ	0xFE3
 31245                           fsr1h	equ	0xFE2
 31246                           fsr1l	equ	0xFE1
 31247                           indf2	equ	0xFDF
 31248                           postinc2	equ	0xFDE
 31249                           postdec2	equ	0xFDD
 31250                           plusw2	equ	0xFDB
 31251                           fsr2h	equ	0xFDA
 31252                           fsr2l	equ	0xFD9
 31253                           status	equ	0xFD8
 31254                           
 31255 ;; *************** function _LORAWAN_Reset *****************
 31256 ;; Defined at:
 31257 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31258 ;; Parameters:    Size  Location     Type
 31259 ;;  ismBandNew      1    wreg     enum E17221
 31260 ;; Auto vars:     Size  Location     Type
 31261 ;;  ismBandNew      1   67[BANK0 ] enum E17221
 31262 ;; Return value:  Size  Location     Type
 31263 ;;                  1    wreg      void 
 31264 ;; Registers used:
 31265 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31266 ;; Tracked objects:
 31267 ;;		On entry : 1/0
 31268 ;;		On exit  : D/0
 31269 ;;		Unchanged: 0/0
 31270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31271 ;;      Params:         0       0       0       0       0       0       0       0       0
 31272 ;;      Locals:         0       1       0       0       0       0       0       0       0
 31273 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31274 ;;      Totals:         0       1       0       0       0       0       0       0       0
 31275 ;;Total ram usage:        1 bytes
 31276 ;; Hardware stack levels used:    1
 31277 ;; Hardware stack levels required when called:   12
 31278 ;; This function calls:
 31279 ;;		_InitDefault433Channels
 31280 ;;		_InitDefault868Channels
 31281 ;;		_LORAWAN_LinkCheckConfigure
 31282 ;;		_RADIO_Init
 31283 ;;		_RADIO_SetLoRaSyncWord
 31284 ;;		_StopAllSoftwareTimers
 31285 ;;		_UpdateMinMaxChDataRate
 31286 ;;		_memset
 31287 ;; This function is called by:
 31288 ;;		_LORAWAN_Init
 31289 ;; This function uses a non-reentrant model
 31290 ;;
 31291                           
 31292                           	psect	text160
 31293  003ECE                     __ptext160:
 31294                           	opt stack 0
 31295  003ECE                     _LORAWAN_Reset:
 31296                           	opt stack 17
 31297                           
 31298                           ;incstack = 0
 31299                           ;LORAWAN_Reset@ismBandNew stored from wreg
 31300  003ECE  0100               	movlb	0	; () banked
 31301  003ED0  6FA3               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 31302                           
 31303                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 31304  003ED2  0102               	movlb	2	; () banked
 31305  003ED4  05F0               	decf	(_loRa+240)& (0+255),w,b
 31306  003ED6  E102               	bnz	l15613
 31307                           
 31308                           ; BSR set to: 2
 31309                           ;lorawan_eu.c: 151: {
 31310                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 31311  003ED8  EC5E  F035         	call	_StopAllSoftwareTimers	;wreg free
 31312  003EDC                     l15613:
 31313                           
 31314                           ;lorawan_eu.c: 153: }
 31315                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 31316  003EDC  0E34               	movlw	52
 31317  003EDE  0102               	movlb	2	; () banked
 31318  003EE0  6FF4               	movwf	(_loRa+244)& (0+255),b
 31319                           
 31320                           ; BSR set to: 2
 31321                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 31322  003EE2  51F4               	movf	(_loRa+244)& (0+255),w,b
 31323  003EE4  EC63  F03C         	call	_RADIO_SetLoRaSyncWord
 31324                           
 31325                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 31326  003EE8  0102               	movlb	2	; () banked
 31327  003EEA  6B02               	clrf	(_loRa+2)& (0+255),b
 31328  003EEC  6B03               	clrf	(_loRa+3)& (0+255),b
 31329  003EEE  6B04               	clrf	(_loRa+4)& (0+255),b
 31330  003EF0  6B05               	clrf	(_loRa+5)& (0+255),b
 31331                           
 31332                           ; BSR set to: 2
 31333                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 31334  003EF2  69DD               	setf	(_loRa+221)& (0+255),b
 31335                           
 31336                           ; BSR set to: 2
 31337                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 31338  003EF4  6BDE               	clrf	(_loRa+222)& (0+255),b
 31339                           
 31340                           ; BSR set to: 2
 31341                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 31342  003EF6  6BC8               	clrf	(_loRa+200)& (0+255),b
 31343  003EF8  6BC9               	clrf	(_loRa+201)& (0+255),b
 31344  003EFA  6BCA               	clrf	(_loRa+202)& (0+255),b
 31345  003EFC  6BCB               	clrf	(_loRa+203)& (0+255),b
 31346                           
 31347                           ; BSR set to: 2
 31348                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 31349  003EFE  6BD4               	clrf	(_loRa+212)& (0+255),b
 31350  003F00  6BD5               	clrf	(_loRa+213)& (0+255),b
 31351                           
 31352                           ; BSR set to: 2
 31353                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 31354  003F02  6B0A               	clrf	(_loRa+10)& (0+255),b
 31355  003F04  6B0B               	clrf	(_loRa+11)& (0+255),b
 31356  003F06  6B0C               	clrf	(_loRa+12)& (0+255),b
 31357  003F08  6B0D               	clrf	(_loRa+13)& (0+255),b
 31358                           
 31359                           ; BSR set to: 2
 31360                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 31361  003F0A  6B06               	clrf	(_loRa+6)& (0+255),b
 31362  003F0C  6B07               	clrf	(_loRa+7)& (0+255),b
 31363  003F0E  6B08               	clrf	(_loRa+8)& (0+255),b
 31364  003F10  6B09               	clrf	(_loRa+9)& (0+255),b
 31365                           
 31366                           ; BSR set to: 2
 31367                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 31368  003F12  6BD2               	clrf	(_loRa+210)& (0+255),b
 31369  003F14  6BD3               	clrf	(_loRa+211)& (0+255),b
 31370                           
 31371                           ; BSR set to: 2
 31372                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 31373  003F16  6BDC               	clrf	(_loRa+220)& (0+255),b
 31374  003F18  0E01               	movlw	1
 31375  003F1A  6FDB               	movwf	(_loRa+219)& (0+255),b
 31376                           
 31377                           ; BSR set to: 2
 31378                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 31379  003F1C  6BD0               	clrf	(_loRa+208)& (0+255),b
 31380  003F1E  6BD1               	clrf	(_loRa+209)& (0+255),b
 31381                           
 31382                           ; BSR set to: 2
 31383                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 31384  003F20  6BEE               	clrf	(_loRa+238)& (0+255),b
 31385                           
 31386                           ; BSR set to: 2
 31387                           ;lorawan_eu.c: 169: loRa.offset = 0;
 31388  003F22  6BEF               	clrf	(_loRa+239)& (0+255),b
 31389                           
 31390                           ; BSR set to: 2
 31391                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 31392  003F24  6BC8               	clrf	(_loRa+200)& (0+255),b
 31393  003F26  6BC9               	clrf	(_loRa+201)& (0+255),b
 31394  003F28  6BCA               	clrf	(_loRa+202)& (0+255),b
 31395  003F2A  6BCB               	clrf	(_loRa+203)& (0+255),b
 31396                           
 31397                           ; BSR set to: 2
 31398                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 31399  003F2C  9503               	bcf	(_loRa+3)& (0+255),2,b
 31400                           
 31401                           ; BSR set to: 2
 31402                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 31403  003F2E  6B02               	clrf	(_loRa+2)& (0+255),b
 31404  003F30  6B03               	clrf	(_loRa+3)& (0+255),b
 31405  003F32  6B04               	clrf	(_loRa+4)& (0+255),b
 31406  003F34  6B05               	clrf	(_loRa+5)& (0+255),b
 31407                           
 31408                           ; BSR set to: 2
 31409                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 31410  003F36  6B00               	clrf	_loRa& (0+255),b
 31411  003F38  6B01               	clrf	(_loRa+1)& (0+255),b
 31412                           
 31413                           ; BSR set to: 2
 31414                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 31415  003F3A  0E07               	movlw	7
 31416  003F3C  6FD7               	movwf	(_loRa+215)& (0+255),b
 31417                           
 31418                           ; BSR set to: 2
 31419                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 31420  003F3E  6BD6               	clrf	(_loRa+214)& (0+255),b
 31421                           
 31422                           ; BSR set to: 2
 31423                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 31424  003F40  0E01               	movlw	1
 31425  003F42  6FD9               	movwf	(_loRa+217)& (0+255),b
 31426                           
 31427                           ; BSR set to: 2
 31428                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 31429  003F44  6FD8               	movwf	(_loRa+216)& (0+255),b
 31430                           
 31431                           ; BSR set to: 2
 31432                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 31433  003F46  69E0               	setf	(_loRa+224)& (0+255),b
 31434                           
 31435                           ; BSR set to: 2
 31436                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 31437  003F48  C0A3  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 31438                           
 31439                           ; BSR set to: 2
 31440                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 31441  003F4C  6B12               	clrf	(_loRa+18)& (0+255),b
 31442                           
 31443                           ; BSR set to: 2
 31444                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 31445  003F4E  0E10               	movlw	16
 31446  003F50  6FED               	movwf	(_loRa+237)& (0+255),b
 31447                           
 31448                           ; BSR set to: 2
 31449                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 31450  003F52  0100               	movlb	0	; () banked
 31451  003F54  51A3               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 31452  003F56  E11A               	bnz	l15675
 31453                           
 31454                           ; BSR set to: 0
 31455                           ;lorawan_eu.c: 193: {
 31456                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 31457  003F58  0EFF               	movlw	low (_radioBuffer+16)
 31458  003F5A  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31459  003F5C  0E05               	movlw	high (_radioBuffer+16)
 31460  003F5E  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31461  003F60  0EA0               	movlw	160
 31462  003F62  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31463  003F64  0E27               	movlw	39
 31464  003F66  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31465  003F68  0EBE               	movlw	190
 31466  003F6A  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31467  003F6C  0E33               	movlw	51
 31468  003F6E  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31469  003F70  EC5D  F01C         	call	_RADIO_Init	;wreg free
 31470                           
 31471                           ; BSR set to: 1
 31472                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 31473  003F74  EC2B  F032         	call	_InitDefault868Channels	;wreg free
 31474                           
 31475                           ; BSR set to: 0
 31476                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 31477  003F78  0102               	movlb	2	; () banked
 31478  003F7A  6B1C               	clrf	(_loRa+28)& (0+255),b
 31479                           
 31480                           ; BSR set to: 2
 31481                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 31482  003F7C  0E08               	movlw	8
 31483  003F7E  6F18               	movwf	(_loRa+24)& (0+255),b
 31484  003F80  0EE6               	movlw	230
 31485  003F82  6F19               	movwf	(_loRa+25)& (0+255),b
 31486  003F84  0ED3               	movlw	211
 31487  003F86  6F1A               	movwf	(_loRa+26)& (0+255),b
 31488  003F88  0E33               	movlw	51
 31489  003F8A  D019               	goto	L20
 31490  003F8C                     l15675:
 31491                           
 31492                           ; BSR set to: 0
 31493                           ;lorawan_eu.c: 201: else
 31494                           ;lorawan_eu.c: 202: {
 31495                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 31496  003F8C  0EFF               	movlw	low (_radioBuffer+16)
 31497  003F8E  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31498  003F90  0E05               	movlw	high (_radioBuffer+16)
 31499  003F92  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31500  003F94  0E20               	movlw	32
 31501  003F96  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31502  003F98  0EA2               	movlw	162
 31503  003F9A  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31504  003F9C  0ED3               	movlw	211
 31505  003F9E  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31506  003FA0  0E19               	movlw	25
 31507  003FA2  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31508  003FA4  EC5D  F01C         	call	_RADIO_Init	;wreg free
 31509                           
 31510                           ; BSR set to: 1
 31511                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 31512  003FA8  EC5E  F032         	call	_InitDefault433Channels	;wreg free
 31513                           
 31514                           ; BSR set to: 0
 31515                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 31516  003FAC  0102               	movlb	2	; () banked
 31517  003FAE  6B1C               	clrf	(_loRa+28)& (0+255),b
 31518                           
 31519                           ; BSR set to: 2
 31520                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 31521  003FB0  0E28               	movlw	40
 31522  003FB2  6F18               	movwf	(_loRa+24)& (0+255),b
 31523  003FB4  0E76               	movlw	118
 31524  003FB6  6F19               	movwf	(_loRa+25)& (0+255),b
 31525  003FB8  0EE8               	movlw	232
 31526  003FBA  6F1A               	movwf	(_loRa+26)& (0+255),b
 31527  003FBC  0E19               	movlw	25
 31528  003FBE                     L20:
 31529  003FBE  6F1B               	movwf	(_loRa+27)& (0+255),b
 31530                           
 31531                           ; BSR set to: 2
 31532                           ;lorawan_eu.c: 209: }
 31533                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 31534  003FC0  0E01               	movlw	1
 31535  003FC2  6FE1               	movwf	(_loRa+225)& (0+255),b
 31536                           
 31537                           ; BSR set to: 2
 31538                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 31539  003FC4  6BDF               	clrf	(_loRa+223)& (0+255),b
 31540                           
 31541                           ; BSR set to: 2
 31542                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 31543  003FC6  ECBB  F02B         	call	_UpdateMinMaxChDataRate	;wreg free
 31544                           
 31545                           ; BSR set to: 0
 31546                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 31547  003FCA  0102               	movlb	2	; () banked
 31548  003FCC  6BA5               	clrf	(_loRa+165)& (0+255),b
 31549  003FCE  6BA6               	clrf	(_loRa+166)& (0+255),b
 31550                           
 31551                           ; BSR set to: 2
 31552                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 31553  003FD0  0E1D               	movlw	low (_loRa+29)
 31554  003FD2  0100               	movlb	0	; () banked
 31555  003FD4  6F64               	movwf	memset@p1& (0+255),b
 31556  003FD6  0E02               	movlw	high (_loRa+29)
 31557  003FD8  6F65               	movwf	(memset@p1+1)& (0+255),b
 31558  003FDA  6B67               	clrf	(memset@c+1)& (0+255),b
 31559  003FDC  6B66               	clrf	memset@c& (0+255),b
 31560  003FDE  6B69               	clrf	(memset@n+1)& (0+255),b
 31561  003FE0  0E69               	movlw	105
 31562  003FE2  6F68               	movwf	memset@n& (0+255),b
 31563  003FE4  EC9A  F039         	call	_memset	;wreg free
 31564                           
 31565                           ; BSR set to: 0
 31566                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 31567  003FE8  0E03               	movlw	3
 31568  003FEA  0102               	movlb	2	; () banked
 31569  003FEC  6F95               	movwf	(_loRa+149)& (0+255),b
 31570  003FEE  0EE8               	movlw	232
 31571  003FF0  6F94               	movwf	(_loRa+148)& (0+255),b
 31572                           
 31573                           ; BSR set to: 2
 31574                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 31575  003FF2  0E07               	movlw	7
 31576  003FF4  6F97               	movwf	(_loRa+151)& (0+255),b
 31577  003FF6  0ED0               	movlw	208
 31578  003FF8  6F96               	movwf	(_loRa+150)& (0+255),b
 31579                           
 31580                           ; BSR set to: 2
 31581                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 31582  003FFA  0E13               	movlw	19
 31583  003FFC  6F99               	movwf	(_loRa+153)& (0+255),b
 31584  003FFE  0E88               	movlw	136
 31585  004000  6F98               	movwf	(_loRa+152)& (0+255),b
 31586                           
 31587                           ; BSR set to: 2
 31588                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 31589  004002  0E17               	movlw	23
 31590  004004  6F9B               	movwf	(_loRa+155)& (0+255),b
 31591  004006  0E70               	movlw	112
 31592  004008  6F9A               	movwf	(_loRa+154)& (0+255),b
 31593                           
 31594                           ; BSR set to: 2
 31595                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 31596  00400A  0E07               	movlw	7
 31597  00400C  6FA1               	movwf	(_loRa+161)& (0+255),b
 31598  00400E  0ED0               	movlw	208
 31599  004010  6FA0               	movwf	(_loRa+160)& (0+255),b
 31600                           
 31601                           ; BSR set to: 2
 31602                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 31603  004012  0E20               	movlw	32
 31604  004014  6FA3               	movwf	(_loRa+163)& (0+255),b
 31605                           
 31606                           ; BSR set to: 2
 31607                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 31608  004016  0E40               	movlw	64
 31609  004018  6FA2               	movwf	(_loRa+162)& (0+255),b
 31610                           
 31611                           ; BSR set to: 2
 31612                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 31613  00401A  6F9D               	movwf	(_loRa+157)& (0+255),b
 31614  00401C  6B9C               	clrf	(_loRa+156)& (0+255),b
 31615                           
 31616                           ; BSR set to: 2
 31617                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 31618  00401E  6F9F               	movwf	(_loRa+159)& (0+255),b
 31619  004020  6B9E               	clrf	(_loRa+158)& (0+255),b
 31620                           
 31621                           ; BSR set to: 2
 31622                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 31623  004022  0100               	movlb	0	; () banked
 31624  004024  6B95               	clrf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 31625  004026  6B94               	clrf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 31626  004028  EF8F  F01B         	goto	_LORAWAN_LinkCheckConfigure	;wreg free
 31627  00402C                     __end_of_LORAWAN_Reset:
 31628                           	opt stack 0
 31629                           tosu	equ	0xFFF
 31630                           tosh	equ	0xFFE
 31631                           tosl	equ	0xFFD
 31632                           pclath	equ	0xFFA
 31633                           tblptru	equ	0xFF8
 31634                           tblptrh	equ	0xFF7
 31635                           tblptrl	equ	0xFF6
 31636                           tablat	equ	0xFF5
 31637                           prodh	equ	0xFF4
 31638                           prodl	equ	0xFF3
 31639                           intcon	equ	0xFF2
 31640                           indf0	equ	0xFEF
 31641                           postinc0	equ	0xFEE
 31642                           plusw0	equ	0xFEB
 31643                           fsr0h	equ	0xFEA
 31644                           fsr0l	equ	0xFE9
 31645                           wreg	equ	0xFE8
 31646                           postinc1	equ	0xFE6
 31647                           postdec1	equ	0xFE5
 31648                           plusw1	equ	0xFE3
 31649                           fsr1h	equ	0xFE2
 31650                           fsr1l	equ	0xFE1
 31651                           indf2	equ	0xFDF
 31652                           postinc2	equ	0xFDE
 31653                           postdec2	equ	0xFDD
 31654                           plusw2	equ	0xFDB
 31655                           fsr2h	equ	0xFDA
 31656                           fsr2l	equ	0xFD9
 31657                           status	equ	0xFD8
 31658                           
 31659 ;; *************** function _UpdateMinMaxChDataRate *****************
 31660 ;; Defined at:
 31661 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31662 ;; Parameters:    Size  Location     Type
 31663 ;;		None
 31664 ;; Auto vars:     Size  Location     Type
 31665 ;;  i               1    5[BANK0 ] unsigned char 
 31666 ;; Return value:  Size  Location     Type
 31667 ;;                  1    wreg      void 
 31668 ;; Registers used:
 31669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31670 ;; Tracked objects:
 31671 ;;		On entry : F/2
 31672 ;;		On exit  : F/0
 31673 ;;		Unchanged: 0/0
 31674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31675 ;;      Params:         0       0       0       0       0       0       0       0       0
 31676 ;;      Locals:         0       1       0       0       0       0       0       0       0
 31677 ;;      Temps:          0       1       0       0       0       0       0       0       0
 31678 ;;      Totals:         0       2       0       0       0       0       0       0       0
 31679 ;;Total ram usage:        2 bytes
 31680 ;; Hardware stack levels used:    1
 31681 ;; Hardware stack levels required when called:    7
 31682 ;; This function calls:
 31683 ;;		Nothing
 31684 ;; This function is called by:
 31685 ;;		_LORAWAN_Reset
 31686 ;; This function uses a non-reentrant model
 31687 ;;
 31688                           
 31689                           	psect	text161
 31690  005776                     __ptext161:
 31691                           	opt stack 0
 31692  005776                     _UpdateMinMaxChDataRate:
 31693                           	opt stack 21
 31694                           
 31695                           ; BSR set to: 2
 31696                           ;lorawan.c: 1065: uint8_t i;
 31697                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 31698                           
 31699                           ;incstack = 0
 31700  005776  0E07               	movlw	7
 31701  005778  6FEB               	movwf	(_loRa+235)& (0+255),b
 31702                           
 31703                           ; BSR set to: 2
 31704                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 31705  00577A  6BEC               	clrf	(_loRa+236)& (0+255),b
 31706                           
 31707                           ; BSR set to: 2
 31708                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 31709  00577C  0100               	movlb	0	; () banked
 31710  00577E  6B65               	clrf	UpdateMinMaxChDataRate@i& (0+255),b
 31711  005780  D04E               	goto	l15103
 31712  005782                     l15091:
 31713                           
 31714                           ; BSR set to: 0
 31715                           ;lorawan.c: 1072: {
 31716                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 31717  005782  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31718  005784  0D0E               	mullw	14
 31719  005786  0E05               	movlw	low (_Channels+5)
 31720  005788  24F3               	addwf	prodl,w,c
 31721  00578A  6ED9               	movwf	fsr2l,c
 31722  00578C  0E04               	movlw	high (_Channels+5)
 31723  00578E  20F4               	addwfc	prodh,w,c
 31724  005790  6EDA               	movwf	fsr2h,c
 31725  005792  50DF               	movf	223,w,c
 31726  005794  0B0F               	andlw	15
 31727  005796  0100               	movlb	0	; () banked
 31728  005798  6F64               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 31729  00579A  0102               	movlb	2	; () banked
 31730  00579C  51EB               	movf	(_loRa+235)& (0+255),w,b
 31731  00579E  0100               	movlb	0	; () banked
 31732  0057A0  5D64               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 31733  0057A2  E216               	bc	l2116
 31734                           
 31735                           ; BSR set to: 0
 31736  0057A4  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31737  0057A6  0D0E               	mullw	14
 31738  0057A8  0E04               	movlw	low (_Channels+4)
 31739  0057AA  24F3               	addwf	prodl,w,c
 31740  0057AC  6ED9               	movwf	fsr2l,c
 31741  0057AE  0E04               	movlw	high (_Channels+4)
 31742  0057B0  20F4               	addwfc	prodh,w,c
 31743  0057B2  6EDA               	movwf	fsr2h,c
 31744  0057B4  04DE               	decf	postinc2,w,c
 31745  0057B6  E10C               	bnz	l2116
 31746                           
 31747                           ; BSR set to: 0
 31748                           ;lorawan.c: 1074: {
 31749                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 31750  0057B8  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31751  0057BA  0D0E               	mullw	14
 31752  0057BC  0E05               	movlw	low (_Channels+5)
 31753  0057BE  24F3               	addwf	prodl,w,c
 31754  0057C0  6ED9               	movwf	fsr2l,c
 31755  0057C2  0E04               	movlw	high (_Channels+5)
 31756  0057C4  20F4               	addwfc	prodh,w,c
 31757  0057C6  6EDA               	movwf	fsr2h,c
 31758  0057C8  50DF               	movf	223,w,c
 31759  0057CA  0B0F               	andlw	15
 31760  0057CC  0102               	movlb	2	; () banked
 31761  0057CE  6FEB               	movwf	(_loRa+235)& (0+255),b
 31762  0057D0                     l2116:
 31763                           
 31764                           ;lorawan.c: 1076: }
 31765                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 31766  0057D0  0100               	movlb	0	; () banked
 31767  0057D2  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31768  0057D4  0D0E               	mullw	14
 31769  0057D6  0E05               	movlw	low (_Channels+5)
 31770  0057D8  24F3               	addwf	prodl,w,c
 31771  0057DA  6ED9               	movwf	fsr2l,c
 31772  0057DC  0E04               	movlw	high (_Channels+5)
 31773  0057DE  20F4               	addwfc	prodh,w,c
 31774  0057E0  6EDA               	movwf	fsr2h,c
 31775  0057E2  38DF               	swapf	223,w,c
 31776  0057E4  0B0F               	andlw	15
 31777  0057E6  0102               	movlb	2	; () banked
 31778  0057E8  61EC               	cpfslt	(_loRa+236)& (0+255),b
 31779  0057EA  D017               	goto	l15101
 31780                           
 31781                           ; BSR set to: 2
 31782  0057EC  0100               	movlb	0	; () banked
 31783  0057EE  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31784  0057F0  0D0E               	mullw	14
 31785  0057F2  0E04               	movlw	low (_Channels+4)
 31786  0057F4  24F3               	addwf	prodl,w,c
 31787  0057F6  6ED9               	movwf	fsr2l,c
 31788  0057F8  0E04               	movlw	high (_Channels+4)
 31789  0057FA  20F4               	addwfc	prodh,w,c
 31790  0057FC  6EDA               	movwf	fsr2h,c
 31791  0057FE  04DE               	decf	postinc2,w,c
 31792  005800  E10C               	bnz	l15101
 31793                           
 31794                           ; BSR set to: 0
 31795                           ;lorawan.c: 1078: {
 31796                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 31797  005802  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31798  005804  0D0E               	mullw	14
 31799  005806  0E05               	movlw	low (_Channels+5)
 31800  005808  24F3               	addwf	prodl,w,c
 31801  00580A  6ED9               	movwf	fsr2l,c
 31802  00580C  0E04               	movlw	high (_Channels+5)
 31803  00580E  20F4               	addwfc	prodh,w,c
 31804  005810  6EDA               	movwf	fsr2h,c
 31805  005812  38DF               	swapf	223,w,c
 31806  005814  0B0F               	andlw	15
 31807  005816  0102               	movlb	2	; () banked
 31808  005818  6FEC               	movwf	(_loRa+236)& (0+255),b
 31809  00581A                     l15101:
 31810  00581A  0100               	movlb	0	; () banked
 31811  00581C  2B65               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 31812  00581E                     l15103:
 31813                           
 31814                           ; BSR set to: 0
 31815  00581E  0102               	movlb	2	; () banked
 31816  005820  51ED               	movf	(_loRa+237)& (0+255),w,b
 31817  005822  0100               	movlb	0	; () banked
 31818  005824  5D65               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 31819  005826  E3AD               	bnc	l15091
 31820                           
 31821                           ; BSR set to: 0
 31822  005828  0012               	return		;funcret
 31823  00582A                     __end_of_UpdateMinMaxChDataRate:
 31824                           	opt stack 0
 31825                           tosu	equ	0xFFF
 31826                           tosh	equ	0xFFE
 31827                           tosl	equ	0xFFD
 31828                           pclath	equ	0xFFA
 31829                           tblptru	equ	0xFF8
 31830                           tblptrh	equ	0xFF7
 31831                           tblptrl	equ	0xFF6
 31832                           tablat	equ	0xFF5
 31833                           prodh	equ	0xFF4
 31834                           prodl	equ	0xFF3
 31835                           intcon	equ	0xFF2
 31836                           indf0	equ	0xFEF
 31837                           postinc0	equ	0xFEE
 31838                           plusw0	equ	0xFEB
 31839                           fsr0h	equ	0xFEA
 31840                           fsr0l	equ	0xFE9
 31841                           wreg	equ	0xFE8
 31842                           postinc1	equ	0xFE6
 31843                           postdec1	equ	0xFE5
 31844                           plusw1	equ	0xFE3
 31845                           fsr1h	equ	0xFE2
 31846                           fsr1l	equ	0xFE1
 31847                           indf2	equ	0xFDF
 31848                           postinc2	equ	0xFDE
 31849                           postdec2	equ	0xFDD
 31850                           plusw2	equ	0xFDB
 31851                           fsr2h	equ	0xFDA
 31852                           fsr2l	equ	0xFD9
 31853                           status	equ	0xFD8
 31854                           
 31855 ;; *************** function _StopAllSoftwareTimers *****************
 31856 ;; Defined at:
 31857 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31858 ;; Parameters:    Size  Location     Type
 31859 ;;		None
 31860 ;; Auto vars:     Size  Location     Type
 31861 ;;		None
 31862 ;; Return value:  Size  Location     Type
 31863 ;;                  1    wreg      void 
 31864 ;; Registers used:
 31865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31866 ;; Tracked objects:
 31867 ;;		On entry : F/2
 31868 ;;		On exit  : F/0
 31869 ;;		Unchanged: 0/0
 31870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31871 ;;      Params:         0       0       0       0       0       0       0       0       0
 31872 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31873 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31874 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31875 ;;Total ram usage:        0 bytes
 31876 ;; Hardware stack levels used:    1
 31877 ;; Hardware stack levels required when called:    8
 31878 ;; This function calls:
 31879 ;;		_SwTimerStop
 31880 ;; This function is called by:
 31881 ;;		_LORAWAN_Init
 31882 ;;		_LORAWAN_Reset
 31883 ;; This function uses a non-reentrant model
 31884 ;;
 31885                           
 31886                           	psect	text162
 31887  006ABC                     __ptext162:
 31888                           	opt stack 0
 31889  006ABC                     _StopAllSoftwareTimers:
 31890                           	opt stack 21
 31891                           
 31892                           ; BSR set to: 2
 31893                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 31894                           
 31895                           ; BSR set to: 0
 31896                           ;incstack = 0
 31897  006ABC  51E2               	movf	(_loRa+226)& (0+255),w,b
 31898  006ABE  EC2D  F03B         	call	_SwTimerStop
 31899                           
 31900                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 31901  006AC2  0102               	movlb	2	; () banked
 31902  006AC4  51E3               	movf	(_loRa+227)& (0+255),w,b
 31903  006AC6  EC2D  F03B         	call	_SwTimerStop
 31904                           
 31905                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 31906  006ACA  0102               	movlb	2	; () banked
 31907  006ACC  51E7               	movf	(_loRa+231)& (0+255),w,b
 31908  006ACE  EC2D  F03B         	call	_SwTimerStop
 31909                           
 31910                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 31911  006AD2  0102               	movlb	2	; () banked
 31912  006AD4  51E4               	movf	(_loRa+228)& (0+255),w,b
 31913  006AD6  EC2D  F03B         	call	_SwTimerStop
 31914                           
 31915                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 31916  006ADA  0102               	movlb	2	; () banked
 31917  006ADC  51E5               	movf	(_loRa+229)& (0+255),w,b
 31918  006ADE  EC2D  F03B         	call	_SwTimerStop
 31919                           
 31920                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 31921  006AE2  0102               	movlb	2	; () banked
 31922  006AE4  51E8               	movf	(_loRa+232)& (0+255),w,b
 31923  006AE6  EC2D  F03B         	call	_SwTimerStop
 31924                           
 31925                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 31926  006AEA  0102               	movlb	2	; () banked
 31927  006AEC  51E6               	movf	(_loRa+230)& (0+255),w,b
 31928  006AEE  EC2D  F03B         	call	_SwTimerStop
 31929                           
 31930                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 31931  006AF2  0102               	movlb	2	; () banked
 31932  006AF4  51EA               	movf	(_loRa+234)& (0+255),w,b
 31933  006AF6  EC2D  F03B         	call	_SwTimerStop
 31934                           
 31935                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 31936  006AFA  0102               	movlb	2	; () banked
 31937  006AFC  51F3               	movf	(_loRa+243)& (0+255),w,b
 31938  006AFE  EC2D  F03B         	call	_SwTimerStop
 31939                           
 31940                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 31941  006B02  0102               	movlb	2	; () banked
 31942  006B04  51E9               	movf	(_loRa+233)& (0+255),w,b
 31943  006B06  EF2D  F03B         	goto	_SwTimerStop
 31944  006B0A                     __end_of_StopAllSoftwareTimers:
 31945                           	opt stack 0
 31946                           tosu	equ	0xFFF
 31947                           tosh	equ	0xFFE
 31948                           tosl	equ	0xFFD
 31949                           pclath	equ	0xFFA
 31950                           tblptru	equ	0xFF8
 31951                           tblptrh	equ	0xFF7
 31952                           tblptrl	equ	0xFF6
 31953                           tablat	equ	0xFF5
 31954                           prodh	equ	0xFF4
 31955                           prodl	equ	0xFF3
 31956                           intcon	equ	0xFF2
 31957                           indf0	equ	0xFEF
 31958                           postinc0	equ	0xFEE
 31959                           plusw0	equ	0xFEB
 31960                           fsr0h	equ	0xFEA
 31961                           fsr0l	equ	0xFE9
 31962                           wreg	equ	0xFE8
 31963                           postinc1	equ	0xFE6
 31964                           postdec1	equ	0xFE5
 31965                           plusw1	equ	0xFE3
 31966                           fsr1h	equ	0xFE2
 31967                           fsr1l	equ	0xFE1
 31968                           indf2	equ	0xFDF
 31969                           postinc2	equ	0xFDE
 31970                           postdec2	equ	0xFDD
 31971                           plusw2	equ	0xFDB
 31972                           fsr2h	equ	0xFDA
 31973                           fsr2l	equ	0xFD9
 31974                           status	equ	0xFD8
 31975                           
 31976 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 31977 ;; Defined at:
 31978 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31979 ;; Parameters:    Size  Location     Type
 31980 ;;  syncWord        1    wreg     unsigned char 
 31981 ;; Auto vars:     Size  Location     Type
 31982 ;;  syncWord        1    4[BANK0 ] unsigned char 
 31983 ;; Return value:  Size  Location     Type
 31984 ;;                  1    wreg      void 
 31985 ;; Registers used:
 31986 ;;		wreg
 31987 ;; Tracked objects:
 31988 ;;		On entry : F/2
 31989 ;;		On exit  : 0/0
 31990 ;;		Unchanged: 0/0
 31991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31992 ;;      Params:         0       0       0       0       0       0       0       0       0
 31993 ;;      Locals:         0       1       0       0       0       0       0       0       0
 31994 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31995 ;;      Totals:         0       1       0       0       0       0       0       0       0
 31996 ;;Total ram usage:        1 bytes
 31997 ;; Hardware stack levels used:    1
 31998 ;; Hardware stack levels required when called:    7
 31999 ;; This function calls:
 32000 ;;		Nothing
 32001 ;; This function is called by:
 32002 ;;		_LORAWAN_Reset
 32003 ;;		_ConfigureRadio
 32004 ;; This function uses a non-reentrant model
 32005 ;;
 32006                           
 32007                           	psect	text163
 32008  0078C6                     __ptext163:
 32009                           	opt stack 0
 32010  0078C6                     _RADIO_SetLoRaSyncWord:
 32011                           	opt stack 18
 32012                           
 32013                           ; BSR set to: 0
 32014                           ;incstack = 0
 32015                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 32016  0078C6  0100               	movlb	0	; () banked
 32017  0078C8  6F64               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 32018                           
 32019                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 32020  0078CA  C064  F187         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 32021  0078CE  0012               	return		;funcret
 32022  0078D0                     __end_of_RADIO_SetLoRaSyncWord:
 32023                           	opt stack 0
 32024                           tosu	equ	0xFFF
 32025                           tosh	equ	0xFFE
 32026                           tosl	equ	0xFFD
 32027                           pclath	equ	0xFFA
 32028                           tblptru	equ	0xFF8
 32029                           tblptrh	equ	0xFF7
 32030                           tblptrl	equ	0xFF6
 32031                           tablat	equ	0xFF5
 32032                           prodh	equ	0xFF4
 32033                           prodl	equ	0xFF3
 32034                           intcon	equ	0xFF2
 32035                           indf0	equ	0xFEF
 32036                           postinc0	equ	0xFEE
 32037                           plusw0	equ	0xFEB
 32038                           fsr0h	equ	0xFEA
 32039                           fsr0l	equ	0xFE9
 32040                           wreg	equ	0xFE8
 32041                           postinc1	equ	0xFE6
 32042                           postdec1	equ	0xFE5
 32043                           plusw1	equ	0xFE3
 32044                           fsr1h	equ	0xFE2
 32045                           fsr1l	equ	0xFE1
 32046                           indf2	equ	0xFDF
 32047                           postinc2	equ	0xFDE
 32048                           postdec2	equ	0xFDD
 32049                           plusw2	equ	0xFDB
 32050                           fsr2h	equ	0xFDA
 32051                           fsr2l	equ	0xFD9
 32052                           status	equ	0xFD8
 32053                           
 32054 ;; *************** function _RADIO_Init *****************
 32055 ;; Defined at:
 32056 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32057 ;; Parameters:    Size  Location     Type
 32058 ;;  radioBuffer     2   29[BANK0 ] PTR unsigned char 
 32059 ;;		 -> radioBuffer(271), 
 32060 ;;  frequency       4   31[BANK0 ] unsigned long 
 32061 ;; Auto vars:     Size  Location     Type
 32062 ;;		None
 32063 ;; Return value:  Size  Location     Type
 32064 ;;                  1    wreg      void 
 32065 ;; Registers used:
 32066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32067 ;; Tracked objects:
 32068 ;;		On entry : F/0
 32069 ;;		On exit  : F/1
 32070 ;;		Unchanged: 0/0
 32071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32072 ;;      Params:         0       6       0       0       0       0       0       0       0
 32073 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32074 ;;      Temps:          0       1       0       0       0       0       0       0       0
 32075 ;;      Totals:         0       7       0       0       0       0       0       0       0
 32076 ;;Total ram usage:        7 bytes
 32077 ;; Hardware stack levels used:    1
 32078 ;; Hardware stack levels required when called:   11
 32079 ;; This function calls:
 32080 ;;		_RADIO_RegisterRead
 32081 ;;		_RADIO_RegisterWrite
 32082 ;;		_RADIO_Reset
 32083 ;;		_RADIO_WriteFrequency
 32084 ;;		_RADIO_WriteMode
 32085 ;;		_SwTimerCreate
 32086 ;;		_SwTimerSetCallback
 32087 ;;		_SwTimerStop
 32088 ;; This function is called by:
 32089 ;;		_LORAWAN_Init
 32090 ;;		_LORAWAN_Reset
 32091 ;; This function uses a non-reentrant model
 32092 ;;
 32093                           
 32094                           	psect	text164
 32095  0038BA                     __ptext164:
 32096                           	opt stack 0
 32097  0038BA                     _RADIO_Init:
 32098                           	opt stack 18
 32099                           
 32100                           ; BSR set to: 0
 32101                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 32102                           
 32103                           ;incstack = 0
 32104  0038BA  C07F  F179         	movff	RADIO_Init@frequency,_RadioConfiguration
 32105  0038BE  C080  F17A         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 32106  0038C2  C081  F17B         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 32107  0038C6  C082  F17C         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 32108                           
 32109                           ; BSR set to: 0
 32110                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 32111  0038CA  0EA8               	movlw	168
 32112  0038CC  0101               	movlb	1	; () banked
 32113  0038CE  6F7D               	movwf	(_RadioConfiguration+4)& (0+255),b
 32114  0038D0  0E61               	movlw	97
 32115  0038D2  6F7E               	movwf	(_RadioConfiguration+5)& (0+255),b
 32116  0038D4  6B7F               	clrf	(_RadioConfiguration+6)& (0+255),b
 32117  0038D6  6B80               	clrf	(_RadioConfiguration+7)& (0+255),b
 32118                           
 32119                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 32120  0038D8  0E50               	movlw	80
 32121  0038DA  6F81               	movwf	(_RadioConfiguration+8)& (0+255),b
 32122  0038DC  0EC3               	movlw	195
 32123  0038DE  6F82               	movwf	(_RadioConfiguration+9)& (0+255),b
 32124  0038E0  6B83               	clrf	(_RadioConfiguration+10)& (0+255),b
 32125  0038E2  6B84               	clrf	(_RadioConfiguration+11)& (0+255),b
 32126                           
 32127                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 32128  0038E4  0E01               	movlw	1
 32129  0038E6  6F91               	movwf	(_RadioConfiguration+24)& (0+255),b
 32130                           
 32131                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 32132  0038E8  0E07               	movlw	7
 32133  0038EA  6F93               	movwf	(_RadioConfiguration+26)& (0+255),b
 32134                           
 32135                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 32136  0038EC  0E01               	movlw	1
 32137  0038EE  6F94               	movwf	(_RadioConfiguration+27)& (0+255),b
 32138                           
 32139                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 32140  0038F0  6F9A               	movwf	(_RadioConfiguration+33)& (0+255),b
 32141                           
 32142                           ; BSR set to: 1
 32143                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 32144  0038F2  6B9B               	clrf	(_RadioConfiguration+34)& (0+255),b
 32145                           
 32146                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 32147  0038F4  6B86               	clrf	(_RadioConfiguration+13)& (0+255),b
 32148  0038F6  0E08               	movlw	8
 32149  0038F8  6F85               	movwf	(_RadioConfiguration+12)& (0+255),b
 32150                           
 32151                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 32152  0038FA  0E0C               	movlw	12
 32153  0038FC  6F92               	movwf	(_RadioConfiguration+25)& (0+255),b
 32154                           
 32155                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 32156  0038FE  0E01               	movlw	1
 32157  003900  6F95               	movwf	(_RadioConfiguration+28)& (0+255),b
 32158                           
 32159                           ; BSR set to: 1
 32160                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 32161  003902  6B96               	clrf	(_RadioConfiguration+29)& (0+255),b
 32162                           
 32163                           ; BSR set to: 1
 32164                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 32165  003904  6B99               	clrf	(_RadioConfiguration+32)& (0+255),b
 32166                           
 32167                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 32168  003906  0EC1               	movlw	193
 32169  003908  6F88               	movwf	(_RadioConfiguration+15)& (0+255),b
 32170                           
 32171                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 32172  00390A  0E94               	movlw	148
 32173  00390C  6F89               	movwf	(_RadioConfiguration+16)& (0+255),b
 32174                           
 32175                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 32176  00390E  0EC1               	movlw	193
 32177  003910  6F8A               	movwf	(_RadioConfiguration+17)& (0+255),b
 32178                           
 32179                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 32180  003912  0E03               	movlw	3
 32181  003914  6F90               	movwf	(_RadioConfiguration+23)& (0+255),b
 32182                           
 32183                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 32184  003916  0E34               	movlw	52
 32185  003918  6F87               	movwf	(_RadioConfiguration+14)& (0+255),b
 32186                           
 32187                           ; BSR set to: 1
 32188                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 32189  00391A  6B9C               	clrf	(_RadioConfiguration+35)& (0+255),b
 32190                           
 32191                           ; BSR set to: 1
 32192                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 32193  00391C  6B9D               	clrf	(_RadioConfiguration+36)& (0+255),b
 32194                           
 32195                           ; BSR set to: 1
 32196                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 32197  00391E  C07D  F19E         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 32198  003922  C07E  F19F         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 32199                           
 32200                           ; BSR set to: 1
 32201                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 32202  003926  6B97               	clrf	(_RadioConfiguration+30)& (0+255),b
 32203  003928  6B98               	clrf	(_RadioConfiguration+31)& (0+255),b
 32204                           
 32205                           ; BSR set to: 1
 32206                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 32207  00392A  0E80               	movlw	128
 32208  00392C  6FAB               	movwf	(_RadioConfiguration+50)& (0+255),b
 32209                           
 32210                           ; BSR set to: 1
 32211                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 32212  00392E  0E98               	movlw	152
 32213  003930  6FA3               	movwf	(_RadioConfiguration+42)& (0+255),b
 32214  003932  0E3A               	movlw	58
 32215  003934  6FA4               	movwf	(_RadioConfiguration+43)& (0+255),b
 32216  003936  6BA5               	clrf	(_RadioConfiguration+44)& (0+255),b
 32217  003938  6BA6               	clrf	(_RadioConfiguration+45)& (0+255),b
 32218                           
 32219                           ; BSR set to: 1
 32220                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 32221  00393A  0E02               	movlw	2
 32222  00393C  6FAC               	movwf	(_RadioConfiguration+51)& (0+255),b
 32223                           
 32224                           ; BSR set to: 1
 32225                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 32226  00393E  0E0B               	movlw	11
 32227  003940  6FAD               	movwf	(_RadioConfiguration+52)& (0+255),b
 32228                           
 32229                           ; BSR set to: 1
 32230                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 32231  003942  0E12               	movlw	18
 32232  003944  6FAE               	movwf	(_RadioConfiguration+53)& (0+255),b
 32233                           
 32234                           ; BSR set to: 1
 32235                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 32236  003946  6BA8               	clrf	(_RadioConfiguration+47)& (0+255),b
 32237  003948  6BA9               	clrf	(_RadioConfiguration+48)& (0+255),b
 32238                           
 32239                           ; BSR set to: 1
 32240                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 32241  00394A  51A7               	movf	(_RadioConfiguration+46)& (0+255),w,b
 32242  00394C  E123               	bnz	l14855
 32243                           
 32244                           ; BSR set to: 1
 32245                           ;radio_driver_SX1276.c: 457: {
 32246                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 32247  00394E  EC1E  F031         	call	_SwTimerCreate	;wreg free
 32248  003952  0101               	movlb	1	; () banked
 32249  003954  6FA0               	movwf	(_RadioConfiguration+39)& (0+255),b
 32250                           
 32251                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 32252  003956  EC1E  F031         	call	_SwTimerCreate	;wreg free
 32253  00395A  0101               	movlb	1	; () banked
 32254  00395C  6FA1               	movwf	(_RadioConfiguration+40)& (0+255),b
 32255                           
 32256                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 32257  00395E  EC1E  F031         	call	_SwTimerCreate	;wreg free
 32258  003962  0101               	movlb	1	; () banked
 32259  003964  6FA2               	movwf	(_RadioConfiguration+41)& (0+255),b
 32260                           
 32261                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 32262  003966  0EA0               	movlw	low _RADIO_RxFSKTimeout
 32263  003968  0100               	movlb	0	; () banked
 32264  00396A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32265  00396C  0E70               	movlw	high _RADIO_RxFSKTimeout
 32266  00396E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32267  003970  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32268  003972  0101               	movlb	1	; () banked
 32269  003974  51A1               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32270  003976  ECD1  F038         	call	_SwTimerSetCallback
 32271                           
 32272                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 32273  00397A  0E04               	movlw	low _RADIO_WatchdogTimeout
 32274  00397C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32275  00397E  0E6D               	movlw	high _RADIO_WatchdogTimeout
 32276  003980  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32277  003982  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32278  003984  0101               	movlb	1	; () banked
 32279  003986  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32280  003988  ECD1  F038         	call	_SwTimerSetCallback
 32281                           
 32282                           ; BSR set to: 0
 32283                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 32284  00398C  0E01               	movlw	1
 32285  00398E  0101               	movlb	1	; () banked
 32286  003990  6FA7               	movwf	(_RadioConfiguration+46)& (0+255),b
 32287                           
 32288                           ;radio_driver_SX1276.c: 466: }
 32289  003992  D00B               	goto	l14857
 32290  003994                     l14855:
 32291                           
 32292                           ; BSR set to: 1
 32293                           ;radio_driver_SX1276.c: 467: else
 32294                           ;radio_driver_SX1276.c: 468: {
 32295                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 32296  003994  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 32297  003996  EC2D  F03B         	call	_SwTimerStop
 32298                           
 32299                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 32300  00399A  0101               	movlb	1	; () banked
 32301  00399C  51A1               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32302  00399E  EC2D  F03B         	call	_SwTimerStop
 32303                           
 32304                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 32305  0039A2  0101               	movlb	1	; () banked
 32306  0039A4  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32307  0039A6  EC2D  F03B         	call	_SwTimerStop
 32308  0039AA                     l14857:
 32309                           
 32310                           ;radio_driver_SX1276.c: 472: }
 32311                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 32312  0039AA  EC85  F038         	call	_RADIO_Reset	;wreg free
 32313                           
 32314                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 32315  0039AE  0E00               	movlw	0
 32316  0039B0  0100               	movlb	0	; () banked
 32317  0039B2  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32318  0039B4  0E01               	movlw	1
 32319  0039B6  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32320  0039B8  ECFE  F028         	call	_RADIO_WriteMode
 32321                           
 32322                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 32323  0039BC  C179  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 32324  0039C0  C17A  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 32325  0039C4  C17B  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 32326  0039C8  C17C  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 32327  0039CC  EC90  F028         	call	_RADIO_WriteFrequency	;wreg free
 32328                           
 32329                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 32330  0039D0  0E42               	movlw	66
 32331  0039D2  0100               	movlb	0	; () banked
 32332  0039D4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32333  0039D6  0E3B               	movlw	59
 32334  0039D8  ECD4  F03A         	call	_RADIO_RegisterWrite
 32335  0039DC                     l14865:
 32336  0039DC  0E3B               	movlw	59
 32337  0039DE  ECEA  F039         	call	_RADIO_RegisterRead
 32338  0039E2  6F83               	movwf	??_RADIO_Init& (0+255),b
 32339  0039E4  BB83               	btfsc	??_RADIO_Init& (0+255),5,b
 32340  0039E6  D7FA               	goto	l14865
 32341                           
 32342                           ; BSR set to: 0
 32343                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 32344  0039E8  0E23               	movlw	35
 32345  0039EA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32346  0039EC  0E0C               	movlw	12
 32347  0039EE  ECD4  F03A         	call	_RADIO_RegisterWrite
 32348                           
 32349                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 32350  0039F2  0E1E               	movlw	30
 32351  0039F4  0100               	movlb	0	; () banked
 32352  0039F6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32353  0039F8  0E0D               	movlw	13
 32354  0039FA  ECD4  F03A         	call	_RADIO_RegisterWrite
 32355                           
 32356                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 32357  0039FE  0EAA               	movlw	170
 32358  003A00  0100               	movlb	0	; () banked
 32359  003A02  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32360  003A04  0E1F               	movlw	31
 32361  003A06  ECD4  F03A         	call	_RADIO_RegisterWrite
 32362                           
 32363                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 32364  003A0A  0E8F               	movlw	143
 32365  003A0C  0100               	movlb	0	; () banked
 32366  003A0E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32367  003A10  0E35               	movlw	53
 32368  003A12  ECD4  F03A         	call	_RADIO_RegisterWrite
 32369                           
 32370                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 32371  003A16  0100               	movlb	0	; () banked
 32372  003A18  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32373  003A1A  0E32               	movlw	50
 32374  003A1C  ECD4  F03A         	call	_RADIO_RegisterWrite
 32375                           
 32376                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 32377  003A20  0E40               	movlw	64
 32378  003A22  0100               	movlb	0	; () banked
 32379  003A24  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32380  003A26  0E31               	movlw	49
 32381  003A28  ECD4  F03A         	call	_RADIO_RegisterWrite
 32382                           
 32383                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 32384  003A2C  0E01               	movlw	1
 32385  003A2E  0100               	movlb	0	; () banked
 32386  003A30  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32387  003A32  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32388  003A34  0E00               	movlw	0
 32389  003A36  ECFE  F028         	call	_RADIO_WriteMode
 32390                           
 32391                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 32392  003A3A  0100               	movlb	0	; () banked
 32393  003A3C  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32394  003A3E  0E23               	movlw	35
 32395  003A40  ECD4  F03A         	call	_RADIO_RegisterWrite
 32396                           
 32397                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 32398  003A44  0E42               	movlw	66
 32399  003A46  ECEA  F039         	call	_RADIO_RegisterRead
 32400  003A4A  0101               	movlb	1	; () banked
 32401  003A4C  6FAA               	movwf	(_RadioConfiguration+49)& (0+255),b
 32402                           
 32403                           ; BSR set to: 1
 32404  003A4E  0012               	return		;funcret
 32405  003A50                     __end_of_RADIO_Init:
 32406                           	opt stack 0
 32407                           tosu	equ	0xFFF
 32408                           tosh	equ	0xFFE
 32409                           tosl	equ	0xFFD
 32410                           pclath	equ	0xFFA
 32411                           tblptru	equ	0xFF8
 32412                           tblptrh	equ	0xFF7
 32413                           tblptrl	equ	0xFF6
 32414                           tablat	equ	0xFF5
 32415                           prodh	equ	0xFF4
 32416                           prodl	equ	0xFF3
 32417                           intcon	equ	0xFF2
 32418                           indf0	equ	0xFEF
 32419                           postinc0	equ	0xFEE
 32420                           plusw0	equ	0xFEB
 32421                           fsr0h	equ	0xFEA
 32422                           fsr0l	equ	0xFE9
 32423                           wreg	equ	0xFE8
 32424                           postinc1	equ	0xFE6
 32425                           postdec1	equ	0xFE5
 32426                           plusw1	equ	0xFE3
 32427                           fsr1h	equ	0xFE2
 32428                           fsr1l	equ	0xFE1
 32429                           indf2	equ	0xFDF
 32430                           postinc2	equ	0xFDE
 32431                           postdec2	equ	0xFDD
 32432                           plusw2	equ	0xFDB
 32433                           fsr2h	equ	0xFDA
 32434                           fsr2l	equ	0xFD9
 32435                           status	equ	0xFD8
 32436                           
 32437 ;; *************** function _SwTimerSetCallback *****************
 32438 ;; Defined at:
 32439 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 32440 ;; Parameters:    Size  Location     Type
 32441 ;;  timerId         1    wreg     unsigned char 
 32442 ;;  callback        2    4[BANK0 ] PTR FTN(unsigned char ,)
 32443 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 32444 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 32445 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 32446 ;;  callbackPara    1    6[BANK0 ] unsigned char 
 32447 ;; Auto vars:     Size  Location     Type
 32448 ;;  timerId         1    7[BANK0 ] unsigned char 
 32449 ;; Return value:  Size  Location     Type
 32450 ;;                  1    wreg      void 
 32451 ;; Registers used:
 32452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32453 ;; Tracked objects:
 32454 ;;		On entry : C/2
 32455 ;;		On exit  : F/0
 32456 ;;		Unchanged: 0/0
 32457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32458 ;;      Params:         0       3       0       0       0       0       0       0       0
 32459 ;;      Locals:         0       1       0       0       0       0       0       0       0
 32460 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32461 ;;      Totals:         0       4       0       0       0       0       0       0       0
 32462 ;;Total ram usage:        4 bytes
 32463 ;; Hardware stack levels used:    1
 32464 ;; Hardware stack levels required when called:    7
 32465 ;; This function calls:
 32466 ;;		Nothing
 32467 ;; This function is called by:
 32468 ;;		_RADIO_Init
 32469 ;;		_SetCallbackSoftwareTimers
 32470 ;; This function uses a non-reentrant model
 32471 ;;
 32472                           
 32473                           	psect	text165
 32474  0071A2                     __ptext165:
 32475                           	opt stack 0
 32476  0071A2                     _SwTimerSetCallback:
 32477                           	opt stack 21
 32478                           
 32479                           ; BSR set to: 1
 32480                           ;incstack = 0
 32481                           ;SwTimerSetCallback@timerId stored from wreg
 32482  0071A2  0100               	movlb	0	; () banked
 32483  0071A4  6F67               	movwf	SwTimerSetCallback@timerId& (0+255),b
 32484                           
 32485                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 32486  0071A6  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32487  0071A8  0D08               	mullw	8
 32488  0071AA  0E06               	movlw	low (_swTimers+6)
 32489  0071AC  24F3               	addwf	prodl,w,c
 32490  0071AE  6ED9               	movwf	fsr2l,c
 32491  0071B0  0E03               	movlw	high (_swTimers+6)
 32492  0071B2  20F4               	addwfc	prodh,w,c
 32493  0071B4  6EDA               	movwf	fsr2h,c
 32494  0071B6  C064  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 32495  0071BA  C065  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 32496                           
 32497                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 32498  0071BE  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32499  0071C0  0D08               	mullw	8
 32500  0071C2  0E05               	movlw	low (_swTimers+5)
 32501  0071C4  24F3               	addwf	prodl,w,c
 32502  0071C6  6ED9               	movwf	fsr2l,c
 32503  0071C8  0E03               	movlw	high (_swTimers+5)
 32504  0071CA  20F4               	addwfc	prodh,w,c
 32505  0071CC  6EDA               	movwf	fsr2h,c
 32506  0071CE  C066  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 32507                           
 32508                           ; BSR set to: 0
 32509  0071D2  0012               	return		;funcret
 32510  0071D4                     __end_of_SwTimerSetCallback:
 32511                           	opt stack 0
 32512                           tosu	equ	0xFFF
 32513                           tosh	equ	0xFFE
 32514                           tosl	equ	0xFFD
 32515                           pclath	equ	0xFFA
 32516                           tblptru	equ	0xFF8
 32517                           tblptrh	equ	0xFF7
 32518                           tblptrl	equ	0xFF6
 32519                           tablat	equ	0xFF5
 32520                           prodh	equ	0xFF4
 32521                           prodl	equ	0xFF3
 32522                           intcon	equ	0xFF2
 32523                           indf0	equ	0xFEF
 32524                           postinc0	equ	0xFEE
 32525                           plusw0	equ	0xFEB
 32526                           fsr0h	equ	0xFEA
 32527                           fsr0l	equ	0xFE9
 32528                           wreg	equ	0xFE8
 32529                           postinc1	equ	0xFE6
 32530                           postdec1	equ	0xFE5
 32531                           plusw1	equ	0xFE3
 32532                           fsr1h	equ	0xFE2
 32533                           fsr1l	equ	0xFE1
 32534                           indf2	equ	0xFDF
 32535                           postinc2	equ	0xFDE
 32536                           postdec2	equ	0xFDD
 32537                           plusw2	equ	0xFDB
 32538                           fsr2h	equ	0xFDA
 32539                           fsr2l	equ	0xFD9
 32540                           status	equ	0xFD8
 32541                           
 32542 ;; *************** function _RADIO_WriteMode *****************
 32543 ;; Defined at:
 32544 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32545 ;; Parameters:    Size  Location     Type
 32546 ;;  newMode         1    wreg     enum E17657
 32547 ;;  newModulatio    1    9[BANK0 ] enum E16925
 32548 ;;  blocking        1   10[BANK0 ] unsigned char 
 32549 ;; Auto vars:     Size  Location     Type
 32550 ;;  newMode         1   14[BANK0 ] enum E17657
 32551 ;;  opMode          1   15[BANK0 ] unsigned char 
 32552 ;;  currentMode     1   13[BANK0 ] enum E17657
 32553 ;;  dioMapping      1   12[BANK0 ] unsigned char 
 32554 ;;  currentModul    1   11[BANK0 ] enum E16925
 32555 ;; Return value:  Size  Location     Type
 32556 ;;                  1    wreg      void 
 32557 ;; Registers used:
 32558 ;;		wreg, status,2, status,0, cstack
 32559 ;; Tracked objects:
 32560 ;;		On entry : F/0
 32561 ;;		On exit  : 0/0
 32562 ;;		Unchanged: 0/0
 32563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32564 ;;      Params:         0       2       0       0       0       0       0       0       0
 32565 ;;      Locals:         0       5       0       0       0       0       0       0       0
 32566 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32567 ;;      Totals:         0       7       0       0       0       0       0       0       0
 32568 ;;Total ram usage:        7 bytes
 32569 ;; Hardware stack levels used:    1
 32570 ;; Hardware stack levels required when called:   10
 32571 ;; This function calls:
 32572 ;;		_HALDIO5PinValue
 32573 ;;		_RADIO_RegisterRead
 32574 ;;		_RADIO_RegisterWrite
 32575 ;;		_SystemBlockingWaitMs
 32576 ;; This function is called by:
 32577 ;;		_RADIO_Init
 32578 ;;		_RADIO_WriteConfiguration
 32579 ;;		_RADIO_Transmit
 32580 ;;		_RADIO_ReceiveStart
 32581 ;;		_RADIO_ReceiveStop
 32582 ;;		_RADIO_RxDone
 32583 ;;		_RADIO_FSKPayloadReady
 32584 ;;		_RADIO_RxTimeout
 32585 ;;		_RADIO_TxDone
 32586 ;;		_RADIO_FSKPacketSent
 32587 ;;		_RADIO_ReadRandom
 32588 ;;		_RADIO_RxFSKTimeout
 32589 ;;		_RADIO_WatchdogTimeout
 32590 ;; This function uses a non-reentrant model
 32591 ;;
 32592                           
 32593                           	psect	text166
 32594  0051FC                     __ptext166:
 32595                           	opt stack 0
 32596  0051FC                     _RADIO_WriteMode:
 32597                           	opt stack 17
 32598                           
 32599                           ; BSR set to: 0
 32600                           ;incstack = 0
 32601                           ;RADIO_WriteMode@newMode stored from wreg
 32602  0051FC  6F6E               	movwf	RADIO_WriteMode@newMode& (0+255),b
 32603                           
 32604                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 32605                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 32606                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 32607                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 32608                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 32609                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 32610  0051FE  0100               	movlb	0	; () banked
 32611  005200  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32612  005202  E108               	bnz	l12197
 32613                           
 32614                           ; BSR set to: 0
 32615  005204  0E06               	movlw	6
 32616  005206  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 32617  005208  B4D8               	btfsc	status,2,c
 32618  00520A  0012               	return	
 32619                           
 32620                           ; BSR set to: 0
 32621  00520C  0E07               	movlw	7
 32622  00520E  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 32623  005210  E101               	bnz	l12197
 32624  005212  0012               	return	
 32625  005214                     l12197:
 32626                           
 32627                           ; BSR set to: 0
 32628                           ;radio_driver_SX1276.c: 159: }
 32629                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 32630  005214  0E07               	movlw	7
 32631  005216  176E               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 32632                           
 32633                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 32634  005218  0E01               	movlw	1
 32635  00521A  1769               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 32636                           
 32637                           ; BSR set to: 0
 32638                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 32639  00521C  ECEA  F039         	call	_RADIO_RegisterRead
 32640  005220  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 32641                           
 32642                           ; BSR set to: 0
 32643                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 32644  005222  AF6F               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 32645  005224  D003               	goto	l401
 32646                           
 32647                           ; BSR set to: 0
 32648                           ;radio_driver_SX1276.c: 168: {
 32649                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 32650  005226  0E01               	movlw	1
 32651  005228  6F6B               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 32652                           
 32653                           ;radio_driver_SX1276.c: 170: }
 32654  00522A  D001               	goto	l12205
 32655  00522C                     l401:
 32656                           
 32657                           ; BSR set to: 0
 32658                           ;radio_driver_SX1276.c: 171: else
 32659                           ;radio_driver_SX1276.c: 172: {
 32660                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 32661  00522C  6B6B               	clrf	RADIO_WriteMode@currentModulation& (0+255),b
 32662  00522E                     l12205:
 32663                           
 32664                           ; BSR set to: 0
 32665                           ;radio_driver_SX1276.c: 174: }
 32666                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 32667  00522E  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 32668  005230  0B07               	andlw	7
 32669  005232  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 32670                           
 32671                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 32672  005234  516B               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 32673  005236  1969               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 32674  005238  E018               	bz	l12221
 32675                           
 32676                           ; BSR set to: 0
 32677                           ;radio_driver_SX1276.c: 181: {
 32678                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 32679  00523A  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 32680  00523C  E008               	bz	l12213
 32681                           
 32682                           ; BSR set to: 0
 32683                           ;radio_driver_SX1276.c: 184: {
 32684                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 32685  00523E  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 32686  005240  0BF8               	andlw	248
 32687  005242  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32688  005244  0E01               	movlw	1
 32689  005246  ECD4  F03A         	call	_RADIO_RegisterWrite
 32690                           
 32691                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 32692  00524A  0100               	movlb	0	; () banked
 32693  00524C  6B6D               	clrf	RADIO_WriteMode@currentMode& (0+255),b
 32694  00524E                     l12213:
 32695                           
 32696                           ; BSR set to: 0
 32697                           ;radio_driver_SX1276.c: 188: }
 32698                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 32699  00524E  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32700  005250  E103               	bnz	l12217
 32701                           
 32702                           ; BSR set to: 0
 32703                           ;radio_driver_SX1276.c: 191: {
 32704                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 32705  005252  0E78               	movlw	120
 32706  005254  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 32707                           
 32708                           ;radio_driver_SX1276.c: 194: }
 32709  005256  D004               	goto	l12219
 32710  005258                     l12217:
 32711                           
 32712                           ; BSR set to: 0
 32713                           ;radio_driver_SX1276.c: 195: else
 32714                           ;radio_driver_SX1276.c: 196: {
 32715                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 32716  005258  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 32717  00525A  0B78               	andlw	120
 32718  00525C  0980               	iorlw	128
 32719  00525E  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 32720  005260                     l12219:
 32721                           
 32722                           ; BSR set to: 0
 32723                           ;radio_driver_SX1276.c: 199: }
 32724                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 32725  005260  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 32726  005264  0E01               	movlw	1
 32727  005266  ECD4  F03A         	call	_RADIO_RegisterWrite
 32728  00526A                     l12221:
 32729                           
 32730                           ;radio_driver_SX1276.c: 201: }
 32731                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 32732  00526A  0100               	movlb	0	; () banked
 32733  00526C  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 32734  00526E  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 32735  005270  B4D8               	btfsc	status,2,c
 32736  005272  0012               	return	
 32737                           
 32738                           ; BSR set to: 0
 32739                           ;radio_driver_SX1276.c: 208: {
 32740                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 32741  005274  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 32742  005276  E012               	bz	l12237
 32743                           
 32744                           ; BSR set to: 0
 32745  005278  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 32746  00527A  E110               	bnz	l12237
 32747                           
 32748                           ; BSR set to: 0
 32749                           ;radio_driver_SX1276.c: 212: {
 32750                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 32751  00527C  0E41               	movlw	65
 32752  00527E  ECEA  F039         	call	_RADIO_RegisterRead
 32753  005282  6F6C               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 32754                           
 32755                           ; BSR set to: 0
 32756                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 32757  005284  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32758  005286  E103               	bnz	l12233
 32759                           
 32760                           ; BSR set to: 0
 32761                           ;radio_driver_SX1276.c: 215: {
 32762                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 32763  005288  0E30               	movlw	48
 32764  00528A  136C               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 32765                           
 32766                           ;radio_driver_SX1276.c: 218: }
 32767  00528C  D002               	goto	l12235
 32768  00528E                     l12233:
 32769                           
 32770                           ; BSR set to: 0
 32771                           ;radio_driver_SX1276.c: 219: else
 32772                           ;radio_driver_SX1276.c: 220: {
 32773                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 32774  00528E  0ECF               	movlw	207
 32775  005290  176C               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 32776  005292                     l12235:
 32777                           
 32778                           ; BSR set to: 0
 32779                           ;radio_driver_SX1276.c: 223: }
 32780                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 32781  005292  C06C  F066         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 32782  005296  0E41               	movlw	65
 32783  005298  ECD4  F03A         	call	_RADIO_RegisterWrite
 32784  00529C                     l12237:
 32785                           
 32786                           ;radio_driver_SX1276.c: 225: }
 32787                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 32788  00529C  0EF8               	movlw	248
 32789  00529E  0100               	movlb	0	; () banked
 32790  0052A0  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 32791                           
 32792                           ; BSR set to: 0
 32793                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 32794  0052A2  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 32795  0052A4  136F               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 32796                           
 32797                           ; BSR set to: 0
 32798                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 32799  0052A6  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 32800  0052AA  0E01               	movlw	1
 32801  0052AC  ECD4  F03A         	call	_RADIO_RegisterWrite
 32802                           
 32803                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 32804  0052B0  0100               	movlb	0	; () banked
 32805  0052B2  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 32806  0052B4  A4D8               	btfss	status,2,c
 32807  0052B6  0012               	return	
 32808                           
 32809                           ; BSR set to: 0
 32810                           ;radio_driver_SX1276.c: 234: {
 32811                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 32812  0052B8  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 32813  0052BA  E005               	bz	l12249
 32814  0052BC                     l12247:
 32815  0052BC  ECA8  F03C         	call	_HALDIO5PinValue	;wreg free
 32816  0052C0  0900               	iorlw	0
 32817  0052C2  E0FC               	bz	l12247
 32818  0052C4  0012               	return	
 32819  0052C6                     l12249:
 32820                           
 32821                           ; BSR set to: 0
 32822                           ;radio_driver_SX1276.c: 240: else
 32823                           ;radio_driver_SX1276.c: 241: {
 32824                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 32825  0052C6  0E01               	movlw	1
 32826  0052C8  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 32827  0052CA  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 32828  0052CC  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 32829  0052CE  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 32830  0052D0  EF85  F039         	goto	_SystemBlockingWaitMs	;wreg free
 32831  0052D4                     __end_of_RADIO_WriteMode:
 32832                           	opt stack 0
 32833                           tosu	equ	0xFFF
 32834                           tosh	equ	0xFFE
 32835                           tosl	equ	0xFFD
 32836                           pclath	equ	0xFFA
 32837                           tblptru	equ	0xFF8
 32838                           tblptrh	equ	0xFF7
 32839                           tblptrl	equ	0xFF6
 32840                           tablat	equ	0xFF5
 32841                           prodh	equ	0xFF4
 32842                           prodl	equ	0xFF3
 32843                           intcon	equ	0xFF2
 32844                           indf0	equ	0xFEF
 32845                           postinc0	equ	0xFEE
 32846                           plusw0	equ	0xFEB
 32847                           fsr0h	equ	0xFEA
 32848                           fsr0l	equ	0xFE9
 32849                           wreg	equ	0xFE8
 32850                           postinc1	equ	0xFE6
 32851                           postdec1	equ	0xFE5
 32852                           plusw1	equ	0xFE3
 32853                           fsr1h	equ	0xFE2
 32854                           fsr1l	equ	0xFE1
 32855                           indf2	equ	0xFDF
 32856                           postinc2	equ	0xFDE
 32857                           postdec2	equ	0xFDD
 32858                           plusw2	equ	0xFDB
 32859                           fsr2h	equ	0xFDA
 32860                           fsr2l	equ	0xFD9
 32861                           status	equ	0xFD8
 32862                           
 32863 ;; *************** function _RADIO_RegisterRead *****************
 32864 ;; Defined at:
 32865 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32866 ;; Parameters:    Size  Location     Type
 32867 ;;  reg             1    wreg     unsigned char 
 32868 ;; Auto vars:     Size  Location     Type
 32869 ;;  reg             1    6[BANK0 ] unsigned char 
 32870 ;;  readValue       1    7[BANK0 ] unsigned char 
 32871 ;; Return value:  Size  Location     Type
 32872 ;;                  1    wreg      unsigned char 
 32873 ;; Registers used:
 32874 ;;		wreg, status,2, status,0, cstack
 32875 ;; Tracked objects:
 32876 ;;		On entry : 0/0
 32877 ;;		On exit  : F/0
 32878 ;;		Unchanged: 0/0
 32879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32880 ;;      Params:         0       0       0       0       0       0       0       0       0
 32881 ;;      Locals:         0       2       0       0       0       0       0       0       0
 32882 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32883 ;;      Totals:         0       2       0       0       0       0       0       0       0
 32884 ;;Total ram usage:        2 bytes
 32885 ;; Hardware stack levels used:    1
 32886 ;; Hardware stack levels required when called:    9
 32887 ;; This function calls:
 32888 ;;		_HALSPICSAssert
 32889 ;;		_HALSPICSDeassert
 32890 ;;		_HALSPISend
 32891 ;; This function is called by:
 32892 ;;		_RADIO_WriteMode
 32893 ;;		_RADIO_WritePower
 32894 ;;		_RADIO_Init
 32895 ;;		_RADIO_WriteConfiguration
 32896 ;;		_RADIO_Transmit
 32897 ;;		_RADIO_RxDone
 32898 ;;		_RADIO_FSKPayloadReady
 32899 ;;		_RADIO_FSKPacketSent
 32900 ;;		_RADIO_FHSSChangeChannel
 32901 ;;		_RADIO_DIO0
 32902 ;;		_RADIO_DIO1
 32903 ;;		_RADIO_DIO2
 32904 ;;		_RADIO_DIO3
 32905 ;;		_RADIO_DIO4
 32906 ;;		_RADIO_DIO5
 32907 ;;		_RADIO_ReadRandom
 32908 ;;		_RADIO_RxFSKTimeout
 32909 ;; This function uses a non-reentrant model
 32910 ;;
 32911                           
 32912                           	psect	text167
 32913  0073D4                     __ptext167:
 32914                           	opt stack 0
 32915  0073D4                     _RADIO_RegisterRead:
 32916                           	opt stack 17
 32917                           
 32918                           ;incstack = 0
 32919                           ;RADIO_RegisterRead@reg stored from wreg
 32920  0073D4  0100               	movlb	0	; () banked
 32921  0073D6  6F66               	movwf	RADIO_RegisterRead@reg& (0+255),b
 32922                           
 32923                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 32924                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 32925  0073D8  9F66               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 32926                           
 32927                           ; BSR set to: 0
 32928                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 32929  0073DA  ECBA  F03C         	call	_HALSPICSAssert	;wreg free
 32930                           
 32931                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 32932  0073DE  0100               	movlb	0	; () banked
 32933  0073E0  5166               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 32934  0073E2  EC68  F03C         	call	_HALSPISend
 32935                           
 32936                           ; BSR set to: 14
 32937                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 32938  0073E6  0EFF               	movlw	255
 32939  0073E8  EC68  F03C         	call	_HALSPISend
 32940  0073EC  0100               	movlb	0	; () banked
 32941  0073EE  6F67               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 32942                           
 32943                           ; BSR set to: 0
 32944                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 32945  0073F0  ECB8  F03C         	call	_HALSPICSDeassert	;wreg free
 32946                           
 32947                           ;radio_driver_SX1276.c: 142: return readValue;
 32948  0073F4  0100               	movlb	0	; () banked
 32949  0073F6  5167               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 32950                           
 32951                           ; BSR set to: 0
 32952  0073F8  0012               	return		;funcret
 32953  0073FA                     __end_of_RADIO_RegisterRead:
 32954                           	opt stack 0
 32955                           tosu	equ	0xFFF
 32956                           tosh	equ	0xFFE
 32957                           tosl	equ	0xFFD
 32958                           pclath	equ	0xFFA
 32959                           tblptru	equ	0xFF8
 32960                           tblptrh	equ	0xFF7
 32961                           tblptrl	equ	0xFF6
 32962                           tablat	equ	0xFF5
 32963                           prodh	equ	0xFF4
 32964                           prodl	equ	0xFF3
 32965                           intcon	equ	0xFF2
 32966                           indf0	equ	0xFEF
 32967                           postinc0	equ	0xFEE
 32968                           plusw0	equ	0xFEB
 32969                           fsr0h	equ	0xFEA
 32970                           fsr0l	equ	0xFE9
 32971                           wreg	equ	0xFE8
 32972                           postinc1	equ	0xFE6
 32973                           postdec1	equ	0xFE5
 32974                           plusw1	equ	0xFE3
 32975                           fsr1h	equ	0xFE2
 32976                           fsr1l	equ	0xFE1
 32977                           indf2	equ	0xFDF
 32978                           postinc2	equ	0xFDE
 32979                           postdec2	equ	0xFDD
 32980                           plusw2	equ	0xFDB
 32981                           fsr2h	equ	0xFDA
 32982                           fsr2l	equ	0xFD9
 32983                           status	equ	0xFD8
 32984                           
 32985 ;; *************** function _HALDIO5PinValue *****************
 32986 ;; Defined at:
 32987 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 32988 ;; Parameters:    Size  Location     Type
 32989 ;;		None
 32990 ;; Auto vars:     Size  Location     Type
 32991 ;;		None
 32992 ;; Return value:  Size  Location     Type
 32993 ;;                  1    wreg      unsigned char 
 32994 ;; Registers used:
 32995 ;;		wreg
 32996 ;; Tracked objects:
 32997 ;;		On entry : 0/0
 32998 ;;		On exit  : 0/0
 32999 ;;		Unchanged: 0/0
 33000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33001 ;;      Params:         0       0       0       0       0       0       0       0       0
 33002 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33003 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33004 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33005 ;;Total ram usage:        0 bytes
 33006 ;; Hardware stack levels used:    1
 33007 ;; Hardware stack levels required when called:    7
 33008 ;; This function calls:
 33009 ;;		Nothing
 33010 ;; This function is called by:
 33011 ;;		_RADIO_WriteMode
 33012 ;; This function uses a non-reentrant model
 33013 ;;
 33014                           
 33015                           	psect	text168
 33016  007950                     __ptext168:
 33017                           	opt stack 0
 33018  007950                     _HALDIO5PinValue:
 33019                           	opt stack 19
 33020                           
 33021                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 33022                           
 33023                           ; BSR set to: 0
 33024                           ;incstack = 0
 33025  007950  B08A               	btfsc	3978,0,c	;volatile
 33026  007952  0C01               	retlw	1
 33027  007954  0C00               	retlw	0	;funcret
 33028  007956                     __end_of_HALDIO5PinValue:
 33029                           	opt stack 0
 33030                           tosu	equ	0xFFF
 33031                           tosh	equ	0xFFE
 33032                           tosl	equ	0xFFD
 33033                           pclath	equ	0xFFA
 33034                           tblptru	equ	0xFF8
 33035                           tblptrh	equ	0xFF7
 33036                           tblptrl	equ	0xFF6
 33037                           tablat	equ	0xFF5
 33038                           prodh	equ	0xFF4
 33039                           prodl	equ	0xFF3
 33040                           intcon	equ	0xFF2
 33041                           indf0	equ	0xFEF
 33042                           postinc0	equ	0xFEE
 33043                           plusw0	equ	0xFEB
 33044                           fsr0h	equ	0xFEA
 33045                           fsr0l	equ	0xFE9
 33046                           wreg	equ	0xFE8
 33047                           postinc1	equ	0xFE6
 33048                           postdec1	equ	0xFE5
 33049                           plusw1	equ	0xFE3
 33050                           fsr1h	equ	0xFE2
 33051                           fsr1l	equ	0xFE1
 33052                           indf2	equ	0xFDF
 33053                           postinc2	equ	0xFDE
 33054                           postdec2	equ	0xFDD
 33055                           plusw2	equ	0xFDB
 33056                           fsr2h	equ	0xFDA
 33057                           fsr2l	equ	0xFD9
 33058                           status	equ	0xFD8
 33059                           
 33060 ;; *************** function _RADIO_WriteFrequency *****************
 33061 ;; Defined at:
 33062 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33063 ;; Parameters:    Size  Location     Type
 33064 ;;  frequency       4   17[BANK0 ] unsigned long 
 33065 ;; Auto vars:     Size  Location     Type
 33066 ;;  num             4   25[BANK0 ] unsigned long 
 33067 ;;  num_mod         4   21[BANK0 ] unsigned long 
 33068 ;; Return value:  Size  Location     Type
 33069 ;;                  1    wreg      void 
 33070 ;; Registers used:
 33071 ;;		wreg, status,2, status,0, cstack
 33072 ;; Tracked objects:
 33073 ;;		On entry : 0/0
 33074 ;;		On exit  : 1/0
 33075 ;;		Unchanged: 0/0
 33076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33077 ;;      Params:         0       4       0       0       0       0       0       0       0
 33078 ;;      Locals:         0       8       0       0       0       0       0       0       0
 33079 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33080 ;;      Totals:         0      12       0       0       0       0       0       0       0
 33081 ;;Total ram usage:       12 bytes
 33082 ;; Hardware stack levels used:    1
 33083 ;; Hardware stack levels required when called:   10
 33084 ;; This function calls:
 33085 ;;		_RADIO_RegisterWrite
 33086 ;;		___lldiv
 33087 ;;		___llmod
 33088 ;; This function is called by:
 33089 ;;		_RADIO_Init
 33090 ;;		_RADIO_WriteConfiguration
 33091 ;;		_RADIO_FHSSChangeChannel
 33092 ;; This function uses a non-reentrant model
 33093 ;;
 33094                           
 33095                           	psect	text169
 33096  005120                     __ptext169:
 33097                           	opt stack 0
 33098  005120                     _RADIO_WriteFrequency:
 33099                           	opt stack 16
 33100                           
 33101                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 33102                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 33103                           
 33104                           ;incstack = 0
 33105  005120  C071  F064         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 33106  005124  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 33107  005128  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 33108  00512C  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 33109  005130  0E09               	movlw	9
 33110  005132  0100               	movlb	0	; () banked
 33111  005134  6F68               	movwf	___lldiv@divisor& (0+255),b
 33112  005136  0E3D               	movlw	61
 33113  005138  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33114  00513A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33115  00513C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33116  00513E  ECAA  F030         	call	___lldiv	;wreg free
 33117  005142  C064  F079         	movff	?___lldiv,RADIO_WriteFrequency@num
 33118  005146  C065  F07A         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 33119  00514A  C066  F07B         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 33120  00514E  C067  F07C         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 33121                           
 33122                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 33123  005152  C071  F064         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 33124  005156  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 33125  00515A  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 33126  00515E  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 33127  005162  0E09               	movlw	9
 33128  005164  6F68               	movwf	___llmod@divisor& (0+255),b
 33129  005166  0E3D               	movlw	61
 33130  005168  6F69               	movwf	(___llmod@divisor+1)& (0+255),b
 33131  00516A  6B6A               	clrf	(___llmod@divisor+2)& (0+255),b
 33132  00516C  6B6B               	clrf	(___llmod@divisor+3)& (0+255),b
 33133  00516E  EC26  F033         	call	___llmod	;wreg free
 33134  005172  C064  F075         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 33135  005176  C065  F076         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 33136  00517A  C066  F077         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 33137  00517E  C067  F078         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 33138                           
 33139                           ; BSR set to: 0
 33140                           ;radio_driver_SX1276.c: 277: num <<= (8);
 33141  005182  C07B  F07C         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 33142  005186  C07A  F07B         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 33143  00518A  C079  F07A         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 33144  00518E  6B79               	clrf	RADIO_WriteFrequency@num& (0+255),b
 33145                           
 33146                           ; BSR set to: 0
 33147                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 33148  005190  C077  F078         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 33149  005194  C076  F077         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 33150  005198  C075  F076         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 33151  00519C  6B75               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 33152                           
 33153                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 33154  00519E  C075  F064         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 33155  0051A2  C076  F065         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 33156  0051A6  C077  F066         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 33157  0051AA  C078  F067         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 33158  0051AE  0E09               	movlw	9
 33159  0051B0  6F68               	movwf	___lldiv@divisor& (0+255),b
 33160  0051B2  0E3D               	movlw	61
 33161  0051B4  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33162  0051B6  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33163  0051B8  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33164  0051BA  ECAA  F030         	call	___lldiv	;wreg free
 33165  0051BE  C064  F075         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 33166  0051C2  C065  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 33167  0051C6  C066  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 33168  0051CA  C067  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 33169                           
 33170                           ; BSR set to: 0
 33171                           ;radio_driver_SX1276.c: 283: num += num_mod;
 33172  0051CE  5175               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 33173  0051D0  2779               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 33174  0051D2  5176               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 33175  0051D4  237A               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 33176  0051D6  5177               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 33177  0051D8  237B               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 33178  0051DA  5178               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 33179  0051DC  237C               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 33180                           
 33181                           ; BSR set to: 0
 33182                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 33183  0051DE  C07B  F066         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 33184  0051E2  0E06               	movlw	6
 33185  0051E4  ECD4  F03A         	call	_RADIO_RegisterWrite
 33186                           
 33187                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 33188  0051E8  C07A  F066         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 33189  0051EC  0E07               	movlw	7
 33190  0051EE  ECD4  F03A         	call	_RADIO_RegisterWrite
 33191                           
 33192                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 33193  0051F2  C079  F066         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 33194  0051F6  0E08               	movlw	8
 33195  0051F8  EFD4  F03A         	goto	_RADIO_RegisterWrite
 33196  0051FC                     __end_of_RADIO_WriteFrequency:
 33197                           	opt stack 0
 33198                           tosu	equ	0xFFF
 33199                           tosh	equ	0xFFE
 33200                           tosl	equ	0xFFD
 33201                           pclath	equ	0xFFA
 33202                           tblptru	equ	0xFF8
 33203                           tblptrh	equ	0xFF7
 33204                           tblptrl	equ	0xFF6
 33205                           tablat	equ	0xFF5
 33206                           prodh	equ	0xFF4
 33207                           prodl	equ	0xFF3
 33208                           intcon	equ	0xFF2
 33209                           indf0	equ	0xFEF
 33210                           postinc0	equ	0xFEE
 33211                           plusw0	equ	0xFEB
 33212                           fsr0h	equ	0xFEA
 33213                           fsr0l	equ	0xFE9
 33214                           wreg	equ	0xFE8
 33215                           postinc1	equ	0xFE6
 33216                           postdec1	equ	0xFE5
 33217                           plusw1	equ	0xFE3
 33218                           fsr1h	equ	0xFE2
 33219                           fsr1l	equ	0xFE1
 33220                           indf2	equ	0xFDF
 33221                           postinc2	equ	0xFDE
 33222                           postdec2	equ	0xFDD
 33223                           plusw2	equ	0xFDB
 33224                           fsr2h	equ	0xFDA
 33225                           fsr2l	equ	0xFD9
 33226                           status	equ	0xFD8
 33227                           
 33228 ;; *************** function ___llmod *****************
 33229 ;; Defined at:
 33230 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 33231 ;; Parameters:    Size  Location     Type
 33232 ;;  dividend        4    4[BANK0 ] unsigned long 
 33233 ;;  divisor         4    8[BANK0 ] unsigned long 
 33234 ;; Auto vars:     Size  Location     Type
 33235 ;;  counter         1   12[BANK0 ] unsigned char 
 33236 ;; Return value:  Size  Location     Type
 33237 ;;                  4    4[BANK0 ] unsigned long 
 33238 ;; Registers used:
 33239 ;;		wreg, status,2, status,0
 33240 ;; Tracked objects:
 33241 ;;		On entry : F/0
 33242 ;;		On exit  : F/0
 33243 ;;		Unchanged: 0/0
 33244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33245 ;;      Params:         0       8       0       0       0       0       0       0       0
 33246 ;;      Locals:         0       1       0       0       0       0       0       0       0
 33247 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33248 ;;      Totals:         0       9       0       0       0       0       0       0       0
 33249 ;;Total ram usage:        9 bytes
 33250 ;; Hardware stack levels used:    1
 33251 ;; Hardware stack levels required when called:    7
 33252 ;; This function calls:
 33253 ;;		Nothing
 33254 ;; This function is called by:
 33255 ;;		_RADIO_WriteFrequency
 33256 ;; This function uses a non-reentrant model
 33257 ;;
 33258                           
 33259                           	psect	text170
 33260  00664C                     __ptext170:
 33261                           	opt stack 0
 33262  00664C                     ___llmod:
 33263                           	opt stack 18
 33264                           
 33265                           ; BSR set to: 0
 33266                           
 33267                           ;incstack = 0
 33268  00664C  5168               	movf	___llmod@divisor& (0+255),w,b
 33269  00664E  1169               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 33270  006650  116A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 33271  006652  116B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 33272  006654  E023               	bz	l3003
 33273                           
 33274                           ; BSR set to: 0
 33275  006656  0E01               	movlw	1
 33276  006658  6F6C               	movwf	___llmod@counter& (0+255),b
 33277  00665A  D006               	goto	l12149
 33278  00665C                     l12147:
 33279                           
 33280                           ; BSR set to: 0
 33281  00665C  90D8               	bcf	status,0,c
 33282  00665E  3768               	rlcf	___llmod@divisor& (0+255),f,b
 33283  006660  3769               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 33284  006662  376A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 33285  006664  376B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 33286  006666  2B6C               	incf	___llmod@counter& (0+255),f,b
 33287  006668                     l12149:
 33288                           
 33289                           ; BSR set to: 0
 33290  006668  AF6B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 33291  00666A  D7F8               	goto	l12147
 33292  00666C                     l12151:
 33293                           
 33294                           ; BSR set to: 0
 33295  00666C  5168               	movf	___llmod@divisor& (0+255),w,b
 33296  00666E  5D64               	subwf	___llmod@dividend& (0+255),w,b
 33297  006670  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33298  006672  5965               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 33299  006674  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33300  006676  5966               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 33301  006678  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33302  00667A  5967               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 33303  00667C  E308               	bnc	l12155
 33304                           
 33305                           ; BSR set to: 0
 33306  00667E  5168               	movf	___llmod@divisor& (0+255),w,b
 33307  006680  5F64               	subwf	___llmod@dividend& (0+255),f,b
 33308  006682  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33309  006684  5B65               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 33310  006686  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33311  006688  5B66               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 33312  00668A  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33313  00668C  5B67               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 33314  00668E                     l12155:
 33315                           
 33316                           ; BSR set to: 0
 33317  00668E  90D8               	bcf	status,0,c
 33318  006690  336B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 33319  006692  336A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 33320  006694  3369               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 33321  006696  3368               	rrcf	___llmod@divisor& (0+255),f,b
 33322                           
 33323                           ; BSR set to: 0
 33324  006698  2F6C               	decfsz	___llmod@counter& (0+255),f,b
 33325  00669A  D7E8               	goto	l12151
 33326  00669C                     l3003:
 33327                           
 33328                           ; BSR set to: 0
 33329  00669C  C064  F064         	movff	___llmod@dividend,?___llmod
 33330  0066A0  C065  F065         	movff	___llmod@dividend+1,?___llmod+1
 33331  0066A4  C066  F066         	movff	___llmod@dividend+2,?___llmod+2
 33332  0066A8  C067  F067         	movff	___llmod@dividend+3,?___llmod+3
 33333                           
 33334                           ; BSR set to: 0
 33335  0066AC  0012               	return		;funcret
 33336  0066AE                     __end_of___llmod:
 33337                           	opt stack 0
 33338                           tosu	equ	0xFFF
 33339                           tosh	equ	0xFFE
 33340                           tosl	equ	0xFFD
 33341                           pclath	equ	0xFFA
 33342                           tblptru	equ	0xFF8
 33343                           tblptrh	equ	0xFF7
 33344                           tblptrl	equ	0xFF6
 33345                           tablat	equ	0xFF5
 33346                           prodh	equ	0xFF4
 33347                           prodl	equ	0xFF3
 33348                           intcon	equ	0xFF2
 33349                           indf0	equ	0xFEF
 33350                           postinc0	equ	0xFEE
 33351                           plusw0	equ	0xFEB
 33352                           fsr0h	equ	0xFEA
 33353                           fsr0l	equ	0xFE9
 33354                           wreg	equ	0xFE8
 33355                           postinc1	equ	0xFE6
 33356                           postdec1	equ	0xFE5
 33357                           plusw1	equ	0xFE3
 33358                           fsr1h	equ	0xFE2
 33359                           fsr1l	equ	0xFE1
 33360                           indf2	equ	0xFDF
 33361                           postinc2	equ	0xFDE
 33362                           postdec2	equ	0xFDD
 33363                           plusw2	equ	0xFDB
 33364                           fsr2h	equ	0xFDA
 33365                           fsr2l	equ	0xFD9
 33366                           status	equ	0xFD8
 33367                           
 33368 ;; *************** function _RADIO_RegisterWrite *****************
 33369 ;; Defined at:
 33370 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33371 ;; Parameters:    Size  Location     Type
 33372 ;;  reg             1    wreg     unsigned char 
 33373 ;;  value           1    6[BANK0 ] unsigned char 
 33374 ;; Auto vars:     Size  Location     Type
 33375 ;;  reg             1    7[BANK0 ] unsigned char 
 33376 ;; Return value:  Size  Location     Type
 33377 ;;                  1    wreg      void 
 33378 ;; Registers used:
 33379 ;;		wreg, status,2, status,0, cstack
 33380 ;; Tracked objects:
 33381 ;;		On entry : 0/0
 33382 ;;		On exit  : 1/0
 33383 ;;		Unchanged: 0/0
 33384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33385 ;;      Params:         0       1       0       0       0       0       0       0       0
 33386 ;;      Locals:         0       1       0       0       0       0       0       0       0
 33387 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33388 ;;      Totals:         0       2       0       0       0       0       0       0       0
 33389 ;;Total ram usage:        2 bytes
 33390 ;; Hardware stack levels used:    1
 33391 ;; Hardware stack levels required when called:    9
 33392 ;; This function calls:
 33393 ;;		_HALSPICSAssert
 33394 ;;		_HALSPICSDeassert
 33395 ;;		_HALSPISend
 33396 ;; This function is called by:
 33397 ;;		_RADIO_WriteMode
 33398 ;;		_RADIO_WriteFrequency
 33399 ;;		_RADIO_WriteFSKFrequencyDeviation
 33400 ;;		_RADIO_WriteFSKBitRate
 33401 ;;		_RADIO_WritePower
 33402 ;;		_RADIO_Init
 33403 ;;		_RADIO_WriteConfiguration
 33404 ;;		_RADIO_Transmit
 33405 ;;		_RADIO_ReceiveStart
 33406 ;;		_RADIO_RxDone
 33407 ;;		_RADIO_RxTimeout
 33408 ;;		_RADIO_TxDone
 33409 ;;		_RADIO_UnhandledInterrupt
 33410 ;;		_RADIO_FHSSChangeChannel
 33411 ;;		_RADIO_ReadRandom
 33412 ;; This function uses a non-reentrant model
 33413 ;;
 33414                           
 33415                           	psect	text171
 33416  0075A8                     __ptext171:
 33417                           	opt stack 0
 33418  0075A8                     _RADIO_RegisterWrite:
 33419                           	opt stack 17
 33420                           
 33421                           ; BSR set to: 0
 33422                           ;incstack = 0
 33423                           ;RADIO_RegisterWrite@reg stored from wreg
 33424  0075A8  0100               	movlb	0	; () banked
 33425  0075AA  6F67               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 33426                           
 33427                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 33428  0075AC  ECBA  F03C         	call	_HALSPICSAssert	;wreg free
 33429                           
 33430                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 33431  0075B0  0100               	movlb	0	; () banked
 33432  0075B2  5167               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 33433  0075B4  0980               	iorlw	128
 33434  0075B6  EC68  F03C         	call	_HALSPISend
 33435                           
 33436                           ; BSR set to: 14
 33437                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 33438  0075BA  0100               	movlb	0	; () banked
 33439  0075BC  5166               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 33440  0075BE  EC68  F03C         	call	_HALSPISend
 33441                           
 33442                           ; BSR set to: 14
 33443                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 33444  0075C2  EFB8  F03C         	goto	_HALSPICSDeassert	;wreg free
 33445  0075C6                     __end_of_RADIO_RegisterWrite:
 33446                           	opt stack 0
 33447                           tosu	equ	0xFFF
 33448                           tosh	equ	0xFFE
 33449                           tosl	equ	0xFFD
 33450                           pclath	equ	0xFFA
 33451                           tblptru	equ	0xFF8
 33452                           tblptrh	equ	0xFF7
 33453                           tblptrl	equ	0xFF6
 33454                           tablat	equ	0xFF5
 33455                           prodh	equ	0xFF4
 33456                           prodl	equ	0xFF3
 33457                           intcon	equ	0xFF2
 33458                           indf0	equ	0xFEF
 33459                           postinc0	equ	0xFEE
 33460                           plusw0	equ	0xFEB
 33461                           fsr0h	equ	0xFEA
 33462                           fsr0l	equ	0xFE9
 33463                           wreg	equ	0xFE8
 33464                           postinc1	equ	0xFE6
 33465                           postdec1	equ	0xFE5
 33466                           plusw1	equ	0xFE3
 33467                           fsr1h	equ	0xFE2
 33468                           fsr1l	equ	0xFE1
 33469                           indf2	equ	0xFDF
 33470                           postinc2	equ	0xFDE
 33471                           postdec2	equ	0xFDD
 33472                           plusw2	equ	0xFDB
 33473                           fsr2h	equ	0xFDA
 33474                           fsr2l	equ	0xFD9
 33475                           status	equ	0xFD8
 33476                           
 33477 ;; *************** function _HALSPISend *****************
 33478 ;; Defined at:
 33479 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33480 ;; Parameters:    Size  Location     Type
 33481 ;;  data            1    wreg     unsigned char 
 33482 ;; Auto vars:     Size  Location     Type
 33483 ;;  data            1    5[BANK0 ] unsigned char 
 33484 ;; Return value:  Size  Location     Type
 33485 ;;                  1    wreg      unsigned char 
 33486 ;; Registers used:
 33487 ;;		wreg, status,2, cstack
 33488 ;; Tracked objects:
 33489 ;;		On entry : 0/0
 33490 ;;		On exit  : F/E
 33491 ;;		Unchanged: 0/0
 33492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33493 ;;      Params:         0       0       0       0       0       0       0       0       0
 33494 ;;      Locals:         0       1       0       0       0       0       0       0       0
 33495 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33496 ;;      Totals:         0       1       0       0       0       0       0       0       0
 33497 ;;Total ram usage:        1 bytes
 33498 ;; Hardware stack levels used:    1
 33499 ;; Hardware stack levels required when called:    8
 33500 ;; This function calls:
 33501 ;;		_SPI2_Exchange8bit
 33502 ;; This function is called by:
 33503 ;;		_RADIO_RegisterWrite
 33504 ;;		_RADIO_RegisterRead
 33505 ;;		_RADIO_Transmit
 33506 ;;		_RADIO_RxDone
 33507 ;;		_RADIO_FSKPayloadReady
 33508 ;; This function uses a non-reentrant model
 33509 ;;
 33510                           
 33511                           	psect	text172
 33512  0078D0                     __ptext172:
 33513                           	opt stack 0
 33514  0078D0                     _HALSPISend:
 33515                           	opt stack 17
 33516                           
 33517                           ;incstack = 0
 33518                           ;HALSPISend@data stored from wreg
 33519  0078D0  0100               	movlb	0	; () banked
 33520  0078D2  6F65               	movwf	HALSPISend@data& (0+255),b
 33521                           
 33522                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 33523  0078D4  5165               	movf	HALSPISend@data& (0+255),w,b
 33524  0078D6  EF05  F03C         	goto	_SPI2_Exchange8bit
 33525  0078DA                     __end_of_HALSPISend:
 33526                           	opt stack 0
 33527                           tosu	equ	0xFFF
 33528                           tosh	equ	0xFFE
 33529                           tosl	equ	0xFFD
 33530                           pclath	equ	0xFFA
 33531                           tblptru	equ	0xFF8
 33532                           tblptrh	equ	0xFF7
 33533                           tblptrl	equ	0xFF6
 33534                           tablat	equ	0xFF5
 33535                           prodh	equ	0xFF4
 33536                           prodl	equ	0xFF3
 33537                           intcon	equ	0xFF2
 33538                           indf0	equ	0xFEF
 33539                           postinc0	equ	0xFEE
 33540                           plusw0	equ	0xFEB
 33541                           fsr0h	equ	0xFEA
 33542                           fsr0l	equ	0xFE9
 33543                           wreg	equ	0xFE8
 33544                           postinc1	equ	0xFE6
 33545                           postdec1	equ	0xFE5
 33546                           plusw1	equ	0xFE3
 33547                           fsr1h	equ	0xFE2
 33548                           fsr1l	equ	0xFE1
 33549                           indf2	equ	0xFDF
 33550                           postinc2	equ	0xFDE
 33551                           postdec2	equ	0xFDD
 33552                           plusw2	equ	0xFDB
 33553                           fsr2h	equ	0xFDA
 33554                           fsr2l	equ	0xFD9
 33555                           status	equ	0xFD8
 33556                           
 33557 ;; *************** function _SPI2_Exchange8bit *****************
 33558 ;; Defined at:
 33559 ;;		line 77 in file "mcc_generated_files/spi2.c"
 33560 ;; Parameters:    Size  Location     Type
 33561 ;;  data            1    wreg     unsigned char 
 33562 ;; Auto vars:     Size  Location     Type
 33563 ;;  data            1    4[BANK0 ] unsigned char 
 33564 ;; Return value:  Size  Location     Type
 33565 ;;                  1    wreg      unsigned char 
 33566 ;; Registers used:
 33567 ;;		wreg, status,2
 33568 ;; Tracked objects:
 33569 ;;		On entry : F/0
 33570 ;;		On exit  : F/E
 33571 ;;		Unchanged: 0/0
 33572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33573 ;;      Params:         0       0       0       0       0       0       0       0       0
 33574 ;;      Locals:         0       1       0       0       0       0       0       0       0
 33575 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33576 ;;      Totals:         0       1       0       0       0       0       0       0       0
 33577 ;;Total ram usage:        1 bytes
 33578 ;; Hardware stack levels used:    1
 33579 ;; Hardware stack levels required when called:    7
 33580 ;; This function calls:
 33581 ;;		Nothing
 33582 ;; This function is called by:
 33583 ;;		_HALSPISend
 33584 ;; This function uses a non-reentrant model
 33585 ;;
 33586                           
 33587                           	psect	text173
 33588  00780A                     __ptext173:
 33589                           	opt stack 0
 33590  00780A                     _SPI2_Exchange8bit:
 33591                           	opt stack 17
 33592                           
 33593                           ; BSR set to: 14
 33594                           ;incstack = 0
 33595                           ;SPI2_Exchange8bit@data stored from wreg
 33596  00780A  6F64               	movwf	SPI2_Exchange8bit@data& (0+255),b
 33597                           
 33598                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
 33599  00780C  010E               	movlb	14	; () banked
 33600  00780E  9FD9               	bcf	217,7,b	;volatile
 33601                           
 33602                           ; BSR set to: 14
 33603                           ;spi2.c: 82: SSP2BUF = data;
 33604  007810  C064  FED5         	movff	SPI2_Exchange8bit@data,3797	;volatile
 33605  007814                     l209:
 33606                           
 33607                           ; BSR set to: 14
 33608  007814  A1D8               	btfss	216,0,b	;volatile
 33609  007816  D7FE               	goto	l209
 33610                           
 33611                           ; BSR set to: 14
 33612                           ;spi2.c: 86: }
 33613                           ;spi2.c: 88: return (SSP2BUF);
 33614  007818  51D5               	movf	213,w,b	;volatile
 33615                           
 33616                           ; BSR set to: 14
 33617  00781A  0012               	return		;funcret
 33618  00781C                     __end_of_SPI2_Exchange8bit:
 33619                           	opt stack 0
 33620                           tosu	equ	0xFFF
 33621                           tosh	equ	0xFFE
 33622                           tosl	equ	0xFFD
 33623                           pclath	equ	0xFFA
 33624                           tblptru	equ	0xFF8
 33625                           tblptrh	equ	0xFF7
 33626                           tblptrl	equ	0xFF6
 33627                           tablat	equ	0xFF5
 33628                           prodh	equ	0xFF4
 33629                           prodl	equ	0xFF3
 33630                           intcon	equ	0xFF2
 33631                           indf0	equ	0xFEF
 33632                           postinc0	equ	0xFEE
 33633                           plusw0	equ	0xFEB
 33634                           fsr0h	equ	0xFEA
 33635                           fsr0l	equ	0xFE9
 33636                           wreg	equ	0xFE8
 33637                           postinc1	equ	0xFE6
 33638                           postdec1	equ	0xFE5
 33639                           plusw1	equ	0xFE3
 33640                           fsr1h	equ	0xFE2
 33641                           fsr1l	equ	0xFE1
 33642                           indf2	equ	0xFDF
 33643                           postinc2	equ	0xFDE
 33644                           postdec2	equ	0xFDD
 33645                           plusw2	equ	0xFDB
 33646                           fsr2h	equ	0xFDA
 33647                           fsr2l	equ	0xFD9
 33648                           status	equ	0xFD8
 33649                           
 33650 ;; *************** function _HALSPICSDeassert *****************
 33651 ;; Defined at:
 33652 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33653 ;; Parameters:    Size  Location     Type
 33654 ;;		None
 33655 ;; Auto vars:     Size  Location     Type
 33656 ;;		None
 33657 ;; Return value:  Size  Location     Type
 33658 ;;                  1    wreg      void 
 33659 ;; Registers used:
 33660 ;;		None
 33661 ;; Tracked objects:
 33662 ;;		On entry : 1/0
 33663 ;;		On exit  : 1/0
 33664 ;;		Unchanged: 1/0
 33665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33666 ;;      Params:         0       0       0       0       0       0       0       0       0
 33667 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33668 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33669 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33670 ;;Total ram usage:        0 bytes
 33671 ;; Hardware stack levels used:    1
 33672 ;; Hardware stack levels required when called:    7
 33673 ;; This function calls:
 33674 ;;		Nothing
 33675 ;; This function is called by:
 33676 ;;		_RADIO_RegisterWrite
 33677 ;;		_RADIO_RegisterRead
 33678 ;;		_RADIO_Transmit
 33679 ;;		_RADIO_RxDone
 33680 ;;		_RADIO_FSKPayloadReady
 33681 ;; This function uses a non-reentrant model
 33682 ;;
 33683                           
 33684                           	psect	text174
 33685  007970                     __ptext174:
 33686                           	opt stack 0
 33687  007970                     _HALSPICSDeassert:
 33688                           	opt stack 18
 33689                           
 33690                           ; BSR set to: 14
 33691                           ;incstack = 0
 33692                           ;radio_driver_hal.c: 70: do { LATC1 = 1; } while(0);
 33693  007970  827B               	bsf	3963,1,c	;volatile
 33694  007972  0012               	return		;funcret
 33695  007974                     __end_of_HALSPICSDeassert:
 33696                           	opt stack 0
 33697                           tosu	equ	0xFFF
 33698                           tosh	equ	0xFFE
 33699                           tosl	equ	0xFFD
 33700                           pclath	equ	0xFFA
 33701                           tblptru	equ	0xFF8
 33702                           tblptrh	equ	0xFF7
 33703                           tblptrl	equ	0xFF6
 33704                           tablat	equ	0xFF5
 33705                           prodh	equ	0xFF4
 33706                           prodl	equ	0xFF3
 33707                           intcon	equ	0xFF2
 33708                           indf0	equ	0xFEF
 33709                           postinc0	equ	0xFEE
 33710                           plusw0	equ	0xFEB
 33711                           fsr0h	equ	0xFEA
 33712                           fsr0l	equ	0xFE9
 33713                           wreg	equ	0xFE8
 33714                           postinc1	equ	0xFE6
 33715                           postdec1	equ	0xFE5
 33716                           plusw1	equ	0xFE3
 33717                           fsr1h	equ	0xFE2
 33718                           fsr1l	equ	0xFE1
 33719                           indf2	equ	0xFDF
 33720                           postinc2	equ	0xFDE
 33721                           postdec2	equ	0xFDD
 33722                           plusw2	equ	0xFDB
 33723                           fsr2h	equ	0xFDA
 33724                           fsr2l	equ	0xFD9
 33725                           status	equ	0xFD8
 33726                           
 33727 ;; *************** function _HALSPICSAssert *****************
 33728 ;; Defined at:
 33729 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33730 ;; Parameters:    Size  Location     Type
 33731 ;;		None
 33732 ;; Auto vars:     Size  Location     Type
 33733 ;;		None
 33734 ;; Return value:  Size  Location     Type
 33735 ;;                  1    wreg      void 
 33736 ;; Registers used:
 33737 ;;		None
 33738 ;; Tracked objects:
 33739 ;;		On entry : 0/0
 33740 ;;		On exit  : 0/0
 33741 ;;		Unchanged: 0/0
 33742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33743 ;;      Params:         0       0       0       0       0       0       0       0       0
 33744 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33745 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33746 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33747 ;;Total ram usage:        0 bytes
 33748 ;; Hardware stack levels used:    1
 33749 ;; Hardware stack levels required when called:    7
 33750 ;; This function calls:
 33751 ;;		Nothing
 33752 ;; This function is called by:
 33753 ;;		_RADIO_RegisterWrite
 33754 ;;		_RADIO_RegisterRead
 33755 ;;		_RADIO_Transmit
 33756 ;;		_RADIO_RxDone
 33757 ;;		_RADIO_FSKPayloadReady
 33758 ;; This function uses a non-reentrant model
 33759 ;;
 33760                           
 33761                           	psect	text175
 33762  007974                     __ptext175:
 33763                           	opt stack 0
 33764  007974                     _HALSPICSAssert:
 33765                           	opt stack 18
 33766                           
 33767                           ;incstack = 0
 33768                           ;radio_driver_hal.c: 65: do { LATC1 = 0; } while(0);
 33769  007974  927B               	bcf	3963,1,c	;volatile
 33770  007976  0012               	return		;funcret
 33771  007978                     __end_of_HALSPICSAssert:
 33772                           	opt stack 0
 33773                           tosu	equ	0xFFF
 33774                           tosh	equ	0xFFE
 33775                           tosl	equ	0xFFD
 33776                           pclath	equ	0xFFA
 33777                           tblptru	equ	0xFF8
 33778                           tblptrh	equ	0xFF7
 33779                           tblptrl	equ	0xFF6
 33780                           tablat	equ	0xFF5
 33781                           prodh	equ	0xFF4
 33782                           prodl	equ	0xFF3
 33783                           intcon	equ	0xFF2
 33784                           indf0	equ	0xFEF
 33785                           postinc0	equ	0xFEE
 33786                           plusw0	equ	0xFEB
 33787                           fsr0h	equ	0xFEA
 33788                           fsr0l	equ	0xFE9
 33789                           wreg	equ	0xFE8
 33790                           postinc1	equ	0xFE6
 33791                           postdec1	equ	0xFE5
 33792                           plusw1	equ	0xFE3
 33793                           fsr1h	equ	0xFE2
 33794                           fsr1l	equ	0xFE1
 33795                           indf2	equ	0xFDF
 33796                           postinc2	equ	0xFDE
 33797                           postdec2	equ	0xFDD
 33798                           plusw2	equ	0xFDB
 33799                           fsr2h	equ	0xFDA
 33800                           fsr2l	equ	0xFD9
 33801                           status	equ	0xFD8
 33802                           
 33803 ;; *************** function _RADIO_Reset *****************
 33804 ;; Defined at:
 33805 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33806 ;; Parameters:    Size  Location     Type
 33807 ;;		None
 33808 ;; Auto vars:     Size  Location     Type
 33809 ;;		None
 33810 ;; Return value:  Size  Location     Type
 33811 ;;                  1    wreg      void 
 33812 ;; Registers used:
 33813 ;;		wreg, status,2, status,0, cstack
 33814 ;; Tracked objects:
 33815 ;;		On entry : E/1
 33816 ;;		On exit  : E/0
 33817 ;;		Unchanged: 0/0
 33818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33819 ;;      Params:         0       0       0       0       0       0       0       0       0
 33820 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33821 ;;      Temps:          0       0       0       0       0       0       0       0       0
 33822 ;;      Totals:         0       0       0       0       0       0       0       0       0
 33823 ;;Total ram usage:        0 bytes
 33824 ;; Hardware stack levels used:    1
 33825 ;; Hardware stack levels required when called:    8
 33826 ;; This function calls:
 33827 ;;		_HALResetPinMakeInput
 33828 ;;		_HALResetPinMakeOutput
 33829 ;;		_HALResetPinOutputValue
 33830 ;;		_SystemBlockingWaitMs
 33831 ;; This function is called by:
 33832 ;;		_RADIO_Init
 33833 ;; This function uses a non-reentrant model
 33834 ;;
 33835                           
 33836                           	psect	text176
 33837  00710A                     __ptext176:
 33838                           	opt stack 0
 33839  00710A                     _RADIO_Reset:
 33840                           	opt stack 20
 33841                           
 33842                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 33843                           
 33844                           ;incstack = 0
 33845  00710A  ECBC  F03C         	call	_HALResetPinMakeOutput	;wreg free
 33846                           
 33847                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 33848  00710E  0E00               	movlw	0
 33849  007110  ECD7  F03B         	call	_HALResetPinOutputValue
 33850                           
 33851                           ; BSR set to: 0
 33852                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 33853  007114  0E01               	movlw	1
 33854  007116  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33855  007118  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33856  00711A  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33857  00711C  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33858  00711E  EC85  F039         	call	_SystemBlockingWaitMs	;wreg free
 33859                           
 33860                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 33861  007122  ECBE  F03C         	call	_HALResetPinMakeInput	;wreg free
 33862                           
 33863                           ; BSR set to: 0
 33864                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 33865  007126  0E0A               	movlw	10
 33866  007128  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33867  00712A  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33868  00712C  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33869  00712E  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33870  007130  EC85  F039         	call	_SystemBlockingWaitMs	;wreg free
 33871                           
 33872                           ; BSR set to: 0
 33873                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 33874  007134  0E01               	movlw	1
 33875  007136  ECD7  F03B         	call	_HALResetPinOutputValue
 33876                           
 33877                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 33878  00713A  EFBC  F03C         	goto	_HALResetPinMakeOutput	;wreg free
 33879  00713E                     __end_of_RADIO_Reset:
 33880                           	opt stack 0
 33881                           tosu	equ	0xFFF
 33882                           tosh	equ	0xFFE
 33883                           tosl	equ	0xFFD
 33884                           pclath	equ	0xFFA
 33885                           tblptru	equ	0xFF8
 33886                           tblptrh	equ	0xFF7
 33887                           tblptrl	equ	0xFF6
 33888                           tablat	equ	0xFF5
 33889                           prodh	equ	0xFF4
 33890                           prodl	equ	0xFF3
 33891                           intcon	equ	0xFF2
 33892                           indf0	equ	0xFEF
 33893                           postinc0	equ	0xFEE
 33894                           plusw0	equ	0xFEB
 33895                           fsr0h	equ	0xFEA
 33896                           fsr0l	equ	0xFE9
 33897                           wreg	equ	0xFE8
 33898                           postinc1	equ	0xFE6
 33899                           postdec1	equ	0xFE5
 33900                           plusw1	equ	0xFE3
 33901                           fsr1h	equ	0xFE2
 33902                           fsr1l	equ	0xFE1
 33903                           indf2	equ	0xFDF
 33904                           postinc2	equ	0xFDE
 33905                           postdec2	equ	0xFDD
 33906                           plusw2	equ	0xFDB
 33907                           fsr2h	equ	0xFDA
 33908                           fsr2l	equ	0xFD9
 33909                           status	equ	0xFD8
 33910                           
 33911 ;; *************** function _SystemBlockingWaitMs *****************
 33912 ;; Defined at:
 33913 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 33914 ;; Parameters:    Size  Location     Type
 33915 ;;  ms              4    4[BANK0 ] unsigned long 
 33916 ;; Auto vars:     Size  Location     Type
 33917 ;;		None
 33918 ;; Return value:  Size  Location     Type
 33919 ;;                  1    wreg      void 
 33920 ;; Registers used:
 33921 ;;		wreg, status,2, status,0
 33922 ;; Tracked objects:
 33923 ;;		On entry : F/0
 33924 ;;		On exit  : F/0
 33925 ;;		Unchanged: 0/0
 33926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 33927 ;;      Params:         0       4       0       0       0       0       0       0       0
 33928 ;;      Locals:         0       0       0       0       0       0       0       0       0
 33929 ;;      Temps:          0       1       0       0       0       0       0       0       0
 33930 ;;      Totals:         0       5       0       0       0       0       0       0       0
 33931 ;;Total ram usage:        5 bytes
 33932 ;; Hardware stack levels used:    1
 33933 ;; Hardware stack levels required when called:    7
 33934 ;; This function calls:
 33935 ;;		Nothing
 33936 ;; This function is called by:
 33937 ;;		_RADIO_WriteMode
 33938 ;;		_RADIO_Reset
 33939 ;;		_RADIO_ReadRandom
 33940 ;; This function uses a non-reentrant model
 33941 ;;
 33942                           
 33943                           	psect	text177
 33944  00730A                     __ptext177:
 33945                           	opt stack 0
 33946  00730A                     _SystemBlockingWaitMs:
 33947                           	opt stack 19
 33948                           
 33949                           ; BSR set to: 0
 33950                           ;sw_timer.c: 147: while (ms > 0)
 33951                           
 33952                           ;incstack = 0
 33953  00730A  D00E               	goto	l11981
 33954  00730C                     l11977:
 33955                           
 33956                           ; BSR set to: 0
 33957                           ;sw_timer.c: 148: {
 33958                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 33959  00730C  0E06               	movlw	6
 33960  00730E  6F68               	movwf	??_SystemBlockingWaitMs& (0+255),b
 33961  007310  0E30               	movlw	48
 33962  007312                     u20097:
 33963  007312  2EE8               	decfsz	wreg,f,c
 33964  007314  D7FE               	goto	u20097
 33965  007316  2F68               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 33966  007318  D7FC               	goto	u20097
 33967  00731A  D000               	nop2	
 33968                           
 33969                           ;sw_timer.c: 150: ms--;
 33970  00731C  0100               	movlb	0	; () banked
 33971  00731E  0764               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 33972  007320  0E00               	movlw	0
 33973  007322  5B65               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 33974  007324  5B66               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 33975  007326  5B67               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 33976  007328                     l11981:
 33977                           
 33978                           ; BSR set to: 0
 33979  007328  5164               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 33980  00732A  1165               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 33981  00732C  1166               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 33982  00732E  1167               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 33983  007330  E1ED               	bnz	l11977
 33984                           
 33985                           ; BSR set to: 0
 33986  007332  0012               	return		;funcret
 33987  007334                     __end_of_SystemBlockingWaitMs:
 33988                           	opt stack 0
 33989                           tosu	equ	0xFFF
 33990                           tosh	equ	0xFFE
 33991                           tosl	equ	0xFFD
 33992                           pclath	equ	0xFFA
 33993                           tblptru	equ	0xFF8
 33994                           tblptrh	equ	0xFF7
 33995                           tblptrl	equ	0xFF6
 33996                           tablat	equ	0xFF5
 33997                           prodh	equ	0xFF4
 33998                           prodl	equ	0xFF3
 33999                           intcon	equ	0xFF2
 34000                           indf0	equ	0xFEF
 34001                           postinc0	equ	0xFEE
 34002                           plusw0	equ	0xFEB
 34003                           fsr0h	equ	0xFEA
 34004                           fsr0l	equ	0xFE9
 34005                           wreg	equ	0xFE8
 34006                           postinc1	equ	0xFE6
 34007                           postdec1	equ	0xFE5
 34008                           plusw1	equ	0xFE3
 34009                           fsr1h	equ	0xFE2
 34010                           fsr1l	equ	0xFE1
 34011                           indf2	equ	0xFDF
 34012                           postinc2	equ	0xFDE
 34013                           postdec2	equ	0xFDD
 34014                           plusw2	equ	0xFDB
 34015                           fsr2h	equ	0xFDA
 34016                           fsr2l	equ	0xFD9
 34017                           status	equ	0xFD8
 34018                           
 34019 ;; *************** function _HALResetPinOutputValue *****************
 34020 ;; Defined at:
 34021 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34022 ;; Parameters:    Size  Location     Type
 34023 ;;  value           1    wreg     unsigned char 
 34024 ;; Auto vars:     Size  Location     Type
 34025 ;;  value           1    4[BANK0 ] unsigned char 
 34026 ;; Return value:  Size  Location     Type
 34027 ;;                  1    wreg      void 
 34028 ;; Registers used:
 34029 ;;		wreg, status,2, status,0
 34030 ;; Tracked objects:
 34031 ;;		On entry : E/1
 34032 ;;		On exit  : F/0
 34033 ;;		Unchanged: 0/0
 34034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34035 ;;      Params:         0       0       0       0       0       0       0       0       0
 34036 ;;      Locals:         0       1       0       0       0       0       0       0       0
 34037 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34038 ;;      Totals:         0       1       0       0       0       0       0       0       0
 34039 ;;Total ram usage:        1 bytes
 34040 ;; Hardware stack levels used:    1
 34041 ;; Hardware stack levels required when called:    7
 34042 ;; This function calls:
 34043 ;;		Nothing
 34044 ;; This function is called by:
 34045 ;;		_RADIO_Reset
 34046 ;; This function uses a non-reentrant model
 34047 ;;
 34048                           
 34049                           	psect	text178
 34050  0077AE                     __ptext178:
 34051                           	opt stack 0
 34052  0077AE                     _HALResetPinOutputValue:
 34053                           	opt stack 20
 34054                           
 34055                           ; BSR set to: 0
 34056                           ;incstack = 0
 34057                           ;HALResetPinOutputValue@value stored from wreg
 34058  0077AE  0100               	movlb	0	; () banked
 34059  0077B0  6F64               	movwf	HALResetPinOutputValue@value& (0+255),b
 34060                           
 34061                           ;radio_driver_hal.c: 57: if (value == 0)
 34062  0077B2  5164               	movf	HALResetPinOutputValue@value& (0+255),w,b
 34063  0077B4  E102               	bnz	l13833
 34064                           
 34065                           ; BSR set to: 0
 34066                           
 34067                           ;radio_driver_hal.c: 58: do { LATC0 = 0; } while(0);
 34068  0077B6  907B               	bcf	3963,0,c	;volatile
 34069  0077B8  0012               	return	
 34070  0077BA                     l13833:
 34071                           
 34072                           ; BSR set to: 0
 34073                           ;radio_driver_hal.c: 59: else if (value == 1)
 34074  0077BA  0564               	decf	HALResetPinOutputValue@value& (0+255),w,b
 34075  0077BC  B4D8               	btfsc	status,2,c
 34076                           
 34077                           ; BSR set to: 0
 34078                           
 34079                           ;radio_driver_hal.c: 60: do { LATC0 = 1; } while(0);
 34080  0077BE  807B               	bsf	3963,0,c	;volatile
 34081                           
 34082                           ; BSR set to: 0
 34083  0077C0  0012               	return		;funcret
 34084  0077C2                     __end_of_HALResetPinOutputValue:
 34085                           	opt stack 0
 34086                           tosu	equ	0xFFF
 34087                           tosh	equ	0xFFE
 34088                           tosl	equ	0xFFD
 34089                           pclath	equ	0xFFA
 34090                           tblptru	equ	0xFF8
 34091                           tblptrh	equ	0xFF7
 34092                           tblptrl	equ	0xFF6
 34093                           tablat	equ	0xFF5
 34094                           prodh	equ	0xFF4
 34095                           prodl	equ	0xFF3
 34096                           intcon	equ	0xFF2
 34097                           indf0	equ	0xFEF
 34098                           postinc0	equ	0xFEE
 34099                           plusw0	equ	0xFEB
 34100                           fsr0h	equ	0xFEA
 34101                           fsr0l	equ	0xFE9
 34102                           wreg	equ	0xFE8
 34103                           postinc1	equ	0xFE6
 34104                           postdec1	equ	0xFE5
 34105                           plusw1	equ	0xFE3
 34106                           fsr1h	equ	0xFE2
 34107                           fsr1l	equ	0xFE1
 34108                           indf2	equ	0xFDF
 34109                           postinc2	equ	0xFDE
 34110                           postdec2	equ	0xFDD
 34111                           plusw2	equ	0xFDB
 34112                           fsr2h	equ	0xFDA
 34113                           fsr2l	equ	0xFD9
 34114                           status	equ	0xFD8
 34115                           
 34116 ;; *************** function _HALResetPinMakeOutput *****************
 34117 ;; Defined at:
 34118 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34119 ;; Parameters:    Size  Location     Type
 34120 ;;		None
 34121 ;; Auto vars:     Size  Location     Type
 34122 ;;		None
 34123 ;; Return value:  Size  Location     Type
 34124 ;;                  1    wreg      void 
 34125 ;; Registers used:
 34126 ;;		None
 34127 ;; Tracked objects:
 34128 ;;		On entry : E/1
 34129 ;;		On exit  : E/0
 34130 ;;		Unchanged: E/0
 34131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34132 ;;      Params:         0       0       0       0       0       0       0       0       0
 34133 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34134 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34135 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34136 ;;Total ram usage:        0 bytes
 34137 ;; Hardware stack levels used:    1
 34138 ;; Hardware stack levels required when called:    7
 34139 ;; This function calls:
 34140 ;;		Nothing
 34141 ;; This function is called by:
 34142 ;;		_RADIO_Reset
 34143 ;; This function uses a non-reentrant model
 34144 ;;
 34145                           
 34146                           	psect	text179
 34147  007978                     __ptext179:
 34148                           	opt stack 0
 34149  007978                     _HALResetPinMakeOutput:
 34150                           	opt stack 20
 34151                           
 34152                           ; BSR set to: 0
 34153                           ;incstack = 0
 34154                           ;radio_driver_hal.c: 47: do { TRISC0 = 0; } while(0);
 34155  007978  9083               	bcf	3971,0,c	;volatile
 34156  00797A  0012               	return		;funcret
 34157  00797C                     __end_of_HALResetPinMakeOutput:
 34158                           	opt stack 0
 34159                           tosu	equ	0xFFF
 34160                           tosh	equ	0xFFE
 34161                           tosl	equ	0xFFD
 34162                           pclath	equ	0xFFA
 34163                           tblptru	equ	0xFF8
 34164                           tblptrh	equ	0xFF7
 34165                           tblptrl	equ	0xFF6
 34166                           tablat	equ	0xFF5
 34167                           prodh	equ	0xFF4
 34168                           prodl	equ	0xFF3
 34169                           intcon	equ	0xFF2
 34170                           indf0	equ	0xFEF
 34171                           postinc0	equ	0xFEE
 34172                           plusw0	equ	0xFEB
 34173                           fsr0h	equ	0xFEA
 34174                           fsr0l	equ	0xFE9
 34175                           wreg	equ	0xFE8
 34176                           postinc1	equ	0xFE6
 34177                           postdec1	equ	0xFE5
 34178                           plusw1	equ	0xFE3
 34179                           fsr1h	equ	0xFE2
 34180                           fsr1l	equ	0xFE1
 34181                           indf2	equ	0xFDF
 34182                           postinc2	equ	0xFDE
 34183                           postdec2	equ	0xFDD
 34184                           plusw2	equ	0xFDB
 34185                           fsr2h	equ	0xFDA
 34186                           fsr2l	equ	0xFD9
 34187                           status	equ	0xFD8
 34188                           
 34189 ;; *************** function _HALResetPinMakeInput *****************
 34190 ;; Defined at:
 34191 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34192 ;; Parameters:    Size  Location     Type
 34193 ;;		None
 34194 ;; Auto vars:     Size  Location     Type
 34195 ;;		None
 34196 ;; Return value:  Size  Location     Type
 34197 ;;                  1    wreg      void 
 34198 ;; Registers used:
 34199 ;;		None
 34200 ;; Tracked objects:
 34201 ;;		On entry : F/0
 34202 ;;		On exit  : F/0
 34203 ;;		Unchanged: F/0
 34204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34205 ;;      Params:         0       0       0       0       0       0       0       0       0
 34206 ;;      Locals:         0       0       0       0       0       0       0       0       0
 34207 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34208 ;;      Totals:         0       0       0       0       0       0       0       0       0
 34209 ;;Total ram usage:        0 bytes
 34210 ;; Hardware stack levels used:    1
 34211 ;; Hardware stack levels required when called:    7
 34212 ;; This function calls:
 34213 ;;		Nothing
 34214 ;; This function is called by:
 34215 ;;		_RADIO_Reset
 34216 ;; This function uses a non-reentrant model
 34217 ;;
 34218                           
 34219                           	psect	text180
 34220  00797C                     __ptext180:
 34221                           	opt stack 0
 34222  00797C                     _HALResetPinMakeInput:
 34223                           	opt stack 20
 34224                           
 34225                           ; BSR set to: 0
 34226                           
 34227                           ;incstack = 0
 34228                           ;radio_driver_hal.c: 52: do { TRISC0 = 1; } while(0);
 34229  00797C  8083               	bsf	3971,0,c	;volatile
 34230                           
 34231                           ; BSR set to: 0
 34232  00797E  0012               	return		;funcret
 34233  007980                     __end_of_HALResetPinMakeInput:
 34234                           	opt stack 0
 34235                           tosu	equ	0xFFF
 34236                           tosh	equ	0xFFE
 34237                           tosl	equ	0xFFD
 34238                           pclath	equ	0xFFA
 34239                           tblptru	equ	0xFF8
 34240                           tblptrh	equ	0xFF7
 34241                           tblptrl	equ	0xFF6
 34242                           tablat	equ	0xFF5
 34243                           prodh	equ	0xFF4
 34244                           prodl	equ	0xFF3
 34245                           intcon	equ	0xFF2
 34246                           indf0	equ	0xFEF
 34247                           postinc0	equ	0xFEE
 34248                           plusw0	equ	0xFEB
 34249                           fsr0h	equ	0xFEA
 34250                           fsr0l	equ	0xFE9
 34251                           wreg	equ	0xFE8
 34252                           postinc1	equ	0xFE6
 34253                           postdec1	equ	0xFE5
 34254                           plusw1	equ	0xFE3
 34255                           fsr1h	equ	0xFE2
 34256                           fsr1l	equ	0xFE1
 34257                           indf2	equ	0xFDF
 34258                           postinc2	equ	0xFDE
 34259                           postdec2	equ	0xFDD
 34260                           plusw2	equ	0xFDB
 34261                           fsr2h	equ	0xFDA
 34262                           fsr2l	equ	0xFD9
 34263                           status	equ	0xFD8
 34264                           
 34265 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 34266 ;; Defined at:
 34267 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34268 ;; Parameters:    Size  Location     Type
 34269 ;;  period          2   52[BANK0 ] unsigned int 
 34270 ;; Auto vars:     Size  Location     Type
 34271 ;;  iCtr            1   66[BANK0 ] unsigned char 
 34272 ;; Return value:  Size  Location     Type
 34273 ;;                  1    wreg      void 
 34274 ;; Registers used:
 34275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34276 ;; Tracked objects:
 34277 ;;		On entry : F/0
 34278 ;;		On exit  : D/0
 34279 ;;		Unchanged: 0/0
 34280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34281 ;;      Params:         0       2       0       0       0       0       0       0       0
 34282 ;;      Locals:         0       5       0       0       0       0       0       0       0
 34283 ;;      Temps:          0       8       0       0       0       0       0       0       0
 34284 ;;      Totals:         0      15       0       0       0       0       0       0       0
 34285 ;;Total ram usage:       15 bytes
 34286 ;; Hardware stack levels used:    1
 34287 ;; Hardware stack levels required when called:   11
 34288 ;; This function calls:
 34289 ;;		_SwTimerSetTimeout
 34290 ;;		_SwTimerStart
 34291 ;;		_SwTimerStop
 34292 ;;		___lldiv
 34293 ;; This function is called by:
 34294 ;;		_LORAWAN_Reset
 34295 ;; This function uses a non-reentrant model
 34296 ;;
 34297                           
 34298                           	psect	text181
 34299  00371E                     __ptext181:
 34300                           	opt stack 0
 34301  00371E                     _LORAWAN_LinkCheckConfigure:
 34302                           	opt stack 17
 34303                           
 34304                           ; BSR set to: 0
 34305                           ;lorawan.c: 757: uint8_t iCtr;
 34306                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 34307                           
 34308                           ; BSR set to: 0
 34309                           ;incstack = 0
 34310  00371E  5194               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34311  003720  6F96               	movwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34312  003722  5195               	movf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34313  003724  6F97               	movwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34314  003726  6B98               	clrf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34315  003728  6B99               	clrf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34316  00372A  0EE8               	movlw	232
 34317  00372C  0396               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34318  00372E  CFF3 F09A          	movff	prodl,??_LORAWAN_LinkCheckConfigure+4
 34319  003732  CFF4 F09B          	movff	prodh,??_LORAWAN_LinkCheckConfigure+5
 34320  003736  6B9C               	clrf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),b
 34321  003738  6B9D               	clrf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),b
 34322  00373A  0397               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34323  00373C  50F3               	movf	prodl,w,c
 34324  00373E  279B               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34325  003740  50F4               	movf	prodh,w,c
 34326  003742  239C               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34327  003744  0E00               	movlw	0
 34328  003746  239D               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34329  003748  0E03               	movlw	3
 34330  00374A  0396               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34331  00374C  50F3               	movf	prodl,w,c
 34332  00374E  279B               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34333  003750  50F4               	movf	prodh,w,c
 34334  003752  239C               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34335  003754  0E00               	movlw	0
 34336  003756  239D               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34337  003758  0EE8               	movlw	232
 34338  00375A  0398               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34339  00375C  50F3               	movf	prodl,w,c
 34340  00375E  279C               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34341  003760  50F4               	movf	prodh,w,c
 34342  003762  239D               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34343  003764  0E03               	movlw	3
 34344  003766  0397               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34345  003768  50F3               	movf	prodl,w,c
 34346  00376A  279C               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34347  00376C  50F4               	movf	prodh,w,c
 34348  00376E  239D               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34349  003770  0E00               	movlw	0
 34350  003772  0396               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34351  003774  50F3               	movf	prodl,w,c
 34352  003776  279C               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34353  003778  50F4               	movf	prodh,w,c
 34354  00377A  239D               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34355  00377C  0EE8               	movlw	232
 34356  00377E  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34357  003780  50F3               	movf	prodl,w,c
 34358  003782  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34359  003784  0E03               	movlw	3
 34360  003786  0398               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34361  003788  50F3               	movf	prodl,w,c
 34362  00378A  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34363  00378C  0E00               	movlw	0
 34364  00378E  0397               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34365  003790  50F3               	movf	prodl,w,c
 34366  003792  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34367  003794  0E00               	movlw	0
 34368  003796  0396               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34369  003798  50F3               	movf	prodl,w,c
 34370  00379A  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34371  00379C  C09A  F2CC         	movff	??_LORAWAN_LinkCheckConfigure+4,_loRa+204
 34372  0037A0  C09B  F2CD         	movff	??_LORAWAN_LinkCheckConfigure+5,_loRa+205
 34373  0037A4  C09C  F2CE         	movff	??_LORAWAN_LinkCheckConfigure+6,_loRa+206
 34374  0037A8  C09D  F2CF         	movff	??_LORAWAN_LinkCheckConfigure+7,_loRa+207
 34375                           
 34376                           ; BSR set to: 0
 34377                           ;lorawan.c: 761: if (period == 0)
 34378  0037AC  5194               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34379  0037AE  1195               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34380  0037B0  E127               	bnz	l2014
 34381                           
 34382                           ; BSR set to: 0
 34383                           ;lorawan.c: 762: {
 34384                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 34385  0037B2  0102               	movlb	2	; () banked
 34386  0037B4  51E7               	movf	(_loRa+231)& (0+255),w,b
 34387  0037B6  EC2D  F03B         	call	_SwTimerStop
 34388                           
 34389                           ; BSR set to: 0
 34390                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 34391  0037BA  0102               	movlb	2	; () banked
 34392  0037BC  9503               	bcf	(_loRa+3)& (0+255),2,b
 34393                           
 34394                           ; BSR set to: 2
 34395                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 34396  0037BE  0100               	movlb	0	; () banked
 34397  0037C0  6BA2               	clrf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 34398  0037C2  D018               	goto	l15123
 34399  0037C4                     l15115:
 34400                           
 34401                           ; BSR set to: 0
 34402                           ;lorawan.c: 766: {
 34403                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 34404  0037C4  51A2               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34405  0037C6  0D02               	mullw	2
 34406  0037C8  0EA8               	movlw	low (_loRa+168)
 34407  0037CA  24F3               	addwf	prodl,w,c
 34408  0037CC  6ED9               	movwf	fsr2l,c
 34409  0037CE  0E02               	movlw	high (_loRa+168)
 34410  0037D0  20F4               	addwfc	prodh,w,c
 34411  0037D2  6EDA               	movwf	fsr2h,c
 34412  0037D4  0E02               	movlw	2
 34413  0037D6  18DE               	xorwf	postinc2,w,c
 34414  0037D8  E10B               	bnz	l15121
 34415                           
 34416                           ; BSR set to: 0
 34417                           ;lorawan.c: 768: {
 34418                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 34419  0037DA  51A2               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34420  0037DC  0D02               	mullw	2
 34421  0037DE  0EA8               	movlw	low (_loRa+168)
 34422  0037E0  24F3               	addwf	prodl,w,c
 34423  0037E2  6ED9               	movwf	fsr2l,c
 34424  0037E4  0E02               	movlw	high (_loRa+168)
 34425  0037E6  20F4               	addwfc	prodh,w,c
 34426  0037E8  6EDA               	movwf	fsr2h,c
 34427  0037EA  68DF               	setf	indf2,c
 34428                           
 34429                           ; BSR set to: 0
 34430                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 34431  0037EC  0102               	movlb	2	; () banked
 34432  0037EE  07A7               	decf	(_loRa+167)& (0+255),f,b
 34433  0037F0                     l15121:
 34434  0037F0  0100               	movlb	0	; () banked
 34435  0037F2  2BA2               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 34436  0037F4                     l15123:
 34437                           
 34438                           ; BSR set to: 0
 34439  0037F4  0102               	movlb	2	; () banked
 34440  0037F6  51A7               	movf	(_loRa+167)& (0+255),w,b
 34441  0037F8  0100               	movlb	0	; () banked
 34442  0037FA  5DA2               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34443  0037FC  E3E3               	bnc	l15115
 34444  0037FE  0012               	return	
 34445  003800                     l2014:
 34446                           
 34447                           ; BSR set to: 0
 34448                           ;lorawan.c: 776: else
 34449                           ;lorawan.c: 777: {
 34450                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 34451  003800  0102               	movlb	2	; () banked
 34452  003802  8503               	bsf	(_loRa+3)& (0+255),2,b
 34453                           
 34454                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 34455  003804  A902               	btfss	(_loRa+2)& (0+255),4,b
 34456  003806  0012               	return	
 34457                           
 34458                           ; BSR set to: 2
 34459                           ;lorawan.c: 782: {
 34460                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 34461  003808  51CF               	movf	(_loRa+207)& (0+255),w,b
 34462  00380A  E106               	bnz	u17720
 34463  00380C  29CC               	incf	(_loRa+204)& (0+255),w,b
 34464  00380E  0EFF               	movlw	255
 34465  003810  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 34466  003812  0E0F               	movlw	15
 34467  003814  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 34468  003816  E319               	bnc	l15129
 34469  003818                     u17720:
 34470                           
 34471                           ; BSR set to: 2
 34472  003818  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
 34473  00381C  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
 34474  003820  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
 34475  003824  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
 34476  003828  0E7D               	movlw	125
 34477  00382A  0100               	movlb	0	; () banked
 34478  00382C  6F68               	movwf	___lldiv@divisor& (0+255),b
 34479  00382E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34480  003830  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34481  003832  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34482  003834  ECAA  F030         	call	___lldiv	;wreg free
 34483  003838  0E0C               	movlw	12
 34484  00383A                     u17735:
 34485  00383A  90D8               	bcf	status,0,c
 34486  00383C  3764               	rlcf	?___lldiv& (0+255),f,b
 34487  00383E  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 34488  003840  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 34489  003842  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 34490  003844  2EE8               	decfsz	wreg,f,c
 34491  003846  D7F9               	goto	u17735
 34492  003848  D020               	goto	L21
 34493  00384A                     l15129:
 34494                           
 34495                           ; BSR set to: 2
 34496  00384A  C2CC  F096         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 34497  00384E  C2CD  F097         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 34498  003852  C2CE  F098         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 34499  003856  C2CF  F099         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 34500  00385A  0E0C               	movlw	12
 34501  00385C                     u17745:
 34502  00385C  90D8               	bcf	status,0,c
 34503  00385E  0100               	movlb	0	; () banked
 34504  003860  3796               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 34505  003862  3797               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 34506  003864  3798               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 34507  003866  3799               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 34508  003868  2EE8               	decfsz	wreg,f,c
 34509  00386A  D7F8               	goto	u17745
 34510  00386C  C096  F064         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 34511  003870  C097  F065         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 34512  003874  C098  F066         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 34513  003878  C099  F067         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 34514  00387C  0E7D               	movlw	125
 34515  00387E  6F68               	movwf	___lldiv@divisor& (0+255),b
 34516  003880  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34517  003882  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34518  003884  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34519  003886  ECAA  F030         	call	___lldiv	;wreg free
 34520  00388A                     L21:
 34521  00388A  C064  F09E         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3285
 34522  00388E  C065  F09F         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3285+1
 34523  003892  C066  F0A0         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3285+2
 34524  003896  C067  F0A1         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3285+3
 34525                           
 34526                           ; BSR set to: 0
 34527  00389A  C09E  F071         	movff	_LORAWAN_LinkCheckConfigure$3285,SwTimerSetTimeout@timeout
 34528  00389E  C09F  F072         	movff	_LORAWAN_LinkCheckConfigure$3285+1,SwTimerSetTimeout@timeout+1
 34529  0038A2  C0A0  F073         	movff	_LORAWAN_LinkCheckConfigure$3285+2,SwTimerSetTimeout@timeout+2
 34530  0038A6  C0A1  F074         	movff	_LORAWAN_LinkCheckConfigure$3285+3,SwTimerSetTimeout@timeout+3
 34531  0038AA  0102               	movlb	2	; () banked
 34532  0038AC  51E7               	movf	(_loRa+231)& (0+255),w,b
 34533  0038AE  ECE5  F036         	call	_SwTimerSetTimeout
 34534                           
 34535                           ; BSR set to: 0
 34536                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 34537  0038B2  0102               	movlb	2	; () banked
 34538  0038B4  51E7               	movf	(_loRa+231)& (0+255),w,b
 34539  0038B6  EFAA  F02E         	goto	_SwTimerStart
 34540  0038BA                     __end_of_LORAWAN_LinkCheckConfigure:
 34541                           	opt stack 0
 34542                           tosu	equ	0xFFF
 34543                           tosh	equ	0xFFE
 34544                           tosl	equ	0xFFD
 34545                           pclath	equ	0xFFA
 34546                           tblptru	equ	0xFF8
 34547                           tblptrh	equ	0xFF7
 34548                           tblptrl	equ	0xFF6
 34549                           tablat	equ	0xFF5
 34550                           prodh	equ	0xFF4
 34551                           prodl	equ	0xFF3
 34552                           intcon	equ	0xFF2
 34553                           indf0	equ	0xFEF
 34554                           postinc0	equ	0xFEE
 34555                           plusw0	equ	0xFEB
 34556                           fsr0h	equ	0xFEA
 34557                           fsr0l	equ	0xFE9
 34558                           wreg	equ	0xFE8
 34559                           postinc1	equ	0xFE6
 34560                           postdec1	equ	0xFE5
 34561                           plusw1	equ	0xFE3
 34562                           fsr1h	equ	0xFE2
 34563                           fsr1l	equ	0xFE1
 34564                           indf2	equ	0xFDF
 34565                           postinc2	equ	0xFDE
 34566                           postdec2	equ	0xFDD
 34567                           plusw2	equ	0xFDB
 34568                           fsr2h	equ	0xFDA
 34569                           fsr2l	equ	0xFD9
 34570                           status	equ	0xFD8
 34571                           
 34572 ;; *************** function ___lldiv *****************
 34573 ;; Defined at:
 34574 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 34575 ;; Parameters:    Size  Location     Type
 34576 ;;  dividend        4    4[BANK0 ] unsigned long 
 34577 ;;  divisor         4    8[BANK0 ] unsigned long 
 34578 ;; Auto vars:     Size  Location     Type
 34579 ;;  quotient        4   12[BANK0 ] unsigned long 
 34580 ;;  counter         1   16[BANK0 ] unsigned char 
 34581 ;; Return value:  Size  Location     Type
 34582 ;;                  4    4[BANK0 ] unsigned long 
 34583 ;; Registers used:
 34584 ;;		wreg, status,2, status,0
 34585 ;; Tracked objects:
 34586 ;;		On entry : F/0
 34587 ;;		On exit  : F/0
 34588 ;;		Unchanged: 0/0
 34589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34590 ;;      Params:         0       8       0       0       0       0       0       0       0
 34591 ;;      Locals:         0       5       0       0       0       0       0       0       0
 34592 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34593 ;;      Totals:         0      13       0       0       0       0       0       0       0
 34594 ;;Total ram usage:       13 bytes
 34595 ;; Hardware stack levels used:    1
 34596 ;; Hardware stack levels required when called:    7
 34597 ;; This function calls:
 34598 ;;		Nothing
 34599 ;; This function is called by:
 34600 ;;		_RADIO_WriteFrequency
 34601 ;;		_RADIO_WriteFSKFrequencyDeviation
 34602 ;;		_RADIO_WriteFSKBitRate
 34603 ;;		_RADIO_Transmit
 34604 ;;		_RADIO_ReceiveStart
 34605 ;;		_LORAWAN_TxDone
 34606 ;;		_LORAWAN_RxTimeout
 34607 ;;		_StartReTxTimer
 34608 ;;		_DutyCycleCallback
 34609 ;;		_LORAWAN_LinkCheckConfigure
 34610 ;;		_LORAWAN_LinkCheckCallback
 34611 ;;		_UpdateRetransmissionAckTimeoutState
 34612 ;;		_UpdateJoinSuccessState
 34613 ;; This function uses a non-reentrant model
 34614 ;;
 34615                           
 34616                           	psect	text182
 34617  006154                     __ptext182:
 34618                           	opt stack 0
 34619  006154                     ___lldiv:
 34620                           	opt stack 20
 34621                           
 34622                           ; BSR set to: 0
 34623                           
 34624                           ;incstack = 0
 34625  006154  6B6C               	clrf	___lldiv@quotient& (0+255),b
 34626  006156  6B6D               	clrf	(___lldiv@quotient+1)& (0+255),b
 34627  006158  6B6E               	clrf	(___lldiv@quotient+2)& (0+255),b
 34628  00615A  6B6F               	clrf	(___lldiv@quotient+3)& (0+255),b
 34629                           
 34630                           ; BSR set to: 0
 34631  00615C  5168               	movf	___lldiv@divisor& (0+255),w,b
 34632  00615E  1169               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 34633  006160  116A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 34634  006162  116B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 34635  006164  E029               	bz	l2993
 34636                           
 34637                           ; BSR set to: 0
 34638  006166  0E01               	movlw	1
 34639  006168  6F70               	movwf	___lldiv@counter& (0+255),b
 34640  00616A  D006               	goto	l12129
 34641  00616C                     l12127:
 34642                           
 34643                           ; BSR set to: 0
 34644  00616C  90D8               	bcf	status,0,c
 34645  00616E  3768               	rlcf	___lldiv@divisor& (0+255),f,b
 34646  006170  3769               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 34647  006172  376A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 34648  006174  376B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 34649  006176  2B70               	incf	___lldiv@counter& (0+255),f,b
 34650  006178                     l12129:
 34651                           
 34652                           ; BSR set to: 0
 34653  006178  AF6B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 34654  00617A  D7F8               	goto	l12127
 34655  00617C                     l12131:
 34656                           
 34657                           ; BSR set to: 0
 34658  00617C  90D8               	bcf	status,0,c
 34659  00617E  376C               	rlcf	___lldiv@quotient& (0+255),f,b
 34660  006180  376D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 34661  006182  376E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 34662  006184  376F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 34663                           
 34664                           ; BSR set to: 0
 34665  006186  5168               	movf	___lldiv@divisor& (0+255),w,b
 34666  006188  5D64               	subwf	___lldiv@dividend& (0+255),w,b
 34667  00618A  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34668  00618C  5965               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 34669  00618E  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34670  006190  5966               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 34671  006192  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34672  006194  5967               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 34673  006196  E309               	bnc	l12139
 34674                           
 34675                           ; BSR set to: 0
 34676  006198  5168               	movf	___lldiv@divisor& (0+255),w,b
 34677  00619A  5F64               	subwf	___lldiv@dividend& (0+255),f,b
 34678  00619C  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 34679  00619E  5B65               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 34680  0061A0  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 34681  0061A2  5B66               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 34682  0061A4  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 34683  0061A6  5B67               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 34684                           
 34685                           ; BSR set to: 0
 34686  0061A8  816C               	bsf	___lldiv@quotient& (0+255),0,b
 34687  0061AA                     l12139:
 34688                           
 34689                           ; BSR set to: 0
 34690  0061AA  90D8               	bcf	status,0,c
 34691  0061AC  336B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 34692  0061AE  336A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 34693  0061B0  3369               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 34694  0061B2  3368               	rrcf	___lldiv@divisor& (0+255),f,b
 34695                           
 34696                           ; BSR set to: 0
 34697  0061B4  2F70               	decfsz	___lldiv@counter& (0+255),f,b
 34698  0061B6  D7E2               	goto	l12131
 34699  0061B8                     l2993:
 34700                           
 34701                           ; BSR set to: 0
 34702  0061B8  C06C  F064         	movff	___lldiv@quotient,?___lldiv
 34703  0061BC  C06D  F065         	movff	___lldiv@quotient+1,?___lldiv+1
 34704  0061C0  C06E  F066         	movff	___lldiv@quotient+2,?___lldiv+2
 34705  0061C4  C06F  F067         	movff	___lldiv@quotient+3,?___lldiv+3
 34706                           
 34707                           ; BSR set to: 0
 34708  0061C8  0012               	return		;funcret
 34709  0061CA                     __end_of___lldiv:
 34710                           	opt stack 0
 34711                           tosu	equ	0xFFF
 34712                           tosh	equ	0xFFE
 34713                           tosl	equ	0xFFD
 34714                           pclath	equ	0xFFA
 34715                           tblptru	equ	0xFF8
 34716                           tblptrh	equ	0xFF7
 34717                           tblptrl	equ	0xFF6
 34718                           tablat	equ	0xFF5
 34719                           prodh	equ	0xFF4
 34720                           prodl	equ	0xFF3
 34721                           intcon	equ	0xFF2
 34722                           indf0	equ	0xFEF
 34723                           postinc0	equ	0xFEE
 34724                           plusw0	equ	0xFEB
 34725                           fsr0h	equ	0xFEA
 34726                           fsr0l	equ	0xFE9
 34727                           wreg	equ	0xFE8
 34728                           postinc1	equ	0xFE6
 34729                           postdec1	equ	0xFE5
 34730                           plusw1	equ	0xFE3
 34731                           fsr1h	equ	0xFE2
 34732                           fsr1l	equ	0xFE1
 34733                           indf2	equ	0xFDF
 34734                           postinc2	equ	0xFDE
 34735                           postdec2	equ	0xFDD
 34736                           plusw2	equ	0xFDB
 34737                           fsr2h	equ	0xFDA
 34738                           fsr2l	equ	0xFD9
 34739                           status	equ	0xFD8
 34740                           
 34741 ;; *************** function _SwTimerStop *****************
 34742 ;; Defined at:
 34743 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34744 ;; Parameters:    Size  Location     Type
 34745 ;;  timerId         1    wreg     unsigned char 
 34746 ;; Auto vars:     Size  Location     Type
 34747 ;;  timerId         1    4[BANK0 ] unsigned char 
 34748 ;; Return value:  Size  Location     Type
 34749 ;;                  1    wreg      void 
 34750 ;; Registers used:
 34751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34752 ;; Tracked objects:
 34753 ;;		On entry : C/1
 34754 ;;		On exit  : F/0
 34755 ;;		Unchanged: 0/0
 34756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34757 ;;      Params:         0       0       0       0       0       0       0       0       0
 34758 ;;      Locals:         0       1       0       0       0       0       0       0       0
 34759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 34760 ;;      Totals:         0       1       0       0       0       0       0       0       0
 34761 ;;Total ram usage:        1 bytes
 34762 ;; Hardware stack levels used:    1
 34763 ;; Hardware stack levels required when called:    7
 34764 ;; This function calls:
 34765 ;;		Nothing
 34766 ;; This function is called by:
 34767 ;;		_RADIO_Init
 34768 ;;		_RADIO_Transmit
 34769 ;;		_RADIO_RxDone
 34770 ;;		_RADIO_FSKPayloadReady
 34771 ;;		_RADIO_RxTimeout
 34772 ;;		_RADIO_TxDone
 34773 ;;		_RADIO_FSKPacketSent
 34774 ;;		_RADIO_RxFSKTimeout
 34775 ;;		_LORAWAN_TxDone
 34776 ;;		_StopAllSoftwareTimers
 34777 ;;		_LORAWAN_LinkCheckConfigure
 34778 ;;		_LORAWAN_RxDone
 34779 ;; This function uses a non-reentrant model
 34780 ;;
 34781                           
 34782                           	psect	text183
 34783  00765A                     __ptext183:
 34784                           	opt stack 0
 34785  00765A                     _SwTimerStop:
 34786                           	opt stack 20
 34787                           
 34788                           ; BSR set to: 0
 34789                           ;incstack = 0
 34790                           ;SwTimerStop@timerId stored from wreg
 34791  00765A  0100               	movlb	0	; () banked
 34792  00765C  6F64               	movwf	SwTimerStop@timerId& (0+255),b
 34793                           
 34794                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 34795  00765E  9EF2               	bcf	intcon,7,c	;volatile
 34796                           
 34797                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 34798  007660  5164               	movf	SwTimerStop@timerId& (0+255),w,b
 34799  007662  0D08               	mullw	8
 34800  007664  0E04               	movlw	low (_swTimers+4)
 34801  007666  24F3               	addwf	prodl,w,c
 34802  007668  6ED9               	movwf	fsr2l,c
 34803  00766A  0E03               	movlw	high (_swTimers+4)
 34804  00766C  20F4               	addwfc	prodh,w,c
 34805  00766E  6EDA               	movwf	fsr2h,c
 34806  007670  6ADF               	clrf	indf2,c
 34807                           
 34808                           ; BSR set to: 0
 34809                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 34810  007672  8EF2               	bsf	intcon,7,c	;volatile
 34811                           
 34812                           ; BSR set to: 0
 34813  007674  0C00               	retlw	0	;funcret
 34814  007676                     __end_of_SwTimerStop:
 34815                           	opt stack 0
 34816                           tosu	equ	0xFFF
 34817                           tosh	equ	0xFFE
 34818                           tosl	equ	0xFFD
 34819                           pclath	equ	0xFFA
 34820                           tblptru	equ	0xFF8
 34821                           tblptrh	equ	0xFF7
 34822                           tblptrl	equ	0xFF6
 34823                           tablat	equ	0xFF5
 34824                           prodh	equ	0xFF4
 34825                           prodl	equ	0xFF3
 34826                           intcon	equ	0xFF2
 34827                           indf0	equ	0xFEF
 34828                           postinc0	equ	0xFEE
 34829                           plusw0	equ	0xFEB
 34830                           fsr0h	equ	0xFEA
 34831                           fsr0l	equ	0xFE9
 34832                           wreg	equ	0xFE8
 34833                           postinc1	equ	0xFE6
 34834                           postdec1	equ	0xFE5
 34835                           plusw1	equ	0xFE3
 34836                           fsr1h	equ	0xFE2
 34837                           fsr1l	equ	0xFE1
 34838                           indf2	equ	0xFDF
 34839                           postinc2	equ	0xFDE
 34840                           postdec2	equ	0xFDD
 34841                           plusw2	equ	0xFDB
 34842                           fsr2h	equ	0xFDA
 34843                           fsr2l	equ	0xFD9
 34844                           status	equ	0xFD8
 34845                           
 34846 ;; *************** function _SwTimerStart *****************
 34847 ;; Defined at:
 34848 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34849 ;; Parameters:    Size  Location     Type
 34850 ;;  timerId         1    wreg     unsigned char 
 34851 ;; Auto vars:     Size  Location     Type
 34852 ;;  timerId         1   51[BANK0 ] unsigned char 
 34853 ;;  ticksRemaini    4   47[BANK0 ] unsigned long 
 34854 ;; Return value:  Size  Location     Type
 34855 ;;                  1    wreg      void 
 34856 ;; Registers used:
 34857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34858 ;; Tracked objects:
 34859 ;;		On entry : C/2
 34860 ;;		On exit  : F/0
 34861 ;;		Unchanged: 0/0
 34862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 34863 ;;      Params:         0       0       0       0       0       0       0       0       0
 34864 ;;      Locals:         0       5       0       0       0       0       0       0       0
 34865 ;;      Temps:          0       4       0       0       0       0       0       0       0
 34866 ;;      Totals:         0       9       0       0       0       0       0       0       0
 34867 ;;Total ram usage:        9 bytes
 34868 ;; Hardware stack levels used:    1
 34869 ;; Hardware stack levels required when called:   10
 34870 ;; This function calls:
 34871 ;;		_SwTimersInterrupt
 34872 ;;		_TMR_OverrideRemaining
 34873 ;; This function is called by:
 34874 ;;		_RADIO_Transmit
 34875 ;;		_RADIO_ReceiveStart
 34876 ;;		_LORAWAN_TxDone
 34877 ;;		_LORAWAN_RxTimeout
 34878 ;;		_StartReTxTimer
 34879 ;;		_DutyCycleCallback
 34880 ;;		_LORAWAN_Join
 34881 ;;		_LORAWAN_LinkCheckConfigure
 34882 ;;		_LORAWAN_LinkCheckCallback
 34883 ;;		_UpdateRetransmissionAckTimeoutState
 34884 ;;		_UpdateJoinSuccessState
 34885 ;; This function uses a non-reentrant model
 34886 ;;
 34887                           
 34888                           	psect	text184
 34889  005D54                     __ptext184:
 34890                           	opt stack 0
 34891  005D54                     _SwTimerStart:
 34892                           	opt stack 17
 34893                           
 34894                           ; BSR set to: 0
 34895                           ;incstack = 0
 34896                           ;SwTimerStart@timerId stored from wreg
 34897  005D54  0100               	movlb	0	; () banked
 34898  005D56  6F93               	movwf	SwTimerStart@timerId& (0+255),b
 34899                           
 34900                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 34901                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 34902  005D58  9EF2               	bcf	intcon,7,c	;volatile
 34903                           
 34904                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 34905  005D5A  ECD6  F025         	call	_SwTimersInterrupt	;wreg free
 34906  005D5E  C07A  F08F         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 34907  005D62  C07B  F090         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 34908  005D66  C07C  F091         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 34909  005D6A  C07D  F092         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 34910                           
 34911                           ; BSR set to: 0
 34912                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 34913  005D6E  5193               	movf	SwTimerStart@timerId& (0+255),w,b
 34914  005D70  0D08               	mullw	8
 34915  005D72  0E00               	movlw	low _swTimers
 34916  005D74  24F3               	addwf	prodl,w,c
 34917  005D76  6ED9               	movwf	fsr2l,c
 34918  005D78  0E03               	movlw	high _swTimers
 34919  005D7A  20F4               	addwfc	prodh,w,c
 34920  005D7C  6EDA               	movwf	fsr2h,c
 34921  005D7E  518F               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 34922  005D80  5CDE               	subwf	postinc2,w,c
 34923  005D82  5190               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 34924  005D84  58DE               	subwfb	postinc2,w,c
 34925  005D86  5191               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 34926  005D88  58DE               	subwfb	postinc2,w,c
 34927  005D8A  5192               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 34928  005D8C  58DE               	subwfb	postinc2,w,c
 34929  005D8E  E210               	bc	l12465
 34930                           
 34931                           ; BSR set to: 0
 34932                           ;sw_timer.c: 225: {
 34933                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 34934  005D90  5193               	movf	SwTimerStart@timerId& (0+255),w,b
 34935  005D92  0D08               	mullw	8
 34936  005D94  0E00               	movlw	low _swTimers
 34937  005D96  24F3               	addwf	prodl,w,c
 34938  005D98  6ED9               	movwf	fsr2l,c
 34939  005D9A  0E03               	movlw	high _swTimers
 34940  005D9C  20F4               	addwfc	prodh,w,c
 34941  005D9E  6EDA               	movwf	fsr2h,c
 34942  005DA0  CFDE F08F          	movff	postinc2,SwTimerStart@ticksRemaining
 34943  005DA4  CFDE F090          	movff	postinc2,SwTimerStart@ticksRemaining+1
 34944  005DA8  CFDE F091          	movff	postinc2,SwTimerStart@ticksRemaining+2
 34945  005DAC  CFDE F092          	movff	postinc2,SwTimerStart@ticksRemaining+3
 34946  005DB0                     l12465:
 34947                           
 34948                           ; BSR set to: 0
 34949                           ;sw_timer.c: 227: }
 34950                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 34951  005DB0  C08F  F06C         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 34952  005DB4  C090  F06D         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 34953  005DB8  C091  F06E         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 34954  005DBC  C092  F06F         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 34955  005DC0  EC6C  F030         	call	_TMR_OverrideRemaining	;wreg free
 34956                           
 34957                           ; BSR set to: 0
 34958                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 34959  005DC4  5193               	movf	SwTimerStart@timerId& (0+255),w,b
 34960  005DC6  0D08               	mullw	8
 34961  005DC8  0E04               	movlw	low (_swTimers+4)
 34962  005DCA  24F3               	addwf	prodl,w,c
 34963  005DCC  6ED9               	movwf	fsr2l,c
 34964  005DCE  0E03               	movlw	high (_swTimers+4)
 34965  005DD0  20F4               	addwfc	prodh,w,c
 34966  005DD2  6EDA               	movwf	fsr2h,c
 34967  005DD4  0E01               	movlw	1
 34968  005DD6  6EDF               	movwf	indf2,c
 34969                           
 34970                           ; BSR set to: 0
 34971                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 34972  005DD8  8EF2               	bsf	intcon,7,c	;volatile
 34973                           
 34974                           ; BSR set to: 0
 34975  005DDA  0C01               	retlw	1	;funcret
 34976  005DDC                     __end_of_SwTimerStart:
 34977                           	opt stack 0
 34978                           tosu	equ	0xFFF
 34979                           tosh	equ	0xFFE
 34980                           tosl	equ	0xFFD
 34981                           pclath	equ	0xFFA
 34982                           tblptru	equ	0xFF8
 34983                           tblptrh	equ	0xFF7
 34984                           tblptrl	equ	0xFF6
 34985                           tablat	equ	0xFF5
 34986                           prodh	equ	0xFF4
 34987                           prodl	equ	0xFF3
 34988                           intcon	equ	0xFF2
 34989                           indf0	equ	0xFEF
 34990                           postinc0	equ	0xFEE
 34991                           plusw0	equ	0xFEB
 34992                           fsr0h	equ	0xFEA
 34993                           fsr0l	equ	0xFE9
 34994                           wreg	equ	0xFE8
 34995                           postinc1	equ	0xFE6
 34996                           postdec1	equ	0xFE5
 34997                           plusw1	equ	0xFE3
 34998                           fsr1h	equ	0xFE2
 34999                           fsr1l	equ	0xFE1
 35000                           indf2	equ	0xFDF
 35001                           postinc2	equ	0xFDE
 35002                           postdec2	equ	0xFDD
 35003                           plusw2	equ	0xFDB
 35004                           fsr2h	equ	0xFDA
 35005                           fsr2l	equ	0xFD9
 35006                           status	equ	0xFD8
 35007                           
 35008 ;; *************** function _TMR_OverrideRemaining *****************
 35009 ;; Defined at:
 35010 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35011 ;; Parameters:    Size  Location     Type
 35012 ;;  ticksRemaini    4   12[BANK0 ] unsigned long 
 35013 ;; Auto vars:     Size  Location     Type
 35014 ;;  oldReloadVal    2   20[BANK0 ] unsigned int 
 35015 ;;  tmrVal          2   18[BANK0 ] unsigned int 
 35016 ;; Return value:  Size  Location     Type
 35017 ;;                  1    wreg      void 
 35018 ;; Registers used:
 35019 ;;		wreg, status,2, status,0, cstack
 35020 ;; Tracked objects:
 35021 ;;		On entry : F/0
 35022 ;;		On exit  : F/0
 35023 ;;		Unchanged: 0/0
 35024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 35025 ;;      Params:         0       4       0       0       0       0       0       0       0
 35026 ;;      Locals:         0       4       0       0       0       0       0       0       0
 35027 ;;      Temps:          0       2       0       0       0       0       0       0       0
 35028 ;;      Totals:         0      10       0       0       0       0       0       0       0
 35029 ;;Total ram usage:       10 bytes
 35030 ;; Hardware stack levels used:    1
 35031 ;; Hardware stack levels required when called:    9
 35032 ;; This function calls:
 35033 ;;		_TMR_SwapTimer
 35034 ;; This function is called by:
 35035 ;;		_SwTimerStart
 35036 ;; This function uses a non-reentrant model
 35037 ;;
 35038                           
 35039                           	psect	text185
 35040  0060D8                     __ptext185:
 35041                           	opt stack 0
 35042  0060D8                     _TMR_OverrideRemaining:
 35043                           	opt stack 17
 35044                           
 35045                           ; BSR set to: 0
 35046                           ;sw_timer.c: 67: uint16_t tmrVal;
 35047                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 35048                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 35049                           
 35050                           ; BSR set to: 0
 35051                           ;incstack = 0
 35052  0060D8  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35053  0060DA  105C               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35054  0060DC  105B               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35055  0060DE  E104               	bnz	u12920
 35056  0060E0  0E0B               	movlw	11
 35057  0060E2  5C5A               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 35058  0060E4  A0D8               	btfss	status,0,c
 35059  0060E6  0012               	return	
 35060  0060E8                     u12920:
 35061                           
 35062                           ; BSR set to: 0
 35063                           ;sw_timer.c: 72: {
 35064                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 35065  0060E8  505A               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 35066  0060EA  5D6C               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35067  0060EC  505B               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35068  0060EE  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35069  0060F0  505C               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35070  0060F2  596E               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 35071  0060F4  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35072  0060F6  596F               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 35073  0060F8  B0D8               	btfsc	status,0,c
 35074  0060FA  0012               	return	
 35075                           
 35076                           ; BSR set to: 0
 35077                           ;sw_timer.c: 74: {
 35078                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 35079  0060FC  C06C  F05A         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 35080  006100  C06D  F05B         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 35081  006104  C06E  F05C         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 35082  006108  C06F  F05D         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 35083                           
 35084                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 35085  00610C  C044  F074         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 35086  006110  C045  F075         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 35087                           
 35088                           ; BSR set to: 0
 35089                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 35090  006114  516C               	movf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35091  006116  0800               	sublw	0
 35092  006118  6E44               	movwf	_reloadVal,c	;volatile
 35093  00611A  516D               	movf	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35094  00611C  A0D8               	btfss	status,0,c
 35095  00611E  2AE8               	incf	wreg,f,c
 35096  006120  0800               	sublw	0
 35097  006122  6E45               	movwf	_reloadVal+1,c	;volatile
 35098                           
 35099                           ; BSR set to: 0
 35100                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 35101  006124  C044  F06A         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 35102  006128  C045  F06B         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 35103  00612C  EC64  F037         	call	_TMR_SwapTimer	;wreg free
 35104  006130  C06A  F072         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 35105  006134  C06B  F073         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 35106                           
 35107                           ; BSR set to: 0
 35108                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 35109  006138  5174               	movf	TMR_OverrideRemaining@oldReloadVal& (0+255),w,b
 35110  00613A  5D72               	subwf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 35111  00613C  6F70               	movwf	??_TMR_OverrideRemaining& (0+255),b
 35112  00613E  5175               	movf	(TMR_OverrideRemaining@oldReloadVal+1)& (0+255),w,b
 35113  006140  5973               	subwfb	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 35114  006142  6F71               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),b
 35115  006144  5170               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 35116  006146  2638               	addwf	_ticksAdded,f,c	;volatile
 35117  006148  5171               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 35118  00614A  2239               	addwfc	_ticksAdded+1,f,c	;volatile
 35119  00614C  0E00               	movlw	0
 35120  00614E  223A               	addwfc	_ticksAdded+2,f,c	;volatile
 35121  006150  223B               	addwfc	_ticksAdded+3,f,c	;volatile
 35122                           
 35123                           ; BSR set to: 0
 35124  006152  0C00               	retlw	0	;funcret
 35125  006154                     __end_of_TMR_OverrideRemaining:
 35126                           	opt stack 0
 35127                           tosu	equ	0xFFF
 35128                           tosh	equ	0xFFE
 35129                           tosl	equ	0xFFD
 35130                           pclath	equ	0xFFA
 35131                           tblptru	equ	0xFF8
 35132                           tblptrh	equ	0xFF7
 35133                           tblptrl	equ	0xFF6
 35134                           tablat	equ	0xFF5
 35135                           prodh	equ	0xFF4
 35136                           prodl	equ	0xFF3
 35137                           intcon	equ	0xFF2
 35138                           indf0	equ	0xFEF
 35139                           postinc0	equ	0xFEE
 35140                           plusw0	equ	0xFEB
 35141                           fsr0h	equ	0xFEA
 35142                           fsr0l	equ	0xFE9
 35143                           wreg	equ	0xFE8
 35144                           postinc1	equ	0xFE6
 35145                           postdec1	equ	0xFE5
 35146                           plusw1	equ	0xFE3
 35147                           fsr1h	equ	0xFE2
 35148                           fsr1l	equ	0xFE1
 35149                           indf2	equ	0xFDF
 35150                           postinc2	equ	0xFDE
 35151                           postdec2	equ	0xFDD
 35152                           plusw2	equ	0xFDB
 35153                           fsr2h	equ	0xFDA
 35154                           fsr2l	equ	0xFD9
 35155                           status	equ	0xFD8
 35156                           
 35157 ;; *************** function _TMR_SwapTimer *****************
 35158 ;; Defined at:
 35159 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35160 ;; Parameters:    Size  Location     Type
 35161 ;;  timerVal        2   10[BANK0 ] unsigned int 
 35162 ;; Auto vars:     Size  Location     Type
 35163 ;;		None
 35164 ;; Return value:  Size  Location     Type
 35165 ;;                  2   10[BANK0 ] unsigned int 
 35166 ;; Registers used:
 35167 ;;		wreg, status,2, status,0, cstack
 35168 ;; Tracked objects:
 35169 ;;		On entry : F/0
 35170 ;;		On exit  : F/0
 35171 ;;		Unchanged: 0/0
 35172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 35173 ;;      Params:         0       2       0       0       0       0       0       0       0
 35174 ;;      Locals:         0       0       0       0       0       0       0       0       0
 35175 ;;      Temps:          0       0       0       0       0       0       0       0       0
 35176 ;;      Totals:         0       2       0       0       0       0       0       0       0
 35177 ;;Total ram usage:        2 bytes
 35178 ;; Hardware stack levels used:    1
 35179 ;; Hardware stack levels required when called:    8
 35180 ;; This function calls:
 35181 ;;		_TMR1_ReadTimer
 35182 ;;		_TMR1_WriteTimer
 35183 ;; This function is called by:
 35184 ;;		_TMR_OverrideRemaining
 35185 ;; This function uses a non-reentrant model
 35186 ;;
 35187                           
 35188                           	psect	text186
 35189  006EC8                     __ptext186:
 35190                           	opt stack 0
 35191  006EC8                     _TMR_SwapTimer:
 35192                           	opt stack 17
 35193                           
 35194                           ; BSR set to: 0
 35195                           ;sw_timer.c: 114: static uint16_t oldVal;
 35196                           ;sw_timer.c: 115: static uint16_t retVal;
 35197                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 35198                           
 35199                           ; BSR set to: 0
 35200                           ;incstack = 0
 35201  006EC8  EC87  F03A         	call	_TMR1_ReadTimer	;wreg free
 35202  006ECC  C064  F040         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 35203  006ED0  C065  F041         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 35204  006ED4                     l11943:
 35205                           
 35206                           ; BSR set to: 0
 35207  006ED4  EC87  F03A         	call	_TMR1_ReadTimer	;wreg free
 35208  006ED8  5040               	movf	TMR_SwapTimer@oldVal,w,c
 35209  006EDA  1964               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 35210  006EDC  E103               	bnz	u12700
 35211  006EDE  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 35212  006EE0  1965               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 35213  006EE2  E0F8               	bz	l11943
 35214  006EE4                     u12700:
 35215                           
 35216                           ; BSR set to: 0
 35217                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 35218  006EE4  C06A  F064         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 35219  006EE8  C06B  F065         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 35220  006EEC  EC3B  F03B         	call	_TMR1_WriteTimer	;wreg free
 35221                           
 35222                           ; BSR set to: 0
 35223                           ;sw_timer.c: 128: oldVal++;
 35224  006EF0  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 35225  006EF2  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 35226                           
 35227                           ; BSR set to: 0
 35228                           ;sw_timer.c: 130: retVal = oldVal;
 35229  006EF4  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 35230  006EF8  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 35231                           
 35232                           ; BSR set to: 0
 35233                           ;sw_timer.c: 132: return retVal;
 35234  006EFC  C042  F06A         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 35235  006F00  C043  F06B         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 35236                           
 35237                           ; BSR set to: 0
 35238  006F04  0012               	return		;funcret
 35239  006F06                     __end_of_TMR_SwapTimer:
 35240                           	opt stack 0
 35241                           tosu	equ	0xFFF
 35242                           tosh	equ	0xFFE
 35243                           tosl	equ	0xFFD
 35244                           pclath	equ	0xFFA
 35245                           tblptru	equ	0xFF8
 35246                           tblptrh	equ	0xFF7
 35247                           tblptrl	equ	0xFF6
 35248                           tablat	equ	0xFF5
 35249                           prodh	equ	0xFF4
 35250                           prodl	equ	0xFF3
 35251                           intcon	equ	0xFF2
 35252                           indf0	equ	0xFEF
 35253                           postinc0	equ	0xFEE
 35254                           plusw0	equ	0xFEB
 35255                           fsr0h	equ	0xFEA
 35256                           fsr0l	equ	0xFE9
 35257                           wreg	equ	0xFE8
 35258                           postinc1	equ	0xFE6
 35259                           postdec1	equ	0xFE5
 35260                           plusw1	equ	0xFE3
 35261                           fsr1h	equ	0xFE2
 35262                           fsr1l	equ	0xFE1
 35263                           indf2	equ	0xFDF
 35264                           postinc2	equ	0xFDE
 35265                           postdec2	equ	0xFDD
 35266                           plusw2	equ	0xFDB
 35267                           fsr2h	equ	0xFDA
 35268                           fsr2l	equ	0xFD9
 35269                           status	equ	0xFD8
 35270                           
 35271 ;; *************** function _TMR1_WriteTimer *****************
 35272 ;; Defined at:
 35273 ;;		line 122 in file "mcc_generated_files/tmr1.c"
 35274 ;; Parameters:    Size  Location     Type
 35275 ;;  timerVal        2    4[BANK0 ] unsigned int 
 35276 ;; Auto vars:     Size  Location     Type
 35277 ;;		None
 35278 ;; Return value:  Size  Location     Type
 35279 ;;                  1    wreg      void 
 35280 ;; Registers used:
 35281 ;;		None
 35282 ;; Tracked objects:
 35283 ;;		On entry : F/0
 35284 ;;		On exit  : F/0
 35285 ;;		Unchanged: F/0
 35286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 35287 ;;      Params:         0       2       0       0       0       0       0       0       0
 35288 ;;      Locals:         0       0       0       0       0       0       0       0       0
 35289 ;;      Temps:          0       0       0       0       0       0       0       0       0
 35290 ;;      Totals:         0       2       0       0       0       0       0       0       0
 35291 ;;Total ram usage:        2 bytes
 35292 ;; Hardware stack levels used:    1
 35293 ;; Hardware stack levels required when called:    7
 35294 ;; This function calls:
 35295 ;;		Nothing
 35296 ;; This function is called by:
 35297 ;;		_TMR_SwapTimer
 35298 ;; This function uses a non-reentrant model
 35299 ;;
 35300                           
 35301                           	psect	text187
 35302  007676                     __ptext187:
 35303                           	opt stack 0
 35304  007676                     _TMR1_WriteTimer:
 35305                           	opt stack 17
 35306                           
 35307                           ; BSR set to: 0
 35308                           ;tmr1.c: 124: if (T1CONbits.nT1SYNC == 1)
 35309                           
 35310                           ; BSR set to: 0
 35311                           ;incstack = 0
 35312  007676  A4CF               	btfss	4047,2,c	;volatile
 35313  007678  D007               	goto	l1368
 35314                           
 35315                           ; BSR set to: 0
 35316                           ;tmr1.c: 125: {
 35317                           ;tmr1.c: 127: T1CONbits.TMR1ON = 0;
 35318  00767A  90CF               	bcf	4047,0,c	;volatile
 35319                           
 35320                           ;tmr1.c: 130: TMR1H = (timerVal >> 8);
 35321  00767C  C065  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35322                           
 35323                           ;tmr1.c: 131: TMR1L = timerVal;
 35324  007680  C064  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35325                           
 35326                           ;tmr1.c: 134: T1CONbits.TMR1ON =1;
 35327  007684  80CF               	bsf	4047,0,c	;volatile
 35328                           
 35329                           ;tmr1.c: 135: }
 35330  007686  0012               	return	
 35331  007688                     l1368:
 35332                           
 35333                           ; BSR set to: 0
 35334                           ;tmr1.c: 136: else
 35335                           ;tmr1.c: 137: {
 35336                           ;tmr1.c: 139: TMR1H = (timerVal >> 8);
 35337  007688  C065  FFCE         	movff	TMR1_WriteTimer@timerVal+1,4046	;volatile
 35338                           
 35339                           ;tmr1.c: 140: TMR1L = timerVal;
 35340  00768C  C064  FFCD         	movff	TMR1_WriteTimer@timerVal,4045	;volatile
 35341                           
 35342                           ; BSR set to: 0
 35343  007690  0012               	return		;funcret
 35344  007692                     __end_of_TMR1_WriteTimer:
 35345                           	opt stack 0
 35346                           tosu	equ	0xFFF
 35347                           tosh	equ	0xFFE
 35348                           tosl	equ	0xFFD
 35349                           pclath	equ	0xFFA
 35350                           tblptru	equ	0xFF8
 35351                           tblptrh	equ	0xFF7
 35352                           tblptrl	equ	0xFF6
 35353                           tablat	equ	0xFF5
 35354                           prodh	equ	0xFF4
 35355                           prodl	equ	0xFF3
 35356                           intcon	equ	0xFF2
 35357                           indf0	equ	0xFEF
 35358                           postinc0	equ	0xFEE
 35359                           plusw0	equ	0xFEB
 35360                           fsr0h	equ	0xFEA
 35361                           fsr0l	equ	0xFE9
 35362                           wreg	equ	0xFE8
 35363                           postinc1	equ	0xFE6
 35364                           postdec1	equ	0xFE5
 35365                           plusw1	equ	0xFE3
 35366                           fsr1h	equ	0xFE2
 35367                           fsr1l	equ	0xFE1
 35368                           indf2	equ	0xFDF
 35369                           postinc2	equ	0xFDE
 35370                           postdec2	equ	0xFDD
 35371                           plusw2	equ	0xFDB
 35372                           fsr2h	equ	0xFDA
 35373                           fsr2l	equ	0xFD9
 35374                           status	equ	0xFD8
 35375                           
 35376 ;; *************** function _SwTimersInterrupt *****************
 35377 ;; Defined at:
 35378 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35379 ;; Parameters:    Size  Location     Type
 35380 ;;		None
 35381 ;; Auto vars:     Size  Location     Type
 35382 ;;  ticksToNextT    4   38[BANK0 ] unsigned long 
 35383 ;;  timeElapsed     4   34[BANK0 ] unsigned long 
 35384 ;;  i               1   42[BANK0 ] unsigned char 
 35385 ;; Return value:  Size  Location     Type
 35386 ;;                  4   26[BANK0 ] unsigned long 
 35387 ;; Registers used:
 35388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35389 ;; Tracked objects:
 35390 ;;		On entry : 0/0
 35391 ;;		On exit  : F/0
 35392 ;;		Unchanged: 0/0
 35393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 35394 ;;      Params:         0       4       0       0       0       0       0       0       0
 35395 ;;      Locals:         0       9       0       0       0       0       0       0       0
 35396 ;;      Temps:          0       4       0       0       0       0       0       0       0
 35397 ;;      Totals:         0      17       0       0       0       0       0       0       0
 35398 ;;Total ram usage:       17 bytes
 35399 ;; Hardware stack levels used:    1
 35400 ;; Hardware stack levels required when called:    9
 35401 ;; This function calls:
 35402 ;;		_TMR_GetDeltaTime
 35403 ;; This function is called by:
 35404 ;;		_SwTimerReadValue
 35405 ;;		_SwTimerStart
 35406 ;; This function uses a non-reentrant model
 35407 ;;
 35408                           
 35409                           	psect	text188
 35410  004BAC                     __ptext188:
 35411                           	opt stack 0
 35412  004BAC                     _SwTimersInterrupt:
 35413                           	opt stack 17
 35414                           
 35415                           ;sw_timer.c: 289: uint8_t i;
 35416                           ;sw_timer.c: 290: uint32_t timeElapsed;
 35417                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 35418                           
 35419                           ; BSR set to: 0
 35420                           ;incstack = 0
 35421  004BAC  0100               	movlb	0	; () banked
 35422  004BAE  6986               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 35423  004BB0  6987               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 35424  004BB2  6988               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 35425  004BB4  6989               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 35426                           
 35427                           ; BSR set to: 0
 35428                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 35429  004BB6  ECC6  F026         	call	_TMR_GetDeltaTime	;wreg free
 35430  004BBA  C06A  F082         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 35431  004BBE  C06B  F083         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 35432  004BC2  C06C  F084         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 35433  004BC6  C06D  F085         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 35434                           
 35435                           ; BSR set to: 0
 35436                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 35437  004BCA  6B8A               	clrf	SwTimersInterrupt@i& (0+255),b
 35438  004BCC  D05A               	goto	l12189
 35439  004BCE                     l12177:
 35440                           
 35441                           ; BSR set to: 0
 35442                           ;sw_timer.c: 298: {
 35443                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 35444  004BCE  518A               	movf	SwTimersInterrupt@i& (0+255),w,b
 35445  004BD0  0D08               	mullw	8
 35446  004BD2  0E04               	movlw	low (_swTimers+4)
 35447  004BD4  24F3               	addwf	prodl,w,c
 35448  004BD6  6ED9               	movwf	fsr2l,c
 35449  004BD8  0E03               	movlw	high (_swTimers+4)
 35450  004BDA  20F4               	addwfc	prodh,w,c
 35451  004BDC  6EDA               	movwf	fsr2h,c
 35452  004BDE  04DE               	decf	postinc2,w,c
 35453  004BE0  E14F               	bnz	l12187
 35454                           
 35455                           ; BSR set to: 0
 35456                           ;sw_timer.c: 302: {
 35457                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 35458  004BE2  518A               	movf	SwTimersInterrupt@i& (0+255),w,b
 35459  004BE4  0D08               	mullw	8
 35460  004BE6  0E00               	movlw	low _swTimers
 35461  004BE8  24F3               	addwf	prodl,w,c
 35462  004BEA  6ED9               	movwf	fsr2l,c
 35463  004BEC  0E03               	movlw	high _swTimers
 35464  004BEE  20F4               	addwfc	prodh,w,c
 35465  004BF0  6EDA               	movwf	fsr2h,c
 35466  004BF2  50DE               	movf	postinc2,w,c
 35467  004BF4  5D82               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35468  004BF6  50DE               	movf	postinc2,w,c
 35469  004BF8  5983               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35470  004BFA  50DE               	movf	postinc2,w,c
 35471  004BFC  5984               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35472  004BFE  50DE               	movf	postinc2,w,c
 35473  004C00  5985               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35474  004C02  E30D               	bnc	l12183
 35475                           
 35476                           ; BSR set to: 0
 35477                           ;sw_timer.c: 304: {
 35478                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 35479  004C04  518A               	movf	SwTimersInterrupt@i& (0+255),w,b
 35480  004C06  0D08               	mullw	8
 35481  004C08  0E00               	movlw	low _swTimers
 35482  004C0A  24F3               	addwf	prodl,w,c
 35483  004C0C  6ED9               	movwf	fsr2l,c
 35484  004C0E  0E03               	movlw	high _swTimers
 35485  004C10  20F4               	addwfc	prodh,w,c
 35486  004C12  6EDA               	movwf	fsr2h,c
 35487  004C14  6ADE               	clrf	postinc2,c
 35488  004C16  6ADE               	clrf	postinc2,c
 35489  004C18  6ADE               	clrf	postinc2,c
 35490  004C1A  6ADD               	clrf	postdec2,c
 35491                           
 35492                           ;sw_timer.c: 306: }
 35493  004C1C  D031               	goto	l12187
 35494  004C1E                     l12183:
 35495                           
 35496                           ; BSR set to: 0
 35497                           ;sw_timer.c: 307: else
 35498                           ;sw_timer.c: 308: {
 35499                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 35500  004C1E  518A               	movf	SwTimersInterrupt@i& (0+255),w,b
 35501  004C20  0D08               	mullw	8
 35502  004C22  0E00               	movlw	low _swTimers
 35503  004C24  24F3               	addwf	prodl,w,c
 35504  004C26  6ED9               	movwf	fsr2l,c
 35505  004C28  0E03               	movlw	high _swTimers
 35506  004C2A  20F4               	addwfc	prodh,w,c
 35507  004C2C  6EDA               	movwf	fsr2h,c
 35508  004C2E  5182               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35509  004C30  5EDE               	subwf	postinc2,f,c
 35510  004C32  5183               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35511  004C34  5ADE               	subwfb	postinc2,f,c
 35512  004C36  5184               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35513  004C38  5ADE               	subwfb	postinc2,f,c
 35514  004C3A  5185               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35515  004C3C  5ADE               	subwfb	postinc2,f,c
 35516                           
 35517                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 35518  004C3E  518A               	movf	SwTimersInterrupt@i& (0+255),w,b
 35519  004C40  0D08               	mullw	8
 35520  004C42  0E00               	movlw	low _swTimers
 35521  004C44  24F3               	addwf	prodl,w,c
 35522  004C46  6ED9               	movwf	fsr2l,c
 35523  004C48  0E03               	movlw	high _swTimers
 35524  004C4A  20F4               	addwfc	prodh,w,c
 35525  004C4C  6EDA               	movwf	fsr2h,c
 35526  004C4E  5186               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 35527  004C50  5CDE               	subwf	postinc2,w,c
 35528  004C52  5187               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 35529  004C54  58DE               	subwfb	postinc2,w,c
 35530  004C56  5188               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 35531  004C58  58DE               	subwfb	postinc2,w,c
 35532  004C5A  5189               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 35533  004C5C  58DE               	subwfb	postinc2,w,c
 35534  004C5E  E210               	bc	l12187
 35535                           
 35536                           ; BSR set to: 0
 35537                           ;sw_timer.c: 313: {
 35538                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 35539  004C60  518A               	movf	SwTimersInterrupt@i& (0+255),w,b
 35540  004C62  0D08               	mullw	8
 35541  004C64  0E00               	movlw	low _swTimers
 35542  004C66  24F3               	addwf	prodl,w,c
 35543  004C68  6ED9               	movwf	fsr2l,c
 35544  004C6A  0E03               	movlw	high _swTimers
 35545  004C6C  20F4               	addwfc	prodh,w,c
 35546  004C6E  6EDA               	movwf	fsr2h,c
 35547  004C70  CFDE F086          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 35548  004C74  CFDE F087          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 35549  004C78  CFDE F088          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 35550  004C7C  CFDE F089          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 35551  004C80                     l12187:
 35552                           
 35553                           ; BSR set to: 0
 35554  004C80  2B8A               	incf	SwTimersInterrupt@i& (0+255),f,b
 35555  004C82                     l12189:
 35556                           
 35557                           ; BSR set to: 0
 35558  004C82  0101               	movlb	1	; () banked
 35559  004C84  5177               	movf	_allocatedTimers& (0+255),w,b	;volatile
 35560  004C86  0100               	movlb	0	; () banked
 35561  004C88  5D8A               	subwf	SwTimersInterrupt@i& (0+255),w,b
 35562  004C8A  E3A1               	bnc	l12177
 35563                           
 35564                           ; BSR set to: 0
 35565                           ;sw_timer.c: 315: }
 35566                           ;sw_timer.c: 316: }
 35567                           ;sw_timer.c: 317: }
 35568                           ;sw_timer.c: 318: }
 35569                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 35570  004C8C  C086  F07A         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 35571  004C90  C087  F07B         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 35572  004C94  C088  F07C         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 35573  004C98  C089  F07D         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 35574                           
 35575                           ; BSR set to: 0
 35576  004C9C  0012               	return		;funcret
 35577  004C9E                     __end_of_SwTimersInterrupt:
 35578                           	opt stack 0
 35579                           tosu	equ	0xFFF
 35580                           tosh	equ	0xFFE
 35581                           tosl	equ	0xFFD
 35582                           pclath	equ	0xFFA
 35583                           tblptru	equ	0xFF8
 35584                           tblptrh	equ	0xFF7
 35585                           tblptrl	equ	0xFF6
 35586                           tablat	equ	0xFF5
 35587                           prodh	equ	0xFF4
 35588                           prodl	equ	0xFF3
 35589                           intcon	equ	0xFF2
 35590                           indf0	equ	0xFEF
 35591                           postinc0	equ	0xFEE
 35592                           plusw0	equ	0xFEB
 35593                           fsr0h	equ	0xFEA
 35594                           fsr0l	equ	0xFE9
 35595                           wreg	equ	0xFE8
 35596                           postinc1	equ	0xFE6
 35597                           postdec1	equ	0xFE5
 35598                           plusw1	equ	0xFE3
 35599                           fsr1h	equ	0xFE2
 35600                           fsr1l	equ	0xFE1
 35601                           indf2	equ	0xFDF
 35602                           postinc2	equ	0xFDE
 35603                           postdec2	equ	0xFDD
 35604                           plusw2	equ	0xFDB
 35605                           fsr2h	equ	0xFDA
 35606                           fsr2l	equ	0xFD9
 35607                           status	equ	0xFD8
 35608                           
 35609 ;; *************** function _TMR_GetDeltaTime *****************
 35610 ;; Defined at:
 35611 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35612 ;; Parameters:    Size  Location     Type
 35613 ;;		None
 35614 ;; Auto vars:     Size  Location     Type
 35615 ;;		None
 35616 ;; Return value:  Size  Location     Type
 35617 ;;                  4   10[BANK0 ] unsigned long 
 35618 ;; Registers used:
 35619 ;;		wreg, status,2, status,0, cstack
 35620 ;; Tracked objects:
 35621 ;;		On entry : F/0
 35622 ;;		On exit  : F/0
 35623 ;;		Unchanged: 0/0
 35624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 35625 ;;      Params:         0       4       0       0       0       0       0       0       0
 35626 ;;      Locals:         0       0       0       0       0       0       0       0       0
 35627 ;;      Temps:          0      12       0       0       0       0       0       0       0
 35628 ;;      Totals:         0      16       0       0       0       0       0       0       0
 35629 ;;Total ram usage:       16 bytes
 35630 ;; Hardware stack levels used:    1
 35631 ;; Hardware stack levels required when called:    8
 35632 ;; This function calls:
 35633 ;;		_TMR1_ReadTimer
 35634 ;; This function is called by:
 35635 ;;		_SwTimersInterrupt
 35636 ;; This function uses a non-reentrant model
 35637 ;;
 35638                           
 35639                           	psect	text189
 35640  004D8C                     __ptext189:
 35641                           	opt stack 0
 35642  004D8C                     _TMR_GetDeltaTime:
 35643                           	opt stack 17
 35644                           
 35645                           ; BSR set to: 0
 35646                           ;sw_timer.c: 90: static uint32_t retVal;
 35647                           ;sw_timer.c: 91: static uint16_t tmrVal;
 35648                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 35649                           
 35650                           ; BSR set to: 0
 35651                           ;incstack = 0
 35652  004D8C  EC87  F03A         	call	_TMR1_ReadTimer	;wreg free
 35653  004D90  C064  F03E         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 35654  004D94  C065  F03F         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 35655                           
 35656                           ; BSR set to: 0
 35657                           ;sw_timer.c: 95: if (timerOverflow == 1)
 35658  004D98  0449               	decf	_timerOverflow,w,c	;volatile
 35659  004D9A  E13D               	bnz	l11969
 35660                           
 35661                           ; BSR set to: 0
 35662                           ;sw_timer.c: 96: {
 35663                           ;sw_timer.c: 97: timerOverflow = 0;
 35664  004D9C  6A49               	clrf	_timerOverflow,c	;volatile
 35665                           
 35666                           ; BSR set to: 0
 35667                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 35668  004D9E  5044               	movf	_reloadVal,w,c	;volatile
 35669  004DA0  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 35670  004DA2  6F6E               	movwf	??_TMR_GetDeltaTime& (0+255),b
 35671  004DA4  5045               	movf	_reloadVal+1,w,c	;volatile
 35672  004DA6  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 35673  004DA8  6F6F               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 35674  004DAA  6B70               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 35675  004DAC  A0D8               	btfss	status,0,c
 35676  004DAE  0770               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 35677  004DB0  5170               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 35678  004DB2  6F71               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),b
 35679  004DB4  5034               	movf	_ticksAccounted,w,c	;volatile
 35680  004DB6  5D6E               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 35681  004DB8  6F72               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 35682  004DBA  5035               	movf	_ticksAccounted+1,w,c	;volatile
 35683  004DBC  596F               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 35684  004DBE  6F73               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 35685  004DC0  5036               	movf	_ticksAccounted+2,w,c	;volatile
 35686  004DC2  5970               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 35687  004DC4  6F74               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 35688  004DC6  5037               	movf	_ticksAccounted+3,w,c	;volatile
 35689  004DC8  5971               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 35690  004DCA  6F75               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 35691  004DCC  5038               	movf	_ticksAdded,w,c	;volatile
 35692  004DCE  2572               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 35693  004DD0  6F76               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 35694  004DD2  5039               	movf	_ticksAdded+1,w,c	;volatile
 35695  004DD4  2173               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 35696  004DD6  6F77               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 35697  004DD8  503A               	movf	_ticksAdded+2,w,c	;volatile
 35698  004DDA  2174               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 35699  004DDC  6F78               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 35700  004DDE  503B               	movf	_ticksAdded+3,w,c	;volatile
 35701  004DE0  2175               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 35702  004DE2  6F79               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 35703  004DE4  0E00               	movlw	0
 35704  004DE6  2576               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 35705  004DE8  6E30               	movwf	TMR_GetDeltaTime@retVal,c
 35706  004DEA  0E00               	movlw	0
 35707  004DEC  2177               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 35708  004DEE  6E31               	movwf	TMR_GetDeltaTime@retVal+1,c
 35709  004DF0  0E01               	movlw	1
 35710  004DF2  2178               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 35711  004DF4  6E32               	movwf	TMR_GetDeltaTime@retVal+2,c
 35712  004DF6  0E00               	movlw	0
 35713  004DF8  2179               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 35714  004DFA  6E33               	movwf	TMR_GetDeltaTime@retVal+3,c
 35715                           
 35716                           ; BSR set to: 0
 35717                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 35718  004DFC  C03E  F034         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 35719  004E00  C03F  F035         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 35720  004E04  6A36               	clrf	_ticksAccounted+2,c	;volatile
 35721  004E06  6A37               	clrf	_ticksAccounted+3,c	;volatile
 35722                           
 35723                           ; BSR set to: 0
 35724                           ;sw_timer.c: 100: ticksAdded = 0;
 35725  004E08  6A38               	clrf	_ticksAdded,c	;volatile
 35726  004E0A  6A39               	clrf	_ticksAdded+1,c	;volatile
 35727  004E0C  6A3A               	clrf	_ticksAdded+2,c	;volatile
 35728  004E0E  6A3B               	clrf	_ticksAdded+3,c	;volatile
 35729                           
 35730                           ; BSR set to: 0
 35731                           ;sw_timer.c: 101: reloadVal = 0;
 35732  004E10  6A44               	clrf	_reloadVal,c	;volatile
 35733  004E12  6A45               	clrf	_reloadVal+1,c	;volatile
 35734                           
 35735                           ;sw_timer.c: 102: }
 35736  004E14  D028               	goto	l11971
 35737  004E16                     l11969:
 35738                           
 35739                           ; BSR set to: 0
 35740                           ;sw_timer.c: 103: else
 35741                           ;sw_timer.c: 104: {
 35742                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 35743  004E16  5044               	movf	_reloadVal,w,c	;volatile
 35744  004E18  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 35745  004E1A  6F6E               	movwf	??_TMR_GetDeltaTime& (0+255),b
 35746  004E1C  5045               	movf	_reloadVal+1,w,c	;volatile
 35747  004E1E  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 35748  004E20  6F6F               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 35749  004E22  6B70               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 35750  004E24  6B71               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),b
 35751  004E26  5034               	movf	_ticksAccounted,w,c	;volatile
 35752  004E28  5D6E               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 35753  004E2A  6F72               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 35754  004E2C  5035               	movf	_ticksAccounted+1,w,c	;volatile
 35755  004E2E  596F               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 35756  004E30  6F73               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 35757  004E32  5036               	movf	_ticksAccounted+2,w,c	;volatile
 35758  004E34  5970               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 35759  004E36  6F74               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 35760  004E38  5037               	movf	_ticksAccounted+3,w,c	;volatile
 35761  004E3A  5971               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 35762  004E3C  6F75               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 35763  004E3E  5038               	movf	_ticksAdded,w,c	;volatile
 35764  004E40  2572               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 35765  004E42  6E30               	movwf	TMR_GetDeltaTime@retVal,c
 35766  004E44  5039               	movf	_ticksAdded+1,w,c	;volatile
 35767  004E46  2173               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 35768  004E48  6E31               	movwf	TMR_GetDeltaTime@retVal+1,c
 35769  004E4A  503A               	movf	_ticksAdded+2,w,c	;volatile
 35770  004E4C  2174               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 35771  004E4E  6E32               	movwf	TMR_GetDeltaTime@retVal+2,c
 35772  004E50  503B               	movf	_ticksAdded+3,w,c	;volatile
 35773  004E52  2175               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 35774  004E54  6E33               	movwf	TMR_GetDeltaTime@retVal+3,c
 35775                           
 35776                           ;sw_timer.c: 106: ticksAccounted += retVal;
 35777  004E56  5030               	movf	TMR_GetDeltaTime@retVal,w,c
 35778  004E58  2634               	addwf	_ticksAccounted,f,c	;volatile
 35779  004E5A  5031               	movf	TMR_GetDeltaTime@retVal+1,w,c
 35780  004E5C  2235               	addwfc	_ticksAccounted+1,f,c	;volatile
 35781  004E5E  5032               	movf	TMR_GetDeltaTime@retVal+2,w,c
 35782  004E60  2236               	addwfc	_ticksAccounted+2,f,c	;volatile
 35783  004E62  5033               	movf	TMR_GetDeltaTime@retVal+3,w,c
 35784  004E64  2237               	addwfc	_ticksAccounted+3,f,c	;volatile
 35785  004E66                     l11971:
 35786                           
 35787                           ; BSR set to: 0
 35788                           ;sw_timer.c: 107: }
 35789                           ;sw_timer.c: 109: return retVal;
 35790  004E66  C030  F06A         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 35791  004E6A  C031  F06B         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 35792  004E6E  C032  F06C         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 35793  004E72  C033  F06D         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 35794                           
 35795                           ; BSR set to: 0
 35796  004E76  0012               	return		;funcret
 35797  004E78                     __end_of_TMR_GetDeltaTime:
 35798                           	opt stack 0
 35799                           tosu	equ	0xFFF
 35800                           tosh	equ	0xFFE
 35801                           tosl	equ	0xFFD
 35802                           pclath	equ	0xFFA
 35803                           tblptru	equ	0xFF8
 35804                           tblptrh	equ	0xFF7
 35805                           tblptrl	equ	0xFF6
 35806                           tablat	equ	0xFF5
 35807                           prodh	equ	0xFF4
 35808                           prodl	equ	0xFF3
 35809                           intcon	equ	0xFF2
 35810                           indf0	equ	0xFEF
 35811                           postinc0	equ	0xFEE
 35812                           plusw0	equ	0xFEB
 35813                           fsr0h	equ	0xFEA
 35814                           fsr0l	equ	0xFE9
 35815                           wreg	equ	0xFE8
 35816                           postinc1	equ	0xFE6
 35817                           postdec1	equ	0xFE5
 35818                           plusw1	equ	0xFE3
 35819                           fsr1h	equ	0xFE2
 35820                           fsr1l	equ	0xFE1
 35821                           indf2	equ	0xFDF
 35822                           postinc2	equ	0xFDE
 35823                           postdec2	equ	0xFDD
 35824                           plusw2	equ	0xFDB
 35825                           fsr2h	equ	0xFDA
 35826                           fsr2l	equ	0xFD9
 35827                           status	equ	0xFD8
 35828                           
 35829 ;; *************** function _TMR1_ReadTimer *****************
 35830 ;; Defined at:
 35831 ;;		line 113 in file "mcc_generated_files/tmr1.c"
 35832 ;; Parameters:    Size  Location     Type
 35833 ;;		None
 35834 ;; Auto vars:     Size  Location     Type
 35835 ;;  readVal         2    8[BANK0 ] unsigned int 
 35836 ;; Return value:  Size  Location     Type
 35837 ;;                  2    4[BANK0 ] unsigned int 
 35838 ;; Registers used:
 35839 ;;		wreg, status,2, status,0
 35840 ;; Tracked objects:
 35841 ;;		On entry : F/0
 35842 ;;		On exit  : F/0
 35843 ;;		Unchanged: 0/0
 35844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 35845 ;;      Params:         0       2       0       0       0       0       0       0       0
 35846 ;;      Locals:         0       2       0       0       0       0       0       0       0
 35847 ;;      Temps:          0       2       0       0       0       0       0       0       0
 35848 ;;      Totals:         0       6       0       0       0       0       0       0       0
 35849 ;;Total ram usage:        6 bytes
 35850 ;; Hardware stack levels used:    1
 35851 ;; Hardware stack levels required when called:    7
 35852 ;; This function calls:
 35853 ;;		Nothing
 35854 ;; This function is called by:
 35855 ;;		_TMR_GetDeltaTime
 35856 ;;		_TMR_SwapTimer
 35857 ;; This function uses a non-reentrant model
 35858 ;;
 35859                           
 35860                           	psect	text190
 35861  00750E                     __ptext190:
 35862                           	opt stack 0
 35863  00750E                     _TMR1_ReadTimer:
 35864                           	opt stack 17
 35865                           
 35866                           ; BSR set to: 0
 35867                           ;tmr1.c: 115: uint16_t readVal;
 35868                           ;tmr1.c: 117: readVal = (TMR1H << 8) | TMR1L;
 35869                           
 35870                           ; BSR set to: 0
 35871                           ;incstack = 0
 35872  00750E  50CD               	movf	4045,w,c	;volatile
 35873  007510  CFCE F066          	movff	4046,??_TMR1_ReadTimer	;volatile
 35874  007514  6B67               	clrf	(??_TMR1_ReadTimer+1)& (0+255),b
 35875  007516  C066  F067         	movff	??_TMR1_ReadTimer,??_TMR1_ReadTimer+1
 35876  00751A  6B66               	clrf	??_TMR1_ReadTimer& (0+255),b
 35877  00751C  1166               	iorwf	??_TMR1_ReadTimer& (0+255),w,b
 35878  00751E  6F68               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 35879  007520  5167               	movf	(??_TMR1_ReadTimer+1)& (0+255),w,b
 35880  007522  6F69               	movwf	(TMR1_ReadTimer@readVal+1)& (0+255),b
 35881                           
 35882                           ; BSR set to: 0
 35883                           ;tmr1.c: 119: return readVal;
 35884  007524  C068  F064         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 35885  007528  C069  F065         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 35886                           
 35887                           ; BSR set to: 0
 35888  00752C  0012               	return		;funcret
 35889  00752E                     __end_of_TMR1_ReadTimer:
 35890                           	opt stack 0
 35891                           tosu	equ	0xFFF
 35892                           tosh	equ	0xFFE
 35893                           tosl	equ	0xFFD
 35894                           pclath	equ	0xFFA
 35895                           tblptru	equ	0xFF8
 35896                           tblptrh	equ	0xFF7
 35897                           tblptrl	equ	0xFF6
 35898                           tablat	equ	0xFF5
 35899                           prodh	equ	0xFF4
 35900                           prodl	equ	0xFF3
 35901                           intcon	equ	0xFF2
 35902                           indf0	equ	0xFEF
 35903                           postinc0	equ	0xFEE
 35904                           plusw0	equ	0xFEB
 35905                           fsr0h	equ	0xFEA
 35906                           fsr0l	equ	0xFE9
 35907                           wreg	equ	0xFE8
 35908                           postinc1	equ	0xFE6
 35909                           postdec1	equ	0xFE5
 35910                           plusw1	equ	0xFE3
 35911                           fsr1h	equ	0xFE2
 35912                           fsr1l	equ	0xFE1
 35913                           indf2	equ	0xFDF
 35914                           postinc2	equ	0xFDE
 35915                           postdec2	equ	0xFDD
 35916                           plusw2	equ	0xFDB
 35917                           fsr2h	equ	0xFDA
 35918                           fsr2l	equ	0xFD9
 35919                           status	equ	0xFD8
 35920                           
 35921 ;; *************** function _SwTimerSetTimeout *****************
 35922 ;; Defined at:
 35923 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35924 ;; Parameters:    Size  Location     Type
 35925 ;;  timerId         1    wreg     unsigned char 
 35926 ;;  timeout         4   17[BANK0 ] unsigned long 
 35927 ;; Auto vars:     Size  Location     Type
 35928 ;;  timerId         1   25[BANK0 ] unsigned char 
 35929 ;; Return value:  Size  Location     Type
 35930 ;;                  1    wreg      void 
 35931 ;; Registers used:
 35932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35933 ;; Tracked objects:
 35934 ;;		On entry : C/2
 35935 ;;		On exit  : F/0
 35936 ;;		Unchanged: 0/0
 35937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 35938 ;;      Params:         0       4       0       0       0       0       0       0       0
 35939 ;;      Locals:         0       1       0       0       0       0       0       0       0
 35940 ;;      Temps:          0       4       0       0       0       0       0       0       0
 35941 ;;      Totals:         0       9       0       0       0       0       0       0       0
 35942 ;;Total ram usage:        9 bytes
 35943 ;; Hardware stack levels used:    1
 35944 ;; Hardware stack levels required when called:    7
 35945 ;; This function calls:
 35946 ;;		Nothing
 35947 ;; This function is called by:
 35948 ;;		_RADIO_Transmit
 35949 ;;		_RADIO_ReceiveStart
 35950 ;;		_LORAWAN_TxDone
 35951 ;;		_LORAWAN_RxTimeout
 35952 ;;		_StartReTxTimer
 35953 ;;		_DutyCycleCallback
 35954 ;;		_LORAWAN_Join
 35955 ;;		_LORAWAN_LinkCheckConfigure
 35956 ;;		_LORAWAN_LinkCheckCallback
 35957 ;;		_UpdateRetransmissionAckTimeoutState
 35958 ;;		_UpdateJoinSuccessState
 35959 ;; This function uses a non-reentrant model
 35960 ;;
 35961                           
 35962                           	psect	text191
 35963  006DCA                     __ptext191:
 35964                           	opt stack 0
 35965  006DCA                     _SwTimerSetTimeout:
 35966                           	opt stack 20
 35967                           
 35968                           ; BSR set to: 0
 35969                           ;incstack = 0
 35970                           ;SwTimerSetTimeout@timerId stored from wreg
 35971  006DCA  0100               	movlb	0	; () banked
 35972  006DCC  6F79               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 35973                           
 35974                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 35975  006DCE  9EF2               	bcf	intcon,7,c	;volatile
 35976                           
 35977                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 35978  006DD0  0EE0               	movlw	224
 35979  006DD2  2571               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 35980  006DD4  6F75               	movwf	??_SwTimerSetTimeout& (0+255),b
 35981  006DD6  0EFF               	movlw	255
 35982  006DD8  2172               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 35983  006DDA  6F76               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 35984  006DDC  0EFF               	movlw	255
 35985  006DDE  2173               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 35986  006DE0  6F77               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 35987  006DE2  0EFF               	movlw	255
 35988  006DE4  2174               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 35989  006DE6  6F78               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 35990  006DE8  5179               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 35991  006DEA  0D08               	mullw	8
 35992  006DEC  0E00               	movlw	low _swTimers
 35993  006DEE  24F3               	addwf	prodl,w,c
 35994  006DF0  6ED9               	movwf	fsr2l,c
 35995  006DF2  0E03               	movlw	high _swTimers
 35996  006DF4  20F4               	addwfc	prodh,w,c
 35997  006DF6  6EDA               	movwf	fsr2h,c
 35998  006DF8  C075  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 35999  006DFC  C076  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 36000  006E00  C077  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 36001  006E04  C078  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 36002                           
 36003                           ; BSR set to: 0
 36004                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 36005  006E08  8EF2               	bsf	intcon,7,c	;volatile
 36006                           
 36007                           ; BSR set to: 0
 36008  006E0A  0012               	return		;funcret
 36009  006E0C                     __end_of_SwTimerSetTimeout:
 36010                           	opt stack 0
 36011                           tosu	equ	0xFFF
 36012                           tosh	equ	0xFFE
 36013                           tosl	equ	0xFFD
 36014                           pclath	equ	0xFFA
 36015                           tblptru	equ	0xFF8
 36016                           tblptrh	equ	0xFF7
 36017                           tblptrl	equ	0xFF6
 36018                           tablat	equ	0xFF5
 36019                           prodh	equ	0xFF4
 36020                           prodl	equ	0xFF3
 36021                           intcon	equ	0xFF2
 36022                           indf0	equ	0xFEF
 36023                           postinc0	equ	0xFEE
 36024                           plusw0	equ	0xFEB
 36025                           fsr0h	equ	0xFEA
 36026                           fsr0l	equ	0xFE9
 36027                           wreg	equ	0xFE8
 36028                           postinc1	equ	0xFE6
 36029                           postdec1	equ	0xFE5
 36030                           plusw1	equ	0xFE3
 36031                           fsr1h	equ	0xFE2
 36032                           fsr1l	equ	0xFE1
 36033                           indf2	equ	0xFDF
 36034                           postinc2	equ	0xFDE
 36035                           postdec2	equ	0xFDD
 36036                           plusw2	equ	0xFDB
 36037                           fsr2h	equ	0xFDA
 36038                           fsr2l	equ	0xFD9
 36039                           status	equ	0xFD8
 36040                           
 36041 ;; *************** function _InitDefault868Channels *****************
 36042 ;; Defined at:
 36043 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36044 ;; Parameters:    Size  Location     Type
 36045 ;;		None
 36046 ;; Auto vars:     Size  Location     Type
 36047 ;;  i               1   14[BANK0 ] unsigned char 
 36048 ;; Return value:  Size  Location     Type
 36049 ;;                  1    wreg      void 
 36050 ;; Registers used:
 36051 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36052 ;; Tracked objects:
 36053 ;;		On entry : F/1
 36054 ;;		On exit  : F/0
 36055 ;;		Unchanged: 0/0
 36056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 36057 ;;      Params:         0       0       0       0       0       0       0       0       0
 36058 ;;      Locals:         0       1       0       0       0       0       0       0       0
 36059 ;;      Temps:          0       0       0       0       0       0       0       0       0
 36060 ;;      Totals:         0       1       0       0       0       0       0       0       0
 36061 ;;Total ram usage:        1 bytes
 36062 ;; Hardware stack levels used:    1
 36063 ;; Hardware stack levels required when called:    8
 36064 ;; This function calls:
 36065 ;;		_memcpy
 36066 ;;		_memset
 36067 ;; This function is called by:
 36068 ;;		_LORAWAN_Reset
 36069 ;; This function uses a non-reentrant model
 36070 ;;
 36071                           
 36072                           	psect	text192
 36073  006456                     __ptext192:
 36074                           	opt stack 0
 36075  006456                     _InitDefault868Channels:
 36076                           	opt stack 20
 36077                           
 36078                           ; BSR set to: 1
 36079                           ;lorawan_eu.c: 981: uint8_t i;
 36080                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 36081                           
 36082                           ; BSR set to: 0
 36083                           ;incstack = 0
 36084  006456  0E00               	movlw	low _Channels
 36085  006458  0100               	movlb	0	; () banked
 36086  00645A  6F64               	movwf	memset@p1& (0+255),b
 36087  00645C  0E04               	movlw	high _Channels
 36088  00645E  6F65               	movwf	(memset@p1+1)& (0+255),b
 36089  006460  6B67               	clrf	(memset@c+1)& (0+255),b
 36090  006462  6B66               	clrf	memset@c& (0+255),b
 36091  006464  6B69               	clrf	(memset@n+1)& (0+255),b
 36092  006466  0EE0               	movlw	224
 36093  006468  6F68               	movwf	memset@n& (0+255),b
 36094  00646A  EC9A  F039         	call	_memset	;wreg free
 36095                           
 36096                           ; BSR set to: 0
 36097                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 36098  00646E  0E00               	movlw	low _Channels
 36099  006470  6F64               	movwf	memcpy@d1& (0+255),b
 36100  006472  0E04               	movlw	high _Channels
 36101  006474  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36102  006476  0ED2               	movlw	low _DefaultChannels868
 36103  006478  6F66               	movwf	memcpy@s1& (0+255),b
 36104  00647A  0E7F               	movlw	high _DefaultChannels868
 36105  00647C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36106  00647E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36107  006480  0E2A               	movlw	42
 36108  006482  6F68               	movwf	memcpy@n& (0+255),b
 36109  006484  EC6A  F034         	call	_memcpy	;wreg free
 36110                           
 36111                           ; BSR set to: 0
 36112                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 36113  006488  0E03               	movlw	3
 36114  00648A  6F6E               	movwf	InitDefault868Channels@i& (0+255),b
 36115  00648C                     l15063:
 36116                           
 36117                           ; BSR set to: 0
 36118                           ;lorawan_eu.c: 986: {
 36119                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 36120  00648C  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36121  00648E  0D0E               	mullw	14
 36122  006490  0E06               	movlw	low (_Channels+6)
 36123  006492  24F3               	addwf	prodl,w,c
 36124  006494  6ED9               	movwf	fsr2l,c
 36125  006496  0E04               	movlw	high (_Channels+6)
 36126  006498  20F4               	addwfc	prodh,w,c
 36127  00649A  6EDA               	movwf	fsr2h,c
 36128  00649C  68DE               	setf	postinc2,c
 36129  00649E  68DD               	setf	postdec2,c
 36130                           
 36131                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 36132  0064A0  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36133  0064A2  0D0E               	mullw	14
 36134  0064A4  0E05               	movlw	low (_Channels+5)
 36135  0064A6  24F3               	addwf	prodl,w,c
 36136  0064A8  6ED9               	movwf	fsr2l,c
 36137  0064AA  0E04               	movlw	high (_Channels+5)
 36138  0064AC  20F4               	addwfc	prodh,w,c
 36139  0064AE  6EDA               	movwf	fsr2h,c
 36140  0064B0  68DF               	setf	indf2,c
 36141                           
 36142                           ; BSR set to: 0
 36143  0064B2  2B6E               	incf	InitDefault868Channels@i& (0+255),f,b
 36144                           
 36145                           ; BSR set to: 0
 36146  0064B4  0E0F               	movlw	15
 36147  0064B6  656E               	cpfsgt	InitDefault868Channels@i& (0+255),b
 36148  0064B8  D7E9               	goto	l15063
 36149  0064BA  0C0F               	retlw	15
 36150  0064BC                     __end_of_InitDefault868Channels:
 36151                           	opt stack 0
 36152                           tosu	equ	0xFFF
 36153                           tosh	equ	0xFFE
 36154                           tosl	equ	0xFFD
 36155                           pclath	equ	0xFFA
 36156                           tblptru	equ	0xFF8
 36157                           tblptrh	equ	0xFF7
 36158                           tblptrl	equ	0xFF6
 36159                           tablat	equ	0xFF5
 36160                           prodh	equ	0xFF4
 36161                           prodl	equ	0xFF3
 36162                           intcon	equ	0xFF2
 36163                           indf0	equ	0xFEF
 36164                           postinc0	equ	0xFEE
 36165                           plusw0	equ	0xFEB
 36166                           fsr0h	equ	0xFEA
 36167                           fsr0l	equ	0xFE9
 36168                           wreg	equ	0xFE8
 36169                           postinc1	equ	0xFE6
 36170                           postdec1	equ	0xFE5
 36171                           plusw1	equ	0xFE3
 36172                           fsr1h	equ	0xFE2
 36173                           fsr1l	equ	0xFE1
 36174                           indf2	equ	0xFDF
 36175                           postinc2	equ	0xFDE
 36176                           postdec2	equ	0xFDD
 36177                           plusw2	equ	0xFDB
 36178                           fsr2h	equ	0xFDA
 36179                           fsr2l	equ	0xFD9
 36180                           status	equ	0xFD8
 36181                           
 36182 ;; *************** function _InitDefault433Channels *****************
 36183 ;; Defined at:
 36184 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36185 ;; Parameters:    Size  Location     Type
 36186 ;;		None
 36187 ;; Auto vars:     Size  Location     Type
 36188 ;;  i               1   14[BANK0 ] unsigned char 
 36189 ;; Return value:  Size  Location     Type
 36190 ;;                  1    wreg      void 
 36191 ;; Registers used:
 36192 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36193 ;; Tracked objects:
 36194 ;;		On entry : F/1
 36195 ;;		On exit  : F/0
 36196 ;;		Unchanged: 0/0
 36197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 36198 ;;      Params:         0       0       0       0       0       0       0       0       0
 36199 ;;      Locals:         0       1       0       0       0       0       0       0       0
 36200 ;;      Temps:          0       0       0       0       0       0       0       0       0
 36201 ;;      Totals:         0       1       0       0       0       0       0       0       0
 36202 ;;Total ram usage:        1 bytes
 36203 ;; Hardware stack levels used:    1
 36204 ;; Hardware stack levels required when called:    8
 36205 ;; This function calls:
 36206 ;;		_memcpy
 36207 ;;		_memset
 36208 ;; This function is called by:
 36209 ;;		_LORAWAN_Reset
 36210 ;; This function uses a non-reentrant model
 36211 ;;
 36212                           
 36213                           	psect	text193
 36214  0064BC                     __ptext193:
 36215                           	opt stack 0
 36216  0064BC                     _InitDefault433Channels:
 36217                           	opt stack 20
 36218                           
 36219                           ; BSR set to: 1
 36220                           ;lorawan_eu.c: 996: uint8_t i;
 36221                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 36222                           
 36223                           ; BSR set to: 0
 36224                           ;incstack = 0
 36225  0064BC  0E00               	movlw	low _Channels
 36226  0064BE  0100               	movlb	0	; () banked
 36227  0064C0  6F64               	movwf	memset@p1& (0+255),b
 36228  0064C2  0E04               	movlw	high _Channels
 36229  0064C4  6F65               	movwf	(memset@p1+1)& (0+255),b
 36230  0064C6  6B67               	clrf	(memset@c+1)& (0+255),b
 36231  0064C8  6B66               	clrf	memset@c& (0+255),b
 36232  0064CA  6B69               	clrf	(memset@n+1)& (0+255),b
 36233  0064CC  0EE0               	movlw	224
 36234  0064CE  6F68               	movwf	memset@n& (0+255),b
 36235  0064D0  EC9A  F039         	call	_memset	;wreg free
 36236                           
 36237                           ; BSR set to: 0
 36238                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 36239  0064D4  0E00               	movlw	low _Channels
 36240  0064D6  6F64               	movwf	memcpy@d1& (0+255),b
 36241  0064D8  0E04               	movlw	high _Channels
 36242  0064DA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36243  0064DC  0EA8               	movlw	low _DefaultChannels433
 36244  0064DE  6F66               	movwf	memcpy@s1& (0+255),b
 36245  0064E0  0E7F               	movlw	high _DefaultChannels433
 36246  0064E2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36247  0064E4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36248  0064E6  0E2A               	movlw	42
 36249  0064E8  6F68               	movwf	memcpy@n& (0+255),b
 36250  0064EA  EC6A  F034         	call	_memcpy	;wreg free
 36251                           
 36252                           ; BSR set to: 0
 36253                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 36254  0064EE  0E03               	movlw	3
 36255  0064F0  6F6E               	movwf	InitDefault433Channels@i& (0+255),b
 36256  0064F2                     l15079:
 36257                           
 36258                           ; BSR set to: 0
 36259                           ;lorawan_eu.c: 1001: {
 36260                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 36261  0064F2  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36262  0064F4  0D0E               	mullw	14
 36263  0064F6  0E06               	movlw	low (_Channels+6)
 36264  0064F8  24F3               	addwf	prodl,w,c
 36265  0064FA  6ED9               	movwf	fsr2l,c
 36266  0064FC  0E04               	movlw	high (_Channels+6)
 36267  0064FE  20F4               	addwfc	prodh,w,c
 36268  006500  6EDA               	movwf	fsr2h,c
 36269  006502  68DE               	setf	postinc2,c
 36270  006504  68DD               	setf	postdec2,c
 36271                           
 36272                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 36273  006506  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36274  006508  0D0E               	mullw	14
 36275  00650A  0E05               	movlw	low (_Channels+5)
 36276  00650C  24F3               	addwf	prodl,w,c
 36277  00650E  6ED9               	movwf	fsr2l,c
 36278  006510  0E04               	movlw	high (_Channels+5)
 36279  006512  20F4               	addwfc	prodh,w,c
 36280  006514  6EDA               	movwf	fsr2h,c
 36281  006516  68DF               	setf	indf2,c
 36282                           
 36283                           ; BSR set to: 0
 36284  006518  2B6E               	incf	InitDefault433Channels@i& (0+255),f,b
 36285                           
 36286                           ; BSR set to: 0
 36287  00651A  0E0F               	movlw	15
 36288  00651C  656E               	cpfsgt	InitDefault433Channels@i& (0+255),b
 36289  00651E  D7E9               	goto	l15079
 36290  006520  0C0F               	retlw	15
 36291  006522                     __end_of_InitDefault433Channels:
 36292                           	opt stack 0
 36293                           tosu	equ	0xFFF
 36294                           tosh	equ	0xFFE
 36295                           tosl	equ	0xFFD
 36296                           pclath	equ	0xFFA
 36297                           tblptru	equ	0xFF8
 36298                           tblptrh	equ	0xFF7
 36299                           tblptrl	equ	0xFF6
 36300                           tablat	equ	0xFF5
 36301                           prodh	equ	0xFF4
 36302                           prodl	equ	0xFF3
 36303                           intcon	equ	0xFF2
 36304                           indf0	equ	0xFEF
 36305                           postinc0	equ	0xFEE
 36306                           plusw0	equ	0xFEB
 36307                           fsr0h	equ	0xFEA
 36308                           fsr0l	equ	0xFE9
 36309                           wreg	equ	0xFE8
 36310                           postinc1	equ	0xFE6
 36311                           postdec1	equ	0xFE5
 36312                           plusw1	equ	0xFE3
 36313                           fsr1h	equ	0xFE2
 36314                           fsr1l	equ	0xFE1
 36315                           indf2	equ	0xFDF
 36316                           postinc2	equ	0xFDE
 36317                           postdec2	equ	0xFDD
 36318                           plusw2	equ	0xFDB
 36319                           fsr2h	equ	0xFDA
 36320                           fsr2l	equ	0xFD9
 36321                           status	equ	0xFD8
 36322                           
 36323 ;; *************** function _memset *****************
 36324 ;; Defined at:
 36325 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 36326 ;; Parameters:    Size  Location     Type
 36327 ;;  p1              2    4[BANK0 ] PTR void 
 36328 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36329 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36330 ;;  c               2    6[BANK0 ] int 
 36331 ;;  n               2    8[BANK0 ] unsigned int 
 36332 ;; Auto vars:     Size  Location     Type
 36333 ;;  p               2   10[BANK0 ] PTR unsigned char 
 36334 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36335 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36336 ;; Return value:  Size  Location     Type
 36337 ;;                  2    4[BANK0 ] PTR void 
 36338 ;; Registers used:
 36339 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36340 ;; Tracked objects:
 36341 ;;		On entry : F/0
 36342 ;;		On exit  : F/0
 36343 ;;		Unchanged: 0/0
 36344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 36345 ;;      Params:         0       6       0       0       0       0       0       0       0
 36346 ;;      Locals:         0       2       0       0       0       0       0       0       0
 36347 ;;      Temps:          0       0       0       0       0       0       0       0       0
 36348 ;;      Totals:         0       8       0       0       0       0       0       0       0
 36349 ;;Total ram usage:        8 bytes
 36350 ;; Hardware stack levels used:    1
 36351 ;; Hardware stack levels required when called:    7
 36352 ;; This function calls:
 36353 ;;		Nothing
 36354 ;; This function is called by:
 36355 ;;		_LORAWAN_Reset
 36356 ;;		_InitDefault868Channels
 36357 ;;		_InitDefault433Channels
 36358 ;;		_AESCmac
 36359 ;;		_GenerateSubkey
 36360 ;;		_AssemblePacket
 36361 ;;		_PrepareJoinRequestFrame
 36362 ;;		_PrepareSessionKeys
 36363 ;;		_AssembleEncryptionBlock
 36364 ;; This function uses a non-reentrant model
 36365 ;;
 36366                           
 36367                           	psect	text194
 36368  007334                     __ptext194:
 36369                           	opt stack 0
 36370  007334                     _memset:
 36371                           	opt stack 20
 36372                           
 36373                           ; BSR set to: 0
 36374                           
 36375                           ; BSR set to: 0
 36376                           ;incstack = 0
 36377  007334  C064  F06A         	movff	memset@p1,memset@p
 36378  007338  C065  F06B         	movff	memset@p1+1,memset@p+1
 36379  00733C  D008               	goto	l12387
 36380  00733E                     l12383:
 36381                           
 36382                           ; BSR set to: 0
 36383  00733E  C06A  FFD9         	movff	memset@p,fsr2l
 36384  007342  C06B  FFDA         	movff	memset@p+1,fsr2h
 36385  007346  C066  FFDF         	movff	memset@c,indf2
 36386                           
 36387                           ; BSR set to: 0
 36388  00734A  4B6A               	infsnz	memset@p& (0+255),f,b
 36389  00734C  2B6B               	incf	(memset@p+1)& (0+255),f,b
 36390  00734E                     l12387:
 36391                           
 36392                           ; BSR set to: 0
 36393  00734E  0768               	decf	memset@n& (0+255),f,b
 36394  007350  A0D8               	btfss	status,0,c
 36395  007352  0769               	decf	(memset@n+1)& (0+255),f,b
 36396  007354  2968               	incf	memset@n& (0+255),w,b
 36397  007356  E1F3               	bnz	l12383
 36398  007358  2969               	incf	(memset@n+1)& (0+255),w,b
 36399  00735A  E1F1               	bnz	l12383
 36400                           
 36401                           ; BSR set to: 0
 36402  00735C  0012               	return		;funcret
 36403  00735E                     __end_of_memset:
 36404                           	opt stack 0
 36405                           tosu	equ	0xFFF
 36406                           tosh	equ	0xFFE
 36407                           tosl	equ	0xFFD
 36408                           pclath	equ	0xFFA
 36409                           tblptru	equ	0xFF8
 36410                           tblptrh	equ	0xFF7
 36411                           tblptrl	equ	0xFF6
 36412                           tablat	equ	0xFF5
 36413                           prodh	equ	0xFF4
 36414                           prodl	equ	0xFF3
 36415                           intcon	equ	0xFF2
 36416                           indf0	equ	0xFEF
 36417                           postinc0	equ	0xFEE
 36418                           plusw0	equ	0xFEB
 36419                           fsr0h	equ	0xFEA
 36420                           fsr0l	equ	0xFE9
 36421                           wreg	equ	0xFE8
 36422                           postinc1	equ	0xFE6
 36423                           postdec1	equ	0xFE5
 36424                           plusw1	equ	0xFE3
 36425                           fsr1h	equ	0xFE2
 36426                           fsr1l	equ	0xFE1
 36427                           indf2	equ	0xFDF
 36428                           postinc2	equ	0xFDE
 36429                           postdec2	equ	0xFDD
 36430                           plusw2	equ	0xFDB
 36431                           fsr2h	equ	0xFDA
 36432                           fsr2l	equ	0xFD9
 36433                           status	equ	0xFD8
 36434                           
 36435 ;; *************** function _memcpy *****************
 36436 ;; Defined at:
 36437 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 36438 ;; Parameters:    Size  Location     Type
 36439 ;;  d1              2    4[BANK0 ] PTR void 
 36440 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36441 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36442 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36443 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36444 ;;  s1              2    6[BANK0 ] PTR const void 
 36445 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(2), appSKey(16), 
 36446 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36447 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36448 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36449 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36450 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36451 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36452 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36453 ;;		 -> NULL(0), 
 36454 ;;  n               2    8[BANK0 ] unsigned int 
 36455 ;; Auto vars:     Size  Location     Type
 36456 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 36457 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(2), appSKey(16), 
 36458 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36459 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36460 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36461 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36462 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36463 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36464 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36465 ;;		 -> NULL(0), 
 36466 ;;  d               2   10[BANK0 ] PTR unsigned char 
 36467 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36468 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36469 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36470 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36471 ;; Return value:  Size  Location     Type
 36472 ;;                  2    4[BANK0 ] PTR void 
 36473 ;; Registers used:
 36474 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36475 ;; Tracked objects:
 36476 ;;		On entry : F/0
 36477 ;;		On exit  : F/0
 36478 ;;		Unchanged: 0/0
 36479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 36480 ;;      Params:         0       6       0       0       0       0       0       0       0
 36481 ;;      Locals:         0       4       0       0       0       0       0       0       0
 36482 ;;      Temps:          0       0       0       0       0       0       0       0       0
 36483 ;;      Totals:         0      10       0       0       0       0       0       0       0
 36484 ;;Total ram usage:       10 bytes
 36485 ;; Hardware stack levels used:    1
 36486 ;; Hardware stack levels required when called:    7
 36487 ;; This function calls:
 36488 ;;		Nothing
 36489 ;; This function is called by:
 36490 ;;		_RADIO_SetFSKSyncWord
 36491 ;;		_UpdateCfList
 36492 ;;		_InitDefault868Channels
 36493 ;;		_InitDefault433Channels
 36494 ;;		_AESCmac
 36495 ;;		_LORAWAN_SetNetworkSessionKey
 36496 ;;		_LORAWAN_SetApplicationSessionKey
 36497 ;;		_LORAWAN_RxDone
 36498 ;;		_AssemblePacket
 36499 ;;		_PrepareJoinRequestFrame
 36500 ;;		_PrepareSessionKeys
 36501 ;;		_AssembleEncryptionBlock
 36502 ;;		_ExtractMic
 36503 ;;		_ComputeMic
 36504 ;;		_AESEncodeLoRa
 36505 ;; This function uses a non-reentrant model
 36506 ;;
 36507                           
 36508                           	psect	text195
 36509  0068D4                     __ptext195:
 36510                           	opt stack 0
 36511  0068D4                     _memcpy:
 36512                           	opt stack 17
 36513                           
 36514                           ; BSR set to: 0
 36515                           
 36516                           ; BSR set to: 0
 36517                           ;incstack = 0
 36518  0068D4  C066  F06C         	movff	memcpy@s1,memcpy@s
 36519  0068D8  C067  F06D         	movff	memcpy@s1+1,memcpy@s+1
 36520  0068DC  C064  F06A         	movff	memcpy@d1,memcpy@d
 36521  0068E0  C065  F06B         	movff	memcpy@d1+1,memcpy@d+1
 36522  0068E4  D01A               	goto	l12017
 36523  0068E6                     l12011:
 36524                           
 36525                           ; BSR set to: 0
 36526  0068E6  C06C  FFF6         	movff	memcpy@s,tblptrl
 36527  0068EA  C06D  FFF7         	movff	memcpy@s+1,tblptrh
 36528  0068EE  6AF8               	clrf	tblptru,c
 36529  0068F0  C06A  FFD9         	movff	memcpy@d,fsr2l
 36530  0068F4  C06B  FFDA         	movff	memcpy@d+1,fsr2h
 36531  0068F8  0E07               	movlw	(high __ramtop+-1)
 36532  0068FA  64F7               	cpfsgt	tblptrh,c
 36533  0068FC  D003               	bra	u12747
 36534  0068FE  0008               	tblrd		*
 36535  006900  50F5               	movf	tablat,w,c
 36536  006902  D005               	bra	u12740
 36537  006904                     u12747:
 36538  006904  CFF6 FFE9          	movff	tblptrl,fsr0l
 36539  006908  CFF7 FFEA          	movff	tblptrh,fsr0h
 36540  00690C  50EF               	movf	indf0,w,c
 36541  00690E                     u12740:
 36542  00690E  6EDF               	movwf	indf2,c
 36543  006910  0100               	movlb	0	; () banked
 36544  006912  4B6C               	infsnz	memcpy@s& (0+255),f,b
 36545  006914  2B6D               	incf	(memcpy@s+1)& (0+255),f,b
 36546                           
 36547                           ; BSR set to: 0
 36548  006916  4B6A               	infsnz	memcpy@d& (0+255),f,b
 36549  006918  2B6B               	incf	(memcpy@d+1)& (0+255),f,b
 36550  00691A                     l12017:
 36551                           
 36552                           ; BSR set to: 0
 36553  00691A  0768               	decf	memcpy@n& (0+255),f,b
 36554  00691C  A0D8               	btfss	status,0,c
 36555  00691E  0769               	decf	(memcpy@n+1)& (0+255),f,b
 36556  006920  2968               	incf	memcpy@n& (0+255),w,b
 36557  006922  E1E1               	bnz	l12011
 36558  006924  2969               	incf	(memcpy@n+1)& (0+255),w,b
 36559  006926  E1DF               	bnz	l12011
 36560                           
 36561                           ; BSR set to: 0
 36562  006928  0012               	return		;funcret
 36563  00692A                     __end_of_memcpy:
 36564                           	opt stack 0
 36565                           tosu	equ	0xFFF
 36566                           tosh	equ	0xFFE
 36567                           tosl	equ	0xFFD
 36568                           pclath	equ	0xFFA
 36569                           tblptru	equ	0xFF8
 36570                           tblptrh	equ	0xFF7
 36571                           tblptrl	equ	0xFF6
 36572                           tablat	equ	0xFF5
 36573                           prodh	equ	0xFF4
 36574                           prodl	equ	0xFF3
 36575                           intcon	equ	0xFF2
 36576                           indf0	equ	0xFEF
 36577                           postinc0	equ	0xFEE
 36578                           plusw0	equ	0xFEB
 36579                           fsr0h	equ	0xFEA
 36580                           fsr0l	equ	0xFE9
 36581                           wreg	equ	0xFE8
 36582                           postinc1	equ	0xFE6
 36583                           postdec1	equ	0xFE5
 36584                           plusw1	equ	0xFE3
 36585                           fsr1h	equ	0xFE2
 36586                           fsr1l	equ	0xFE1
 36587                           indf2	equ	0xFDF
 36588                           postinc2	equ	0xFDE
 36589                           postdec2	equ	0xFDD
 36590                           plusw2	equ	0xFDB
 36591                           fsr2h	equ	0xFDA
 36592                           fsr2l	equ	0xFD9
 36593                           status	equ	0xFD8
 36594                           
 36595 ;; *************** function _CreateAllSoftwareTimers *****************
 36596 ;; Defined at:
 36597 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36598 ;; Parameters:    Size  Location     Type
 36599 ;;		None
 36600 ;; Auto vars:     Size  Location     Type
 36601 ;;		None
 36602 ;; Return value:  Size  Location     Type
 36603 ;;                  1    wreg      void 
 36604 ;; Registers used:
 36605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36606 ;; Tracked objects:
 36607 ;;		On entry : F/2
 36608 ;;		On exit  : F/2
 36609 ;;		Unchanged: 0/0
 36610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 36611 ;;      Params:         0       0       0       0       0       0       0       0       0
 36612 ;;      Locals:         0       0       0       0       0       0       0       0       0
 36613 ;;      Temps:          0       0       0       0       0       0       0       0       0
 36614 ;;      Totals:         0       0       0       0       0       0       0       0       0
 36615 ;;Total ram usage:        0 bytes
 36616 ;; Hardware stack levels used:    1
 36617 ;; Hardware stack levels required when called:    8
 36618 ;; This function calls:
 36619 ;;		_SwTimerCreate
 36620 ;; This function is called by:
 36621 ;;		_LORAWAN_Init
 36622 ;; This function uses a non-reentrant model
 36623 ;;
 36624                           
 36625                           	psect	text196
 36626  0069CE                     __ptext196:
 36627                           	opt stack 0
 36628  0069CE                     _CreateAllSoftwareTimers:
 36629                           	opt stack 21
 36630                           
 36631                           ; BSR set to: 2
 36632                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 36633                           
 36634                           ; BSR set to: 0
 36635                           ;incstack = 0
 36636  0069CE  EC1E  F031         	call	_SwTimerCreate	;wreg free
 36637  0069D2  0102               	movlb	2	; () banked
 36638  0069D4  6FE2               	movwf	(_loRa+226)& (0+255),b
 36639                           
 36640                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 36641  0069D6  EC1E  F031         	call	_SwTimerCreate	;wreg free
 36642  0069DA  0102               	movlb	2	; () banked
 36643  0069DC  6FE3               	movwf	(_loRa+227)& (0+255),b
 36644                           
 36645                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 36646  0069DE  EC1E  F031         	call	_SwTimerCreate	;wreg free
 36647  0069E2  0102               	movlb	2	; () banked
 36648  0069E4  6FE4               	movwf	(_loRa+228)& (0+255),b
 36649                           
 36650                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 36651  0069E6  EC1E  F031         	call	_SwTimerCreate	;wreg free
 36652  0069EA  0102               	movlb	2	; () banked
 36653  0069EC  6FE5               	movwf	(_loRa+229)& (0+255),b
 36654                           
 36655                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 36656  0069EE  EC1E  F031         	call	_SwTimerCreate	;wreg free
 36657  0069F2  0102               	movlb	2	; () banked
 36658  0069F4  6FE7               	movwf	(_loRa+231)& (0+255),b
 36659                           
 36660                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 36661  0069F6  EC1E  F031         	call	_SwTimerCreate	;wreg free
 36662  0069FA  0102               	movlb	2	; () banked
 36663  0069FC  6FE8               	movwf	(_loRa+232)& (0+255),b
 36664                           
 36665                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 36666  0069FE  EC1E  F031         	call	_SwTimerCreate	;wreg free
 36667  006A02  0102               	movlb	2	; () banked
 36668  006A04  6FE6               	movwf	(_loRa+230)& (0+255),b
 36669                           
 36670                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 36671  006A06  EC1E  F031         	call	_SwTimerCreate	;wreg free
 36672  006A0A  0102               	movlb	2	; () banked
 36673  006A0C  6FEA               	movwf	(_loRa+234)& (0+255),b
 36674                           
 36675                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 36676  006A0E  EC1E  F031         	call	_SwTimerCreate	;wreg free
 36677  006A12  0102               	movlb	2	; () banked
 36678  006A14  6FF3               	movwf	(_loRa+243)& (0+255),b
 36679                           
 36680                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 36681  006A16  EC1E  F031         	call	_SwTimerCreate	;wreg free
 36682  006A1A  0102               	movlb	2	; () banked
 36683  006A1C  6FE9               	movwf	(_loRa+233)& (0+255),b
 36684                           
 36685                           ; BSR set to: 2
 36686  006A1E  0012               	return		;funcret
 36687  006A20                     __end_of_CreateAllSoftwareTimers:
 36688                           	opt stack 0
 36689                           tosu	equ	0xFFF
 36690                           tosh	equ	0xFFE
 36691                           tosl	equ	0xFFD
 36692                           pclath	equ	0xFFA
 36693                           tblptru	equ	0xFF8
 36694                           tblptrh	equ	0xFF7
 36695                           tblptrl	equ	0xFF6
 36696                           tablat	equ	0xFF5
 36697                           prodh	equ	0xFF4
 36698                           prodl	equ	0xFF3
 36699                           intcon	equ	0xFF2
 36700                           indf0	equ	0xFEF
 36701                           postinc0	equ	0xFEE
 36702                           plusw0	equ	0xFEB
 36703                           fsr0h	equ	0xFEA
 36704                           fsr0l	equ	0xFE9
 36705                           wreg	equ	0xFE8
 36706                           postinc1	equ	0xFE6
 36707                           postdec1	equ	0xFE5
 36708                           plusw1	equ	0xFE3
 36709                           fsr1h	equ	0xFE2
 36710                           fsr1l	equ	0xFE1
 36711                           indf2	equ	0xFDF
 36712                           postinc2	equ	0xFDE
 36713                           postdec2	equ	0xFDD
 36714                           plusw2	equ	0xFDB
 36715                           fsr2h	equ	0xFDA
 36716                           fsr2l	equ	0xFD9
 36717                           status	equ	0xFD8
 36718                           
 36719 ;; *************** function _SwTimerCreate *****************
 36720 ;; Defined at:
 36721 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36722 ;; Parameters:    Size  Location     Type
 36723 ;;		None
 36724 ;; Auto vars:     Size  Location     Type
 36725 ;;  retVal          1    4[BANK0 ] unsigned char 
 36726 ;; Return value:  Size  Location     Type
 36727 ;;                  1    wreg      unsigned char 
 36728 ;; Registers used:
 36729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36730 ;; Tracked objects:
 36731 ;;		On entry : C/1
 36732 ;;		On exit  : F/0
 36733 ;;		Unchanged: 0/0
 36734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 36735 ;;      Params:         0       0       0       0       0       0       0       0       0
 36736 ;;      Locals:         0       1       0       0       0       0       0       0       0
 36737 ;;      Temps:          0       0       0       0       0       0       0       0       0
 36738 ;;      Totals:         0       1       0       0       0       0       0       0       0
 36739 ;;Total ram usage:        1 bytes
 36740 ;; Hardware stack levels used:    1
 36741 ;; Hardware stack levels required when called:    7
 36742 ;; This function calls:
 36743 ;;		Nothing
 36744 ;; This function is called by:
 36745 ;;		_RADIO_Init
 36746 ;;		_CreateAllSoftwareTimers
 36747 ;; This function uses a non-reentrant model
 36748 ;;
 36749                           
 36750                           	psect	text197
 36751  00623C                     __ptext197:
 36752                           	opt stack 0
 36753  00623C                     _SwTimerCreate:
 36754                           	opt stack 21
 36755                           
 36756                           ;sw_timer.c: 156: uint8_t retVal;
 36757                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 36758                           
 36759                           ; BSR set to: 2
 36760                           ;incstack = 0
 36761  00623C  0E14               	movlw	20
 36762  00623E  0101               	movlb	1	; () banked
 36763  006240  6177               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 36764  006242  D030               	goto	l143
 36765                           
 36766                           ; BSR set to: 1
 36767                           ;sw_timer.c: 158: {
 36768                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 36769  006244  9EF2               	bcf	intcon,7,c	;volatile
 36770                           
 36771                           ;sw_timer.c: 160: retVal = allocatedTimers;
 36772  006246  C177  F064         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 36773                           
 36774                           ; BSR set to: 1
 36775                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 36776  00624A  0100               	movlb	0	; () banked
 36777  00624C  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 36778  00624E  0D08               	mullw	8
 36779  006250  0E04               	movlw	low (_swTimers+4)
 36780  006252  24F3               	addwf	prodl,w,c
 36781  006254  6ED9               	movwf	fsr2l,c
 36782  006256  0E03               	movlw	high (_swTimers+4)
 36783  006258  20F4               	addwfc	prodh,w,c
 36784  00625A  6EDA               	movwf	fsr2h,c
 36785  00625C  6ADF               	clrf	indf2,c
 36786                           
 36787                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 36788  00625E  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 36789  006260  0D08               	mullw	8
 36790  006262  0E00               	movlw	low _swTimers
 36791  006264  24F3               	addwf	prodl,w,c
 36792  006266  6ED9               	movwf	fsr2l,c
 36793  006268  0E03               	movlw	high _swTimers
 36794  00626A  20F4               	addwfc	prodh,w,c
 36795  00626C  6EDA               	movwf	fsr2h,c
 36796  00626E  6ADE               	clrf	postinc2,c
 36797  006270  6ADE               	clrf	postinc2,c
 36798  006272  6ADE               	clrf	postinc2,c
 36799  006274  6ADD               	clrf	postdec2,c
 36800                           
 36801                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 36802  006276  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 36803  006278  0D08               	mullw	8
 36804  00627A  0E05               	movlw	low (_swTimers+5)
 36805  00627C  24F3               	addwf	prodl,w,c
 36806  00627E  6ED9               	movwf	fsr2l,c
 36807  006280  0E03               	movlw	high (_swTimers+5)
 36808  006282  20F4               	addwfc	prodh,w,c
 36809  006284  6EDA               	movwf	fsr2h,c
 36810  006286  6ADF               	clrf	indf2,c
 36811                           
 36812                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 36813  006288  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 36814  00628A  0D08               	mullw	8
 36815  00628C  0E06               	movlw	low (_swTimers+6)
 36816  00628E  24F3               	addwf	prodl,w,c
 36817  006290  6ED9               	movwf	fsr2l,c
 36818  006292  0E03               	movlw	high (_swTimers+6)
 36819  006294  20F4               	addwfc	prodh,w,c
 36820  006296  6EDA               	movwf	fsr2h,c
 36821  006298  6ADE               	clrf	postinc2,c
 36822  00629A  6ADD               	clrf	postdec2,c
 36823                           
 36824                           ; BSR set to: 0
 36825                           ;sw_timer.c: 165: allocatedTimers++;
 36826  00629C  0101               	movlb	1	; () banked
 36827  00629E  2B77               	incf	_allocatedTimers& (0+255),f,b	;volatile
 36828                           
 36829                           ; BSR set to: 1
 36830                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 36831  0062A0  8EF2               	bsf	intcon,7,c	;volatile
 36832                           
 36833                           ;sw_timer.c: 167: }
 36834  0062A2  D001               	goto	l14173
 36835  0062A4                     l143:
 36836  0062A4  D7FF               	goto	l143
 36837  0062A6                     l14173:
 36838                           
 36839                           ; BSR set to: 1
 36840                           ;sw_timer.c: 175: }
 36841                           ;sw_timer.c: 176: }
 36842                           ;sw_timer.c: 177: return retVal;
 36843  0062A6  0100               	movlb	0	; () banked
 36844  0062A8  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 36845                           
 36846                           ; BSR set to: 0
 36847  0062AA  0012               	return		;funcret
 36848  0062AC                     __end_of_SwTimerCreate:
 36849                           	opt stack 0
 36850                           tosu	equ	0xFFF
 36851                           tosh	equ	0xFFE
 36852                           tosl	equ	0xFFD
 36853                           pclath	equ	0xFFA
 36854                           tblptru	equ	0xFF8
 36855                           tblptrh	equ	0xFF7
 36856                           tblptrl	equ	0xFF6
 36857                           tablat	equ	0xFF5
 36858                           prodh	equ	0xFF4
 36859                           prodl	equ	0xFF3
 36860                           intcon	equ	0xFF2
 36861                           indf0	equ	0xFEF
 36862                           postinc0	equ	0xFEE
 36863                           plusw0	equ	0xFEB
 36864                           fsr0h	equ	0xFEA
 36865                           fsr0l	equ	0xFE9
 36866                           wreg	equ	0xFE8
 36867                           postinc1	equ	0xFE6
 36868                           postdec1	equ	0xFE5
 36869                           plusw1	equ	0xFE3
 36870                           fsr1h	equ	0xFE2
 36871                           fsr1l	equ	0xFE1
 36872                           indf2	equ	0xFDF
 36873                           postinc2	equ	0xFDE
 36874                           postdec2	equ	0xFDD
 36875                           plusw2	equ	0xFDB
 36876                           fsr2h	equ	0xFDA
 36877                           fsr2l	equ	0xFD9
 36878                           status	equ	0xFD8
 36879                           
 36880 ;; *************** function _INTERRUPT_InterruptManager *****************
 36881 ;; Defined at:
 36882 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 36883 ;; Parameters:    Size  Location     Type
 36884 ;;		None
 36885 ;; Auto vars:     Size  Location     Type
 36886 ;;		None
 36887 ;; Return value:  Size  Location     Type
 36888 ;;                  1    wreg      void 
 36889 ;; Registers used:
 36890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 36891 ;; Tracked objects:
 36892 ;;		On entry : 0/0
 36893 ;;		On exit  : 0/0
 36894 ;;		Unchanged: 0/0
 36895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 36896 ;;      Params:         0       0       0       0       0       0       0       0       0
 36897 ;;      Locals:         0       0       0       0       0       0       0       0       0
 36898 ;;      Temps:          8       0       0       0       0       0       0       0       0
 36899 ;;      Totals:         8       0       0       0       0       0       0       0       0
 36900 ;;Total ram usage:        8 bytes
 36901 ;; Hardware stack levels used:    1
 36902 ;; Hardware stack levels required when called:    6
 36903 ;; This function calls:
 36904 ;;		_INT1_ISR
 36905 ;;		_INT2_ISR
 36906 ;;		_INT3_ISR
 36907 ;;		_PIN_MANAGER_IOC
 36908 ;;		_TMR1_ISR
 36909 ;; This function is called by:
 36910 ;;		Interrupt level 2
 36911 ;; This function uses a non-reentrant model
 36912 ;;
 36913                           
 36914                           	psect	intcode
 36915  000008                     __pintcode:
 36916                           	opt stack 0
 36917  000008                     _INTERRUPT_InterruptManager:
 36918                           	opt stack 12
 36919                           
 36920                           ; BSR set to: 0
 36921                           ;incstack = 0
 36922  000008  CFFA F028          	movff	pclath,??_INTERRUPT_InterruptManager
 36923  00000C  CFFB F029          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 36924  000010  CFE1 F02A          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 36925  000014  CFE2 F02B          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 36926  000018  CFD9 F02C          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 36927  00001C  CFDA F02D          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 36928  000020  CFF3 F02E          	movff	prodl,??_INTERRUPT_InterruptManager+6
 36929  000024  CFF4 F02F          	movff	prodh,??_INTERRUPT_InterruptManager+7
 36930  000028  EE17  F054         	lfsr	1,___inthi_sp
 36931                           
 36932                           ;interrupt_manager.c: 60: if(PIE0bits.INT3IE == 1 && PIR0bits.INT3IF == 1)
 36933  00002C  010E               	movlb	14	; () banked
 36934  00002E  B729               	btfsc	41,3,b	;volatile
 36935                           
 36936                           ; BSR set to: 14
 36937  000030  A733               	btfss	51,3,b	;volatile
 36938  000032  D003               	goto	i2l2508
 36939                           
 36940                           ; BSR set to: 14
 36941                           ;interrupt_manager.c: 61: {
 36942                           ;interrupt_manager.c: 62: INT3_ISR();
 36943  000034  ECAB  F03C         	call	_INT3_ISR	;wreg free
 36944                           
 36945                           ;interrupt_manager.c: 63: }
 36946  000038  D019               	goto	i2l2518
 36947  00003A                     i2l2508:
 36948                           
 36949                           ; BSR set to: 14
 36950                           ;interrupt_manager.c: 64: else if(PIE0bits.INT1IE == 1 && PIR0bits.INT1IF == 1)
 36951  00003A  B329               	btfsc	41,1,b	;volatile
 36952                           
 36953                           ; BSR set to: 14
 36954  00003C  A333               	btfss	51,1,b	;volatile
 36955  00003E  D003               	goto	i2l2510
 36956                           
 36957                           ; BSR set to: 14
 36958                           ;interrupt_manager.c: 65: {
 36959                           ;interrupt_manager.c: 66: INT1_ISR();
 36960  000040  ECB1  F03C         	call	_INT1_ISR	;wreg free
 36961                           
 36962                           ;interrupt_manager.c: 67: }
 36963  000044  D013               	goto	i2l2518
 36964  000046                     i2l2510:
 36965                           
 36966                           ; BSR set to: 14
 36967                           ;interrupt_manager.c: 68: else if(PIE0bits.INT2IE == 1 && PIR0bits.INT2IF == 1)
 36968  000046  B529               	btfsc	41,2,b	;volatile
 36969                           
 36970                           ; BSR set to: 14
 36971  000048  A533               	btfss	51,2,b	;volatile
 36972  00004A  D003               	goto	i2l2512
 36973                           
 36974                           ; BSR set to: 14
 36975                           ;interrupt_manager.c: 69: {
 36976                           ;interrupt_manager.c: 70: INT2_ISR();
 36977  00004C  ECAE  F03C         	call	_INT2_ISR	;wreg free
 36978                           
 36979                           ;interrupt_manager.c: 71: }
 36980  000050  D00D               	goto	i2l2518
 36981  000052                     i2l2512:
 36982                           
 36983                           ; BSR set to: 14
 36984                           ;interrupt_manager.c: 72: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR1IE == 1 && PIR5bi
      +                          ts.TMR1IF == 1)
 36985  000052  BCF2               	btfsc	intcon,6,c	;volatile
 36986                           
 36987                           ; BSR set to: 14
 36988  000054  A12E               	btfss	46,0,b	;volatile
 36989  000056  D005               	goto	i2l2514
 36990                           
 36991                           ; BSR set to: 14
 36992  000058  A138               	btfss	56,0,b	;volatile
 36993  00005A  D003               	goto	i2l2514
 36994                           
 36995                           ; BSR set to: 14
 36996                           ;interrupt_manager.c: 73: {
 36997                           ;interrupt_manager.c: 74: TMR1_ISR();
 36998  00005C  EC22  F03A         	call	_TMR1_ISR	;wreg free
 36999                           
 37000                           ;interrupt_manager.c: 75: }
 37001  000060  D005               	goto	i2l2518
 37002  000062                     i2l2514:
 37003                           
 37004                           ; BSR set to: 14
 37005                           ;interrupt_manager.c: 76: else if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
 37006  000062  B929               	btfsc	41,4,b	;volatile
 37007                           
 37008                           ; BSR set to: 14
 37009  000064  A933               	btfss	51,4,b	;volatile
 37010  000066  D002               	goto	i2l2518
 37011                           
 37012                           ; BSR set to: 14
 37013                           ;interrupt_manager.c: 77: {
 37014                           ;interrupt_manager.c: 78: PIN_MANAGER_IOC();
 37015  000068  EC89  F03C         	call	_PIN_MANAGER_IOC	;wreg free
 37016  00006C                     i2l2518:
 37017  00006C  C02F  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 37018  000070  C02E  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 37019  000074  C02D  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 37020  000078  C02C  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 37021  00007C  C02B  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 37022  000080  C02A  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 37023  000084  C029  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 37024  000088  C028  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 37025  00008C  0011               	retfie		f
 37026  00008E                     __end_of_INTERRUPT_InterruptManager:
 37027                           	opt stack 0
 37028                           tosu	equ	0xFFF
 37029                           tosh	equ	0xFFE
 37030                           tosl	equ	0xFFD
 37031                           pclatu	equ	0xFFB
 37032                           pclath	equ	0xFFA
 37033                           tblptru	equ	0xFF8
 37034                           tblptrh	equ	0xFF7
 37035                           tblptrl	equ	0xFF6
 37036                           tablat	equ	0xFF5
 37037                           prodh	equ	0xFF4
 37038                           prodl	equ	0xFF3
 37039                           intcon	equ	0xFF2
 37040                           indf0	equ	0xFEF
 37041                           postinc0	equ	0xFEE
 37042                           plusw0	equ	0xFEB
 37043                           fsr0h	equ	0xFEA
 37044                           fsr0l	equ	0xFE9
 37045                           wreg	equ	0xFE8
 37046                           postinc1	equ	0xFE6
 37047                           postdec1	equ	0xFE5
 37048                           plusw1	equ	0xFE3
 37049                           fsr1h	equ	0xFE2
 37050                           fsr1l	equ	0xFE1
 37051                           indf2	equ	0xFDF
 37052                           postinc2	equ	0xFDE
 37053                           postdec2	equ	0xFDD
 37054                           plusw2	equ	0xFDB
 37055                           fsr2h	equ	0xFDA
 37056                           fsr2l	equ	0xFD9
 37057                           status	equ	0xFD8
 37058                           
 37059 ;; *************** function _TMR1_ISR *****************
 37060 ;; Defined at:
 37061 ;;		line 161 in file "mcc_generated_files/tmr1.c"
 37062 ;; Parameters:    Size  Location     Type
 37063 ;;		None
 37064 ;; Auto vars:     Size  Location     Type
 37065 ;;		None
 37066 ;; Return value:  Size  Location     Type
 37067 ;;                  1    wreg      void 
 37068 ;; Registers used:
 37069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 37070 ;; Tracked objects:
 37071 ;;		On entry : F/E
 37072 ;;		On exit  : 0/0
 37073 ;;		Unchanged: 0/0
 37074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 37075 ;;      Params:         0       0       0       0       0       0       0       0       0
 37076 ;;      Locals:         0       0       0       0       0       0       0       0       0
 37077 ;;      Temps:          0       0       0       0       0       0       0       0       0
 37078 ;;      Totals:         0       0       0       0       0       0       0       0       0
 37079 ;;Total ram usage:        0 bytes
 37080 ;; Hardware stack levels used:    1
 37081 ;; Hardware stack levels required when called:    5
 37082 ;; This function calls:
 37083 ;;		_TMR1_CallBack
 37084 ;; This function is called by:
 37085 ;;		_INTERRUPT_InterruptManager
 37086 ;; This function uses a non-reentrant model
 37087 ;;
 37088                           
 37089                           	psect	text199
 37090  007444                     __ptext199:
 37091                           	opt stack 0
 37092  007444                     _TMR1_ISR:
 37093                           	opt stack 12
 37094                           
 37095                           ; BSR set to: 14
 37096                           ;tmr1.c: 163: static volatile unsigned int CountCallBack = 0;
 37097                           ;tmr1.c: 166: PIR5bits.TMR1IF = 0;
 37098                           
 37099                           ;incstack = 0
 37100  007444  9138               	bcf	56,0,b	;volatile
 37101                           
 37102                           ;tmr1.c: 168: TMR1H = (timer1ReloadVal >> 8);
 37103  007446  C05F  FFCE         	movff	_timer1ReloadVal+1,4046	;volatile
 37104                           
 37105                           ;tmr1.c: 169: TMR1L = timer1ReloadVal;
 37106  00744A  C05E  FFCD         	movff	_timer1ReloadVal,4045	;volatile
 37107                           
 37108                           ; BSR set to: 14
 37109                           ;tmr1.c: 172: if (++CountCallBack >= 16)
 37110  00744E  4A3C               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
 37111  007450  2A3D               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
 37112  007452  503D               	movf	TMR1_ISR@CountCallBack+1,w,c	;volatile
 37113  007454  E104               	bnz	i2u1983_40
 37114  007456  0E10               	movlw	16
 37115  007458  5C3C               	subwf	TMR1_ISR@CountCallBack,w,c	;volatile
 37116  00745A  A0D8               	btfss	status,0,c
 37117  00745C  0012               	return	
 37118  00745E                     i2u1983_40:
 37119                           
 37120                           ; BSR set to: 14
 37121                           ;tmr1.c: 173: {
 37122                           ;tmr1.c: 175: TMR1_CallBack();
 37123  00745E  ECE3  F03A         	call	_TMR1_CallBack	;wreg free
 37124                           
 37125                           ;tmr1.c: 178: CountCallBack = 0;
 37126  007462  6A3C               	clrf	TMR1_ISR@CountCallBack,c	;volatile
 37127  007464  6A3D               	clrf	TMR1_ISR@CountCallBack+1,c	;volatile
 37128  007466  0012               	return		;funcret
 37129  007468                     __end_of_TMR1_ISR:
 37130                           	opt stack 0
 37131                           tosu	equ	0xFFF
 37132                           tosh	equ	0xFFE
 37133                           tosl	equ	0xFFD
 37134                           pclatu	equ	0xFFB
 37135                           pclath	equ	0xFFA
 37136                           tblptru	equ	0xFF8
 37137                           tblptrh	equ	0xFF7
 37138                           tblptrl	equ	0xFF6
 37139                           tablat	equ	0xFF5
 37140                           prodh	equ	0xFF4
 37141                           prodl	equ	0xFF3
 37142                           intcon	equ	0xFF2
 37143                           indf0	equ	0xFEF
 37144                           postinc0	equ	0xFEE
 37145                           plusw0	equ	0xFEB
 37146                           fsr0h	equ	0xFEA
 37147                           fsr0l	equ	0xFE9
 37148                           wreg	equ	0xFE8
 37149                           postinc1	equ	0xFE6
 37150                           postdec1	equ	0xFE5
 37151                           plusw1	equ	0xFE3
 37152                           fsr1h	equ	0xFE2
 37153                           fsr1l	equ	0xFE1
 37154                           indf2	equ	0xFDF
 37155                           postinc2	equ	0xFDE
 37156                           postdec2	equ	0xFDD
 37157                           plusw2	equ	0xFDB
 37158                           fsr2h	equ	0xFDA
 37159                           fsr2l	equ	0xFD9
 37160                           status	equ	0xFD8
 37161                           
 37162 ;; *************** function _TMR1_CallBack *****************
 37163 ;; Defined at:
 37164 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 37165 ;; Parameters:    Size  Location     Type
 37166 ;;		None
 37167 ;; Auto vars:     Size  Location     Type
 37168 ;;		None
 37169 ;; Return value:  Size  Location     Type
 37170 ;;                  1    wreg      void 
 37171 ;; Registers used:
 37172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 37173 ;; Tracked objects:
 37174 ;;		On entry : F/E
 37175 ;;		On exit  : 0/0
 37176 ;;		Unchanged: 0/0
 37177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 37178 ;;      Params:         0       0       0       0       0       0       0       0       0
 37179 ;;      Locals:         0       0       0       0       0       0       0       0       0
 37180 ;;      Temps:          0       0       0       0       0       0       0       0       0
 37181 ;;      Totals:         0       0       0       0       0       0       0       0       0
 37182 ;;Total ram usage:        0 bytes
 37183 ;; Hardware stack levels used:    1
 37184 ;; Hardware stack levels required when called:    4
 37185 ;; This function calls:
 37186 ;;		Absolute function
 37187 ;;		_TMR1_DefaultInterruptHandler
 37188 ;;		_TMR_ISR_lora
 37189 ;; This function is called by:
 37190 ;;		_TMR1_ISR
 37191 ;; This function uses a non-reentrant model
 37192 ;;
 37193                           
 37194                           	psect	text200
 37195  0075C6                     __ptext200:
 37196                           	opt stack 0
 37197  0075C6                     _TMR1_CallBack:
 37198                           	opt stack 12
 37199                           
 37200                           ; BSR set to: 14
 37201                           ;tmr1.c: 185: if(TMR1_InterruptHandler)
 37202                           
 37203                           ;incstack = 0
 37204  0075C6  0101               	movlb	1	; () banked
 37205  0075C8  51F9               	movf	_TMR1_InterruptHandler& (0+255),w,b
 37206  0075CA  11FA               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 37207  0075CC  B4D8               	btfsc	status,2,c
 37208  0075CE  0012               	return	
 37209                           
 37210                           ; BSR set to: 1
 37211                           ;tmr1.c: 186: {
 37212                           ;tmr1.c: 187: TMR1_InterruptHandler();
 37213  0075D0  0005               	push	
 37214  0075D2  6EFA               	movwf	pclath,c
 37215  0075D4  51F9               	movf	_TMR1_InterruptHandler& (0+255),w,b
 37216  0075D6  6EFD               	movwf	tosl,c
 37217  0075D8  51FA               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 37218  0075DA  6EFE               	movwf	tosh,c
 37219  0075DC  50F8               	movf	tblptru,w,c
 37220  0075DE  6EFF               	movwf	tosu,c
 37221  0075E0  50FA               	movf	pclath,w,c
 37222  0075E2  0012               	return		;indir
 37223  0075E4                     __end_of_TMR1_CallBack:
 37224                           	opt stack 0
 37225                           tosu	equ	0xFFF
 37226                           tosh	equ	0xFFE
 37227                           tosl	equ	0xFFD
 37228                           pclatu	equ	0xFFB
 37229                           pclath	equ	0xFFA
 37230                           tblptru	equ	0xFF8
 37231                           tblptrh	equ	0xFF7
 37232                           tblptrl	equ	0xFF6
 37233                           tablat	equ	0xFF5
 37234                           prodh	equ	0xFF4
 37235                           prodl	equ	0xFF3
 37236                           intcon	equ	0xFF2
 37237                           indf0	equ	0xFEF
 37238                           postinc0	equ	0xFEE
 37239                           plusw0	equ	0xFEB
 37240                           fsr0h	equ	0xFEA
 37241                           fsr0l	equ	0xFE9
 37242                           wreg	equ	0xFE8
 37243                           postinc1	equ	0xFE6
 37244                           postdec1	equ	0xFE5
 37245                           plusw1	equ	0xFE3
 37246                           fsr1h	equ	0xFE2
 37247                           fsr1l	equ	0xFE1
 37248                           indf2	equ	0xFDF
 37249                           postinc2	equ	0xFDE
 37250                           postdec2	equ	0xFDD
 37251                           plusw2	equ	0xFDB
 37252                           fsr2h	equ	0xFDA
 37253                           fsr2l	equ	0xFD9
 37254                           status	equ	0xFD8
 37255                           
 37256 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 37257 ;; Defined at:
 37258 ;;		line 195 in file "mcc_generated_files/tmr1.c"
 37259 ;; Parameters:    Size  Location     Type
 37260 ;;		None
 37261 ;; Auto vars:     Size  Location     Type
 37262 ;;		None
 37263 ;; Return value:  Size  Location     Type
 37264 ;;                  1    wreg      void 
 37265 ;; Registers used:
 37266 ;;		None
 37267 ;; Tracked objects:
 37268 ;;		On entry : F/1
 37269 ;;		On exit  : F/1
 37270 ;;		Unchanged: F/0
 37271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 37272 ;;      Params:         0       0       0       0       0       0       0       0       0
 37273 ;;      Locals:         0       0       0       0       0       0       0       0       0
 37274 ;;      Temps:          0       0       0       0       0       0       0       0       0
 37275 ;;      Totals:         0       0       0       0       0       0       0       0       0
 37276 ;;Total ram usage:        0 bytes
 37277 ;; Hardware stack levels used:    1
 37278 ;; This function calls:
 37279 ;;		Nothing
 37280 ;; This function is called by:
 37281 ;;		_TMR1_Initialize
 37282 ;;		_TMR1_CallBack
 37283 ;; This function uses a non-reentrant model
 37284 ;;
 37285                           
 37286                           	psect	text201
 37287  007988                     __ptext201:
 37288                           	opt stack 0
 37289  007988                     _TMR1_DefaultInterruptHandler:
 37290                           	opt stack 15
 37291                           
 37292                           ; BSR set to: 1
 37293                           
 37294                           ;incstack = 0
 37295  007988  0012               	return		;funcret
 37296  00798A                     __end_of_TMR1_DefaultInterruptHandler:
 37297                           	opt stack 0
 37298                           tosu	equ	0xFFF
 37299                           tosh	equ	0xFFE
 37300                           tosl	equ	0xFFD
 37301                           pclatu	equ	0xFFB
 37302                           pclath	equ	0xFFA
 37303                           tblptru	equ	0xFF8
 37304                           tblptrh	equ	0xFF7
 37305                           tblptrl	equ	0xFF6
 37306                           tablat	equ	0xFF5
 37307                           prodh	equ	0xFF4
 37308                           prodl	equ	0xFF3
 37309                           intcon	equ	0xFF2
 37310                           indf0	equ	0xFEF
 37311                           postinc0	equ	0xFEE
 37312                           plusw0	equ	0xFEB
 37313                           fsr0h	equ	0xFEA
 37314                           fsr0l	equ	0xFE9
 37315                           wreg	equ	0xFE8
 37316                           postinc1	equ	0xFE6
 37317                           postdec1	equ	0xFE5
 37318                           plusw1	equ	0xFE3
 37319                           fsr1h	equ	0xFE2
 37320                           fsr1l	equ	0xFE1
 37321                           indf2	equ	0xFDF
 37322                           postinc2	equ	0xFDE
 37323                           postdec2	equ	0xFDD
 37324                           plusw2	equ	0xFDB
 37325                           fsr2h	equ	0xFDA
 37326                           fsr2l	equ	0xFD9
 37327                           status	equ	0xFD8
 37328                           
 37329 ;; *************** function _TMR_ISR_lora *****************
 37330 ;; Defined at:
 37331 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 37332 ;; Parameters:    Size  Location     Type
 37333 ;;		None
 37334 ;; Auto vars:     Size  Location     Type
 37335 ;;		None
 37336 ;; Return value:  Size  Location     Type
 37337 ;;                  1    wreg      void 
 37338 ;; Registers used:
 37339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37340 ;; Tracked objects:
 37341 ;;		On entry : F/1
 37342 ;;		On exit  : 0/0
 37343 ;;		Unchanged: 0/0
 37344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 37345 ;;      Params:         0       0       0       0       0       0       0       0       0
 37346 ;;      Locals:         0       0       0       0       0       0       0       0       0
 37347 ;;      Temps:          0       0       0       0       0       0       0       0       0
 37348 ;;      Totals:         0       0       0       0       0       0       0       0       0
 37349 ;;Total ram usage:        0 bytes
 37350 ;; Hardware stack levels used:    1
 37351 ;; Hardware stack levels required when called:    3
 37352 ;; This function calls:
 37353 ;;		i2_SwTimersInterrupt
 37354 ;;		i2_TMR_SwapTimer
 37355 ;; This function is called by:
 37356 ;;		_TMR_ISR_Lora_Init
 37357 ;;		_TMR1_CallBack
 37358 ;; This function uses a non-reentrant model
 37359 ;;
 37360                           
 37361                           	psect	text202
 37362  006B0A                     __ptext202:
 37363                           	opt stack 0
 37364  006B0A                     _TMR_ISR_lora:
 37365                           	opt stack 12
 37366                           
 37367                           ; BSR set to: 1
 37368                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 37369                           
 37370                           ; BSR set to: 1
 37371                           ;incstack = 0
 37372  006B0A  0E01               	movlw	1
 37373  006B0C  6E49               	movwf	_timerOverflow,c	;volatile
 37374                           
 37375                           ; BSR set to: 1
 37376                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 37377  006B0E  EC4F  F026         	call	i2_SwTimersInterrupt	;wreg free
 37378  006B12  C017  F05A         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 37379  006B16  C018  F05B         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 37380  006B1A  C019  F05C         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 37381  006B1E  C01A  F05D         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 37382                           
 37383                           ; BSR set to: 1
 37384                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 37385  006B22  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37386  006B24  E117               	bnz	i2l259
 37387  006B26  045C               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37388  006B28  B0D8               	btfsc	status,0,c
 37389  006B2A  0012               	return	
 37390                           
 37391                           ; BSR set to: 1
 37392                           ;tmr_lora_addons.c: 66: {
 37393                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 37394  006B2C  505A               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 37395  006B2E  0800               	sublw	0
 37396  006B30  6E44               	movwf	_reloadVal,c	;volatile
 37397  006B32  505B               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37398  006B34  A0D8               	btfss	status,0,c
 37399  006B36  2AE8               	incf	wreg,f,c
 37400  006B38  0800               	sublw	0
 37401  006B3A  6E45               	movwf	_reloadVal+1,c	;volatile
 37402                           
 37403                           ; BSR set to: 1
 37404                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 37405  006B3C  C044  F007         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 37406  006B40  C045  F008         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 37407  006B44  EC83  F037         	call	i2_TMR_SwapTimer	;wreg free
 37408  006B48  C007  F038         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 37409  006B4C  C008  F039         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 37410  006B50  6A3A               	clrf	_ticksAdded+2,c	;volatile
 37411  006B52  6A3B               	clrf	_ticksAdded+3,c	;volatile
 37412  006B54                     i2l259:
 37413  006B54  0012               	return		;funcret
 37414  006B56                     __end_of_TMR_ISR_lora:
 37415                           	opt stack 0
 37416                           tosu	equ	0xFFF
 37417                           tosh	equ	0xFFE
 37418                           tosl	equ	0xFFD
 37419                           pclatu	equ	0xFFB
 37420                           pclath	equ	0xFFA
 37421                           tblptru	equ	0xFF8
 37422                           tblptrh	equ	0xFF7
 37423                           tblptrl	equ	0xFF6
 37424                           tablat	equ	0xFF5
 37425                           prodh	equ	0xFF4
 37426                           prodl	equ	0xFF3
 37427                           intcon	equ	0xFF2
 37428                           indf0	equ	0xFEF
 37429                           postinc0	equ	0xFEE
 37430                           plusw0	equ	0xFEB
 37431                           fsr0h	equ	0xFEA
 37432                           fsr0l	equ	0xFE9
 37433                           wreg	equ	0xFE8
 37434                           postinc1	equ	0xFE6
 37435                           postdec1	equ	0xFE5
 37436                           plusw1	equ	0xFE3
 37437                           fsr1h	equ	0xFE2
 37438                           fsr1l	equ	0xFE1
 37439                           indf2	equ	0xFDF
 37440                           postinc2	equ	0xFDE
 37441                           postdec2	equ	0xFDD
 37442                           plusw2	equ	0xFDB
 37443                           fsr2h	equ	0xFDA
 37444                           fsr2l	equ	0xFD9
 37445                           status	equ	0xFD8
 37446                           
 37447 ;; *************** function i2_TMR_SwapTimer *****************
 37448 ;; Defined at:
 37449 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37450 ;; Parameters:    Size  Location     Type
 37451 ;;  timerVal        2    6[COMRAM] unsigned int 
 37452 ;; Auto vars:     Size  Location     Type
 37453 ;;		None
 37454 ;; Return value:  Size  Location     Type
 37455 ;;                  2    6[COMRAM] unsigned int 
 37456 ;; Registers used:
 37457 ;;		wreg, status,2, status,0, cstack
 37458 ;; Tracked objects:
 37459 ;;		On entry : F/1
 37460 ;;		On exit  : 0/0
 37461 ;;		Unchanged: 0/0
 37462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 37463 ;;      Params:         2       0       0       0       0       0       0       0       0
 37464 ;;      Locals:         0       0       0       0       0       0       0       0       0
 37465 ;;      Temps:          0       0       0       0       0       0       0       0       0
 37466 ;;      Totals:         2       0       0       0       0       0       0       0       0
 37467 ;;Total ram usage:        2 bytes
 37468 ;; Hardware stack levels used:    1
 37469 ;; Hardware stack levels required when called:    1
 37470 ;; This function calls:
 37471 ;;		i2_TMR1_ReadTimer
 37472 ;;		i2_TMR1_WriteTimer
 37473 ;; This function is called by:
 37474 ;;		_TMR_ISR_lora
 37475 ;; This function uses a non-reentrant model
 37476 ;;
 37477                           
 37478                           	psect	text203
 37479  006F06                     __ptext203:
 37480                           	opt stack 0
 37481  006F06                     i2_TMR_SwapTimer:
 37482                           	opt stack 13
 37483                           
 37484                           ; BSR set to: 1
 37485                           ;sw_timer.c: 114: static uint16_t oldVal;
 37486                           ;sw_timer.c: 115: static uint16_t retVal;
 37487                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 37488                           
 37489                           ;incstack = 0
 37490  006F06  EC97  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 37491  006F0A  C001  F040         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 37492  006F0E  C002  F041         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 37493  006F12                     i2l10557:
 37494  006F12  EC97  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 37495  006F16  5040               	movf	TMR_SwapTimer@oldVal,w,c
 37496  006F18  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 37497  006F1A  E103               	bnz	i2u1103_40
 37498  006F1C  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 37499  006F1E  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 37500  006F20  E0F8               	bz	i2l10557
 37501  006F22                     i2u1103_40:
 37502                           
 37503                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 37504  006F22  C007  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 37505  006F26  C008  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 37506  006F2A  EC49  F03B         	call	i2_TMR1_WriteTimer	;wreg free
 37507                           
 37508                           ;sw_timer.c: 128: oldVal++;
 37509  006F2E  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 37510  006F30  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 37511                           
 37512                           ;sw_timer.c: 130: retVal = oldVal;
 37513  006F32  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 37514  006F36  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 37515                           
 37516                           ;sw_timer.c: 132: return retVal;
 37517  006F3A  C042  F007         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 37518  006F3E  C043  F008         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 37519  006F42  0012               	return		;funcret
 37520  006F44                     __end_ofi2_TMR_SwapTimer:
 37521                           	opt stack 0
 37522                           tosu	equ	0xFFF
 37523                           tosh	equ	0xFFE
 37524                           tosl	equ	0xFFD
 37525                           pclatu	equ	0xFFB
 37526                           pclath	equ	0xFFA
 37527                           tblptru	equ	0xFF8
 37528                           tblptrh	equ	0xFF7
 37529                           tblptrl	equ	0xFF6
 37530                           tablat	equ	0xFF5
 37531                           prodh	equ	0xFF4
 37532                           prodl	equ	0xFF3
 37533                           intcon	equ	0xFF2
 37534                           indf0	equ	0xFEF
 37535                           postinc0	equ	0xFEE
 37536                           plusw0	equ	0xFEB
 37537                           fsr0h	equ	0xFEA
 37538                           fsr0l	equ	0xFE9
 37539                           wreg	equ	0xFE8
 37540                           postinc1	equ	0xFE6
 37541                           postdec1	equ	0xFE5
 37542                           plusw1	equ	0xFE3
 37543                           fsr1h	equ	0xFE2
 37544                           fsr1l	equ	0xFE1
 37545                           indf2	equ	0xFDF
 37546                           postinc2	equ	0xFDE
 37547                           postdec2	equ	0xFDD
 37548                           plusw2	equ	0xFDB
 37549                           fsr2h	equ	0xFDA
 37550                           fsr2l	equ	0xFD9
 37551                           status	equ	0xFD8
 37552                           
 37553 ;; *************** function i2_TMR1_WriteTimer *****************
 37554 ;; Defined at:
 37555 ;;		line 122 in file "mcc_generated_files/tmr1.c"
 37556 ;; Parameters:    Size  Location     Type
 37557 ;;  timerVal        2    0[COMRAM] unsigned int 
 37558 ;; Auto vars:     Size  Location     Type
 37559 ;;		None
 37560 ;; Return value:  Size  Location     Type
 37561 ;;                  1    wreg      void 
 37562 ;; Registers used:
 37563 ;;		None
 37564 ;; Tracked objects:
 37565 ;;		On entry : 0/1
 37566 ;;		On exit  : 0/0
 37567 ;;		Unchanged: 0/0
 37568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 37569 ;;      Params:         2       0       0       0       0       0       0       0       0
 37570 ;;      Locals:         0       0       0       0       0       0       0       0       0
 37571 ;;      Temps:          0       0       0       0       0       0       0       0       0
 37572 ;;      Totals:         2       0       0       0       0       0       0       0       0
 37573 ;;Total ram usage:        2 bytes
 37574 ;; Hardware stack levels used:    1
 37575 ;; This function calls:
 37576 ;;		Nothing
 37577 ;; This function is called by:
 37578 ;;		i2_TMR_SwapTimer
 37579 ;; This function uses a non-reentrant model
 37580 ;;
 37581                           
 37582                           	psect	text204
 37583  007692                     __ptext204:
 37584                           	opt stack 0
 37585  007692                     i2_TMR1_WriteTimer:
 37586                           	opt stack 13
 37587                           
 37588                           ;tmr1.c: 124: if (T1CONbits.nT1SYNC == 1)
 37589                           
 37590                           ;incstack = 0
 37591  007692  A4CF               	btfss	4047,2,c	;volatile
 37592  007694  D007               	goto	i2l1368
 37593                           
 37594                           ;tmr1.c: 125: {
 37595                           ;tmr1.c: 127: T1CONbits.TMR1ON = 0;
 37596  007696  90CF               	bcf	4047,0,c	;volatile
 37597                           
 37598                           ;tmr1.c: 130: TMR1H = (timerVal >> 8);
 37599  007698  C002  FFCE         	movff	i2TMR1_WriteTimer@timerVal+1,4046	;volatile
 37600                           
 37601                           ;tmr1.c: 131: TMR1L = timerVal;
 37602  00769C  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 37603                           
 37604                           ;tmr1.c: 134: T1CONbits.TMR1ON =1;
 37605  0076A0  80CF               	bsf	4047,0,c	;volatile
 37606                           
 37607                           ;tmr1.c: 135: }
 37608  0076A2  0012               	return	
 37609  0076A4                     i2l1368:
 37610                           
 37611                           ;tmr1.c: 136: else
 37612                           ;tmr1.c: 137: {
 37613                           ;tmr1.c: 139: TMR1H = (timerVal >> 8);
 37614  0076A4  C002  FFCE         	movff	i2TMR1_WriteTimer@timerVal+1,4046	;volatile
 37615                           
 37616                           ;tmr1.c: 140: TMR1L = timerVal;
 37617  0076A8  C001  FFCD         	movff	i2TMR1_WriteTimer@timerVal,4045	;volatile
 37618  0076AC  0012               	return		;funcret
 37619  0076AE                     __end_ofi2_TMR1_WriteTimer:
 37620                           	opt stack 0
 37621                           tosu	equ	0xFFF
 37622                           tosh	equ	0xFFE
 37623                           tosl	equ	0xFFD
 37624                           pclatu	equ	0xFFB
 37625                           pclath	equ	0xFFA
 37626                           tblptru	equ	0xFF8
 37627                           tblptrh	equ	0xFF7
 37628                           tblptrl	equ	0xFF6
 37629                           tablat	equ	0xFF5
 37630                           prodh	equ	0xFF4
 37631                           prodl	equ	0xFF3
 37632                           intcon	equ	0xFF2
 37633                           indf0	equ	0xFEF
 37634                           postinc0	equ	0xFEE
 37635                           plusw0	equ	0xFEB
 37636                           fsr0h	equ	0xFEA
 37637                           fsr0l	equ	0xFE9
 37638                           wreg	equ	0xFE8
 37639                           postinc1	equ	0xFE6
 37640                           postdec1	equ	0xFE5
 37641                           plusw1	equ	0xFE3
 37642                           fsr1h	equ	0xFE2
 37643                           fsr1l	equ	0xFE1
 37644                           indf2	equ	0xFDF
 37645                           postinc2	equ	0xFDE
 37646                           postdec2	equ	0xFDD
 37647                           plusw2	equ	0xFDB
 37648                           fsr2h	equ	0xFDA
 37649                           fsr2l	equ	0xFD9
 37650                           status	equ	0xFD8
 37651                           
 37652 ;; *************** function i2_SwTimersInterrupt *****************
 37653 ;; Defined at:
 37654 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37655 ;; Parameters:    Size  Location     Type
 37656 ;;		None
 37657 ;; Auto vars:     Size  Location     Type
 37658 ;;  SwTimersInte    4   34[COMRAM] unsigned long 
 37659 ;;  SwTimersInte    4   30[COMRAM] unsigned long 
 37660 ;;  SwTimersInte    1   38[COMRAM] unsigned char 
 37661 ;; Return value:  Size  Location     Type
 37662 ;;                  4   22[COMRAM] unsigned long 
 37663 ;; Registers used:
 37664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37665 ;; Tracked objects:
 37666 ;;		On entry : F/1
 37667 ;;		On exit  : F/1
 37668 ;;		Unchanged: 0/0
 37669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 37670 ;;      Params:         4       0       0       0       0       0       0       0       0
 37671 ;;      Locals:         9       0       0       0       0       0       0       0       0
 37672 ;;      Temps:          4       0       0       0       0       0       0       0       0
 37673 ;;      Totals:        17       0       0       0       0       0       0       0       0
 37674 ;;Total ram usage:       17 bytes
 37675 ;; Hardware stack levels used:    1
 37676 ;; Hardware stack levels required when called:    2
 37677 ;; This function calls:
 37678 ;;		i2_TMR_GetDeltaTime
 37679 ;; This function is called by:
 37680 ;;		_TMR_ISR_lora
 37681 ;; This function uses a non-reentrant model
 37682 ;;
 37683                           
 37684                           	psect	text205
 37685  004C9E                     __ptext205:
 37686                           	opt stack 0
 37687  004C9E                     i2_SwTimersInterrupt:
 37688                           	opt stack 12
 37689                           
 37690                           ; BSR set to: 1
 37691                           ;sw_timer.c: 289: uint8_t i;
 37692                           ;sw_timer.c: 290: uint32_t timeElapsed;
 37693                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 37694                           
 37695                           ;incstack = 0
 37696  004C9E  6823               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 37697  004CA0  6824               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 37698  004CA2  6825               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 37699  004CA4  6826               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 37700                           
 37701                           ; BSR set to: 1
 37702                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 37703  004CA6  EC3C  F027         	call	i2_TMR_GetDeltaTime	;wreg free
 37704  004CAA  C007  F01F         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 37705  004CAE  C008  F020         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 37706  004CB2  C009  F021         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 37707  004CB6  C00A  F022         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 37708                           
 37709                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 37710  004CBA  6A27               	clrf	i2SwTimersInterrupt@i,c
 37711  004CBC  D05A               	goto	i2l10587
 37712  004CBE                     i2l10575:
 37713                           
 37714                           ; BSR set to: 1
 37715                           ;sw_timer.c: 298: {
 37716                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 37717  004CBE  5027               	movf	i2SwTimersInterrupt@i,w,c
 37718  004CC0  0D08               	mullw	8
 37719  004CC2  0E04               	movlw	low (_swTimers+4)
 37720  004CC4  24F3               	addwf	prodl,w,c
 37721  004CC6  6ED9               	movwf	fsr2l,c
 37722  004CC8  0E03               	movlw	high (_swTimers+4)
 37723  004CCA  20F4               	addwfc	prodh,w,c
 37724  004CCC  6EDA               	movwf	fsr2h,c
 37725  004CCE  04DE               	decf	postinc2,w,c
 37726  004CD0  E14F               	bnz	i2l10585
 37727                           
 37728                           ; BSR set to: 1
 37729                           ;sw_timer.c: 302: {
 37730                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 37731  004CD2  5027               	movf	i2SwTimersInterrupt@i,w,c
 37732  004CD4  0D08               	mullw	8
 37733  004CD6  0E00               	movlw	low _swTimers
 37734  004CD8  24F3               	addwf	prodl,w,c
 37735  004CDA  6ED9               	movwf	fsr2l,c
 37736  004CDC  0E03               	movlw	high _swTimers
 37737  004CDE  20F4               	addwfc	prodh,w,c
 37738  004CE0  6EDA               	movwf	fsr2h,c
 37739  004CE2  50DE               	movf	postinc2,w,c
 37740  004CE4  5C1F               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 37741  004CE6  50DE               	movf	postinc2,w,c
 37742  004CE8  5820               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 37743  004CEA  50DE               	movf	postinc2,w,c
 37744  004CEC  5821               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 37745  004CEE  50DE               	movf	postinc2,w,c
 37746  004CF0  5822               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 37747  004CF2  E30D               	bnc	i2l10581
 37748                           
 37749                           ; BSR set to: 1
 37750                           ;sw_timer.c: 304: {
 37751                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 37752  004CF4  5027               	movf	i2SwTimersInterrupt@i,w,c
 37753  004CF6  0D08               	mullw	8
 37754  004CF8  0E00               	movlw	low _swTimers
 37755  004CFA  24F3               	addwf	prodl,w,c
 37756  004CFC  6ED9               	movwf	fsr2l,c
 37757  004CFE  0E03               	movlw	high _swTimers
 37758  004D00  20F4               	addwfc	prodh,w,c
 37759  004D02  6EDA               	movwf	fsr2h,c
 37760  004D04  6ADE               	clrf	postinc2,c
 37761  004D06  6ADE               	clrf	postinc2,c
 37762  004D08  6ADE               	clrf	postinc2,c
 37763  004D0A  6ADD               	clrf	postdec2,c
 37764                           
 37765                           ;sw_timer.c: 306: }
 37766  004D0C  D031               	goto	i2l10585
 37767  004D0E                     i2l10581:
 37768                           
 37769                           ; BSR set to: 1
 37770                           ;sw_timer.c: 307: else
 37771                           ;sw_timer.c: 308: {
 37772                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 37773  004D0E  5027               	movf	i2SwTimersInterrupt@i,w,c
 37774  004D10  0D08               	mullw	8
 37775  004D12  0E00               	movlw	low _swTimers
 37776  004D14  24F3               	addwf	prodl,w,c
 37777  004D16  6ED9               	movwf	fsr2l,c
 37778  004D18  0E03               	movlw	high _swTimers
 37779  004D1A  20F4               	addwfc	prodh,w,c
 37780  004D1C  6EDA               	movwf	fsr2h,c
 37781  004D1E  501F               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 37782  004D20  5EDE               	subwf	postinc2,f,c
 37783  004D22  5020               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 37784  004D24  5ADE               	subwfb	postinc2,f,c
 37785  004D26  5021               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 37786  004D28  5ADE               	subwfb	postinc2,f,c
 37787  004D2A  5022               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 37788  004D2C  5ADE               	subwfb	postinc2,f,c
 37789                           
 37790                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 37791  004D2E  5027               	movf	i2SwTimersInterrupt@i,w,c
 37792  004D30  0D08               	mullw	8
 37793  004D32  0E00               	movlw	low _swTimers
 37794  004D34  24F3               	addwf	prodl,w,c
 37795  004D36  6ED9               	movwf	fsr2l,c
 37796  004D38  0E03               	movlw	high _swTimers
 37797  004D3A  20F4               	addwfc	prodh,w,c
 37798  004D3C  6EDA               	movwf	fsr2h,c
 37799  004D3E  5023               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 37800  004D40  5CDE               	subwf	postinc2,w,c
 37801  004D42  5024               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 37802  004D44  58DE               	subwfb	postinc2,w,c
 37803  004D46  5025               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 37804  004D48  58DE               	subwfb	postinc2,w,c
 37805  004D4A  5026               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 37806  004D4C  58DE               	subwfb	postinc2,w,c
 37807  004D4E  E210               	bc	i2l10585
 37808                           
 37809                           ; BSR set to: 1
 37810                           ;sw_timer.c: 313: {
 37811                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 37812  004D50  5027               	movf	i2SwTimersInterrupt@i,w,c
 37813  004D52  0D08               	mullw	8
 37814  004D54  0E00               	movlw	low _swTimers
 37815  004D56  24F3               	addwf	prodl,w,c
 37816  004D58  6ED9               	movwf	fsr2l,c
 37817  004D5A  0E03               	movlw	high _swTimers
 37818  004D5C  20F4               	addwfc	prodh,w,c
 37819  004D5E  6EDA               	movwf	fsr2h,c
 37820  004D60  CFDE F023          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 37821  004D64  CFDE F024          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 37822  004D68  CFDE F025          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 37823  004D6C  CFDE F026          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 37824  004D70                     i2l10585:
 37825                           
 37826                           ; BSR set to: 1
 37827  004D70  2A27               	incf	i2SwTimersInterrupt@i,f,c
 37828  004D72                     i2l10587:
 37829  004D72  0101               	movlb	1	; () banked
 37830  004D74  5177               	movf	_allocatedTimers& (0+255),w,b	;volatile
 37831  004D76  5C27               	subwf	i2SwTimersInterrupt@i,w,c
 37832  004D78  E3A2               	bnc	i2l10575
 37833                           
 37834                           ; BSR set to: 1
 37835                           ;sw_timer.c: 315: }
 37836                           ;sw_timer.c: 316: }
 37837                           ;sw_timer.c: 317: }
 37838                           ;sw_timer.c: 318: }
 37839                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 37840  004D7A  C023  F017         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 37841  004D7E  C024  F018         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 37842  004D82  C025  F019         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 37843  004D86  C026  F01A         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 37844                           
 37845                           ; BSR set to: 1
 37846  004D8A  0012               	return		;funcret
 37847  004D8C                     __end_ofi2_SwTimersInterrupt:
 37848                           	opt stack 0
 37849                           tosu	equ	0xFFF
 37850                           tosh	equ	0xFFE
 37851                           tosl	equ	0xFFD
 37852                           pclatu	equ	0xFFB
 37853                           pclath	equ	0xFFA
 37854                           tblptru	equ	0xFF8
 37855                           tblptrh	equ	0xFF7
 37856                           tblptrl	equ	0xFF6
 37857                           tablat	equ	0xFF5
 37858                           prodh	equ	0xFF4
 37859                           prodl	equ	0xFF3
 37860                           intcon	equ	0xFF2
 37861                           indf0	equ	0xFEF
 37862                           postinc0	equ	0xFEE
 37863                           plusw0	equ	0xFEB
 37864                           fsr0h	equ	0xFEA
 37865                           fsr0l	equ	0xFE9
 37866                           wreg	equ	0xFE8
 37867                           postinc1	equ	0xFE6
 37868                           postdec1	equ	0xFE5
 37869                           plusw1	equ	0xFE3
 37870                           fsr1h	equ	0xFE2
 37871                           fsr1l	equ	0xFE1
 37872                           indf2	equ	0xFDF
 37873                           postinc2	equ	0xFDE
 37874                           postdec2	equ	0xFDD
 37875                           plusw2	equ	0xFDB
 37876                           fsr2h	equ	0xFDA
 37877                           fsr2l	equ	0xFD9
 37878                           status	equ	0xFD8
 37879                           
 37880 ;; *************** function i2_TMR_GetDeltaTime *****************
 37881 ;; Defined at:
 37882 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37883 ;; Parameters:    Size  Location     Type
 37884 ;;		None
 37885 ;; Auto vars:     Size  Location     Type
 37886 ;;		None
 37887 ;; Return value:  Size  Location     Type
 37888 ;;                  4    6[COMRAM] unsigned long 
 37889 ;; Registers used:
 37890 ;;		wreg, status,2, status,0, cstack
 37891 ;; Tracked objects:
 37892 ;;		On entry : F/1
 37893 ;;		On exit  : 0/0
 37894 ;;		Unchanged: 0/0
 37895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 37896 ;;      Params:         4       0       0       0       0       0       0       0       0
 37897 ;;      Locals:         0       0       0       0       0       0       0       0       0
 37898 ;;      Temps:         12       0       0       0       0       0       0       0       0
 37899 ;;      Totals:        16       0       0       0       0       0       0       0       0
 37900 ;;Total ram usage:       16 bytes
 37901 ;; Hardware stack levels used:    1
 37902 ;; Hardware stack levels required when called:    1
 37903 ;; This function calls:
 37904 ;;		i2_TMR1_ReadTimer
 37905 ;; This function is called by:
 37906 ;;		i2_SwTimersInterrupt
 37907 ;; This function uses a non-reentrant model
 37908 ;;
 37909                           
 37910                           	psect	text206
 37911  004E78                     __ptext206:
 37912                           	opt stack 0
 37913  004E78                     i2_TMR_GetDeltaTime:
 37914                           	opt stack 12
 37915                           
 37916                           ; BSR set to: 1
 37917                           ;sw_timer.c: 90: static uint32_t retVal;
 37918                           ;sw_timer.c: 91: static uint16_t tmrVal;
 37919                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 37920                           
 37921                           ; BSR set to: 1
 37922                           ;incstack = 0
 37923  004E78  EC97  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 37924  004E7C  C001  F03E         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 37925  004E80  C002  F03F         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 37926                           
 37927                           ;sw_timer.c: 95: if (timerOverflow == 1)
 37928  004E84  0449               	decf	_timerOverflow,w,c	;volatile
 37929  004E86  E13D               	bnz	i2l9899
 37930                           
 37931                           ;sw_timer.c: 96: {
 37932                           ;sw_timer.c: 97: timerOverflow = 0;
 37933  004E88  6A49               	clrf	_timerOverflow,c	;volatile
 37934                           
 37935                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 37936  004E8A  5044               	movf	_reloadVal,w,c	;volatile
 37937  004E8C  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 37938  004E8E  6E0B               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 37939  004E90  5045               	movf	_reloadVal+1,w,c	;volatile
 37940  004E92  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 37941  004E94  6E0C               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 37942  004E96  6A0D               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 37943  004E98  A0D8               	btfss	status,0,c
 37944  004E9A  060D               	decf	(??i2_TMR_GetDeltaTime+2)& (0+255),f,c
 37945  004E9C  500D               	movf	(??i2_TMR_GetDeltaTime+2)& (0+255),w,c
 37946  004E9E  6E0E               	movwf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 37947  004EA0  5034               	movf	_ticksAccounted,w,c	;volatile
 37948  004EA2  5C0B               	subwf	??i2_TMR_GetDeltaTime,w,c
 37949  004EA4  6E0F               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 37950  004EA6  5035               	movf	_ticksAccounted+1,w,c	;volatile
 37951  004EA8  580C               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 37952  004EAA  6E10               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 37953  004EAC  5036               	movf	_ticksAccounted+2,w,c	;volatile
 37954  004EAE  580D               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 37955  004EB0  6E11               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 37956  004EB2  5037               	movf	_ticksAccounted+3,w,c	;volatile
 37957  004EB4  580E               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 37958  004EB6  6E12               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 37959  004EB8  5038               	movf	_ticksAdded,w,c	;volatile
 37960  004EBA  240F               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 37961  004EBC  6E13               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 37962  004EBE  5039               	movf	_ticksAdded+1,w,c	;volatile
 37963  004EC0  2010               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 37964  004EC2  6E14               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 37965  004EC4  503A               	movf	_ticksAdded+2,w,c	;volatile
 37966  004EC6  2011               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 37967  004EC8  6E15               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 37968  004ECA  503B               	movf	_ticksAdded+3,w,c	;volatile
 37969  004ECC  2012               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 37970  004ECE  6E16               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 37971  004ED0  0E00               	movlw	0
 37972  004ED2  2413               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 37973  004ED4  6E30               	movwf	TMR_GetDeltaTime@retVal,c
 37974  004ED6  0E00               	movlw	0
 37975  004ED8  2014               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 37976  004EDA  6E31               	movwf	TMR_GetDeltaTime@retVal+1,c
 37977  004EDC  0E01               	movlw	1
 37978  004EDE  2015               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 37979  004EE0  6E32               	movwf	TMR_GetDeltaTime@retVal+2,c
 37980  004EE2  0E00               	movlw	0
 37981  004EE4  2016               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 37982  004EE6  6E33               	movwf	TMR_GetDeltaTime@retVal+3,c
 37983                           
 37984                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 37985  004EE8  C03E  F034         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 37986  004EEC  C03F  F035         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 37987  004EF0  6A36               	clrf	_ticksAccounted+2,c	;volatile
 37988  004EF2  6A37               	clrf	_ticksAccounted+3,c	;volatile
 37989                           
 37990                           ;sw_timer.c: 100: ticksAdded = 0;
 37991  004EF4  6A38               	clrf	_ticksAdded,c	;volatile
 37992  004EF6  6A39               	clrf	_ticksAdded+1,c	;volatile
 37993  004EF8  6A3A               	clrf	_ticksAdded+2,c	;volatile
 37994  004EFA  6A3B               	clrf	_ticksAdded+3,c	;volatile
 37995                           
 37996                           ;sw_timer.c: 101: reloadVal = 0;
 37997  004EFC  6A44               	clrf	_reloadVal,c	;volatile
 37998  004EFE  6A45               	clrf	_reloadVal+1,c	;volatile
 37999                           
 38000                           ;sw_timer.c: 102: }
 38001  004F00  D028               	goto	i2l9901
 38002  004F02                     i2l9899:
 38003                           
 38004                           ;sw_timer.c: 103: else
 38005                           ;sw_timer.c: 104: {
 38006                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 38007  004F02  5044               	movf	_reloadVal,w,c	;volatile
 38008  004F04  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38009  004F06  6E0B               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 38010  004F08  5045               	movf	_reloadVal+1,w,c	;volatile
 38011  004F0A  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38012  004F0C  6E0C               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 38013  004F0E  6A0D               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 38014  004F10  6A0E               	clrf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 38015  004F12  5034               	movf	_ticksAccounted,w,c	;volatile
 38016  004F14  5C0B               	subwf	??i2_TMR_GetDeltaTime,w,c
 38017  004F16  6E0F               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 38018  004F18  5035               	movf	_ticksAccounted+1,w,c	;volatile
 38019  004F1A  580C               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 38020  004F1C  6E10               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 38021  004F1E  5036               	movf	_ticksAccounted+2,w,c	;volatile
 38022  004F20  580D               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 38023  004F22  6E11               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 38024  004F24  5037               	movf	_ticksAccounted+3,w,c	;volatile
 38025  004F26  580E               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 38026  004F28  6E12               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 38027  004F2A  5038               	movf	_ticksAdded,w,c	;volatile
 38028  004F2C  240F               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 38029  004F2E  6E30               	movwf	TMR_GetDeltaTime@retVal,c
 38030  004F30  5039               	movf	_ticksAdded+1,w,c	;volatile
 38031  004F32  2010               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 38032  004F34  6E31               	movwf	TMR_GetDeltaTime@retVal+1,c
 38033  004F36  503A               	movf	_ticksAdded+2,w,c	;volatile
 38034  004F38  2011               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 38035  004F3A  6E32               	movwf	TMR_GetDeltaTime@retVal+2,c
 38036  004F3C  503B               	movf	_ticksAdded+3,w,c	;volatile
 38037  004F3E  2012               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 38038  004F40  6E33               	movwf	TMR_GetDeltaTime@retVal+3,c
 38039                           
 38040                           ;sw_timer.c: 106: ticksAccounted += retVal;
 38041  004F42  5030               	movf	TMR_GetDeltaTime@retVal,w,c
 38042  004F44  2634               	addwf	_ticksAccounted,f,c	;volatile
 38043  004F46  5031               	movf	TMR_GetDeltaTime@retVal+1,w,c
 38044  004F48  2235               	addwfc	_ticksAccounted+1,f,c	;volatile
 38045  004F4A  5032               	movf	TMR_GetDeltaTime@retVal+2,w,c
 38046  004F4C  2236               	addwfc	_ticksAccounted+2,f,c	;volatile
 38047  004F4E  5033               	movf	TMR_GetDeltaTime@retVal+3,w,c
 38048  004F50  2237               	addwfc	_ticksAccounted+3,f,c	;volatile
 38049  004F52                     i2l9901:
 38050                           
 38051                           ;sw_timer.c: 107: }
 38052                           ;sw_timer.c: 109: return retVal;
 38053  004F52  C030  F007         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 38054  004F56  C031  F008         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 38055  004F5A  C032  F009         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 38056  004F5E  C033  F00A         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 38057  004F62  0012               	return		;funcret
 38058  004F64                     __end_ofi2_TMR_GetDeltaTime:
 38059                           	opt stack 0
 38060                           tosu	equ	0xFFF
 38061                           tosh	equ	0xFFE
 38062                           tosl	equ	0xFFD
 38063                           pclatu	equ	0xFFB
 38064                           pclath	equ	0xFFA
 38065                           tblptru	equ	0xFF8
 38066                           tblptrh	equ	0xFF7
 38067                           tblptrl	equ	0xFF6
 38068                           tablat	equ	0xFF5
 38069                           prodh	equ	0xFF4
 38070                           prodl	equ	0xFF3
 38071                           intcon	equ	0xFF2
 38072                           indf0	equ	0xFEF
 38073                           postinc0	equ	0xFEE
 38074                           plusw0	equ	0xFEB
 38075                           fsr0h	equ	0xFEA
 38076                           fsr0l	equ	0xFE9
 38077                           wreg	equ	0xFE8
 38078                           postinc1	equ	0xFE6
 38079                           postdec1	equ	0xFE5
 38080                           plusw1	equ	0xFE3
 38081                           fsr1h	equ	0xFE2
 38082                           fsr1l	equ	0xFE1
 38083                           indf2	equ	0xFDF
 38084                           postinc2	equ	0xFDE
 38085                           postdec2	equ	0xFDD
 38086                           plusw2	equ	0xFDB
 38087                           fsr2h	equ	0xFDA
 38088                           fsr2l	equ	0xFD9
 38089                           status	equ	0xFD8
 38090                           
 38091 ;; *************** function i2_TMR1_ReadTimer *****************
 38092 ;; Defined at:
 38093 ;;		line 113 in file "mcc_generated_files/tmr1.c"
 38094 ;; Parameters:    Size  Location     Type
 38095 ;;		None
 38096 ;; Auto vars:     Size  Location     Type
 38097 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 38098 ;; Return value:  Size  Location     Type
 38099 ;;                  2    0[COMRAM] unsigned int 
 38100 ;; Registers used:
 38101 ;;		wreg, status,2, status,0
 38102 ;; Tracked objects:
 38103 ;;		On entry : 0/1
 38104 ;;		On exit  : 0/0
 38105 ;;		Unchanged: 0/0
 38106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 38107 ;;      Params:         2       0       0       0       0       0       0       0       0
 38108 ;;      Locals:         2       0       0       0       0       0       0       0       0
 38109 ;;      Temps:          2       0       0       0       0       0       0       0       0
 38110 ;;      Totals:         6       0       0       0       0       0       0       0       0
 38111 ;;Total ram usage:        6 bytes
 38112 ;; Hardware stack levels used:    1
 38113 ;; This function calls:
 38114 ;;		Nothing
 38115 ;; This function is called by:
 38116 ;;		i2_TMR_GetDeltaTime
 38117 ;;		i2_TMR_SwapTimer
 38118 ;; This function uses a non-reentrant model
 38119 ;;
 38120                           
 38121                           	psect	text207
 38122  00752E                     __ptext207:
 38123                           	opt stack 0
 38124  00752E                     i2_TMR1_ReadTimer:
 38125                           	opt stack 13
 38126                           
 38127                           ;tmr1.c: 115: uint16_t readVal;
 38128                           ;tmr1.c: 117: readVal = (TMR1H << 8) | TMR1L;
 38129                           
 38130                           ;incstack = 0
 38131  00752E  50CD               	movf	4045,w,c	;volatile
 38132  007530  CFCE F003          	movff	4046,??i2_TMR1_ReadTimer	;volatile
 38133  007534  6A04               	clrf	(??i2_TMR1_ReadTimer+1)& (0+255),c
 38134  007536  C003  F004         	movff	??i2_TMR1_ReadTimer,??i2_TMR1_ReadTimer+1
 38135  00753A  6A03               	clrf	??i2_TMR1_ReadTimer,c
 38136  00753C  1003               	iorwf	??i2_TMR1_ReadTimer,w,c
 38137  00753E  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 38138  007540  5004               	movf	??i2_TMR1_ReadTimer+1,w,c
 38139  007542  6E06               	movwf	i2TMR1_ReadTimer@readVal+1,c
 38140                           
 38141                           ;tmr1.c: 119: return readVal;
 38142  007544  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 38143  007548  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 38144  00754C  0012               	return		;funcret
 38145  00754E                     __end_ofi2_TMR1_ReadTimer:
 38146                           	opt stack 0
 38147                           tosu	equ	0xFFF
 38148                           tosh	equ	0xFFE
 38149                           tosl	equ	0xFFD
 38150                           pclatu	equ	0xFFB
 38151                           pclath	equ	0xFFA
 38152                           tblptru	equ	0xFF8
 38153                           tblptrh	equ	0xFF7
 38154                           tblptrl	equ	0xFF6
 38155                           tablat	equ	0xFF5
 38156                           prodh	equ	0xFF4
 38157                           prodl	equ	0xFF3
 38158                           intcon	equ	0xFF2
 38159                           indf0	equ	0xFEF
 38160                           postinc0	equ	0xFEE
 38161                           plusw0	equ	0xFEB
 38162                           fsr0h	equ	0xFEA
 38163                           fsr0l	equ	0xFE9
 38164                           wreg	equ	0xFE8
 38165                           postinc1	equ	0xFE6
 38166                           postdec1	equ	0xFE5
 38167                           plusw1	equ	0xFE3
 38168                           fsr1h	equ	0xFE2
 38169                           fsr1l	equ	0xFE1
 38170                           indf2	equ	0xFDF
 38171                           postinc2	equ	0xFDE
 38172                           postdec2	equ	0xFDD
 38173                           plusw2	equ	0xFDB
 38174                           fsr2h	equ	0xFDA
 38175                           fsr2l	equ	0xFD9
 38176                           status	equ	0xFD8
 38177                           
 38178 ;; *************** function _PIN_MANAGER_IOC *****************
 38179 ;; Defined at:
 38180 ;;		line 151 in file "mcc_generated_files/pin_manager.c"
 38181 ;; Parameters:    Size  Location     Type
 38182 ;;		None
 38183 ;; Auto vars:     Size  Location     Type
 38184 ;;		None
 38185 ;; Return value:  Size  Location     Type
 38186 ;;                  1    wreg      void 
 38187 ;; Registers used:
 38188 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 38189 ;; Tracked objects:
 38190 ;;		On entry : F/E
 38191 ;;		On exit  : F/E
 38192 ;;		Unchanged: 0/0
 38193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 38194 ;;      Params:         0       0       0       0       0       0       0       0       0
 38195 ;;      Locals:         0       0       0       0       0       0       0       0       0
 38196 ;;      Temps:          0       0       0       0       0       0       0       0       0
 38197 ;;      Totals:         0       0       0       0       0       0       0       0       0
 38198 ;;Total ram usage:        0 bytes
 38199 ;; Hardware stack levels used:    1
 38200 ;; Hardware stack levels required when called:    2
 38201 ;; This function calls:
 38202 ;;		_IOCBF4_ISR
 38203 ;; This function is called by:
 38204 ;;		_INTERRUPT_InterruptManager
 38205 ;; This function uses a non-reentrant model
 38206 ;;
 38207                           
 38208                           	psect	text208
 38209  007912                     __ptext208:
 38210                           	opt stack 0
 38211  007912                     _PIN_MANAGER_IOC:
 38212                           	opt stack 15
 38213                           
 38214                           ; BSR set to: 14
 38215                           ;pin_manager.c: 154: if(IOCBFbits.IOCBF4 == 1)
 38216                           
 38217                           ;incstack = 0
 38218  007912  B993               	btfsc	147,4,b	;volatile
 38219                           
 38220                           ; BSR set to: 14
 38221                           ;pin_manager.c: 155: {
 38222                           ;pin_manager.c: 156: IOCBF4_ISR();
 38223  007914  ECFD  F039         	call	_IOCBF4_ISR	;wreg free
 38224                           
 38225                           ; BSR set to: 14
 38226  007918  0012               	return		;funcret
 38227  00791A                     __end_of_PIN_MANAGER_IOC:
 38228                           	opt stack 0
 38229                           tosu	equ	0xFFF
 38230                           tosh	equ	0xFFE
 38231                           tosl	equ	0xFFD
 38232                           pclatu	equ	0xFFB
 38233                           pclath	equ	0xFFA
 38234                           tblptru	equ	0xFF8
 38235                           tblptrh	equ	0xFF7
 38236                           tblptrl	equ	0xFF6
 38237                           tablat	equ	0xFF5
 38238                           prodh	equ	0xFF4
 38239                           prodl	equ	0xFF3
 38240                           intcon	equ	0xFF2
 38241                           indf0	equ	0xFEF
 38242                           postinc0	equ	0xFEE
 38243                           plusw0	equ	0xFEB
 38244                           fsr0h	equ	0xFEA
 38245                           fsr0l	equ	0xFE9
 38246                           wreg	equ	0xFE8
 38247                           postinc1	equ	0xFE6
 38248                           postdec1	equ	0xFE5
 38249                           plusw1	equ	0xFE3
 38250                           fsr1h	equ	0xFE2
 38251                           fsr1l	equ	0xFE1
 38252                           indf2	equ	0xFDF
 38253                           postinc2	equ	0xFDE
 38254                           postdec2	equ	0xFDD
 38255                           plusw2	equ	0xFDB
 38256                           fsr2h	equ	0xFDA
 38257                           fsr2l	equ	0xFD9
 38258                           status	equ	0xFD8
 38259                           
 38260 ;; *************** function _IOCBF4_ISR *****************
 38261 ;; Defined at:
 38262 ;;		line 165 in file "mcc_generated_files/pin_manager.c"
 38263 ;; Parameters:    Size  Location     Type
 38264 ;;		None
 38265 ;; Auto vars:     Size  Location     Type
 38266 ;;		None
 38267 ;; Return value:  Size  Location     Type
 38268 ;;                  1    wreg      void 
 38269 ;; Registers used:
 38270 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 38271 ;; Tracked objects:
 38272 ;;		On entry : F/E
 38273 ;;		On exit  : F/E
 38274 ;;		Unchanged: 0/0
 38275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 38276 ;;      Params:         0       0       0       0       0       0       0       0       0
 38277 ;;      Locals:         0       0       0       0       0       0       0       0       0
 38278 ;;      Temps:          0       0       0       0       0       0       0       0       0
 38279 ;;      Totals:         0       0       0       0       0       0       0       0       0
 38280 ;;Total ram usage:        0 bytes
 38281 ;; Hardware stack levels used:    1
 38282 ;; Hardware stack levels required when called:    1
 38283 ;; This function calls:
 38284 ;;		Absolute function
 38285 ;;		_IOCBF4_DefaultInterruptHandler
 38286 ;; This function is called by:
 38287 ;;		_PIN_MANAGER_IOC
 38288 ;; This function uses a non-reentrant model
 38289 ;;
 38290                           
 38291                           	psect	text209
 38292  0073FA                     __ptext209:
 38293                           	opt stack 0
 38294  0073FA                     _IOCBF4_ISR:
 38295                           	opt stack 15
 38296                           
 38297                           ; BSR set to: 14
 38298                           ;pin_manager.c: 170: if(IOCBF4_InterruptHandler)
 38299                           
 38300                           ; BSR set to: 14
 38301                           ;incstack = 0
 38302  0073FA  0101               	movlb	1	; () banked
 38303  0073FC  51F7               	movf	_IOCBF4_InterruptHandler& (0+255),w,b
 38304  0073FE  11F8               	iorwf	(_IOCBF4_InterruptHandler+1)& (0+255),w,b
 38305  007400  E00C               	bz	i2l16461
 38306                           
 38307                           ; BSR set to: 1
 38308                           ;pin_manager.c: 171: {
 38309                           ;pin_manager.c: 172: IOCBF4_InterruptHandler();
 38310  007402  D801               	call	i2u1982_48
 38311  007404  D00A               	goto	i2l16461
 38312  007406                     i2u1982_48:
 38313  007406  0005               	push	
 38314  007408  6EFA               	movwf	pclath,c
 38315  00740A  51F7               	movf	_IOCBF4_InterruptHandler& (0+255),w,b
 38316  00740C  6EFD               	movwf	tosl,c
 38317  00740E  51F8               	movf	(_IOCBF4_InterruptHandler+1)& (0+255),w,b
 38318  007410  6EFE               	movwf	tosh,c
 38319  007412  50F8               	movf	tblptru,w,c
 38320  007414  6EFF               	movwf	tosu,c
 38321  007416  50FA               	movf	pclath,w,c
 38322  007418  0012               	return		;indir
 38323  00741A                     i2l16461:
 38324                           
 38325                           ;pin_manager.c: 173: }
 38326                           ;pin_manager.c: 174: IOCBFbits.IOCBF4 = 0;
 38327  00741A  010E               	movlb	14	; () banked
 38328  00741C  9993               	bcf	147,4,b	;volatile
 38329                           
 38330                           ; BSR set to: 14
 38331  00741E  0012               	return		;funcret
 38332  007420                     __end_of_IOCBF4_ISR:
 38333                           	opt stack 0
 38334                           tosu	equ	0xFFF
 38335                           tosh	equ	0xFFE
 38336                           tosl	equ	0xFFD
 38337                           pclatu	equ	0xFFB
 38338                           pclath	equ	0xFFA
 38339                           tblptru	equ	0xFF8
 38340                           tblptrh	equ	0xFF7
 38341                           tblptrl	equ	0xFF6
 38342                           tablat	equ	0xFF5
 38343                           prodh	equ	0xFF4
 38344                           prodl	equ	0xFF3
 38345                           intcon	equ	0xFF2
 38346                           indf0	equ	0xFEF
 38347                           postinc0	equ	0xFEE
 38348                           plusw0	equ	0xFEB
 38349                           fsr0h	equ	0xFEA
 38350                           fsr0l	equ	0xFE9
 38351                           wreg	equ	0xFE8
 38352                           postinc1	equ	0xFE6
 38353                           postdec1	equ	0xFE5
 38354                           plusw1	equ	0xFE3
 38355                           fsr1h	equ	0xFE2
 38356                           fsr1l	equ	0xFE1
 38357                           indf2	equ	0xFDF
 38358                           postinc2	equ	0xFDE
 38359                           postdec2	equ	0xFDD
 38360                           plusw2	equ	0xFDB
 38361                           fsr2h	equ	0xFDA
 38362                           fsr2l	equ	0xFD9
 38363                           status	equ	0xFD8
 38364                           
 38365 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
 38366 ;; Defined at:
 38367 ;;		line 187 in file "mcc_generated_files/pin_manager.c"
 38368 ;; Parameters:    Size  Location     Type
 38369 ;;		None
 38370 ;; Auto vars:     Size  Location     Type
 38371 ;;		None
 38372 ;; Return value:  Size  Location     Type
 38373 ;;                  1    wreg      void 
 38374 ;; Registers used:
 38375 ;;		None
 38376 ;; Tracked objects:
 38377 ;;		On entry : F/1
 38378 ;;		On exit  : F/1
 38379 ;;		Unchanged: F/0
 38380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 38381 ;;      Params:         0       0       0       0       0       0       0       0       0
 38382 ;;      Locals:         0       0       0       0       0       0       0       0       0
 38383 ;;      Temps:          0       0       0       0       0       0       0       0       0
 38384 ;;      Totals:         0       0       0       0       0       0       0       0       0
 38385 ;;Total ram usage:        0 bytes
 38386 ;; Hardware stack levels used:    1
 38387 ;; This function calls:
 38388 ;;		Nothing
 38389 ;; This function is called by:
 38390 ;;		_PIN_MANAGER_Initialize
 38391 ;;		_IOCBF4_ISR
 38392 ;; This function uses a non-reentrant model
 38393 ;;
 38394                           
 38395                           	psect	text210
 38396  00798A                     __ptext210:
 38397                           	opt stack 0
 38398  00798A                     _IOCBF4_DefaultInterruptHandler:
 38399                           	opt stack 15
 38400                           
 38401                           ; BSR set to: 1
 38402                           
 38403                           ; BSR set to: 14
 38404                           ;incstack = 0
 38405  00798A  0012               	return		;funcret
 38406  00798C                     __end_of_IOCBF4_DefaultInterruptHandler:
 38407                           	opt stack 0
 38408                           tosu	equ	0xFFF
 38409                           tosh	equ	0xFFE
 38410                           tosl	equ	0xFFD
 38411                           pclatu	equ	0xFFB
 38412                           pclath	equ	0xFFA
 38413                           tblptru	equ	0xFF8
 38414                           tblptrh	equ	0xFF7
 38415                           tblptrl	equ	0xFF6
 38416                           tablat	equ	0xFF5
 38417                           prodh	equ	0xFF4
 38418                           prodl	equ	0xFF3
 38419                           intcon	equ	0xFF2
 38420                           indf0	equ	0xFEF
 38421                           postinc0	equ	0xFEE
 38422                           plusw0	equ	0xFEB
 38423                           fsr0h	equ	0xFEA
 38424                           fsr0l	equ	0xFE9
 38425                           wreg	equ	0xFE8
 38426                           postinc1	equ	0xFE6
 38427                           postdec1	equ	0xFE5
 38428                           plusw1	equ	0xFE3
 38429                           fsr1h	equ	0xFE2
 38430                           fsr1l	equ	0xFE1
 38431                           indf2	equ	0xFDF
 38432                           postinc2	equ	0xFDE
 38433                           postdec2	equ	0xFDD
 38434                           plusw2	equ	0xFDB
 38435                           fsr2h	equ	0xFDA
 38436                           fsr2l	equ	0xFD9
 38437                           status	equ	0xFD8
 38438                           
 38439 ;; *************** function _INT3_ISR *****************
 38440 ;; Defined at:
 38441 ;;		line 169 in file "mcc_generated_files/ext_int.c"
 38442 ;; Parameters:    Size  Location     Type
 38443 ;;		None
 38444 ;; Auto vars:     Size  Location     Type
 38445 ;;		None
 38446 ;; Return value:  Size  Location     Type
 38447 ;;                  1    wreg      void 
 38448 ;; Registers used:
 38449 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 38450 ;; Tracked objects:
 38451 ;;		On entry : F/E
 38452 ;;		On exit  : 0/0
 38453 ;;		Unchanged: 0/0
 38454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 38455 ;;      Params:         0       0       0       0       0       0       0       0       0
 38456 ;;      Locals:         0       0       0       0       0       0       0       0       0
 38457 ;;      Temps:          0       0       0       0       0       0       0       0       0
 38458 ;;      Totals:         0       0       0       0       0       0       0       0       0
 38459 ;;Total ram usage:        0 bytes
 38460 ;; Hardware stack levels used:    1
 38461 ;; Hardware stack levels required when called:    2
 38462 ;; This function calls:
 38463 ;;		_INT3_CallBack
 38464 ;; This function is called by:
 38465 ;;		_INTERRUPT_InterruptManager
 38466 ;; This function uses a non-reentrant model
 38467 ;;
 38468                           
 38469                           	psect	text211
 38470  007956                     __ptext211:
 38471                           	opt stack 0
 38472  007956                     _INT3_ISR:
 38473                           	opt stack 15
 38474                           
 38475                           ; BSR set to: 14
 38476                           ;ext_int.c: 175: (PIR0bits.INT3IF = 0);
 38477                           
 38478                           ; BSR set to: 1
 38479                           ;incstack = 0
 38480  007956  9733               	bcf	51,3,b	;volatile
 38481                           
 38482                           ; BSR set to: 14
 38483                           ;ext_int.c: 178: INT3_CallBack();
 38484  007958  EFF2  F03A         	goto	_INT3_CallBack	;wreg free
 38485  00795C                     __end_of_INT3_ISR:
 38486                           	opt stack 0
 38487                           tosu	equ	0xFFF
 38488                           tosh	equ	0xFFE
 38489                           tosl	equ	0xFFD
 38490                           pclatu	equ	0xFFB
 38491                           pclath	equ	0xFFA
 38492                           tblptru	equ	0xFF8
 38493                           tblptrh	equ	0xFF7
 38494                           tblptrl	equ	0xFF6
 38495                           tablat	equ	0xFF5
 38496                           prodh	equ	0xFF4
 38497                           prodl	equ	0xFF3
 38498                           intcon	equ	0xFF2
 38499                           indf0	equ	0xFEF
 38500                           postinc0	equ	0xFEE
 38501                           plusw0	equ	0xFEB
 38502                           fsr0h	equ	0xFEA
 38503                           fsr0l	equ	0xFE9
 38504                           wreg	equ	0xFE8
 38505                           postinc1	equ	0xFE6
 38506                           postdec1	equ	0xFE5
 38507                           plusw1	equ	0xFE3
 38508                           fsr1h	equ	0xFE2
 38509                           fsr1l	equ	0xFE1
 38510                           indf2	equ	0xFDF
 38511                           postinc2	equ	0xFDE
 38512                           postdec2	equ	0xFDD
 38513                           plusw2	equ	0xFDB
 38514                           fsr2h	equ	0xFDA
 38515                           fsr2l	equ	0xFD9
 38516                           status	equ	0xFD8
 38517                           
 38518 ;; *************** function _INT3_CallBack *****************
 38519 ;; Defined at:
 38520 ;;		line 184 in file "mcc_generated_files/ext_int.c"
 38521 ;; Parameters:    Size  Location     Type
 38522 ;;		None
 38523 ;; Auto vars:     Size  Location     Type
 38524 ;;		None
 38525 ;; Return value:  Size  Location     Type
 38526 ;;                  1    wreg      void 
 38527 ;; Registers used:
 38528 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 38529 ;; Tracked objects:
 38530 ;;		On entry : F/E
 38531 ;;		On exit  : 0/0
 38532 ;;		Unchanged: 0/0
 38533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 38534 ;;      Params:         0       0       0       0       0       0       0       0       0
 38535 ;;      Locals:         0       0       0       0       0       0       0       0       0
 38536 ;;      Temps:          0       0       0       0       0       0       0       0       0
 38537 ;;      Totals:         0       0       0       0       0       0       0       0       0
 38538 ;;Total ram usage:        0 bytes
 38539 ;; Hardware stack levels used:    1
 38540 ;; Hardware stack levels required when called:    1
 38541 ;; This function calls:
 38542 ;;		Absolute function
 38543 ;;		_INT3_DefaultInterruptHandler
 38544 ;; This function is called by:
 38545 ;;		_INT3_ISR
 38546 ;; This function uses a non-reentrant model
 38547 ;;
 38548                           
 38549                           	psect	text212
 38550  0075E4                     __ptext212:
 38551                           	opt stack 0
 38552  0075E4                     _INT3_CallBack:
 38553                           	opt stack 15
 38554                           
 38555                           ; BSR set to: 14
 38556                           ;ext_int.c: 187: if(INT3_InterruptHandler)
 38557                           
 38558                           ;incstack = 0
 38559  0075E4  0101               	movlb	1	; () banked
 38560  0075E6  51F5               	movf	_INT3_InterruptHandler& (0+255),w,b
 38561  0075E8  11F6               	iorwf	(_INT3_InterruptHandler+1)& (0+255),w,b
 38562  0075EA  B4D8               	btfsc	status,2,c
 38563  0075EC  0012               	return	
 38564                           
 38565                           ; BSR set to: 1
 38566                           ;ext_int.c: 188: {
 38567                           ;ext_int.c: 189: INT3_InterruptHandler();
 38568  0075EE  0005               	push	
 38569  0075F0  6EFA               	movwf	pclath,c
 38570  0075F2  51F5               	movf	_INT3_InterruptHandler& (0+255),w,b
 38571  0075F4  6EFD               	movwf	tosl,c
 38572  0075F6  51F6               	movf	(_INT3_InterruptHandler+1)& (0+255),w,b
 38573  0075F8  6EFE               	movwf	tosh,c
 38574  0075FA  50F8               	movf	tblptru,w,c
 38575  0075FC  6EFF               	movwf	tosu,c
 38576  0075FE  50FA               	movf	pclath,w,c
 38577  007600  0012               	return		;indir
 38578  007602                     __end_of_INT3_CallBack:
 38579                           	opt stack 0
 38580                           tosu	equ	0xFFF
 38581                           tosh	equ	0xFFE
 38582                           tosl	equ	0xFFD
 38583                           pclatu	equ	0xFFB
 38584                           pclath	equ	0xFFA
 38585                           tblptru	equ	0xFF8
 38586                           tblptrh	equ	0xFF7
 38587                           tblptrl	equ	0xFF6
 38588                           tablat	equ	0xFF5
 38589                           prodh	equ	0xFF4
 38590                           prodl	equ	0xFF3
 38591                           intcon	equ	0xFF2
 38592                           indf0	equ	0xFEF
 38593                           postinc0	equ	0xFEE
 38594                           plusw0	equ	0xFEB
 38595                           fsr0h	equ	0xFEA
 38596                           fsr0l	equ	0xFE9
 38597                           wreg	equ	0xFE8
 38598                           postinc1	equ	0xFE6
 38599                           postdec1	equ	0xFE5
 38600                           plusw1	equ	0xFE3
 38601                           fsr1h	equ	0xFE2
 38602                           fsr1l	equ	0xFE1
 38603                           indf2	equ	0xFDF
 38604                           postinc2	equ	0xFDE
 38605                           postdec2	equ	0xFDD
 38606                           plusw2	equ	0xFDB
 38607                           fsr2h	equ	0xFDA
 38608                           fsr2l	equ	0xFD9
 38609                           status	equ	0xFD8
 38610                           
 38611 ;; *************** function _INT3_DefaultInterruptHandler *****************
 38612 ;; Defined at:
 38613 ;;		line 203 in file "mcc_generated_files/ext_int.c"
 38614 ;; Parameters:    Size  Location     Type
 38615 ;;		None
 38616 ;; Auto vars:     Size  Location     Type
 38617 ;;		None
 38618 ;; Return value:  Size  Location     Type
 38619 ;;                  1    wreg      void 
 38620 ;; Registers used:
 38621 ;;		None
 38622 ;; Tracked objects:
 38623 ;;		On entry : F/1
 38624 ;;		On exit  : F/1
 38625 ;;		Unchanged: F/0
 38626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 38627 ;;      Params:         0       0       0       0       0       0       0       0       0
 38628 ;;      Locals:         0       0       0       0       0       0       0       0       0
 38629 ;;      Temps:          0       0       0       0       0       0       0       0       0
 38630 ;;      Totals:         0       0       0       0       0       0       0       0       0
 38631 ;;Total ram usage:        0 bytes
 38632 ;; Hardware stack levels used:    1
 38633 ;; This function calls:
 38634 ;;		Nothing
 38635 ;; This function is called by:
 38636 ;;		_EXT_INT_Initialize
 38637 ;;		_INT3_CallBack
 38638 ;; This function uses a non-reentrant model
 38639 ;;
 38640                           
 38641                           	psect	text213
 38642  00798C                     __ptext213:
 38643                           	opt stack 0
 38644  00798C                     _INT3_DefaultInterruptHandler:
 38645                           	opt stack 15
 38646                           
 38647                           ; BSR set to: 1
 38648                           
 38649                           ;incstack = 0
 38650  00798C  0012               	return		;funcret
 38651  00798E                     __end_of_INT3_DefaultInterruptHandler:
 38652                           	opt stack 0
 38653                           tosu	equ	0xFFF
 38654                           tosh	equ	0xFFE
 38655                           tosl	equ	0xFFD
 38656                           pclatu	equ	0xFFB
 38657                           pclath	equ	0xFFA
 38658                           tblptru	equ	0xFF8
 38659                           tblptrh	equ	0xFF7
 38660                           tblptrl	equ	0xFF6
 38661                           tablat	equ	0xFF5
 38662                           prodh	equ	0xFF4
 38663                           prodl	equ	0xFF3
 38664                           intcon	equ	0xFF2
 38665                           indf0	equ	0xFEF
 38666                           postinc0	equ	0xFEE
 38667                           plusw0	equ	0xFEB
 38668                           fsr0h	equ	0xFEA
 38669                           fsr0l	equ	0xFE9
 38670                           wreg	equ	0xFE8
 38671                           postinc1	equ	0xFE6
 38672                           postdec1	equ	0xFE5
 38673                           plusw1	equ	0xFE3
 38674                           fsr1h	equ	0xFE2
 38675                           fsr1l	equ	0xFE1
 38676                           indf2	equ	0xFDF
 38677                           postinc2	equ	0xFDE
 38678                           postdec2	equ	0xFDD
 38679                           plusw2	equ	0xFDB
 38680                           fsr2h	equ	0xFDA
 38681                           fsr2l	equ	0xFD9
 38682                           status	equ	0xFD8
 38683                           
 38684 ;; *************** function _INT2_ISR *****************
 38685 ;; Defined at:
 38686 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 38687 ;; Parameters:    Size  Location     Type
 38688 ;;		None
 38689 ;; Auto vars:     Size  Location     Type
 38690 ;;		None
 38691 ;; Return value:  Size  Location     Type
 38692 ;;                  1    wreg      void 
 38693 ;; Registers used:
 38694 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 38695 ;; Tracked objects:
 38696 ;;		On entry : F/E
 38697 ;;		On exit  : 0/0
 38698 ;;		Unchanged: 0/0
 38699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 38700 ;;      Params:         0       0       0       0       0       0       0       0       0
 38701 ;;      Locals:         0       0       0       0       0       0       0       0       0
 38702 ;;      Temps:          0       0       0       0       0       0       0       0       0
 38703 ;;      Totals:         0       0       0       0       0       0       0       0       0
 38704 ;;Total ram usage:        0 bytes
 38705 ;; Hardware stack levels used:    1
 38706 ;; Hardware stack levels required when called:    2
 38707 ;; This function calls:
 38708 ;;		_INT2_CallBack
 38709 ;; This function is called by:
 38710 ;;		_INTERRUPT_InterruptManager
 38711 ;; This function uses a non-reentrant model
 38712 ;;
 38713                           
 38714                           	psect	text214
 38715  00795C                     __ptext214:
 38716                           	opt stack 0
 38717  00795C                     _INT2_ISR:
 38718                           	opt stack 15
 38719                           
 38720                           ; BSR set to: 14
 38721                           ;ext_int.c: 93: (PIR0bits.INT2IF = 0);
 38722                           
 38723                           ; BSR set to: 1
 38724                           ;incstack = 0
 38725  00795C  9533               	bcf	51,2,b	;volatile
 38726                           
 38727                           ; BSR set to: 14
 38728                           ;ext_int.c: 96: INT2_CallBack();
 38729  00795E  EF01  F03B         	goto	_INT2_CallBack	;wreg free
 38730  007962                     __end_of_INT2_ISR:
 38731                           	opt stack 0
 38732                           tosu	equ	0xFFF
 38733                           tosh	equ	0xFFE
 38734                           tosl	equ	0xFFD
 38735                           pclatu	equ	0xFFB
 38736                           pclath	equ	0xFFA
 38737                           tblptru	equ	0xFF8
 38738                           tblptrh	equ	0xFF7
 38739                           tblptrl	equ	0xFF6
 38740                           tablat	equ	0xFF5
 38741                           prodh	equ	0xFF4
 38742                           prodl	equ	0xFF3
 38743                           intcon	equ	0xFF2
 38744                           indf0	equ	0xFEF
 38745                           postinc0	equ	0xFEE
 38746                           plusw0	equ	0xFEB
 38747                           fsr0h	equ	0xFEA
 38748                           fsr0l	equ	0xFE9
 38749                           wreg	equ	0xFE8
 38750                           postinc1	equ	0xFE6
 38751                           postdec1	equ	0xFE5
 38752                           plusw1	equ	0xFE3
 38753                           fsr1h	equ	0xFE2
 38754                           fsr1l	equ	0xFE1
 38755                           indf2	equ	0xFDF
 38756                           postinc2	equ	0xFDE
 38757                           postdec2	equ	0xFDD
 38758                           plusw2	equ	0xFDB
 38759                           fsr2h	equ	0xFDA
 38760                           fsr2l	equ	0xFD9
 38761                           status	equ	0xFD8
 38762                           
 38763 ;; *************** function _INT2_CallBack *****************
 38764 ;; Defined at:
 38765 ;;		line 102 in file "mcc_generated_files/ext_int.c"
 38766 ;; Parameters:    Size  Location     Type
 38767 ;;		None
 38768 ;; Auto vars:     Size  Location     Type
 38769 ;;		None
 38770 ;; Return value:  Size  Location     Type
 38771 ;;                  1    wreg      void 
 38772 ;; Registers used:
 38773 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 38774 ;; Tracked objects:
 38775 ;;		On entry : F/E
 38776 ;;		On exit  : 0/0
 38777 ;;		Unchanged: 0/0
 38778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 38779 ;;      Params:         0       0       0       0       0       0       0       0       0
 38780 ;;      Locals:         0       0       0       0       0       0       0       0       0
 38781 ;;      Temps:          0       0       0       0       0       0       0       0       0
 38782 ;;      Totals:         0       0       0       0       0       0       0       0       0
 38783 ;;Total ram usage:        0 bytes
 38784 ;; Hardware stack levels used:    1
 38785 ;; Hardware stack levels required when called:    1
 38786 ;; This function calls:
 38787 ;;		Absolute function
 38788 ;;		_INT2_DefaultInterruptHandler
 38789 ;; This function is called by:
 38790 ;;		_INT2_ISR
 38791 ;; This function uses a non-reentrant model
 38792 ;;
 38793                           
 38794                           	psect	text215
 38795  007602                     __ptext215:
 38796                           	opt stack 0
 38797  007602                     _INT2_CallBack:
 38798                           	opt stack 15
 38799                           
 38800                           ; BSR set to: 14
 38801                           ;ext_int.c: 105: if(INT2_InterruptHandler)
 38802                           
 38803                           ;incstack = 0
 38804  007602  0101               	movlb	1	; () banked
 38805  007604  51F3               	movf	_INT2_InterruptHandler& (0+255),w,b
 38806  007606  11F4               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 38807  007608  B4D8               	btfsc	status,2,c
 38808  00760A  0012               	return	
 38809                           
 38810                           ; BSR set to: 1
 38811                           ;ext_int.c: 106: {
 38812                           ;ext_int.c: 107: INT2_InterruptHandler();
 38813  00760C  0005               	push	
 38814  00760E  6EFA               	movwf	pclath,c
 38815  007610  51F3               	movf	_INT2_InterruptHandler& (0+255),w,b
 38816  007612  6EFD               	movwf	tosl,c
 38817  007614  51F4               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 38818  007616  6EFE               	movwf	tosh,c
 38819  007618  50F8               	movf	tblptru,w,c
 38820  00761A  6EFF               	movwf	tosu,c
 38821  00761C  50FA               	movf	pclath,w,c
 38822  00761E  0012               	return		;indir
 38823  007620                     __end_of_INT2_CallBack:
 38824                           	opt stack 0
 38825                           tosu	equ	0xFFF
 38826                           tosh	equ	0xFFE
 38827                           tosl	equ	0xFFD
 38828                           pclatu	equ	0xFFB
 38829                           pclath	equ	0xFFA
 38830                           tblptru	equ	0xFF8
 38831                           tblptrh	equ	0xFF7
 38832                           tblptrl	equ	0xFF6
 38833                           tablat	equ	0xFF5
 38834                           prodh	equ	0xFF4
 38835                           prodl	equ	0xFF3
 38836                           intcon	equ	0xFF2
 38837                           indf0	equ	0xFEF
 38838                           postinc0	equ	0xFEE
 38839                           plusw0	equ	0xFEB
 38840                           fsr0h	equ	0xFEA
 38841                           fsr0l	equ	0xFE9
 38842                           wreg	equ	0xFE8
 38843                           postinc1	equ	0xFE6
 38844                           postdec1	equ	0xFE5
 38845                           plusw1	equ	0xFE3
 38846                           fsr1h	equ	0xFE2
 38847                           fsr1l	equ	0xFE1
 38848                           indf2	equ	0xFDF
 38849                           postinc2	equ	0xFDE
 38850                           postdec2	equ	0xFDD
 38851                           plusw2	equ	0xFDB
 38852                           fsr2h	equ	0xFDA
 38853                           fsr2l	equ	0xFD9
 38854                           status	equ	0xFD8
 38855                           
 38856 ;; *************** function _INT2_DefaultInterruptHandler *****************
 38857 ;; Defined at:
 38858 ;;		line 121 in file "mcc_generated_files/ext_int.c"
 38859 ;; Parameters:    Size  Location     Type
 38860 ;;		None
 38861 ;; Auto vars:     Size  Location     Type
 38862 ;;		None
 38863 ;; Return value:  Size  Location     Type
 38864 ;;                  1    wreg      void 
 38865 ;; Registers used:
 38866 ;;		None
 38867 ;; Tracked objects:
 38868 ;;		On entry : F/1
 38869 ;;		On exit  : F/1
 38870 ;;		Unchanged: F/0
 38871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 38872 ;;      Params:         0       0       0       0       0       0       0       0       0
 38873 ;;      Locals:         0       0       0       0       0       0       0       0       0
 38874 ;;      Temps:          0       0       0       0       0       0       0       0       0
 38875 ;;      Totals:         0       0       0       0       0       0       0       0       0
 38876 ;;Total ram usage:        0 bytes
 38877 ;; Hardware stack levels used:    1
 38878 ;; This function calls:
 38879 ;;		Nothing
 38880 ;; This function is called by:
 38881 ;;		_EXT_INT_Initialize
 38882 ;;		_INT2_CallBack
 38883 ;; This function uses a non-reentrant model
 38884 ;;
 38885                           
 38886                           	psect	text216
 38887  00798E                     __ptext216:
 38888                           	opt stack 0
 38889  00798E                     _INT2_DefaultInterruptHandler:
 38890                           	opt stack 15
 38891                           
 38892                           ; BSR set to: 1
 38893                           
 38894                           ;incstack = 0
 38895  00798E  0012               	return		;funcret
 38896  007990                     __end_of_INT2_DefaultInterruptHandler:
 38897                           	opt stack 0
 38898                           tosu	equ	0xFFF
 38899                           tosh	equ	0xFFE
 38900                           tosl	equ	0xFFD
 38901                           pclatu	equ	0xFFB
 38902                           pclath	equ	0xFFA
 38903                           tblptru	equ	0xFF8
 38904                           tblptrh	equ	0xFF7
 38905                           tblptrl	equ	0xFF6
 38906                           tablat	equ	0xFF5
 38907                           prodh	equ	0xFF4
 38908                           prodl	equ	0xFF3
 38909                           intcon	equ	0xFF2
 38910                           indf0	equ	0xFEF
 38911                           postinc0	equ	0xFEE
 38912                           plusw0	equ	0xFEB
 38913                           fsr0h	equ	0xFEA
 38914                           fsr0l	equ	0xFE9
 38915                           wreg	equ	0xFE8
 38916                           postinc1	equ	0xFE6
 38917                           postdec1	equ	0xFE5
 38918                           plusw1	equ	0xFE3
 38919                           fsr1h	equ	0xFE2
 38920                           fsr1l	equ	0xFE1
 38921                           indf2	equ	0xFDF
 38922                           postinc2	equ	0xFDE
 38923                           postdec2	equ	0xFDD
 38924                           plusw2	equ	0xFDB
 38925                           fsr2h	equ	0xFDA
 38926                           fsr2l	equ	0xFD9
 38927                           status	equ	0xFD8
 38928                           
 38929 ;; *************** function _INT1_ISR *****************
 38930 ;; Defined at:
 38931 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 38932 ;; Parameters:    Size  Location     Type
 38933 ;;		None
 38934 ;; Auto vars:     Size  Location     Type
 38935 ;;		None
 38936 ;; Return value:  Size  Location     Type
 38937 ;;                  1    wreg      void 
 38938 ;; Registers used:
 38939 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 38940 ;; Tracked objects:
 38941 ;;		On entry : F/E
 38942 ;;		On exit  : 0/0
 38943 ;;		Unchanged: 0/0
 38944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 38945 ;;      Params:         0       0       0       0       0       0       0       0       0
 38946 ;;      Locals:         0       0       0       0       0       0       0       0       0
 38947 ;;      Temps:          0       0       0       0       0       0       0       0       0
 38948 ;;      Totals:         0       0       0       0       0       0       0       0       0
 38949 ;;Total ram usage:        0 bytes
 38950 ;; Hardware stack levels used:    1
 38951 ;; Hardware stack levels required when called:    2
 38952 ;; This function calls:
 38953 ;;		_INT1_CallBack
 38954 ;; This function is called by:
 38955 ;;		_INTERRUPT_InterruptManager
 38956 ;; This function uses a non-reentrant model
 38957 ;;
 38958                           
 38959                           	psect	text217
 38960  007962                     __ptext217:
 38961                           	opt stack 0
 38962  007962                     _INT1_ISR:
 38963                           	opt stack 15
 38964                           
 38965                           ; BSR set to: 14
 38966                           ;ext_int.c: 52: (PIR0bits.INT1IF = 0);
 38967                           
 38968                           ; BSR set to: 1
 38969                           ;incstack = 0
 38970  007962  9333               	bcf	51,1,b	;volatile
 38971                           
 38972                           ; BSR set to: 14
 38973                           ;ext_int.c: 55: INT1_CallBack();
 38974  007964  EF10  F03B         	goto	_INT1_CallBack	;wreg free
 38975  007968                     __end_of_INT1_ISR:
 38976                           	opt stack 0
 38977                           tosu	equ	0xFFF
 38978                           tosh	equ	0xFFE
 38979                           tosl	equ	0xFFD
 38980                           pclatu	equ	0xFFB
 38981                           pclath	equ	0xFFA
 38982                           tblptru	equ	0xFF8
 38983                           tblptrh	equ	0xFF7
 38984                           tblptrl	equ	0xFF6
 38985                           tablat	equ	0xFF5
 38986                           prodh	equ	0xFF4
 38987                           prodl	equ	0xFF3
 38988                           intcon	equ	0xFF2
 38989                           indf0	equ	0xFEF
 38990                           postinc0	equ	0xFEE
 38991                           plusw0	equ	0xFEB
 38992                           fsr0h	equ	0xFEA
 38993                           fsr0l	equ	0xFE9
 38994                           wreg	equ	0xFE8
 38995                           postinc1	equ	0xFE6
 38996                           postdec1	equ	0xFE5
 38997                           plusw1	equ	0xFE3
 38998                           fsr1h	equ	0xFE2
 38999                           fsr1l	equ	0xFE1
 39000                           indf2	equ	0xFDF
 39001                           postinc2	equ	0xFDE
 39002                           postdec2	equ	0xFDD
 39003                           plusw2	equ	0xFDB
 39004                           fsr2h	equ	0xFDA
 39005                           fsr2l	equ	0xFD9
 39006                           status	equ	0xFD8
 39007                           
 39008 ;; *************** function _INT1_CallBack *****************
 39009 ;; Defined at:
 39010 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 39011 ;; Parameters:    Size  Location     Type
 39012 ;;		None
 39013 ;; Auto vars:     Size  Location     Type
 39014 ;;		None
 39015 ;; Return value:  Size  Location     Type
 39016 ;;                  1    wreg      void 
 39017 ;; Registers used:
 39018 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39019 ;; Tracked objects:
 39020 ;;		On entry : F/E
 39021 ;;		On exit  : 0/0
 39022 ;;		Unchanged: 0/0
 39023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 39024 ;;      Params:         0       0       0       0       0       0       0       0       0
 39025 ;;      Locals:         0       0       0       0       0       0       0       0       0
 39026 ;;      Temps:          0       0       0       0       0       0       0       0       0
 39027 ;;      Totals:         0       0       0       0       0       0       0       0       0
 39028 ;;Total ram usage:        0 bytes
 39029 ;; Hardware stack levels used:    1
 39030 ;; Hardware stack levels required when called:    1
 39031 ;; This function calls:
 39032 ;;		Absolute function
 39033 ;;		_INT1_DefaultInterruptHandler
 39034 ;; This function is called by:
 39035 ;;		_INT1_ISR
 39036 ;; This function uses a non-reentrant model
 39037 ;;
 39038                           
 39039                           	psect	text218
 39040  007620                     __ptext218:
 39041                           	opt stack 0
 39042  007620                     _INT1_CallBack:
 39043                           	opt stack 15
 39044                           
 39045                           ; BSR set to: 14
 39046                           ;ext_int.c: 64: if(INT1_InterruptHandler)
 39047                           
 39048                           ;incstack = 0
 39049  007620  0101               	movlb	1	; () banked
 39050  007622  51F1               	movf	_INT1_InterruptHandler& (0+255),w,b
 39051  007624  11F2               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 39052  007626  B4D8               	btfsc	status,2,c
 39053  007628  0012               	return	
 39054                           
 39055                           ; BSR set to: 1
 39056                           ;ext_int.c: 65: {
 39057                           ;ext_int.c: 66: INT1_InterruptHandler();
 39058  00762A  0005               	push	
 39059  00762C  6EFA               	movwf	pclath,c
 39060  00762E  51F1               	movf	_INT1_InterruptHandler& (0+255),w,b
 39061  007630  6EFD               	movwf	tosl,c
 39062  007632  51F2               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 39063  007634  6EFE               	movwf	tosh,c
 39064  007636  50F8               	movf	tblptru,w,c
 39065  007638  6EFF               	movwf	tosu,c
 39066  00763A  50FA               	movf	pclath,w,c
 39067  00763C  0012               	return		;indir
 39068  00763E                     __end_of_INT1_CallBack:
 39069                           	opt stack 0
 39070                           tosu	equ	0xFFF
 39071                           tosh	equ	0xFFE
 39072                           tosl	equ	0xFFD
 39073                           pclatu	equ	0xFFB
 39074                           pclath	equ	0xFFA
 39075                           tblptru	equ	0xFF8
 39076                           tblptrh	equ	0xFF7
 39077                           tblptrl	equ	0xFF6
 39078                           tablat	equ	0xFF5
 39079                           prodh	equ	0xFF4
 39080                           prodl	equ	0xFF3
 39081                           intcon	equ	0xFF2
 39082                           indf0	equ	0xFEF
 39083                           postinc0	equ	0xFEE
 39084                           plusw0	equ	0xFEB
 39085                           fsr0h	equ	0xFEA
 39086                           fsr0l	equ	0xFE9
 39087                           wreg	equ	0xFE8
 39088                           postinc1	equ	0xFE6
 39089                           postdec1	equ	0xFE5
 39090                           plusw1	equ	0xFE3
 39091                           fsr1h	equ	0xFE2
 39092                           fsr1l	equ	0xFE1
 39093                           indf2	equ	0xFDF
 39094                           postinc2	equ	0xFDE
 39095                           postdec2	equ	0xFDD
 39096                           plusw2	equ	0xFDB
 39097                           fsr2h	equ	0xFDA
 39098                           fsr2l	equ	0xFD9
 39099                           status	equ	0xFD8
 39100                           
 39101 ;; *************** function _INT1_DefaultInterruptHandler *****************
 39102 ;; Defined at:
 39103 ;;		line 80 in file "mcc_generated_files/ext_int.c"
 39104 ;; Parameters:    Size  Location     Type
 39105 ;;		None
 39106 ;; Auto vars:     Size  Location     Type
 39107 ;;		None
 39108 ;; Return value:  Size  Location     Type
 39109 ;;                  1    wreg      void 
 39110 ;; Registers used:
 39111 ;;		None
 39112 ;; Tracked objects:
 39113 ;;		On entry : F/1
 39114 ;;		On exit  : F/1
 39115 ;;		Unchanged: F/0
 39116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 39117 ;;      Params:         0       0       0       0       0       0       0       0       0
 39118 ;;      Locals:         0       0       0       0       0       0       0       0       0
 39119 ;;      Temps:          0       0       0       0       0       0       0       0       0
 39120 ;;      Totals:         0       0       0       0       0       0       0       0       0
 39121 ;;Total ram usage:        0 bytes
 39122 ;; Hardware stack levels used:    1
 39123 ;; This function calls:
 39124 ;;		Nothing
 39125 ;; This function is called by:
 39126 ;;		_EXT_INT_Initialize
 39127 ;;		_INT1_CallBack
 39128 ;; This function uses a non-reentrant model
 39129 ;;
 39130                           
 39131                           	psect	text219
 39132  007990                     __ptext219:
 39133                           	opt stack 0
 39134  007990                     _INT1_DefaultInterruptHandler:
 39135                           	opt stack 15
 39136                           
 39137                           ; BSR set to: 1
 39138                           
 39139                           ;incstack = 0
 39140  007990  0012               	return		;funcret
 39141  007992                     __end_of_INT1_DefaultInterruptHandler:
 39142                           	opt stack 0
 39143                           tosu	equ	0xFFF
 39144                           tosh	equ	0xFFE
 39145                           tosl	equ	0xFFD
 39146                           pclatu	equ	0xFFB
 39147                           pclath	equ	0xFFA
 39148                           tblptru	equ	0xFF8
 39149                           tblptrh	equ	0xFF7
 39150                           tblptrl	equ	0xFF6
 39151                           tablat	equ	0xFF5
 39152                           prodh	equ	0xFF4
 39153                           prodl	equ	0xFF3
 39154                           intcon	equ	0xFF2
 39155                           indf0	equ	0xFEF
 39156                           postinc0	equ	0xFEE
 39157                           plusw0	equ	0xFEB
 39158                           fsr0h	equ	0xFEA
 39159                           fsr0l	equ	0xFE9
 39160                           wreg	equ	0xFE8
 39161                           postinc1	equ	0xFE6
 39162                           postdec1	equ	0xFE5
 39163                           plusw1	equ	0xFE3
 39164                           fsr1h	equ	0xFE2
 39165                           fsr1l	equ	0xFE1
 39166                           indf2	equ	0xFDF
 39167                           postinc2	equ	0xFDE
 39168                           postdec2	equ	0xFDD
 39169                           plusw2	equ	0xFDB
 39170                           fsr2h	equ	0xFDA
 39171                           fsr2l	equ	0xFD9
 39172                           status	equ	0xFD8
 39173                           tosu	equ	0xFFF
 39174                           tosh	equ	0xFFE
 39175                           tosl	equ	0xFFD
 39176                           pclatu	equ	0xFFB
 39177                           pclath	equ	0xFFA
 39178                           tblptru	equ	0xFF8
 39179                           tblptrh	equ	0xFF7
 39180                           tblptrl	equ	0xFF6
 39181                           tablat	equ	0xFF5
 39182                           prodh	equ	0xFF4
 39183                           prodl	equ	0xFF3
 39184                           intcon	equ	0xFF2
 39185                           indf0	equ	0xFEF
 39186                           postinc0	equ	0xFEE
 39187                           plusw0	equ	0xFEB
 39188                           fsr0h	equ	0xFEA
 39189                           fsr0l	equ	0xFE9
 39190                           wreg	equ	0xFE8
 39191                           postinc1	equ	0xFE6
 39192                           postdec1	equ	0xFE5
 39193                           plusw1	equ	0xFE3
 39194                           fsr1h	equ	0xFE2
 39195                           fsr1l	equ	0xFE1
 39196                           indf2	equ	0xFDF
 39197                           postinc2	equ	0xFDE
 39198                           postdec2	equ	0xFDD
 39199                           plusw2	equ	0xFDB
 39200                           fsr2h	equ	0xFDA
 39201                           fsr2l	equ	0xFD9
 39202                           status	equ	0xFD8
 39203                           
 39204                           	psect	text220
 39205  000000                     __ptext220:
 39206                           	opt stack 0
 39207                           tosu	equ	0xFFF
 39208                           tosh	equ	0xFFE
 39209                           tosl	equ	0xFFD
 39210                           pclatu	equ	0xFFB
 39211                           pclath	equ	0xFFA
 39212                           tblptru	equ	0xFF8
 39213                           tblptrh	equ	0xFF7
 39214                           tblptrl	equ	0xFF6
 39215                           tablat	equ	0xFF5
 39216                           prodh	equ	0xFF4
 39217                           prodl	equ	0xFF3
 39218                           intcon	equ	0xFF2
 39219                           indf0	equ	0xFEF
 39220                           postinc0	equ	0xFEE
 39221                           plusw0	equ	0xFEB
 39222                           fsr0h	equ	0xFEA
 39223                           fsr0l	equ	0xFE9
 39224                           wreg	equ	0xFE8
 39225                           postinc1	equ	0xFE6
 39226                           postdec1	equ	0xFE5
 39227                           plusw1	equ	0xFE3
 39228                           fsr1h	equ	0xFE2
 39229                           fsr1l	equ	0xFE1
 39230                           indf2	equ	0xFDF
 39231                           postinc2	equ	0xFDE
 39232                           postdec2	equ	0xFDD
 39233                           plusw2	equ	0xFDB
 39234                           fsr2h	equ	0xFDA
 39235                           fsr2l	equ	0xFD9
 39236                           status	equ	0xFD8
 39237                           
 39238                           	psect	rparam
 39239  0000                     tosu	equ	0xFFF
 39240                           tosh	equ	0xFFE
 39241                           tosl	equ	0xFFD
 39242                           pclatu	equ	0xFFB
 39243                           pclath	equ	0xFFA
 39244                           tblptru	equ	0xFF8
 39245                           tblptrh	equ	0xFF7
 39246                           tblptrl	equ	0xFF6
 39247                           tablat	equ	0xFF5
 39248                           prodh	equ	0xFF4
 39249                           prodl	equ	0xFF3
 39250                           intcon	equ	0xFF2
 39251                           indf0	equ	0xFEF
 39252                           postinc0	equ	0xFEE
 39253                           plusw0	equ	0xFEB
 39254                           fsr0h	equ	0xFEA
 39255                           fsr0l	equ	0xFE9
 39256                           wreg	equ	0xFE8
 39257                           postinc1	equ	0xFE6
 39258                           postdec1	equ	0xFE5
 39259                           plusw1	equ	0xFE3
 39260                           fsr1h	equ	0xFE2
 39261                           fsr1l	equ	0xFE1
 39262                           indf2	equ	0xFDF
 39263                           postinc2	equ	0xFDE
 39264                           postdec2	equ	0xFDD
 39265                           plusw2	equ	0xFDB
 39266                           fsr2h	equ	0xFDA
 39267                           fsr2l	equ	0xFD9
 39268                           status	equ	0xFD8
 39269                           
 39270                           	psect	temp
 39271  00004A                     btemp:
 39272                           	opt stack 0
 39273  00004A                     	ds	12
 39274                           tosu	equ	0xFFF
 39275                           tosh	equ	0xFFE
 39276                           tosl	equ	0xFFD
 39277                           pclatu	equ	0xFFB
 39278                           pclath	equ	0xFFA
 39279                           tblptru	equ	0xFF8
 39280                           tblptrh	equ	0xFF7
 39281                           tblptrl	equ	0xFF6
 39282                           tablat	equ	0xFF5
 39283                           prodh	equ	0xFF4
 39284                           prodl	equ	0xFF3
 39285                           intcon	equ	0xFF2
 39286                           indf0	equ	0xFEF
 39287                           postinc0	equ	0xFEE
 39288                           plusw0	equ	0xFEB
 39289                           fsr0h	equ	0xFEA
 39290                           fsr0l	equ	0xFE9
 39291                           wreg	equ	0xFE8
 39292                           postinc1	equ	0xFE6
 39293                           postdec1	equ	0xFE5
 39294                           plusw1	equ	0xFE3
 39295                           fsr1h	equ	0xFE2
 39296                           fsr1l	equ	0xFE1
 39297                           indf2	equ	0xFDF
 39298                           postinc2	equ	0xFDE
 39299                           postdec2	equ	0xFDD
 39300                           plusw2	equ	0xFDB
 39301                           fsr2h	equ	0xFDA
 39302                           fsr2l	equ	0xFD9
 39303                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    402
    Data        56
    BSS         1280
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     47      83
    BANK0           160    152     152
    BANK1           256    110     251
    BANK2           256      0     245
    BANK3           256     20     180
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    RxDataDone@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1514$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[2]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[2]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncode@masterKey	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    EncKeySchedule@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncode@key(BANK0[16]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> payload(BANK1[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(1) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> payload(BANK1[2]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK1[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 2
		 -> payload(BANK1[2]), NULL(NULL[0]), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF4_DefaultInterruptHandler(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK3[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E17205,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    S1514$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1514$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E17205,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E17205,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S839$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S839$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S172$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    INT3_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT3_DefaultInterruptHandler(), 

    INT3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT3_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), DIO2_ISR_Lora(), DIO1_ISR_Lora(), DIO0_ISR_Lora(), 
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), DIO2_ISR_Lora(), DIO1_ISR_Lora(), DIO0_ISR_Lora(), 
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _sendPacket->_LORAWAN_Send
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO5_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EXT_INT_Initialize->_INT3_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetCurrentDataRate->_ValidateDataRate
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteLinkAdr
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_SwTimerStart
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_SwTimerStart
    _RADIO_WriteConfiguration->_RADIO_WriteFrequency
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->_SwTimerStart
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_Send->_AssemblePacket
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0 6578721
                                            147 BANK0      5     5      0
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
   _LORAWAN_SetApplicationSessionKey
                   _LORAWAN_SetClass
         _LORAWAN_SetCurrentDataRate
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
                              _flash
                         _sendPacket
 ---------------------------------------------------------------------------------
 (1) _sendPacket                                           0     0      0  312387
                       _LORAWAN_Send
           _LORAWAN_SetUplinkCounter
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_SetUplinkCounter                             4     0      4     135
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _flash                                                2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    3717
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     239
                                              6 BANK0      2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0     169
                                              6 BANK0      1     1      0
         _IOCBF4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCBF4_SetInterruptHandler                           2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0    2371
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     239
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     239
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0     533
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     533
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     533
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     533
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     938
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
           _INT3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT3_SetInterruptHandler                             2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2     533
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     135
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetCurrentDataRate                           1     1      0     223
                                              6 BANK0      1     1      0
              _UpdateCurrentDataRate
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetClass                                     1     1      0   16016
                                             16 BANK0      1     1      0
                  _RADIO_ReceiveStop
           _RADIO_SetWatchdogTimeout
 ---------------------------------------------------------------------------------
 (2) _RADIO_SetWatchdogTimeout                             4     0      4     239
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 5802250
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2266213
                                            136 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  147886
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  662267
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  488841
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  153033
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9224
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9667
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  312252
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  157701
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                         _RxDataDone *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36323
                                             29 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  534747
                                             78 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  498393
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26412
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 2935302
                                            143 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9747
                                              8 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  199578
                                            112 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1036497
                                            141 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              5     4      1     549
                                              4 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1499160
                                            141 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  472962
                                             69 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  315700
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1010158
                                            136 BANK0      5     5      0
                                            107 BANK1      3     0      3
                                              0 BANK3     20    20      0
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                         _RxDataDone *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9085
                                             52 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9122
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                        11     9      2   19594
                                             16 BANK0     11     9      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9376
                                             52 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  162701
     _LORAWAN_EnterContinuousReceive
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   19487
                                             26 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2     265
                                              9 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  5     5      0      62
                                              4 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               7     5      2    4297
                                             16 BANK0      7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     438
                                              4 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                    8     6      2   10051
                                             16 BANK0      8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     644
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              6 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     385
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     385
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     608
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2369
                                              8 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     842
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                       9     7      2    3295
                                             17 BANK0      9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ValidateDataRate                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  3     1      2     271
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UpdateCurrentDataRate                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2044
                                             14 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      6     1      5    1774
                                              8 BANK0      6     1      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Send                                         7     3      4  312252
                                            129 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                             12 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (3) _AssemblePacket                                      12     7      5  151724
                                            122 BANK0      7     7      0
                                            102 BANK1      5     0      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _IncludeMacCommandsResponse                          12     8      4    2532
                                              4 BANK0     12     8      4
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _FindSmallestDataRate                                 4     4      0     424
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _EncryptFRMPayload                                   22     8     14   44159
                                             68 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
 ---------------------------------------------------------------------------------
 (5) _AssembleEncryptionBlock                              9     2      7   19076
                                             14 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _CountfOptsLength                                     8     8      0     198
                                              4 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          10     6      4   13819
                                             14 BANK0     10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   37765
                                             68 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   17577
                                             14 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  190026
                                            112 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      50    48      2  173621
                                             62 BANK0     50    48      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                         _RxDataDone *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     455
                                             43 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      65
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  157850
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _RxDataDone                                           4     0      4    4851
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_ReceiveStop                                    0     0      0   15684
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  122643
                                             52 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   14672
                                             22 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      34
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  248201
                                            140 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelForTransmission                         3     3      0   19265
                                             37 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (4) _SearchAvailableChannel                              12     9      3    4535
                                             25 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadioTx                                     6     2      4   14532
                                             22 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetOutputPower                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetIQInverted                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetCRC                                         1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadio                                       5     1      4   14236
                                             17 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetModulation                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFSKSyncWord                                 3     1      2   13293
                                             14 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetChannelFrequency                            4     0      4     321
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetBandwidth                                   1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Transmit                                      17    14      3  123770
                                             52 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteConfiguration                            10     8      2   87685
                                             29 BANK0     10     8      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_WritePower                                     3     3      0   10303
                                              8 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15813
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKBitRate                                8     4      4   15810
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  101770
                                            131 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _Random                                               2     0      2    3326
                                             23 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2    2647
                                             16 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    2647
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             18 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   81241
                                            122 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   67391
                                            108 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   26439
                                             68 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1539
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _AESEncodeLoRa                                       20    16      4   19957
                                             48 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AESEncode                                           38    35      3    5098
                                             10 BANK0     38    35      3
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (7) _EncodeShiftRow                                       3     1      2     984
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _EncKeySchedule                                       6     5      1    1164
                                              4 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  168868
                                             68 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     135
                                             21 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2620
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     5     3      2   26256
                                             16 BANK0      5     3      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0   93127
                                             67 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     223
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46271
                                             29 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2620
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteMode                                      7     5      2   15684
                                              9 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterRead                                   2     2      0     130
                                              6 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFrequency                                12     8      4   16566
                                             17 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     440
                                              4 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterWrite                                  2     1      1    9716
                                              6 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALSPISend                                           1     1      0      62
                                              5 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI2_Exchange8bit                                    1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     680
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _SystemBlockingWaitMs                                 5     1      4     618
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      62
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          15    13      2    9418
                                             52 BANK0     15    13      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    5857
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _SwTimerStop                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SwTimerStart                                         9     9      0    1294
                                             43 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (5) _TMR_OverrideRemaining                               10     6      4     743
                                             12 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (6) _TMR_SwapTimer                                        2     0      2     478
                                             10 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SwTimersInterrupt                                   17    13      4     390
                                             26 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (6) _TMR_GetDeltaTime                                    16    12      4      34
                                             10 BANK0     16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       6     4      2      34
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _SwTimerSetTimeout                                    9     5      4    1934
                                             17 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    3569
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6   13062
                                              4 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     158
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     158
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     455
                                             39 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                           _INT3_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     455
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     455
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        0     0      0     455
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     185
                                              6 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     270
                                             22 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 16    12      4      23
                                              6 COMRAM    16    12      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                         _IOCBF4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCBF4_ISR                                          0     0      0       0
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCBF4_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT3_ISR                                            0     0      0       0
                      _INT3_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT3_CallBack                                       0     0      0       0
                   Absolute function *
       _INT3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
         _rand
           ___lmul
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RxDataDone *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RxDataDone *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxDataDone *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetClass
     _RADIO_ReceiveStop
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
     _RADIO_SetWatchdogTimeout
   _LORAWAN_SetCurrentDataRate
     _UpdateCurrentDataRate
     _ValidateDataRate
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
       _INT3_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCBF4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _flash
   _sendPacket
     _LORAWAN_Send
       _AssemblePacket
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _AssembleEncryptionBlock
           _memcpy
           _memset
         _CountfOptsLength
         _EncryptFRMPayload
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
         _FindSmallestDataRate
         _IncludeMacCommandsResponse
           _RADIO_GetPacketSnr
         _memcpy
         _memset
       _LORAWAN_GetMaxPayloadSize
         _CountfOptsLength
       _RADIO_ReceiveStop
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _RADIO_Transmit
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteConfiguration
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteFSKBitRate
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFSKFrequencyDeviation
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFrequency
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
             ___llmod
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _RADIO_WritePower
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
           ___lmul
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _SelectChannelForTransmission
         _ConfigureRadioTx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
           _RADIO_SetOutputPower
         _SearchAvailableChannel
           _Random
             ___lwmod
               _rand (ARG)
                 ___lmul
             _rand
               ___lmul
     _LORAWAN_SetUplinkCounter

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
   _INT3_ISR
     _INT3_CallBack
       Absolute function(Fake) *
       _INT3_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     21E      21       26.5%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      11        0.0%
BANK3              100     14      B4      12       70.3%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      F5      10       95.7%
BITBANK1           100      0       0       7        0.0%
BANK1              100     6E      FB       8       98.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     98      98       6       95.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     2F      53       1      100.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46F       3        0.0%
DATA                 0      0     68F       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri May 19 12:48:55 2023

                                        ??_LORAWAN_TxDone 00A0  
                              __end_of_DIO3_ISR_Lora_Init 7984  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 002E  
                                          HALSPISend@data 0065  
                                             __CFG_CP$OFF 000000  
                         __end_of_ValidateChannelMaskCntl 775A  
                         __size_of_UpdateJoinSuccessState 0132  
                                            _TMR_ISR_lora 6B0A  
                                   __end_of_AESEncodeLoRa 73AE  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00A5  
                                                     l143 62A4  
                                                     l209 7814  
                                                     l401 522C  
                                                     l611 7254  
                                                     l472 14D4  
                                                     l466 150C  
                                                     l485 1746  
                                                     l709 5ED2  
                                             ?_RADIO_Init 007D  
                                                     l479 155C  
                                                     l498 1818  
                                                     l692 6D30  
                                                     l695 6D42  
                                                     l689 70D0  
                                         ??_UpdateTxPower 0064  
                                                     _GIE 007F97  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 670E  
                   __size_of_SelectChannelForTransmission 0060  
                            _SelectChannelForTransmission 66AE  
                                  _ExecuteRxParamSetupReq 42D8  
                              ??_INT0_SetInterruptHandler 0066  
                                      _DIO2_ISR_Lora_Init 7926  
                                      __size_of_AESEncode 02F2  
                                         _timer1ReloadVal 005E  
                              ??_INT3_SetInterruptHandler 0066  
                                         ?_EncKeySchedule 0064  
                                   _RADIO_SetLoRaSyncWord 78C6  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 1B48  
                                 __end_of_SwTimersExecute 598C  
                                  SystemBlockingWaitMs@ms 0064  
                                 LORAWAN_Join@bufferIndex 00EC  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0064  
                                    ??i2_TMR_GetDeltaTime 000B  
                      __end_of_IOCBF4_SetInterruptHandler 7876  
                              _IOCBF4_SetInterruptHandler 786C  
                                ??_SearchAvailableChannel 007C  
                            __end_of_FindSmallestDataRate 5B90  
                     __end_of_RADIO_SetFrequencyHopPeriod 78C6  
                             _RADIO_SetFrequencyHopPeriod 78BC  
                                              _CheckFlags 670E  
                                  ?_TMR_OverrideRemaining 006C  
                                           _INT1_CallBack 7620  
                                ?_AssembleEncryptionBlock 006E  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0068  
                                            __CFG_ZCD$OFF 000000  
                                                    l1110 6A5A  
                                                    l1102 74A8  
                                                    l1050 1216  
                                                    l2014 3800  
                                                    l1118 3644  
                                                    l1223 4B3C  
                                                    l2111 467C  
                                                    l1152 4F7E  
                                                    l1129 3482  
                                                    l2033 5A64  
                                                    l1234 4848  
                                                    l1250 6822  
                                                    l1242 7796  
                                                    l1146 43AE  
                                                    l1170 31F4  
                                                    l1082 283E  
                                                    l3003 669C  
                                                    l1155 500C  
                                                    l2035 5AE0  
                                                    l2116 57D0  
                                                    l1068 2746  
                                                    l1316 2708  
                                                    l1165 5040  
                                                    l2142 010C  
                                                    l2038 55EE  
                                                    l2062 417A  
                                                    l1263 7586  
                                                    l2047 55FE  
                                                    l1424 1A00  
                                                    l2304 20C0  
                                                    l1409 1898  
                                                    l2313 5AFE  
                                                    l1257 7106  
                                                    l1098 77AA  
                                                    l2154 0264  
                                                    l2090 6314  
                                                    l1283 7072  
                                                    l2171 054C  
                                                    l2252 1BAE  
                                                    l2172 0554  
                                                    l2084 4AB0  
                                                    l2253 1C54  
                                                    l1269 7756  
                                                    l2262 1C62  
                                                    l2254 1C52  
                                                    l1368 7688  
                                                    l3056 6EBE  
                                                    l2328 6398  
                                                    l2192 09A2  
                                                    l2257 1C4E  
                                                    l1298 6854  
                                                    l2541 2184  
                   RADIO_WriteConfiguration@symbolTimeout 007D  
                                                    l1738 5CDC  
                                                    l1739 5D24  
                                                    l1767 56B2  
                                                    l2993 61B8  
                                        _RADIO_WritePower 53A4  
                            ??_LORAWAN_SetCurrentDataRate 0066  
                            ??_LORAWAN_SetChannelIdStatus 0069  
                                 _PrepareJoinRequestFrame 4686  
                                     _RADIO_Transmit$1052 009F  
                                                    _LATA 000F79  
                                                    _LATB 000F7A  
                                                    _LATC 000F7B  
                                                    _LATD 000F7C  
                                                    _LATE 000F7D  
                                                    _LATF 000F7E  
                                                    _LATG 000F7F  
                                                    _LATH 000F80  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 001E  
                                       ??_UpdateDutyCycle 0066  
                                                    _WPUA 000E91  
                                                    _WPUB 000E99  
                                                    _WPUC 000EA1  
                                  ??_LORAWAN_PlatformInit 0066  
                                                    _WPUD 000EA6  
                                                    _WPUE 000EAE  
                                                    _WPUF 000EB3  
                                                    _WPUG 000EBB  
                                                    _WPUH 000EC0  
                                           _INT2_CallBack 7602  
                                           __CFG_FCMEN$ON 000000  
                                ??_InitDefault433Channels 006E  
                                ExecuteNewChannel@drRange 0072  
                                      _PrepareSessionKeys 5FE0  
                                                    _loRa 0200  
                                                    _main 5472  
                                                    _rand 6A6E  
                          __end_of_UpdateMinMaxChDataRate 582A  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr0l 000FE9  
                                                    fsr2h 000FDA  
                                                    fsr1l 000FE1  
                                                    indf2 000FDF  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 01EE  
                                                    btemp 004A  
                          __size_of_StopAllSoftwareTimers 004E  
                                           ComputeMic@mic 00DF  
                                           ComputeMic@key 00DA  
                               __end_of_LORAWAN_RxTimeout 29C8  
                               __size_of_ConfigureRadioRx 0026  
                                           _INT3_CallBack 75E4  
                               __size_of_ConfigureRadioTx 0042  
                       __size_of_INT2_SetInterruptHandler 000A  
                                                    pclat 000FFA  
                           __end_of_StopAllSoftwareTimers 6B0A  
                               ?_INT2_SetInterruptHandler 0064  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 008E  
                                __end_of_CountfOptsLength 5A3C  
                                   ExecuteLinkAdr@txPower 0076  
                                     __size_of_HALSPISend 000A  
                              ??_TMR1_SetInterruptHandler 0066  
                                           __CFG_CSWEN$ON 000000  
                              EnableChannels1@channelMask 0068  
                                        ??_AssemblePacket 00DA  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006E  
                                  __size_of_TMR_SwapTimer 003E  
                              __end_of_RADIO_GetPacketSnr 7944  
                                            ___param_bank 000010  
                                              _GetRx1Freq 77F8  
                              __size_of_RADIO_ReleaseData 0006  
                                           __CFG_SCANE$ON 000000  
                                    ??_DIO2_ISR_Lora_Init 0066  
                         __end_of_CreateAllSoftwareTimers 6A20  
                  SearchAvailableChannel@transmissionType 0079  
                         __size_of_HALResetPinOutputValue 0014  
                                   MacExecuteCommands@ptr 0080  
                                   _RADIO_WriteFSKBitRate 65EA  
                                __size_of_SystemTimerInit 0006  
                                        __end_of_INT1_ISR 7968  
                                        __end_of_INT2_ISR 7962  
                                        __end_of_INT3_ISR 795C  
                          __size_of_OSCILLATOR_Initialize 0012  
                                  ExecuteLinkAdr@dataRate 0079  
                           __end_of_OSCILLATOR_Initialize 77E6  
                                     __size_of_IOCBF4_ISR 0026  
                      __size_of_LORAWAN_LinkCheckCallback 0158  
                                                   l12011 68E6  
                                                   l12017 691A  
                                                   l12105 23FC  
                                                   l12025 213A  
                                                   l12131 617C  
                                                   l12213 524E  
                                                   l12221 526A  
                                                   l12205 522E  
                                                   l12127 616C  
                                                   l12151 666C  
                                                   l12039 2160  
                                                   l13111 19E2  
                                                   l12311 53FC  
                                                   l13007 4F82  
                                                   l13023 5010  
                                                   l13031 5026  
                                                   l12129 6178  
                                                   l12233 528E  
                                                   l12217 5258  
                                                   l12081 22C8  
                                                   l12073 2292  
                                                   l12065 21D2  
                                                   l12049 2186  
                                                   l13105 19A4  
                                                   l13033 502A  
                                                   l12139 61AA  
                                                   l12155 668E  
                                                   l12147 665C  
                                                   l12235 5292  
                                                   l12219 5260  
                                                   l12075 229C  
                                                   l12323 5422  
                                                   l12315 540A  
                                                   l13027 501A  
                                                   l13019 500A  
                                         __end_of___abdiv 697C  
                                                   l12149 6668  
                                                   l12237 529C  
                                                   l12085 22EA  
                                                   l12421 6BF4  
                                                   l12309 53F0  
                                                   l12501 1546  
                                                   l13037 503C  
                                                   l12413 48AC  
                                                   l12405 4892  
                                                   l14013 4658  
                                                   l12183 4C1E  
                                                   l12247 52BC  
                                                   l12087 22F4  
                                                   l12079 22BE  
                                                   l13135 1ADA  
                                                   l13119 1A04  
                                                   l12343 5450  
                                                   l12319 5416  
                                                   l14111 6750  
                                                   l14103 6724  
                                                   l13231 42C8  
                                                   l13207 41CC  
                                                   l13303 1FF0  
                                                   l12407 4896  
                                                   l14007 45C2  
                                                   l12177 4BCE  
                                                   l12249 52C6  
                                                   l12097 23F2  
                                                   l12425 6C2C  
                                                   l13129 1AA2  
                                                   l13073 18AA  
                                                   l13081 191E  
                                                   l12441 6E9E  
                                                   l12337 5448  
                                                   l12505 1552  
                                                   l12361 5EAC  
                                                   l13241 5A2C  
                                                   l13225 4282  
                                                   l13217 4236  
                                                   l13321 2052  
                                                   l13313 2028  
                                                   l12187 4C80  
                                                   l13091 196E  
                                                   l13067 1884  
                                                   l12443 6EA2  
                                                   l12291 53BC  
                                                   l12507 1558  
                                                   l15003 3B1C  
                                                   l14107 673A  
                                                   l13235 5994  
                                                   l13243 5A2E  
                                                   l13163 5B56  
                                                   l13155 5B02  
                                                   l13331 2098  
                                                   l14131 2F16  
                                                   l14123 2EC0  
                                                   l14203 00CE  
                                                   l12189 4C82  
                                                   l12197 5214  
                                                   l15101 581A  
                                                   l12613 17D2  
                                                   l13405 30C8  
                                                   l12357 5E88  
                                                   l13245 5A38  
                                                   l13165 5B58  
                                                   l13173 5B72  
                                                   l13181 5B8A  
                                                   l13317 203A  
                                                   l14133 2F2C  
                                                   l14125 2ED4  
                                                   l12383 733E  
                                                   l15103 581E  
                                                   l13095 198C  
                                                   l13087 1944  
                                                   l13079 18E6  
                                                   l12447 6EB4  
                                                   l12439 6E96  
                                                   l12295 53C8  
                                                   l12623 180E  
                                                   l12527 15A2  
                                                   l14063 6214  
                                                   l14055 6200  
                                                   l13239 59F6  
                                                   l13167 5B62  
                                                   l13263 1ED2  
                                                   l13255 1E54  
                                                   l13351 2120  
                                                   l13191 6BDA  
                                                   l14135 2F42  
                                                   l14127 2EEA  
                                                   l14119 2E10  
                                                   l14303 0422  
                                                   l14231 01AE  
                                                   l15015 7478  
                                                   l12465 5DB0  
                                                   l15121 37F0  
                                                   l13097 199A  
                                                   l12617 17EE  
                                                   l12609 17C2  
                                                   l12537 15CC  
                                                   l12545 15E8  
                                                   l12481 145C  
                                                   l13433 316A  
                                                   l13409 30DE  
                                                   l13361 3006  
                                                   l12377 726C  
                                                   l13177 5B82  
                                                   l13337 20C6  
                                                   l13281 1F66  
                                                   l13273 1F18  
                                                   l13353 212C  
                                                   l12393 47F6  
                                                   l13601 3554  
                                                   l14137 2F58  
                                                   l14129 2F00  
                                                   l14305 043A  
                                                   l14209 010E  
                                                   l12387 734E  
                                                   l15115 37C4  
                                                   l15123 37F4  
                                                   l12723 4948  
                                                   l12483 147E  
                                                   l12491 14F2  
                                                   l12811 2CD4  
                                                   l13283 1F6C  
                                                   l13347 20EA  
                                                   l12395 47FA  
                                                   l12651 7582  
                                                   l13603 355E  
                                                   l14139 2F6E  
                                                   l14147 2F80  
                                                   l14155 2FCC  
                                                   l14091 63D4  
                                                   l14403 06C2  
                                                   l14323 0460  
                                                   l14227 019E  
                                                   l14173 62A6  
                                                   l12717 4924  
                                                   l12709 490C  
                                                   l12493 1516  
                                                   l12485 14A0  
                                                   l14069 6226  
                                                   l13293 1FB2  
                                                   l13349 211E  
                                                   l13277 1F3E  
                                                   l13525 3624  
                                                   l13517 35F4  
                                                   l13605 3562  
                                                   l14149 2FAE  
                                                   l14093 63D8  
                                                   l14253 024A  
                                                   l15221 406A  
                                                   l15213 4042  
                                                   l15063 648C  
                                                   l11943 6ED4  
                                                   l12735 4986  
                                                   l12727 496C  
                                                   l13439 31DA  
                                                   l13375 3034  
                                                   l13367 301C  
                                                   l12671 60CA  
                                                   l12823 2D8C  
                                                   l12807 2CBC  
                                                   l13199 4194  
                                                   l13279 1F54  
                                                   l13703 1C18  
                                                   l13551 3714  
                                                   l12903 4BA0  
                                                   l14159 2FEA  
                                                   l14503 09AA  
                                                   l14431 074E  
                                                   l14343 049A  
                                                   l14335 0474  
                                                   l14271 02C4  
                                                   l15129 384A  
                                                   l12489 14E0  
                                                   l13393 3094  
                                                   l12817 2D3E  
                                                   l13297 1FD8  
                                                   l13721 1C74  
                                                   l12681 6840  
                                                   l13545 36C6  
                                                   l12913 7044  
                                                   l13625 436A  
                                                   l14441 07A2  
                                                   l14417 0748  
                                                   l14433 0766  
                                                   l14265 02B6  
                                                   l15153 2514  
                                                   l15145 245A  
                                                   l11971 4E66  
                                                   l15091 5782  
                                                   l12595 172E  
                                                   l12587 16FC  
                                                   l12579 16B8  
                                                   l13395 30A8  
                                                   l12763 58A8  
                                                   l13723 1C7C  
                                                   l12691 686C  
                                                   l12683 6848  
                                                   l13547 36DA  
                                                   l12851 67FE  
                                                   l13643 4416  
                                                   l14451 07A8  
                                                   l14339 048C  
                                                   l14291 0404  
                                                   l14371 0592  
                                                   l15235 40E4  
                                                   l15219 405E  
                                                   l15155 252E  
                                                   l15163 25C6  
                                                   l11981 7328  
                                                   l12589 1708  
                                                   l12597 1750  
                                                   l13477 6708  
                                                   l12829 2DFC  
                                                   l12781 2C16  
                                                   l12757 5882  
                                                   l13725 1C8A  
                                                   l13493 6A64  
                                                   l12677 6832  
                                                   l12941 74A4  
                                                   l13549 36DE  
                                                   l13581 344E  
                                                   l13629 438C  
                                                   l13901 339A  
                                                   l14541 0A4A  
                                                   l14453 07BA  
                                                   l14621 27F2  
                                                   l15501 654A  
                                                   l15229 408E  
                                                   l15079 64F2  
                                                   l11887 2AAA  
                                                   l13399 30B8  
                                                   l12791 2C40  
                                                   l14703 107A  
                                                   l12759 5888  
                                                   l13751 1D60  
                                                   l13655 6E2C  
                                                   l12695 6876  
                                                   l12871 7102  
                                                   l13583 3462  
                                                   l14543 0A50  
                                                   l14527 0A10  
                                                   l14463 07C0  
                                                   l14375 05BE  
                                                   l14383 05CA  
                                                   l14615 27C2  
                                                   l15511 6570  
                                                   l15191 5A54  
                                                   l15175 266A  
                                                   l11969 4E16  
                                                   l13833 77BA  
                                                   l11977 730C  
                                                   l11889 2AB4  
                                                   l12793 2C4C  
                                                   l14713 1146  
                                                   l13657 6E46  
                                                   l12689 6864  
                                                   l12849 67F8  
                                                   l14537 0A22  
                                                   l14545 0A56  
                                                   l14633 2830  
                                                   l14801 6972  
                                                   l15505 6550  
                                                   l15521 6580  
                                                   l15265 4A4A  
                                                   l12787 2C2C  
                                                   l14723 11FE  
                                                   l14731 1278  
                                                   l14707 1144  
                                                   l13739 1CE2  
                                                   l12939 749C  
                                                   l13595 34FA  
                                                   l13915 442E  
                                                   l14563 0AA8  
                                                   l14555 0A98  
                                                   l14547 0A5C  
                                                   l14475 082A  
                                                   l14467 07CE  
                                                   l14651 28F4  
                                                   l14619 27D0  
                                                   l15507 6562  
                                                   l15531 6FDA  
                                                   l15195 5A66  
                                                   l15275 4A70  
                                                   l15613 3EDC  
                                                   l12797 2C74  
                                                   l13757 1DB6  
                                                   l13677 1BA6  
                                                   l12973 7090  
                                                   l12885 4AEE  
                                                   l13597 3504  
                                                   l13909 76BC  
                                                   l14493 090C  
                                                   l14477 0834  
                                                   l14581 0AD2  
                                                   l14653 28F8  
                                                   l14805 6978  
                                                   l15517 657A  
                                                   l13861 55E6  
                                                   l15269 4A50  
                                                   l15285 4AAC  
                                                   l12799 2C9C  
                                                   l14743 12D4  
                                                   l13951 561C  
                                                   l12895 4B86  
                                                   l13927 44E0  
                                                   l14639 2842  
                                                   l14663 299A  
                                                   l15535 6FE0  
                                                   l15551 6C62  
                                                   l15295 62E2  
                                                   l12897 4B8A  
                                                   l13929 44E4  
                                                   l14657 2968  
                                                   l14905 537E  
                                                   l13865 55F6  
                                                   l13857 55D8  
                                                   l14755 1358  
                                                   l13955 562A  
                                                   l14587 0B0E  
                                                   l14931 5BE0  
                                                   l14907 5382  
                                                   l15539 6FF2  
                                                   l15547 6C5C  
                                                   l16451 597E  
                                                   l14749 1342  
                                                   l14693 0E72  
                                                   l14685 0D78  
                                                   l13973 565A  
                                                   l13965 564C  
                                                   l14773 693A  
                                                   l16437 58E4  
                                                   l14855 3994  
                                                   l15823 6782  
                                                   l15743 46BA  
                                                   l14759 1386  
                                                   l14695 0FA6  
                                                   l13959 5640  
                                                   l14599 2738  
                                                   l14951 5C18  
                                                   l14927 5BC6  
                                                   l14791 695A  
                                                   l16447 5978  
                                                   l14865 39DC  
                                                   l14857 39AA  
                                                   l15825 6786  
                                                   l13977 5666  
                                                   l14945 5C0E  
                                                   l14785 6950  
                                                   l16449 597A  
                                                   l15675 3F8C  
                                                   l15587 5F90  
                                                   l15755 46F8  
                                                   l13899 3390  
                                                   l14947 5C14  
                                                   l14779 6944  
                                                   l14891 5334  
                                                   l14883 5310  
                                                   l16563 54D6  
                                                   l14797 696A  
                                                   l14789 6956  
                                                   l14981 3CAE  
                                                   l15917 722C  
                                                   l14895 534E  
                                                   l16559 54D0  
                                                   l15929 6CE0  
                                                   l16593 5512  
                                                   l16569 54E4  
                                                   l15971 6B58  
                                                   l16587 550C  
                                                   l16579 54F8  
                                                   ?_main 0001  
                                                   ?_rand 0070  
                                           __CFG_WDTE$OFF 000000  
                                              _FillSubKey 6BEA  
                                         _TMR1_StartTimer 7968  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 61CA  
                                         RADIO_Transmit@i 00A4  
                                                   _T1CLK 000FD2  
                                                   _T1CON 000FCF  
                                         __end_of___llmod 66AE  
                                                   u20067 5518  
                                                   u20077 6B76  
                                                   u20087 6B88  
                                                   u20097 7312  
                                                   u12700 6EE4  
                                       ??_EnableChannels1 006D  
                                                   _LATC0 007BD8  
                                                   _LATC1 007BD9  
                                                   u13450 1506  
                                    RxJoinResponse@status 0001  
                                                   u12740 690E  
                                                   u13455 14FC  
                                                   u12920 60E8  
                       __end_of_AckRetransmissionCallback 4AB6  
                  SearchAvailableChannel@randomNumberCopy 0080  
                                                   u14345 1868  
                                                   u12747 6904  
                                                   u13555 1600  
                                                   u17100 1004  
                                                   u17110 1108  
                                                   u13920 2D5A  
                                                   u17200 12A4  
                                                   u16320 04D8  
                                                   u13905 2CF2  
                                                   u17105 0FFA  
                                                   u16090 017C  
                                                   u17115 10FE  
                                                   u17035 0B92  
                                                   u16171 02A0  
                                                   u13781 48C2  
                                                   u17045 0C06  
                                                   u14670 1ED0  
                                                   u16510 086C  
                                                   u16350 05BA  
                                                   u13935 2D7C  
                                                   u17215 12C4  
                                                   u17055 0DA6  
                                                   u15615 4506  
                                                   u16248 0420  
                                                   u13945 2D9E  
                                                   u17225 12E6  
                                                   u17065 0E1A  
                                                   u17090 0FE6  
                                                   u16370 06BC  
                                                   u15458 55C2  
                                                   u18050 4A44  
                                                   u16428 0732  
                                                   u16348 057C  
                                                   u14870 3138  
                                                   u18118 4A96  
                                          __CFG_DEBUG$OFF 000000  
                                                   u17520 3A90  
                                                   u17530 3AA6  
                                                   u14954 6A4A  
                                                   u15818 4668  
                                                   u15770 4580  
                                                   u14955 6A44  
                                                   u15755 6336  
                                                   u17540 3BA2  
                                                   u14885 315A  
                                                   u17470 3C22  
                                                   u18158 62FE  
                                                   u18078 4A6E  
                                                   u18270 511C  
                                                   u14895 317C  
                                                   u17535 3A9C  
                                                   u17720 3818  
                                                   u16648 0A82  
                                                   u17480 3C38  
                                                   u17545 3B98  
                                                   u15785 45B2  
                                                   u15938 63BE  
                                                   u16578 09FA  
                                                   u17490 3D34  
                                                   u16835 2776  
                                                   u15795 45D4  
                                                   u17820 261A  
                                                   u17485 3C2E  
                                                   u17735 383A  
                                                   u17495 3D2A  
                                                   u18295 652E  
                                                   u17745 385C  
                                                   u17835 265A  
                                                   u16965 2912  
                                                   u17845 2684  
                                                   u17950 40A2  
                                                   u17965 40D4  
                                                   u17975 40F6  
                                         __end_of___lwmod 6EC8  
                                                   u19778 5964  
                                                   i2l259 6B54  
                                           ?_RADIO_RxDone 0001  
                     __size_of_LORAWAN_SetCurrentDataRate 002E  
                             __size_of_RADIO_ReceiveStart 0200  
                                                   _OSCEN 000E47  
                     __size_of_LORAWAN_SetChannelIdStatus 0038  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCE  
                                                   _TMR1L 000FCD  
                                                   _TRISA 000F81  
                                                   _TRISB 000F82  
                                                   _TRISC 000F83  
                                                   _TRISD 000F84  
                                                   _TRISE 000F85  
                                                   _TRISF 000F86  
                                                   _TRISG 000F87  
                                                   _TRISH 000F88  
                                __size_of_RADIO_RxTimeout 0028  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 0068  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 7938  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0074  
                                        __end_of_TMR1_ISR 7468  
                               FindSmallestDataRate@found 0065  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00A9  
                             __size_of_RADIO_SetBandwidth 0008  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0042  
                                                   __rcon 0046  
                                 __end_of_PIN_MANAGER_IOC 791A  
                                                   _flash 6B56  
                            ??_IncludeMacCommandsResponse 0068  
                           __end_of_RADIO_WatchdogTimeout 6D46  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 0071  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0014  
                                                   _randx 0056  
                          LORAWAN_RxDone@frmPayloadLength 03B1  
                           ValidateChannelMaskCntl@result 0064  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 7846  
                                        UpdateDataRange@i 0067  
                                LORAWAN_RxDone@joinAccept 03AF  
                                  _UpdateJoinSuccessState 4554  
                                                   main@x 00F6  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 7894  
                                              _ComputeMic 697C  
                                 __end_of_TMR1_Initialize 6CC0  
                                  UpdateCfList@joinAccept 0070  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                              ??_RADIO_SetWatchdogTimeout 0068  
                                 RADIO_WriteFrequency@num 0079  
                          __size_of_UpdateCurrentDataRate 0008  
                          __size_of_UpdateChannelIdStatus 0106  
                              PrepareSessionKeys@appNonce 0070  
                                  UpdateChannelIdStatus@i 0067  
                           __end_of_UpdateCurrentDataRate 78F2  
                            __size_of_RADIO_FSKPacketSent 0192  
                           __end_of_UpdateChannelIdStatus 48B8  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                          ?_INT3_CallBack 0001  
                                UpdateFrequency@channelId 0068  
                                                   status 000FD8  
                                      _MacExecuteCommands 2E04  
                                UpdateCfList@channelIndex 0079  
                                     __size_of_RADIO_DIO0 0064  
                                     __size_of_RADIO_DIO1 003A  
                                     __size_of_RADIO_DIO2 0048  
                                     __size_of_RADIO_DIO3 0018  
                                     __size_of_RADIO_DIO4 0018  
                                     __size_of_RADIO_DIO5 0018  
                      PrepareJoinRequestFrame@bufferIndex 00EA  
                                         _TMR1_WriteTimer 7676  
                       TMR_OverrideRemaining@oldReloadVal 0074  
                                     LORAWAN_RxDone@fPort 03A0  
                                __size_of_RADIO_WriteMode 00D8  
                                       __end_of_AESEncode 242A  
                                     __size_of_RADIO_Init 0196  
                        __end_of_RADIO_WriteConfiguration 182C  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 0020  
                               RADIO_WriteMode@dioMapping 006C  
                                         __initialization 5C2E  
                            __size_ofi2_SwTimersInterrupt 00EE  
                                        LORAWAN_Send@port 00E1  
                             __size_of_DIO1_ISR_Lora_Init 0006  
                                     ?_MacExecuteCommands 007A  
                                       _SPI2_Exchange8bit 780A  
                                            __end_of_main 553A  
                              AssembleEncryptionBlock@dir 0075  
                                            __end_of_rand 6ABC  
                                       ?_TMR_GetDeltaTime 006A  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 5FE0  
                                        _SetJoinFailState 72E0  
                                 RADIO_WriteMode@blocking 006A  
                                    _UpdateJoinInProgress 76C8  
                                    _ExecuteRxTimingSetup 7420  
                               __size_of_UpdateDLSettings 001A  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0014  
                                _LORAWAN_SetUplinkCounter 77C2  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 006E  
                                           AESCmac@output 00CE  
                            __end_of_RADIO_SetOutputPower 78FA  
                                               ??_AESCmac 00D3  
                                          ??_RADIO_SetCRC 0064  
                                  MacExecuteCommands@done 007F  
                                 InitDefault868Channels@i 006E  
                                                  ??_main 00F3  
                                                  ??_rand 0072  
                                          ??_RADIO_RxDone 00ED  
                                          ??_RADIO_TxDone 00D0  
                                           __activetblptr 000002  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 793E  
                       __end_of_LORAWAN_LinkCheckCallback 4184  
                          __end_of_SetReceptionNotOkState 63EC  
                             __end_of_UpdateReceiveDelays 6BEA  
                         __end_of_AssembleEncryptionBlock 58DC  
                                __size_of_SPI2_Initialize 000C  
                                  ??_SystemBlockingWaitMs 0068  
                                        ??_StartReTxTimer 0094  
                                     ??_SPI2_Exchange8bit 0064  
                        CountfOptsLength@macCommandLength 006A  
                                      EncodeShiftRow@temp 0066  
                                ??_InitDefault868Channels 006E  
                             __size_of_RADIO_RegisterRead 0026  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 6EC8  
                                              _RxDataDone 7986  
                                          _EnableChannels 7770  
                               ??_PrepareJoinRequestFrame 00E3  
                                          _HALSPICSAssert 7974  
                                    ??_MacExecuteCommands 007D  
                                             ?_CheckFlags 0064  
                                 LORAWAN_TxDone@timeOnAir 009E  
                                              _ExtractMic 6D46  
                                                  ?_flash 0001  
                         __size_of_SearchAvailableChannel 00E0  
                                      ??_HALSPICSDeassert 0064  
                                  _HALResetPinOutputValue 77AE  
                                        ___llmod@dividend 0064  
                                                  ?_srand 0075  
                  __end_of_LORAWAN_ReceiveWindow1Callback 5AEA  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00AE  
                          _LORAWAN_ReceiveWindow1Callback 5A3C  
                                _RADIO_FSKPacketSent$1071 00D8  
                                                  _ANSELA 000E92  
                                                  _ANSELB 000E9A  
                                                  _ANSELD 000EA7  
                                                  _ANSELE 000EAF  
                                                  _ANSELF 000EB4  
                                                  _ANSELG 000EBC  
                                         _ValidateTxPower 748A  
                                                  _T1GATE 000FD1  
                                                  _T1GCON 000FD0  
                                 SwTimerReadValue@timerId 0093  
                                 TMR1_WriteTimer@timerVal 0064  
                                          _ExecuteLinkAdr 356C  
                                                  _ODCONA 000E90  
                                                  _ODCONB 000E98  
                                                  _ODCONC 000EA0  
                                                  _ODCOND 000EA5  
                                                  _ODCONE 000EAD  
                                                  _ODCONF 000EB2  
                                                  _ODCONG 000EBA  
                                                  _ODCONH 000EBF  
                                                  _RD5PPS 000E6F  
                                                  _RD6PPS 000E70  
                                          __CFG_WDTCCS$SC 000000  
                  __end_of_LORAWAN_ReceiveWindow2Callback 5602  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00C8  
                          _LORAWAN_ReceiveWindow2Callback 553A  
                                                  i2l2510 0046  
                                                  i2l1368 76A4  
                                                  i2l2512 0052  
                                                  i2l2514 0062  
                                                  i2l2508 003A  
                                                  i2l2518 006C  
                           __size_of_RADIO_SetFSKSyncWord 002C  
                                                  i2l9901 4F52  
                                                  i2l9899 4F02  
                                                  _OSCFRQ 000E49  
                                       ??_RADIO_GetStatus 0064  
                        __size_of_ValidateChannelMaskCntl 0018  
                         __size_of_InitDefault433Channels 0066  
                                                  _TRISC0 007C18  
                                           ?_LORAWAN_Init 00A4  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0073  
                                           ?_LORAWAN_Send 00E1  
                         __size_of_AutomaticReplyCallback 001E  
                              __size_of_LORAWAN_RxTimeout 02B6  
                                       ?_ExecuteDevStatus 0064  
                              __end_of_DIO0_ISR_Lora_Init 7938  
                                __size_ofi2_TMR_SwapTimer 003E  
                                       ExecuteLinkAdr@ptr 0071  
                           __size_of_RADIO_WriteFrequency 00DC  
                                                  _STable 7E6D  
                             RADIO_WriteFrequency@num_mod 0075  
                                     LORAWAN_TxDone@delta 00C3  
                                          __CFG_PWRTE$OFF 000000  
                             __size_of_ComputeSessionKeys 007E  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 781C  
                                     LORAWAN_TxDone@found 00C2  
                                         _CheckMcastFlags 61CA  
                                     LORAWAN_TxDone@minim 00CB  
                                      ??_ExecuteDevStatus 0066  
                                                  _Random 74AC  
                                          __CFG_XINST$OFF 000000  
                                     LORAWAN_TxDone@ticks 00C7  
                      SearchAvailableChannel@randomNumber 0083  
                    __end_of_TMR1_DefaultInterruptHandler 798A  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 7988  
                                             ?_GetRx1Freq 0064  
                                                  _fCount 016E  
                           ValidateDataRange@dataRangeNew 0067  
                                 _RADIO_FHSSChangeChannel 7232  
                                               ??___abdiv 0065  
                                                  ___lmul 5DDC  
                                  ?_RADIO_WriteFSKBitRate 0071  
                                 __end_of_TMR1_StartTimer 796C  
                                   ?_UpdateJoinInProgress 0001  
                             ?_LORAWAN_LinkCheckConfigure 0094  
                                   ?_ExecuteRxTimingSetup 0069  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 5AEA  
                                               ??___lldiv 006C  
                                               ??___llmod 006C  
                                               ??___lwmod 0076  
                      RADIO_SetChannelFrequency@frequency 0064  
                                         StartReTxTimer@i 009C  
                               ExecuteRxParamSetupReq@ptr 0070  
                                  __size_of_LORAWAN_Reset 015E  
                                                  _memcpy 68D4  
                                                  _memset 7334  
                                                  clear_0 5C76  
                                                  clear_1 5C88  
                                                  clear_2 5C94  
                                                  clear_3 5CA0  
                                                  clear_4 5CAC  
                                                  clear_5 5CB8  
                                 SwTimerIsRunning@timerId 0064  
                                                  flash@x 0065  
                             __size_of_DIO5_ISR_Lora_Init 0006  
                                             ?_FillSubKey 0064  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0064  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0162  
                                  __end_of_EnableChannels 7786  
                              ??_RADIO_UnhandledInterrupt 0068  
                                            ??_HALSPISend 0065  
                    __end_of_INT2_DefaultInterruptHandler 7990  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 798E  
                                            __pdataCOMRAM 0056  
                                  __end_of_HALSPICSAssert 7978  
                       __size_of_RADIO_SetSpreadingFactor 0008  
                            __size_of_ValidateChannelMask 0038  
                                           ??_SwTimerStop 0064  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0064  
                               ?_RADIO_SetSpreadingFactor 0001  
                                       ?_SwTimerReadValue 008B  
                                      ??_SwTimerIsRunning 0064  
                                          ?_TMR_SwapTimer 006A  
                                       ?_ExecuteDutyCycle 0064  
                                      ??_ExecuteLinkCheck 0066  
                                            __mediumconst 7E6C  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0075  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 008F  
                                         _UpdateDataRange 4AB6  
                                  __end_of_ExecuteLinkAdr 371E  
                                      ??_ExecuteDutyCycle 0066  
                      __end_of_LORAWAN_SetCurrentDataRate 7232  
                              _LORAWAN_SetCurrentDataRate 7204  
              IOCBF4_SetInterruptHandler@InterruptHandler 0064  
                TMR1_SetInterruptHandler@InterruptHandler 0064  
                INT3_SetInterruptHandler@InterruptHandler 0064  
                INT0_SetInterruptHandler@InterruptHandler 0064  
                INT2_SetInterruptHandler@InterruptHandler 0064  
                INT1_SetInterruptHandler@InterruptHandler 0064  
                      __end_of_LORAWAN_SetChannelIdStatus 7068  
                              _LORAWAN_SetChannelIdStatus 7030  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 008D  
                                           AESEncode@aux2 008C  
                                           AESEncode@aux3 008E  
                                 __end_of_TMR1_WriteTimer 7692  
                                   __end_of_SwTimerCreate 62AC  
                                            ??_IOCBF4_ISR 0001  
                          ??_SelectChannelForTransmission 0085  
                                             ?_ComputeMic 00DA  
                           __size_of_INTERRUPT_Initialize 0004  
                                         ??_INT3_CallBack 0001  
                                   __end_of_TMR1_CallBack 75E4  
                               ExecuteDutyCycle@maxDCycle 0069  
                                       ??_RADIO_RxTimeout 00AE  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0064  
                                       _SYSTEM_Initialize 763E  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 0102  
                                          ??_LORAWAN_Init 00A8  
                                          ??_LORAWAN_Join 00EC  
                                          ??_LORAWAN_Send 00E5  
                          __size_of_RADIO_FSKPayloadReady 009E  
                                              __accesstop 0060  
                                 __end_of__initialization 5CBE  
                           __end_of_RADIO_FSKPayloadReady 5C2E  
                                          _RADIO_Transmit 2FF4  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                               ?_INT3_ISR 0001  
                                    LORAWAN_RxDone@buffer 016B  
                                  RADIO_ReadRandom@retVal 0072  
                                        _ConfigureRadioRx 73AE  
                                    __size_of_RADIO_Reset 0034  
                                        _ConfigureRadioTx 6D88  
                                     ExecuteDevStatus@ptr 0064  
                        ??_UpdateReceiveWindow2Parameters 0069  
                         ?_UpdateReceiveWindow2Parameters 0064  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 03A9  
                                          _maxPayloadSize 7F6D  
                           RADIO_SetLoRaSyncWord@syncWord 0064  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0066  
                               ExecuteLinkAdr@channelMask 0074  
                                      __end_of_HALSPISend 78DA  
                                          __pcstackCOMRAM 0001  
                                              ___inthi_sp 0754  
                                  _SearchAvailableChannel 4F64  
                                 ValidateChannelId@result 0065  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 71D4  
                                     ??_SYSTEM_Initialize 0068  
                              __end_of_DIO4_ISR_Lora_Init 7982  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                _RADIO_WriteConfiguration 13B4  
                                           __end_of_flash 6BA0  
                                       ??_RADIO_WriteMode 006B  
                                         _spreadingFactor 7F9B  
                               __size_of_LORAWAN_Mainloop 003C  
                                        ??_EncKeySchedule 0065  
                                __end_of_RADIO_WritePower 5472  
                                 ?_ExecuteRxParamSetupReq 0070  
                                           __end_of_srand 7854  
                                       LORAWAN_RxDone@hdr 03B2  
                                            ??_RADIO_DIO0 00EF  
                                            ??_RADIO_DIO1 00AE  
                                            ??_RADIO_DIO2 007D  
                                            ??_RADIO_DIO3 0069  
                                            ??_RADIO_DIO4 0069  
                                            ??_RADIO_DIO5 0069  
                                  _InitDefault433Channels 64BC  
                                         _UpdateFrequency 6FF6  
                                  _AutomaticReplyCallback 754E  
                                      __end_of_IOCBF4_ISR 7420  
                                ??_INTERRUPT_GetDioStatus 0064  
                                            ??_RADIO_Init 0083  
                               __size_of_LORAWAN_SetClass 0044  
                               SwTimerSetCallback@timerId 0067  
                              LORAWAN_RxDone@channelIndex 03A1  
                          AssembleEncryptionBlock@blockId 0072  
                             __size_of_EXT_INT_Initialize 0056  
                                         _UpdateDutyCycle 713E  
                                         ?_EnableChannels 006E  
                                 ??_TMR_OverrideRemaining 0070  
                                 __end_of_ValidateTxPower 74AC  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 7982  
                            __end_of_HALResetPinMakeInput 7980  
                                 __size_of_TMR1_ReadTimer 0020  
                        __end_of_INT2_SetInterruptHandler 7894  
                                        RADIO_DIO0@opMode 00F2  
                             RADIO_RegisterRead@readValue 0067  
                                             ?_RxDataDone 0064  
                      __end_of_IncludeMacCommandsResponse 2138  
                              _IncludeMacCommandsResponse 1E46  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 0066  
                                UpdateCfList@bufferLength 0074  
                             ?_IOCBF4_SetInterruptHandler 0064  
                                   LORAWAN_Send@confirmed 00E7  
                                             ?_ExtractMic 006E  
                                                 ??_flash 0064  
                                         ?_ExecuteLinkAdr 0071  
                                        _ValidateDataRate 779A  
                         LORAWAN_GetMaxPayloadSize@result 006E  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 765A  
                      __size_of_RADIO_SetChannelFrequency 0082  
                                                 ??_srand 0077  
                                  __end_of_RADIO_Transmit 31E2  
                                       ??_SPI2_Initialize 0064  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 3ECE  
                              ?_RADIO_SetChannelFrequency 0064  
                                              __pbssBANK1 016E  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 7676  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 623C  
                                  __end_of_maxPayloadSize 7F75  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                              ??_INT3_ISR 0001  
                                      SwTimersInterrupt@i 008A  
                                    _RADIO_SetOutputPower 78F2  
                                              __pnvCOMRAM 005E  
                                    __end_of_RADIO_SetCRC 78BC  
                                 ??_HALResetPinMakeOutput 0064  
                                    __end_of_RADIO_RxDone 53A4  
                              __end_of_RADIO_RxFSKTimeout 70D6  
                                    __end_of_RADIO_TxDone 3D6C  
                                     __size_of_FillSubKey 004A  
                                      __end_of_RADIO_DIO0 6586  
                                      __end_of_RADIO_DIO1 6FF6  
                                      __end_of_RADIO_DIO2 6C7C  
                                      __end_of_RADIO_DIO3 7742  
                                      __end_of_RADIO_DIO4 772A  
                                      __end_of_RADIO_DIO5 7712  
                               ??_RADIO_FHSSChangeChannel 007D  
                             __size_of_SwTimerSetCallback 0032  
                               RADIO_SetOutputPower@power 0064  
                              __size_of_SPI2_Exchange8bit 0012  
                                      __end_of_RADIO_Init 3A50  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 009E  
                                                 ?_Random 0077  
                                       ?_CountfOptsLength 0001  
                               ?_LORAWAN_SetDeviceAddress 0064  
                                        i2_TMR1_ReadTimer 752E  
                                          FillSubKey@size 0068  
                                         _EnableChannels1 6826  
                                __size_of_HALDIO5PinValue 0006  
                            __size_of_RADIO_RegisterWrite 001E  
                                  ??_UpdateJoinInProgress 0064  
                        __size_of_AssembleEncryptionBlock 00B2  
                                  ??_ExecuteRxTimingSetup 006B  
                                        FillSubKey@source 0064  
            SelectChannelForTransmission@transmissionType 0085  
                                                 ?___lmul 0064  
                  AssembleEncryptionBlock@multicastStatus 0074  
                          __end_of_ExecuteRxParamSetupReq 4420  
                                      ??_CountfOptsLength 0064  
                                        ?_TMR1_StartTimer 0001  
                                      EncryptFRMPayload@i 00B8  
                                      EncryptFRMPayload@j 00B9  
                                      EncryptFRMPayload@k 00B7  
                                              ??_TMR1_ISR 0028  
                                         __CFG_PPS1WAY$ON 000000  
                                       ??i2_TMR_SwapTimer 0009  
                                    ??_DIO3_ISR_Lora_Init 0064  
                                        _UpdateDLSettings 76AE  
                                        _ValidateRxOffset 7786  
                                                 ?_memcpy 0064  
                                                 ?_memset 0064  
                                          ___lmul@product 006C  
                                       _TMR_ISR_Lora_Init 7860  
                        ??_IOCBF4_DefaultInterruptHandler 0001  
                         ?_IOCBF4_DefaultInterruptHandler 0001  
                                          _SSP2DATPPSbits 000E1D  
                                  RADIO_RegisterWrite@reg 0067  
                                     __size_of_ComputeMic 0052  
                                  RADIO_Transmit@regValue 00A3  
                            __size_of_RADIO_SetModulation 0008  
                                     _RADIO_FSKPacketSent 3A50  
                                                 _AESCmac 182C  
                                  ComputeMic@bufferLength 00DE  
                                 __end_of_UpdateDataRange 4BAC  
                                         ??_TMR_SwapTimer 006C  
                                RADIO_WriteFSKBitRate@num 0075  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0066  
                                                 i2l10581 4D0E  
                                                 i2l10557 6F12  
                                                 i2l10575 4CBE  
                                                 i2l10585 4D70  
                                                 i2l10587 4D72  
                                                 i2l16461 741A  
                                    EncryptFRMPayload@dir 00A7  
                                      _RADIO_GetPacketSnr 793E  
                                    EncryptFRMPayload@key 00AC  
                                   __end_of_UpdateTxPower 78EA  
                                     _RADIO_SetIQInverted 78A8  
                                                 _OSCCON1 000E43  
                                                 _OSCCON3 000E45  
                                 __size_of_ConfigureRadio 007C  
                                                 _OSCTUNE 000E48  
                             __size_ofi2_TMR_GetDeltaTime 00EC  
                                     i2_SwTimersInterrupt 4C9E  
                                                 _SSP2ADD 000ED6  
                         RADIO_SetWatchdogTimeout@timeout 0064  
                                                 _PPSLOCK 000DEF  
                                                 _SSP2BUF 000ED5  
                                     ??_TMR_ISR_Lora_Init 0066  
                                       __end_of_bandwidth 7F94  
                  UpdateReceiveWindow2Parameters@dataRate 0068  
                                __end_of_SetJoinFailState 730A  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0069  
                                  ValidateDataRate@result 0065  
                                        ?_TMR1_WriteTimer 0064  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0064  
                                         ?_RADIO_Transmit 0094  
                                 _ValidateChannelMaskCntl 7742  
                                         ___abdiv@counter 0065  
                                     StartReTxTimer@minim 0098  
                              AssemblePacket@bufferLength 0169  
                            PrepareSessionKeys@sessionKey 006E  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 006A  
                       __end_of_RADIO_SetChannelFrequency 5EE4  
                             PrepareJoinRequestFrame@iCtr 00EB  
                       __end_of_SetCallbackSoftwareTimers 5776  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 49BA  
                             PrepareJoinRequestFrame@mhdr 00E9  
                                  __size_of_AESEncodeLoRa 0028  
                       __size_of_INT0_SetInterruptHandler 0002  
                           __size_of_LORAWAN_PlatformInit 0020  
                       __size_of_INT3_SetInterruptHandler 000A  
                               ?_INT0_SetInterruptHandler 0064  
                               ?_INT3_SetInterruptHandler 0064  
                              ??_LORAWAN_SetUplinkCounter 0068  
                                          _ticksAccounted 0034  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00CC  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor 7FA2  
                           UpdateCurrentDataRate@valueNew 0064  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00E5  
                                  _InitDefault868Channels 6456  
                                RADIO_RegisterWrite@value 0066  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0064  
                                LORAWAN_Send@bufferLength 00E4  
                                   _StopAllSoftwareTimers 6ABC  
                                         __size_of_Random 0022  
                              __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                                    ?i2_SwTimersInterrupt 0017  
                                 __end_of_UpdateFrequency 7030  
                                     AssemblePacket@fCtrl 00DE  
                                                 ___abdiv 692A  
                                     __size_of_RxDataDone 0002  
                                              AESEncode@i 008F  
                                               _AESEncode 2138  
                                  ValidateRxOffset@result 0065  
                               __end_of_TMR_ISR_Lora_Init 786C  
                                         __size_of___lmul 0086  
                             __size_of_DIO2_ISR_Lora_Init 0006  
                                 __end_of_UpdateDutyCycle 7170  
                                                 ___lldiv 6154  
                                     __size_of_ExtractMic 0042  
                                    ??_RADIO_GetPacketSnr 0064  
                                                 ___llmod 664C  
                                       ?_RADIO_ReadRandom 0070  
                                                 ___lwmod 6E8A  
                               SwTimerIsRunning@isRunning 0065  
                                 ??_RADIO_SetLoRaSyncWord 0064  
                                    ValidateChannelMask@i 0066  
                                                 __pcinit 5C2E  
                      __size_of_LORAWAN_GetMaxPayloadSize 0040  
                                                 _appSKey 01D1  
                                         __size_of_memcpy 0056  
                              __end_of_RADIO_ReceiveStart 2E04  
                                   RADIO_Init@radioBuffer 007D  
                                         __size_of_memset 002A  
                                                 __ramtop 0800  
                        EncryptFRMPayload@multicastStatus 00B1  
                                      ??_RADIO_ReadRandom 0072  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0064  
                                                 __ptext0 5472  
                                                 __ptext1 6F44  
                                                 __ptext2 77C2  
                                                 __ptext3 6B56  
                                                 __ptext4 763E  
                                                 __ptext5 6C7C  
                                                 __ptext6 7968  
                                                 __ptext7 7854  
                                                 __ptext8 5044  
                                                 __ptext9 786C  
                                    __end_of_LORAWAN_Init 67CA  
                                    __end_of_LORAWAN_Join 5D54  
                                    __end_of_LORAWAN_Send 56C0  
                                           _DIO0_ISR_Lora 000000  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 0070  
                                          _EncodeShiftRow 3D6C  
                              ExecuteNewChannel@frequency 0073  
                         __size_of_INTERRUPT_GetDioStatus 000E  
                                               _T1CONbits 000FCF  
                      SelectChannelForTransmission@result 0086  
                                 __size_of_LORAWAN_RxDone 0A9E  
                                   _OSCILLATOR_Initialize 77D4  
                          __end_of_UpdateJoinSuccessState 4686  
                                 __size_of_LORAWAN_TxDone 0880  
                              __end_of_RADIO_SetBandwidth 7912  
                                         _RADIO_GetStatus 7944  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen 7F9B  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 000000  
                                             _SwTimerStop 765A  
                                                 _payload 01BF  
                                ??_PIN_MANAGER_Initialize 0066  
                               ?_TMR1_SetInterruptHandler 0064  
                                                 _nwkSKey 01E1  
                                               _IOCBFbits 000E93  
                             IncludeMacCommandsResponse@i 006E  
                                           ?_UpdateCfList 0070  
                                       _ExecuteNewChannel 33AA  
                                               _IOCBNbits 000E94  
                                               _IOCBPbits 000E95  
                             __size_of_PrepareSessionKeys 007C  
                                            ??_CheckFlags 0066  
                           RADIO_SetModulation@modulation 0064  
                                 UpdateDLSettings@dlRx2Dr 0065  
                               __size_of_TMR_GetDeltaTime 00EC  
                                          main@timeToSend 00F4  
                                           _DIO2_ISR_Lora 000000  
                              __size_of_SYSTEM_Initialize 001C  
                    __end_of_LORAWAN_SetNetworkSessionKey 72B6  
                   __size_of_LORAWAN_SetNetworkSessionKey 002A  
                            _LORAWAN_SetNetworkSessionKey 728C  
                                      ?_ExecuteNewChannel 0070  
                                              _sendPacket 6F44  
                              RADIO_WriteMode@currentMode 006D  
                                        ComputeMic@buffer 00DC  
                                    end_of_initialization 5CBE  
                                 _CreateAllSoftwareTimers 69CE  
                                     SwTimerCreate@retVal 0064  
                                _INT2_SetInterruptHandler 788A  
                                   ??_RADIO_FSKPacketSent 00D0  
                                          _GenerateSubkey 48B8  
                                   _RADIO_WatchdogTimeout 6D04  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation 7F75  
                                        ?_CheckMcastFlags 0064  
                                  ExtractMic@bufferLength 0070  
                                                 memcpy@d 006A  
                                                 memcpy@n 0068  
                                                 memcpy@s 006C  
                                 __end_of_EnableChannels1 687E  
                                                 memset@c 0066  
                                                 memset@n 0068  
                                                 memset@p 006A  
                               _LORAWAN_LinkCheckCallback 402C  
                                           __Lmediumconst 7E6C  
                                          ??_SwTimerStart 008B  
                                               i2u1103_40 6F22  
                                     ??_ExecuteNewChannel 0072  
                                   _UpdateCurrentDataRate 78EA  
                                   _UpdateChannelIdStatus 47B2  
                                 ??_RADIO_WriteFSKBitRate 0075  
                                   ??_RADIO_SetIQInverted 0064  
                              __end_of_DIO1_ISR_Lora_Init 7932  
                                         ___lldiv@divisor 0068  
                                     _ValidateChannelMask 7068  
                                              _ticksAdded 0038  
                             HALResetPinOutputValue@value 0064  
                                EncodeShiftRow@stateTable 0064  
                                               i2u1982_48 7406  
                                               i2u1983_40 745E  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0064  
                                         ___lldiv@counter 0070  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 0072  
                                   ??i2_SwTimersInterrupt 001B  
                                ExecuteLinkAdr@redundancy 0077  
                                       GenerateSubkey@key 00A4  
                                    _HALResetPinMakeInput 797C  
                                            ??_GetRx1Freq 0068  
                           UpdateDLSettings@dlRx1DrOffset 0064  
                              LORAWAN_Init@RxJoinResponse 00A6  
                              LORAWAN_RxDone@bufferLength 016D  
                        __end_of_RADIO_SetSpreadingFactor 7902  
                      AssembleEncryptionBlock@bufferIndex 0076  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 006A  
                                         _SystemTimerInit 791A  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                        ??_RxJoinResponse 0064  
                                        _LORAWAN_Mainloop 6F80  
                            __end_of_RADIO_SetFSKSyncWord 728C  
                                      LORAWAN_Join@result 00ED  
                                      __end_of_CheckFlags 676C  
                       __size_of_RADIO_SetWatchdogTimeout 0012  
                               ValidateTxPower@txPowerNew 0065  
                               ?_RADIO_SetWatchdogTimeout 0064  
                                   __CFG_WDTCPS$WDTCPS_31 000000  
                                          AESEncode@block 006A  
                       SearchAvailableChannel@maxChannels 0082  
                                  __end_of_EncodeShiftRow 3ECE  
                                      _DIO0_ISR_Lora_Init 7932  
                                       ??_HALDIO5PinValue 0064  
                                   _INT1_InterruptHandler 01F1  
                                               _PORTBbits 000F8A  
                                            ??_FillSubKey 0069  
                                        RxDataDone@status 0067  
                            SwTimersInterrupt@timeElapsed 0082  
                                           _AESEncodeLoRa 7386  
                               __size_of_ExecuteDevStatus 000A  
                                        _LORAWAN_SetClass 6CC0  
                            __end_of_RADIO_WriteFrequency 51FC  
                              __end_of_RADIO_RegisterRead 73FA  
                       __end_of_LORAWAN_GetMaxPayloadSize 6E4C  
                          __end_of_HALResetPinOutputValue 77C2  
                                        ?_UpdateDataRange 0064  
                                __end_of_ConfigureRadioRx 73D4  
                                __end_of_ConfigureRadioTx 6DCA  
                                         _RADIO_RxTimeout 735E  
                          UpdateChannelIdStatus@channelId 0066  
                               __end_of_ExecuteNewChannel 356C  
                                        EnableChannels1@i 006D  
                                 __size_of_AssemblePacket 02FE  
                                    ?_ValidateChannelMask 0064  
                                       _SwTimerSetTimeout 6DCA  
                                          _TMR1_ReadTimer 750E  
                                          ??_UpdateCfList 0072  
                                              _txPower868 7FA2  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         ??_LORAWAN_Reset 00A3  
                           __size_of_SystemBlockingWaitMs 002A  
                               ??_ValidateChannelMaskCntl 0064  
                                      ?_SwTimerSetTimeout 0071  
                             __size_of_MacExecuteCommands 01F0  
                                    ExecuteNewChannel@ptr 0070  
                                ??_UpdateMinMaxChDataRate 0064  
                                  __end_of_GenerateSubkey 49BA  
                                           RADIO_RxDone@i 00EE  
                                   __size_of_RADIO_SetCRC 000A  
                             ?_LORAWAN_SetCurrentDataRate 0001  
                                 AssemblePacket@macCmdIdx 00DF  
                             ?_LORAWAN_SetChannelIdStatus 0068  
                                        __CFG_FEXTOSC$OFF 000000  
                                          _localDioStatus 0178  
                                      __end_of_GetRx1Freq 780A  
                                   __size_of_RADIO_RxDone 00D0  
                                            ??_ComputeMic 00DF  
                            __size_of_UpdateReceiveDelays 004A  
                                   __size_of_RADIO_TxDone 018A  
                                  ??_RADIO_SetOutputPower 0064  
                         EncryptFRMPayload@macBufferIndex 00AE  
                           ?_LORAWAN_SetNetworkSessionKey 006E  
                                 UpdateMinMaxChDataRate@i 0065  
                                 LORAWAN_Reset@ismBandNew 00A3  
                               __size_of_SwTimerIsRunning 0020  
                              __end_of_ComputeSessionKeys 5F62  
                                     ??_SwTimerSetTimeout 0075  
                                __size_of_SwTimersExecute 00B0  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 7838  
                                         _RADIO_WriteMode 51FC  
                              ??_RADIO_WriteConfiguration 007F  
                                   SPI2_Exchange8bit@data 0064  
                                 ?_SearchAvailableChannel 0079  
                               __size_of_SwTimerReadValue 003E  
                             RADIO_FSKPacketSent@irqFlags 00DC  
                               __size_of_ExecuteDutyCycle 004E  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00DC  
                                      __end_of_FillSubKey 6C34  
                                 _AssembleEncryptionBlock 582A  
                                       __size_of_INT1_ISR 0006  
                                       __size_of_INT2_ISR 0006  
                                       __size_of_INT3_ISR 0006  
                                    ??_DIO0_ISR_Lora_Init 0066  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable 7F6D  
                                     AESEncodeLoRa@useKey 0094  
                              SwTimerSetCallback@callback 0064  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0064  
                                        ?_UpdateFrequency 0064  
                                      LORAWAN_Send@buffer 00E2  
                                          __end_of_Random 74CE  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 000C  
                                __end_of_ValidateDataRate 77AE  
                            __end_of_INTERRUPT_Initialize 7970  
                          EnableChannels1@channelMaskCntl 006A  
                          EnableChannels1@channelIndexMax 006C  
                          EnableChannels1@channelIndexMin 006B  
                     LORAWAN_SetChannelIdStatus@channelId 006A  
                                        ?_UpdateDutyCycle 0064  
                            _INT0_DefaultInterruptHandler 000000  
                              __end_of_DIO5_ISR_Lora_Init 7926  
                                 __end_of_RADIO_GetStatus 794A  
                                          __end_of___lmul 5E62  
                                      LORAWAN_Send@result 00E6  
                                        ??_EnableChannels 0071  
                               i2TMR1_WriteTimer@timerVal 0001  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0064  
                     TMR_OverrideRemaining@ticksRemaining 006C  
                                       ?_RADIO_WritePower 0001  
                                           __pidataCOMRAM 78DA  
                                         ?_EncodeShiftRow 0064  
                                          ?_AESEncodeLoRa 0090  
                                       __size_of_TMR1_ISR 0024  
                                      __end_of_ComputeMic 69CE  
                                               Random@max 0077  
                                          __end_of_memcpy 692A  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 6E0C  
                                  __end_of_TMR1_ReadTimer 752E  
                                          __end_of_memset 735E  
                                         _SPI2_Initialize 7854  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0068  
                                            _RADIO_SetCRC 78B2  
                                   ??_ValidateChannelMask 0066  
                                        ??_ExecuteLinkAdr 0073  
                                   UpdateCfList@frequency 0075  
                                            _RADIO_RxDone 52D4  
                                            _RADIO_TxDone 3BE2  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006E  
                                     start_initialization 5C2E  
                                          _ConfigureRadio 605C  
                                      LORAWAN_RxDone@mhdr 03A2  
                                      LORAWAN_RxDone@temp 03A8  
                                            ??_RxDataDone 0068  
                                      _DIO4_ISR_Lora_Init 7980  
                                __end_ofi2_TMR1_ReadTimer 754E  
                          __size_of_TMR_OverrideRemaining 007C  
                                     _RADIO_RegisterWrite 75A8  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0065  
                                    RxDataDone@dataLength 0066  
                         __size_of_PIN_MANAGER_Initialize 00DC  
                    __end_of_INT3_DefaultInterruptHandler 798E  
                   __size_of_INT3_DefaultInterruptHandler 0002  
                            _INT3_DefaultInterruptHandler 798C  
                           __end_of_TMR_OverrideRemaining 6154  
                             ?_IncludeMacCommandsResponse 0064  
                                   __end_of_INT1_CallBack 763E  
                                            ??_ExtractMic 0072  
                    EncryptFRMPayload@bufferToBeEncrypted 00AF  
                                            AESCmac@input 00D0  
                        __end_of_LORAWAN_SetDeviceAddress 76FA  
                                         ?_GenerateSubkey 00A4  
                            ?_RADIO_SetFrequencyHopPeriod 0064  
                                         LORAWAN_TxDone@i 00CF  
                                             ?_sendPacket 0001  
                                   LORAWAN_Init@RxPayload 00A4  
                     AssembleEncryptionBlock@frameCounter 006E  
                                 i2TMR_SwapTimer@timerVal 0007  
                                   __end_of_INT2_CallBack 7620  
                                           ??_RADIO_Reset 0069  
                                __end_of_UpdateDLSettings 76C8  
                              SwTimerStart@ticksRemaining 008F  
                                  RADIO_WriteMode@newMode 006E  
                                __end_of_ValidateRxOffset 779A  
                             ??_RADIO_SetChannelFrequency 0068  
                             ??_SetCallbackSoftwareTimers 0068  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 7902  
                           ExecuteNewChannel@channelIndex 0077  
                          __end_of_SearchAvailableChannel 5044  
                                        ?_EnableChannels1 0068  
                                   __end_of_INT3_CallBack 7602  
                                         i2_TMR_SwapTimer 6F06  
                                 __size_of_StartReTxTimer 0134  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0064  
                                         ___llmod@divisor 0068  
                              MacExecuteCommands@fOptsLen 007C  
                                 __end_of_SystemTimerInit 7920  
                          UpdateChannelIdStatus@statusNew 0064  
                       __size_of_RADIO_UnhandledInterrupt 0022  
                                         ___llmod@counter 006C  
                                            _JoinedServer 0176  
                                     TMR_SwapTimer@oldVal 0040  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 0008  
                                     TMR_SwapTimer@retVal 0042  
                                   _RADIO_FSKPayloadReady 5B90  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 797C  
                                                ??_Random 0079  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                        __CFG_LPBOREN$OFF 000000  
                                                AESCmac@n 0163  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 008F  
                                    ?_RADIO_RegisterWrite 0066  
                          __end_of_InitDefault433Channels 6522  
                          __end_of_AutomaticReplyCallback 756C  
                                     RADIO_Init@frequency 007F  
                                __size_of_TMR1_Initialize 0044  
                                    _macEndDevCmdReplyLen 7F94  
                                                ??___lmul 006C  
                                             ??_AESEncode 006D  
                       RADIO_WriteConfiguration@tempValue 0082  
                                   __size_of_LORAWAN_Init 005E  
                      __size_of_AckRetransmissionCallback 00FC  
                                   __size_of_LORAWAN_Join 008C  
                                   __size_of_LORAWAN_Send 00BE  
                                 __end_of_RADIO_RxTimeout 7386  
                                MacExecuteCommands@buffer 007A  
                                      __end_of_RxDataDone 7988  
                                ??_SetReceptionNotOkState 009E  
                                          ??_TMR_ISR_lora 0028  
                                             __pdataBANK1 01C1  
                                       _ValidateDataRange 70D6  
                                      __end_of_ExtractMic 6D88  
                i2SwTimersInterrupt@ticksToNextTimerEvent 0023  
                  SwTimersInterrupt@ticksToNextTimerEvent 0086  
                                                ??_memcpy 006A  
                                  __size_of_SwTimerCreate 0070  
                                                ??_memset 006A  
                                    ??_DIO4_ISR_Lora_Init 0064  
                              __end_of_EXT_INT_Initialize 68D4  
                                       _ValidateChannelId 756C  
                                    ?_RADIO_SetModulation 0001  
                                _RADIO_SetSpreadingFactor 78FA  
                                      _RADIO_RxFSKTimeout 70A0  
                                                ?_AESCmac 00CC  
                                  __size_of_TMR1_CallBack 001E  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0064  
                                            AESEncode@aux 008B  
                                            AESEncode@key 0075  
                                  TMR_GetDeltaTime@retVal 0030  
                                         ?_TMR1_ReadTimer 0064  
                                  __end_of_ConfigureRadio 60D8  
                                          _LORAWAN_RxDone 0096  
                                      ?_ValidateChannelId 0064  
                                  TMR_GetDeltaTime@tmrVal 003E  
                                          _LORAWAN_TxDone 0B34  
                              __size_of_ExecuteNewChannel 01C2  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 006D  
                                    __end_of_SwTimerStart 5DDC  
                  __end_of_LORAWAN_EnterContinuousReceive 6456  
                 __size_of_LORAWAN_EnterContinuousReceive 006A  
                          _LORAWAN_EnterContinuousReceive 63EC  
                                             __pbssBIGRAM 04E0  
                                   TMR1_ISR@CountCallBack 003C  
                               __size_of_CountfOptsLength 00B0  
                                       CountfOptsLength@i 006B  
                                             __pbssCOMRAM 0030  
                              __end_of_DefaultChannels433 7FD2  
                              __end_of_DefaultChannels868 7FFC  
                                        ??_RADIO_Transmit 0097  
                        __end_of_INT0_SetInterruptHandler 7986  
                                      LORAWAN_RxTimeout@i 00AD  
                        __end_of_INT3_SetInterruptHandler 788A  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                           __pcstackBANK3 03A0  
                                     ??_ValidateDataRange 0066  
                                        _TMR_GetDeltaTime 4D8C  
                           EnableChannels@channelMaskCntl 0070  
                                 __end_of_RADIO_WriteMode 52D4  
                 __end_of_UnconfirmedTransmissionCallback 6318  
                __size_of_UnconfirmedTransmissionCallback 006C  
                         _UnconfirmedTransmissionCallback 62AC  
                                 SearchAvailableChannel@i 0084  
                                     ??_ValidateChannelId 0065  
                                   RADIO_RegisterRead@reg 0066  
                                 _RADIO_ReceiveStart$1055 009A  
                         __size_of_UpdateMinMaxChDataRate 00B4  
                           ?_INT3_DefaultInterruptHandler 0001  
                     LORAWAN_SetChannelIdStatus@statusNew 0068  
                                               _aesBuffer 01AF  
                                 INTERRUPT_GetDioStatus@a 0064  
                  __end_of_IOCBF4_DefaultInterruptHandler 798C  
                 __size_of_IOCBF4_DefaultInterruptHandler 0002  
                          _IOCBF4_DefaultInterruptHandler 798A  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0093  
                           ??_RADIO_SetFrequencyHopPeriod 0066  
                                    _RADIO_SetFSKSyncWord 7260  
                             RADIO_SetBandwidth@bandwidth 0064  
                              __end_of_SwTimerSetCallback 71D4  
       __end_of_ResetParametersForUnconfirmedTransmission 782A  
      __size_of_ResetParametersForUnconfirmedTransmission 000E  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0064  
               _ResetParametersForUnconfirmedTransmission 781C  
                               ??_AssembleEncryptionBlock 0075  
                                   _INT2_InterruptHandler 01F3  
                                               _bandwidth 7F8D  
                                      ??_SetJoinFailState 0064  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 676C  
                                            _LORAWAN_Join 5CC8  
                                            _LORAWAN_Send 5602  
                                  RADIO_FSKPayloadReady@i 00EE  
                                       _ValidateFrequency 67CA  
                                               __pnvBANK1 01F1  
                                  ??_HALResetPinMakeInput 0064  
                                    _RADIO_WriteFrequency 5120  
                                         FillSubKey@carry 006A  
                                        _HALSPICSDeassert 7970  
                          ??_LORAWAN_SetNetworkSessionKey 0070  
                                     __end_of_RADIO_Reset 713E  
                                   ??_RADIO_RegisterWrite 0067  
                                  _PIN_MANAGER_Initialize 5044  
                                           FillSubKey@key 0066  
                                      ?_ValidateFrequency 0064  
                                    __end_of_UpdateCfList 33AA  
                     RADIO_WriteFSKFrequencyDeviation@num 0075  
                               EnableChannels@channelMask 006E  
                                               _macBuffer 04E0  
                                               _dioStatus 0048  
                               __end_of_ValidateDataRange 710A  
                           RADIO_FSKPayloadReady@irqFlags 00ED  
                                       _SwTimersInterrupt 4BAC  
                                       ??_SwTimersExecute 00E8  
                                               __pintcode 0008  
                                                ?___abdiv 0064  
                        __end_of_TMR1_SetInterruptHandler 7880  
                                           __pmediumconst 7E6C  
                                 RADIO_Transmit@bufferLen 0096  
                                 __end_of_SPI2_Initialize 7860  
                                               __ptext100 5AEA  
                                               __ptext101 4184  
                                               __ptext110 0B34  
                                               __ptext102 582A  
                               __end_of_ValidateChannelId 758A  
                                               __ptext111 6E4C  
                                               __ptext103 598C  
                                               __ptext200 75C6  
                                               __ptext120 2C04  
                                               __ptext112 74EE  
                                               __ptext104 6D46  
                                               __ptext201 7988  
                                               __ptext121 73AE  
                                               __ptext113 7944  
                                               __ptext105 5EE4  
                                               __ptext210 798A  
                                               __ptext202 6B0A  
                                               __ptext130 78B2  
                                               __ptext122 7838  
                                               __ptext114 63EC  
                                               __ptext106 5FE0  
                                               __ptext211 7956  
                                               __ptext203 6F06  
                                               __ptext131 605C  
                                               __ptext123 5CC8  
                                               __ptext115 7986  
                                               __ptext107 61CA  
                                               __ptext220 0000  
                                               __ptext212 75E4  
                                               __ptext204 7692  
                                               __ptext140 53A4  
                                               __ptext132 78FA  
                                               __ptext124 76C8  
                                               __ptext116 781C  
                                               __ptext108 670E  
                                               __ptext213 798C  
                                               __ptext205 4C9E  
                                               __ptext141 6586  
                                               __ptext133 7902  
                                               __ptext125 66AE  
                                               __ptext117 782A  
                                               __ptext109 3A50  
                                               __ptext214 795C  
                                               __ptext206 4E78  
                                               __ptext150 48B8  
                                               __ptext142 65EA  
                                               __ptext134 78BC  
                                               __ptext126 4F64  
                                               __ptext118 794A  
                                               __ptext215 7602  
                                               __ptext207 752E  
                                               __ptext151 6BEA  
                                               __ptext143 4686  
                                               __ptext135 7260  
                                               __ptext127 6D88  
                                               __ptext119 758A  
                                               __ptext216 798E  
                                               __ptext208 7912  
                                               __ptext160 3ECE  
                                               __ptext152 7386  
                                               __ptext144 74AC  
                                               __ptext136 5E62  
                                               __ptext128 78F2  
                                               __ptext217 7962  
                                               __ptext209 73FA  
                                               __ptext161 5776  
                                               __ptext153 2138  
                                               __ptext145 6A6E  
                                               __ptext137 790A  
                                               __ptext129 78A8  
                                               __ptext218 7620  
                                               __ptext170 664C  
                                               __ptext162 6ABC  
                                               __ptext154 3D6C  
                                               __ptext146 5DDC  
                                               __ptext138 2FF4  
                                               __ptext219 7990  
                                               __ptext171 75A8  
                                               __ptext163 78C6  
                                               __ptext155 29C8  
                                               __ptext147 6E8A  
                                               __ptext139 13B4  
                                               __ptext180 797C  
                                               __ptext172 78D0  
                                               __ptext164 38BA  
                                               __ptext156 676C  
                                               __ptext148 697C  
                                               __ptext181 371E  
                                               __ptext173 780A  
                                               __ptext165 71A2  
                                               __ptext157 7846  
                                               __ptext149 182C  
                                               __ptext190 750E  
                                               __ptext182 6154  
                                               __ptext174 7970  
                                               __ptext166 51FC  
                                               __ptext158 56C0  
                                               __ptext191 6DCA  
                                               __ptext183 765A  
                                               __ptext175 7974  
                                               __ptext167 73D4  
                                               __ptext159 5F62  
                                               __ptext192 6456  
                                               __ptext184 5D54  
                                               __ptext176 710A  
                                               __ptext168 7950  
                                               __ptext193 64BC  
                                               __ptext185 60D8  
                                               __ptext177 730A  
                                               __ptext169 5120  
                                               __ptext194 7334  
                                               __ptext186 6EC8  
                                               __ptext178 77AE  
                                               __ptext195 68D4  
                                               __ptext187 7676  
                                               __ptext179 7978  
                                               __ptext196 69CE  
                                               __ptext188 4BAC  
                                               __ptext197 623C  
                                               __ptext189 4D8C  
                                               __ptext199 7444  
                                       _EncryptFRMPayload 4184  
                                                ?___lldiv 0064  
                            RADIO_FSKPacketSent@timeOnAir 00D4  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0064  
                           __size_of_ExecuteRxTimingSetup 0024  
                                         ??_AESEncodeLoRa 0094  
                SelectChannelForTransmission@channelIndex 0087  
                         __end_of_PrepareJoinRequestFrame 47B2  
                                                ?___lwmod 0072  
                                      ?_SwTimersInterrupt 007A  
                               _RADIO_SetChannelFrequency 5E62  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006F  
                               _SetCallbackSoftwareTimers 56C0  
                                      ConfigureRadio@freq 0071  
                                   ??_RADIO_SetModulation 0064  
                                        ?_RADIO_GetStatus 0001  
                                     __size_of_sendPacket 003C  
                                  __end_of_LORAWAN_RxDone 0B34  
                                     ??_ValidateFrequency 0068  
                                  __end_of_LORAWAN_TxDone 13B4  
                                      ?_EncryptFRMPayload 00A4  
                            ??_INTERRUPT_InterruptManager 0028  
                            __end_of_LORAWAN_PlatformInit 74EE  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                    GenerateSubkey@F17044 01C1  
                                        _ExecuteDevStatus 789E  
                           __end_of_RADIO_SetLoRaSyncWord 78D0  
                  IncludeMacCommandsResponse@pBufferIndex 0066  
                              __size_of_SwTimerSetTimeout 0042  
                             ??_LORAWAN_GetMaxPayloadSize 006C  
                          LORAWAN_LinkCheckConfigure@iCtr 00A2  
                        ExecuteRxParamSetupReq@dlSettings 0076  
                                          _AssemblePacket 1B48  
                                         ?_ConfigureRadio 0071  
                               AssemblePacket@bufferIndex 00E0  
                             LORAWAN_SetUplinkCounter@ctr 0064  
                              ??_INT2_SetInterruptHandler 0066  
                              __end_ofi2_TMR_GetDeltaTime 4F64  
                                __size_of_TMR1_StartTimer 0004  
                                     ??_SwTimersInterrupt 007E  
                                    RADIO_DIO0@dioMapping 00F1  
                                       _DutyCycleCallback 242A  
                                 InitDefault433Channels@i 006E  
                                   __end_of_TMR_SwapTimer 6F06  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 00B2  
                                 __end_ofi2_TMR_SwapTimer 6F44  
                                 __size_of_EncKeySchedule 023C  
                                      AssemblePacket@mhdr 00DD  
                                      AssemblePacket@port 0166  
                                          __size_of_flash 004A  
                               __size_of_RADIO_ReadRandom 007E  
                                ConfigureRadioRx@dataRate 007A  
                                      _RADIO_ReceiveStart 2C04  
                                          __size_of_srand 000E  
                                __end_of_LORAWAN_Mainloop 6FBC  
                                   ?_RADIO_SetFSKSyncWord 006E  
                                    _INTERRUPT_Initialize 796C  
                                           _SwTimerCreate 623C  
                          __end_of_InitDefault868Channels 64BC  
                     IncludeMacCommandsResponse@macBuffer 0064  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0064  
                                           _TMR1_CallBack 75C6  
                      LORAWAN_SetCurrentDataRate@valueNew 0066  
                               __end_of_ValidateFrequency 6826  
                                        _SwTimerIsRunning 74EE  
                                        _ExecuteLinkCheck 7170  
                                    i2SwTimersInterrupt@i 0027  
                                                _INT1_ISR 7962  
                                _LORAWAN_SetDeviceAddress 76E2  
                                                _INT2_ISR 795C  
                                       EncKeySchedule@key 0064  
                        __end_of_RADIO_SetWatchdogTimeout 77F8  
                                                _INT3_ISR 7956  
                                      _RADIO_SetBandwidth 790A  
                                                _LATCbits 000F7B  
                                __end_of_LORAWAN_SetClass 6D04  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize 7F8D  
                                   ?_RADIO_WriteFrequency 0071  
                               ?_INT1_SetInterruptHandler 0064  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 0044  
                                     ?_RADIO_ReceiveStart 0094  
                             LORAWAN_SetClass@deviceClass 0070  
                                                _PIE0bits 000E29  
                                        _SwTimerReadValue 6E4C  
                                        _ExecuteDutyCycle 6A20  
                                                _PIE5bits 000E2E  
                                         _HALDIO5PinValue 7950  
                                    RADIO_DIO1@dioMapping 00AF  
                               __end_of_SwTimersInterrupt 4C9E  
                                __size_of_TMR1_WriteTimer 001C  
                                      AESEncode@masterKey 006C  
                     __size_of_INTERRUPT_InterruptManager 0086  
                              __end_of_DIO2_ISR_Lora_Init 792C  
                                                _PIR0bits 000E33  
                                        GenerateSubkey@k1 00A6  
                                        GenerateSubkey@k2 00A8  
                                    ConfigureRadioRx@freq 0076  
                               __end_of_EncryptFRMPayload 42D8  
                                                _PIR5bits 000E38  
                          __size_of_RADIO_WriteFSKBitRate 0062  
                                UpdateReceiveDelays@delay 0068  
                               LORAWAN_RxDone@bufferIndex 03A7  
                                  __size_of_UpdateTxPower 0008  
                           __end_of_RADIO_WriteFSKBitRate 664C  
                                    ConfigureRadioTx@freq 0076  
                                         RxDataDone@pData 0064  
                             UpdateDataRange@dataRangeNew 0064  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 007A  
                                               _rxPayload 0172  
                                  _UpdateMinMaxChDataRate 5776  
                           EncryptFRMPayload@bufferLength 00A6  
                                 ValidateDataRange@result 0066  
                                                _SSP2CON1 000ED9  
                             UpdateDutyCycle@dutyCycleNew 0064  
              ValidateChannelId@allowedForDefaultChannels 0064  
                           __size_of_FindSmallestDataRate 00A6  
                                                _TMR1_ISR 7444  
                                ConfigureRadioTx@dataRate 007A  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0064  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 02F2  
                                                _SSP2STAT 000ED8  
                            ??_LORAWAN_LinkCheckConfigure 0096  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 6BA0  
                                             _INT0PPSbits 000DF0  
                         __size_of_SetReceptionNotOkState 006A  
                                             _INT1PPSbits 000DF1  
                                  __end_of_AssemblePacket 1E46  
                                         ?_LORAWAN_RxDone 016B  
                                             _INT2PPSbits 000DF2  
                                         ?_LORAWAN_TxDone 009E  
                                       ??_TMR1_Initialize 0066  
                                             _INT3PPSbits 000DF3  
                                        ___abdiv@dividend 0068  
                                      _DIO1_ISR_Lora_Init 792C  
                               __end_of_DutyCycleCallback 2712  
                                        __size_of_AESCmac 031C  
                       __size_of_LORAWAN_SetUplinkCounter 0012  
                                    ??_RADIO_ReceiveStart 0096  
                                 ValidateFrequency@result 0068  
                               ?_LORAWAN_SetUplinkCounter 0064  
                              __end_of_PrepareSessionKeys 605C  
                                       ?_ConfigureRadioRx 0076  
                                       ?_ConfigureRadioTx 0076  
                                               main@count 00F5  
                                    RADIO_DIO2@dioMapping 007E  
                                      AESEncodeLoRa@block 0090  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 3BE2  
                 RADIO_SetSpreadingFactor@spreadingFactor 0064  
                                      ??_ConfigureRadioRx 007A  
                                      ??_ConfigureRadioTx 007A  
                                    ??_RADIO_SetBandwidth 0064  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0064  
                                        ?_RADIO_WriteMode 0069  
                               LORAWAN_RxDone@computedMic 03AB  
                                       ___lmul@multiplier 0064  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 5C42  
                                               copy_data1 5C62  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                     _EncKeySchedule$3767 0068  
                                _INT0_SetInterruptHandler 7984  
                             __end_of_RADIO_SetIQInverted 78B2  
                                          ?_TMR1_CallBack 0001  
                                _INT3_SetInterruptHandler 7880  
                                    __end_of_TMR_ISR_lora 6B56  
                                             _RADIO_Reset 710A  
                                     ExecuteLinkCheck@ptr 0064  
                          i2SwTimersInterrupt@timeElapsed 001F  
                                      _RADIO_RegisterRead 73D4  
                                __size_of_ValidateTxPower 0022  
                                 ??_StopAllSoftwareTimers 0065  
                                          _StartReTxTimer 4420  
                             __end_ofi2_SwTimersInterrupt 4D8C  
                               _LORAWAN_GetMaxPayloadSize 6E0C  
                              LORAWAN_RxDone@extractedMic 03A3  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 00A8  
                                      CheckMcastFlags@hdr 0064  
                                             AESCmac@size 00D2  
                                SwTimerSetTimeout@timerId 0079  
                                SwTimerSetTimeout@timeout 0071  
                                   RADIO_WriteMode@opMode 006F  
                          ??_INT3_DefaultInterruptHandler 0001  
                                ??_ExecuteRxParamSetupReq 0072  
                     __size_of_LORAWAN_LinkCheckConfigure 019C  
                                        ___abdiv@quotient 0067  
                 UpdateReceiveWindow2Parameters@frequency 0064  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 7334  
                  ValidateChannelMaskCntl@channelMaskCntl 0065  
                                       i2_TMR1_WriteTimer 7692  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0066  
                                    ??_DIO1_ISR_Lora_Init 0066  
                                __size_of_CheckMcastFlags 0072  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0068  
                              __size_of_ValidateDataRange 0034  
                               _ticksToScheduledInterrupt 005A  
                            ValidateDataRange@dataRateMax 0068  
                            ValidateDataRange@dataRateMin 0069  
                              __size_of_ValidateChannelId 001E  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0052  
                                 ??_OSCILLATOR_Initialize 0064  
                                       ?_ValidateDataRate 0001  
                                      _ComputeSessionKeys 5EE4  
                                   __size_of_SwTimerStart 0088  
                                        __size_of___lldiv 0076  
                                        __size_of___llmod 0062  
                                        __size_of___lwmod 003E  
                                         ?_AssemblePacket 0166  
                                    AssemblePacket@buffer 0167  
                                        SwTimersExecute@i 00EC  
                                      ??_ValidateDataRate 0064  
                                   _INT3_InterruptHandler 01F5  
                                _TMR1_SetInterruptHandler 7876  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 7838  
        __size_of_ResetParametersForConfirmedTransmission 000E  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0064  
                 _ResetParametersForConfirmedTransmission 782A  
                                   _TMR1_InterruptHandler 01F9  
                                        ??_GenerateSubkey 00AA  
                                        _CountfOptsLength 598C  
                                              _HALSPISend 78D0  
                                     ?_ComputeSessionKeys 00A4  
                                          _rxWindowOffset 7F7D  
                      RADIO_UnhandledInterrupt@modulation 0068  
                                 _IOCBF4_InterruptHandler 01F7  
                              __end_of_MacExecuteCommands 2FF4  
                                    ??_RADIO_RegisterRead 0066  
                        __end_of_RADIO_UnhandledInterrupt 748A  
                                           _UpdateTxPower 78E2  
                                    RADIO_Transmit@buffer 0094  
                         __end_of_RADIO_FHSSChangeChannel 7260  
                                         _allocatedTimers 0177  
                          __end_of_INTERRUPT_GetDioStatus 7846  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 7920  
                                                __ptext10 77D4  
                                                __ptext11 74CE  
                                                __ptext20 7932  
                                                __ptext12 7860  
                                                __ptext21 796C  
                                                __ptext13 7876  
                                                __ptext30 6CC0  
                                                __ptext22 687E  
                                                __ptext14 791A  
                                                __ptext31 77E6  
                                                __ptext23 7880  
                                                __ptext15 7920  
                                                __ptext40 5A3C  
                                                __ptext32 72B6  
                                                __ptext24 788A  
                                                __ptext16 7980  
                                                __ptext41 553A  
                                                __ptext33 6F80  
                                                __ptext25 7894  
                                                __ptext17 7982  
                                                __ptext50 6FBC  
                                                __ptext42 6D04  
                                                __ptext34 58DC  
                                                __ptext26 7984  
                                                __ptext18 7926  
                                                __ptext51 735E  
                                                __ptext43 70A0  
                                                __ptext35 242A  
                                                __ptext27 728C  
                                                __ptext19 792C  
                                                __ptext60 0096  
                                                __ptext52 7232  
                                                __ptext44 62AC  
                                                __ptext36 4554  
                                                __ptext28 76E2  
                                                __ptext61 6318  
                                                __ptext53 6522  
                                                __ptext45 77F8  
                                                __ptext37 754E  
                                                __ptext29 7204  
                                                __ptext70 6BA0  
                                                __ptext62 76AE  
                                                __ptext54 7468  
                                                __ptext46 76FA  
                                                __ptext38 49BA  
                                        ?i2_TMR_SwapTimer 0007  
                                                __ptext71 42D8  
                                                __ptext63 31E2  
                                                __ptext55 3BE2  
                                                __ptext47 7712  
                                                __ptext39 402C  
                                                __ptext80 7030  
                                                __ptext72 7786  
                                                __ptext64 4420  
                                                __ptext56 52D4  
                                                __ptext48 772A  
                                                __ptext81 756C  
                                                __ptext73 775A  
                                                __ptext65 6382  
                                                __ptext57 692A  
                                                __ptext49 6C34  
                                                __ptext90 7770  
                                                __ptext82 7170  
                                                __ptext74 33AA  
                                                __ptext66 72E0  
                                                __ptext58 5B90  
                                                __ptext91 6826  
                                                __ptext83 356C  
                                                __ptext75 67CA  
                                                __ptext67 7938  
                                                __ptext59 2712  
                                                __ptext92 47B2  
                                                __ptext84 748A  
                                                __ptext76 70D6  
                                                __ptext68 2E04  
                                                __ptext93 6A20  
                                                __ptext85 779A  
                                                __ptext77 6FF6  
                                                __ptext69 7420  
                                                __ptext94 789E  
                                                __ptext86 7742  
                                                __ptext78 713E  
                                                __ptext95 5602  
                                                __ptext87 7068  
                                                __ptext79 4AB6  
                                                __ptext96 6E0C  
                                                __ptext88 78E2  
                                                __ptext97 1B48  
                                                __ptext89 78EA  
                                                __ptext98 1E46  
                                                __ptext99 793E  
                                 ExecuteRxTimingSetup@ptr 0069  
                                  ??_RADIO_SetFSKSyncWord 0070  
                            ??_IOCBF4_SetInterruptHandler 0066  
                                   ??_UpdateReceiveDelays 0064  
                                   __end_of_LORAWAN_Reset 402C  
                                            ??_sendPacket 00E8  
                                  __end_of_StartReTxTimer 4554  
                                 ??_UpdateCurrentDataRate 0064  
                                 ??_UpdateChannelIdStatus 0065  
                                __size_of_UpdateDataRange 00F6  
                                  _SetReceptionNotOkState 6382  
                                            _SSP2CON1bits 000ED9  
                                       ??_TMR1_StartTimer 0064  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00CE  
                                 __end_of_HALDIO5PinValue 7956  
                                              _IOCBF4_ISR 73FA  
                                       ?_UpdateDLSettings 0064  
                                  ConfigureRadio@dataRate 0075  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 005C  
                        __size_of_PrepareJoinRequestFrame 012C  
                                           CheckFlags@hdr 0064  
                                  ??_RADIO_WriteFrequency 0075  
                                   __size_of_UpdateCfList 01C8  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 0008  
                                           __size_of_main 00C8  
                                           __size_of_rand 004E  
                                       _RADIO_ReceiveStop 758A  
                                      ??_UpdateDLSettings 0065  
                                    _LORAWAN_PlatformInit 74CE  
                                         _FskSyncWordBuff 7FFC  
                                      ??_ValidateRxOffset 0064  
                               __end_ofi2_TMR1_WriteTimer 76AE  
               IncludeMacCommandsResponse@bIncludeInFopts 0067  
                                    ??_ComputeSessionKeys 00A6  
                                           _timerOverflow 0049  
                                    __CFG_WDTCWS$WDTCWS_7 000000  
                                            _SwTimerStart 5D54  
                              __size_of_SwTimersInterrupt 00F2  
                                      ?_RADIO_ReceiveStop 0001  
                                      __CFG_BORV$VBOR_190 000000  
                              ??_RADIO_SetSpreadingFactor 0064  
                                   RADIO_TxDone@timeOnAir 00D4  
                          ValidateChannelMask@channelMask 0064  
                             __size_of_DIO0_ISR_Lora_Init 0006  
                              __size_of_EncryptFRMPayload 0154  
                                         GenerateSubkey@i 00CB  
                                         GenerateSubkey@l 00BB  
                                _RADIO_SetWatchdogTimeout 77E6  
                                 PrepareSessionKeys@index 0074  
                                __end_of_TMR_GetDeltaTime 4E78  
                                      SwTimerStop@timerId 0064  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0066  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006E  
                                    RADIO_RxDone@irqFlags 00ED  
                             __end_of_ValidateChannelMask 70A0  
                                           UpdateCfList@i 007A  
                      __end_of_INTERRUPT_InterruptManager 008E  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 0070  
                             PrepareSessionKeys@networkId 0072  
                                       _RADIO_ReleaseData 794A  
                                       ??_TMR1_WriteTimer 0066  
                                      __end_of_sendPacket 6F80  
                                              _RADIO_DIO0 6522  
                                              _RADIO_DIO1 6FBC  
                                              _RADIO_DIO2 6C34  
                                              _RADIO_DIO3 772A  
                                              _RADIO_DIO4 7712  
                                              _RADIO_DIO5 76FA  
                                            _SSP2STATbits 000ED8  
                                    ??_DIO5_ISR_Lora_Init 0066  
                    __end_of_INT1_DefaultInterruptHandler 7992  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 7990  
                       __size_of_RADIO_WriteConfiguration 0478  
                                  __end_of_rxWindowOffset 7F85  
                             PIN_MANAGER_Initialize@state 0066  
                     __size_of_IOCBF4_SetInterruptHandler 000A  
                              __size_of_DutyCycleCallback 02E8  
                                 EncryptFRMPayload@buffer 00A4  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 007D  
                                      __end_of_modulation 7F7D  
                                              _RADIO_Init 38BA  
                         ExecuteRxParamSetupReq@frequency 0072  
                                __size_of_UpdateFrequency 003A  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0047  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 007B  
                                __end_of_HALSPICSDeassert 7974  
                                __size_of_UpdateDutyCycle 0032  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0064  
                                                memcpy@s1 0066  
                                          _EncKeySchedule 29C8  
                      __size_of_SetCallbackSoftwareTimers 00B6  
                                 __size_of_RxJoinResponse 0006  
                                         ??_SwTimerCreate 0064  
                                     ExecuteDutyCycle@ptr 0064  
                                            _UpdateCfList 31E2  
                                     ??_RADIO_ReleaseData 0064  
                                  ??_INTERRUPT_Initialize 0064  
                                                memset@p1 0064  
                                         ??_TMR1_CallBack 0028  
                                    __size_of_SwTimerStop 001C  
                                        _RADIO_ReadRandom 5F62  
                                       _RADIO_TxDone$1067 00D8  
                                      _EXT_INT_Initialize 687E  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 60D8  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 0094  
                               __end_of_RADIO_ReceiveStop 75A8  
                                         _SwTimersExecute 58DC  
                     SwTimerSetCallback@callbackParameter 0066  
                                             FillSubKey@i 006B  
                           RADIO_WriteFrequency@frequency 0071  
                                        ___lwmod@dividend 0072  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0064  
                                __end_of_ExecuteDevStatus 78A8  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels433 7FA8  
                                      _DefaultChannels868 7FD2  
                                       __CFG_CLKOUTEN$OFF 000000  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0066  
                                UpdateDutyCycle@channelId 0066  
                                  GenerateSubkey@const_Rb 00AB  
                                             _PPSLOCKbits 000DEF  
                         __size_of_ExecuteRxParamSetupReq 0148  
                               UpdateJoinInProgress@state 0064  
                                       ??_ValidateTxPower 0064  
                                     _LORAWAN_TxDone$1948 00BA  
                                     _LORAWAN_TxDone$1949 00BE  
                      __end_of_LORAWAN_LinkCheckConfigure 38BA  
                               __end_of_RADIO_ReleaseData 7950  
                              _LORAWAN_LinkCheckConfigure 371E  
                                __size_of_EnableChannels1 0058  
                                      __end_of_txPower868 7FA8  
                                   _HALResetPinMakeOutput 7978  
                                ??_HALResetPinOutputValue 0064  
                                  __size_of_INT1_CallBack 001E  
                               RADIO_WriteConfiguration@i 0081  
                               ExecuteRxTimingSetup@delay 006B  
                                        AESEncodeLoRa@key 0092  
                               __size_of_SetJoinFailState 002A  
                        LORAWAN_LinkCheckConfigure@period 0094  
                                        ??_ConfigureRadio 0075  
                                      _SwTimerSetCallback 71A2  
             __end_of_UpdateRetransmissionAckTimeoutState 6382  
            __size_of_UpdateRetransmissionAckTimeoutState 006A  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 0094  
                     _UpdateRetransmissionAckTimeoutState 6318  
                                       RADIO_ReadRandom@i 0074  
                            SearchAvailableChannel@result 0081  
                                   RADIO_WritePower@paDac 0069  
                                  __size_of_INT2_CallBack 001E  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                          _AESEncode$3781 0085  
                                          _AESEncode$3782 0087  
                                          _AESEncode$3783 0089  
                                __end_of_SwTimerIsRunning 750E  
                                       ??_CheckMcastFlags 0066  
                                __end_of_ExecuteLinkCheck 71A2  
                                   RADIO_WritePower@power 006A  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 006B  
                                    ??_EXT_INT_Initialize 0066  
                            RADIO_SetFSKSyncWord@syncWord 006E  
                                  __size_of_INT3_CallBack 001E  
                                            _rxWindowSize 7F85  
                                  __end_of_EncKeySchedule 2C04  
                           ?_INT1_DefaultInterruptHandler 0001  
                                     ?_SwTimerSetCallback 0064  
                                __end_of_SwTimerReadValue 6E8A  
                                        ___lldiv@quotient 006C  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 6A6E  
                                         ___lwmod@divisor 0074  
                  __end_of_UpdateReceiveWindow2Parameters 7770  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 775A  
                                 UpdateTxPower@txPowerNew 0064  
                                         ___lwmod@counter 0076  
                         _LORAWAN_LinkCheckConfigure$3285 009E  
                        __end_of_INT1_SetInterruptHandler 789E  
                            FindSmallestDataRate@dataRate 0067  
                           LORAWAN_Join@activationTypeNew 00EE  
                                   __size_of_TMR_ISR_lora 004C  
                              ??_LORAWAN_SetDeviceAddress 0068  
                                    _SystemBlockingWaitMs 730A  
                                   FindSmallestDataRate@i 0066  
                      ComputeSessionKeys@joinAcceptBuffer 00A4  
                                 __size_of_EnableChannels 0016  
                            __end_of_UpdateJoinInProgress 76E2  
                            __end_of_ExecuteRxTimingSetup 7444  
                                 __size_of_HALSPICSAssert 0004  
                                 __end_of_FskSyncWordBuff 7FFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 65EA  
               __size_of_RADIO_WriteFSKFrequencyDeviation 0064  
                      ??_RADIO_WriteFSKFrequencyDeviation 0075  
                       ?_RADIO_WriteFSKFrequencyDeviation 0071  
                        _RADIO_WriteFSKFrequencyDeviation 6586  
                __end_of_LORAWAN_SetApplicationSessionKey 72E0  
               __size_of_LORAWAN_SetApplicationSessionKey 002A  
                      ??_LORAWAN_SetApplicationSessionKey 0070  
                       ?_LORAWAN_SetApplicationSessionKey 006E  
                        _LORAWAN_SetApplicationSessionKey 72B6  
                                        ExtractMic@buffer 006E  
                                 ??_RADIO_FSKPayloadReady 00ED  
                                UpdateDataRange@channelId 0066  
                                             ?_IOCBF4_ISR 0001  
                                _RADIO_UnhandledInterrupt 7468  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 5120  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 75C6  
                                 __size_of_ExecuteLinkAdr 01B2  
                            RADIO_WriteFSKBitRate@bitRate 0071  
                                      i2_TMR_GetDeltaTime 4E78  
                                         RADIO_SetCRC@crc 0064  
                                         _PIN_MANAGER_IOC 7912  
                                     RADIO_WritePower@ocp 0068  
                                      ??_LORAWAN_Mainloop 00F3  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                       ?_LORAWAN_SetClass 0001  
                                    ??_SwTimerSetCallback 0067  
                                       ??_UpdateDataRange 0065  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 6C7C  
                        RADIO_WriteConfiguration@regValue 0086  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 0179  
                                           ExtractMic@mic 0074  
                                       _LORAWAN_RxTimeout 2712  
                             __end_of_RADIO_SetModulation 790A  
                        __end_of_LORAWAN_SetUplinkCounter 77D4  
                                      ??_LORAWAN_SetClass 0070  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 0036  
                                        ??_LORAWAN_RxDone 00E8  
                                     ?i2_TMR_GetDeltaTime 0007  
